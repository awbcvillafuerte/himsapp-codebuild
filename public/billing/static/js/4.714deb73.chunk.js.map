{"version":3,"sources":["SharedComponents/DashboardTileComponent/DashboardTileComponent.js","Pages/Protected/Claims/Components/ViewList2/ViewList.js","Pages/Protected/Claims/Components/Tiles/CreatedBundlesTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedBundlesTile.js","SharedComponents/TicketListComponent/TicketListComponent.js","Services/Api/BatchEncodingServices.js","Pages/Protected/Claims/Components/BatchEncoder/Dashboard/Dashboard.js","SharedComponents/AutoComplete/AutoComplete.js","SharedComponents/TextFieldNumber/TextFieldNumber.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BundleDetails/BundleDetails.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchList/BatchList.js","SharedComponents/DropDown/DropDown.js","Constant/claimTypes.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchFormValidator.js","Pages/Protected/Claims/Store/contants.js","Pages/Protected/Claims/Store/actions/BatchEncoding/index.js","Pages/Protected/Claims/Store/actions/BatchEncoding/batch.js","Pages/Protected/Claims/Store/actions/BatchEncoding/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/index.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/claim.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/claimType.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/dropdown.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/procedure.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/hospitalItem.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/professionalFee.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/grandTotal.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/dentalProcedure.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/reassign.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/index.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/claim.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/claimType.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/dropdown.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/procedure.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/hospitalItem.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/professionalFee.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/discrepancy.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/error.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/escalation.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/inquiry.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/reassign.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/reject.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/recon.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/utilization.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchForm.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundleValidator.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/RcsSoaValidator.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundlePage.js","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundleValidator.js","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundlePage.js","Services/Api/ClaimsEncodingServices.js","Controllers/SoaEtlController.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Parser/index.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/UploadSpace/UploadSpace.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/DynamicTable/DynamicTable.js","Pages/Protected/Claims/Components/FieldMapper/DataPairs/DataPairs.js","Pages/Protected/Claims/Components/FieldMapper/FieldMapper.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/UploadSoaPage.js","Pages/Protected/Claims/Components/TransmittalReport/Footer/Footer.js","Services/Api/CustomerCareServices.js","Services/Api/ClaimsServices.js","Services/Api/MedicalConsultantServices.js","Services/Api/UserManagementServices.js","Services/ArrayToCSV.js","Pages/Protected/Claims/Components/TransmittalReport/helper/constants.js","Pages/Protected/Claims/Components/TransmittalReport/TransmittalReport.js","Pages/Protected/Claims/Components/TransmittalReport/helper/staticHeaderFooter.js","Utilities/SafeAccess.js","Pages/Protected/Claims/Components/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport.js","Services/Api/ClaimsAdjudicationServices.js","Services/Api/ClaimsReconServices.js","Pages/Protected/Claims/Routes/BatchEncoder.js","Pages/Protected/Claims/Components/Tiles/BatchAndEncoderTile.js","Pages/Protected/Claims/Components/Tiles/ForReconciliationClaimsTile.js","Services/Api/BatchEncodingSupervisoryServices.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.js","Utilities/ArrayCompare.js","SharedComponents/ClientMemberLookup/ClientMemberLookup.js","SharedComponents/ClientMemberLookup/ClientMemberModal.js","Services/Api/CustomerCareService.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/InPatient.js","Utilities/RenameProperty.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/MedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/index.js","Pages/Protected/Claims/Constant/ClaimTypes.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ICDTextField/ICDTextField.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisList.js","SharedComponents/CustomTable/CustomTable.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureForm.js","Utilities/Total.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/EscalateValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ReconValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.js","SharedComponents/TextFieldSubmit/TextFieldSubmit.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/EscalateValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/ChatBox.js","SharedComponents/CustomTabs/CustomTabs.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/FloatingFields/FloatingFields.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Utilities/Unit.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitTable.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Utilities/DefaultValue.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitHeaders.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitFooters.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Benefits.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Exclusions.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/query.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/pagination.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/sortBy.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/pagination.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/mapData.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utilization.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/query.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Contract/Contract.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/RightPanelTabs/RightPanelTabs.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimsRemarks/ClaimsRemarks.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/getValidators.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/getValidators2.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/index.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","SharedComponents/ContractRange/ContractRange.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/3.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/4.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Canine/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Canine/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Premolar/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Premolar/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Molar/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Molar/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/TeethFactory.js","Pages/Protected/Claims/Components/DentalChart/TeethGroup.js","Pages/Protected/Claims/Components/DentalChart/DentalChart.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimECU/ClaimECU.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPharmacy/ClaimPharmacy.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPPE/ClaimPPE.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSuppliesValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimClinicManagement/ClaimClinicManagement.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ReimbursementInfo/ReimbursementInfo.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/AdditionalFields.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.js","SharedComponents/DashboardRedirect/DashboardRedirect.js","Pages/Protected/Claims/Components/ClaimsViewer/GetClaimComponent.js","Pages/Protected/Claims/Components/ClaimsViewer/index.js","Pages/Protected/Claims/Routes/BatchEncoderSupervisor.js","Pages/Protected/Claims/Components/Tiles/OpenBatchesTile.js","Pages/Protected/Claims/Components/Tiles/MyBatchesTile.js","Pages/Protected/Claims/Components/Tiles/CompletedBatchesTile.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ProviderSchedule/ProviderSchedule.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/BatchPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/InPatient.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/OutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/OutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Emergency.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Reimbursement.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/MedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/MedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Pharmacy.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/index.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ICDTextField/ICDTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/CptTextField/CptTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemTextField/HospitalItemTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeList/ProfessionalFeeList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimsRemarks/ClaimsRemarks.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/getValidators.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/getValidators2.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/index.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/SoftValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimEmergency/ClaimEmergency.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ToothNumber/ToothNumber.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimECU/ClaimECU.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPPE/ClaimPPE.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPharmacy/ClaimPharmacy.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSuppliesValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimClinicManagement/ClaimClinicManagement.js","Pages/Protected/Claims/Components/ReimbursementInfo/ReimbursementInfo.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/AdditionalFields.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/ClaimReimbursement.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/GetClaimComponent.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage.js","Pages/Protected/Claims/Routes/ClaimsDetailsEncoder.js","Pages/Protected/Claims/Components/Tiles/ClaimsEncoderTile.js","Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/ButtonFooter/ButtonFooter.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/BatchDetails/BatchDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimListHeader/ClaimListHeader.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimList/ClaimList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage.js","Pages/Protected/Claims/Routes/ClaimsDetailsEncoderSupervisor.js","Pages/Protected/Claims/Components/Tiles/ForAdjudicationTile.js","Pages/Protected/Claims/Components/Tiles/MyClaimsTile.js","Pages/Protected/Claims/Components/ViewList/ViewList.js","Pages/Protected/Claims/Components/Tiles/SubmittedClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ReturnedEscalatedClaimsTile.js","Pages/Protected/Claims/Components/ClaimsAnalyst/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/ClaimsAnalyst.js","Pages/Protected/Claims/Components/Tiles/ForPaymentRequestTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedPaymentRequestTile.js","Pages/Protected/Claims/Components/Tiles/OverrideClaimTile.js","Services/Api/PaymentRequestServices.js","Pages/Protected/Claims/Components/PaymentRequest/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage.js","Pages/Protected/Claims/Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage.js","Pages/Protected/Claims/Routes/PaymentRequest.js","Pages/Protected/Claims/Components/Tiles/SubmittedPrSupervisorTile.js","Services/Api/PaymentRequestSupervisorServices.js","Pages/Protected/Claims/Components/PaymentRequestSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList.js","Pages/Protected/Claims/Routes/PaymentRequestSupervisor.js","Pages/Protected/Claims/Components/MedicalConsultant/ViewList/ViewList.js","Pages/Protected/Claims/Components/MedicalConsultant/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/MedicalConsultant.js","Pages/Protected/Claims/Components/ClaimsReconciliation/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/UtilizationReport/style/theme.js","Pages/Protected/Claims/Components/UtilizationReport/data/legend.js","Pages/Protected/Claims/Components/UtilizationReport/config/months.js","Pages/Protected/Claims/Components/UtilizationReport/UtilizationReport.js","Pages/Protected/Claims/Components/PRCheckReport/PRCheckReport.js","Pages/Protected/Claims/Components/TreasuryTransmittalReport/TreasuryTransmittalReport.js","Pages/Protected/Claims/Routes/ClaimsRecon.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/ButtonFooter/ButtonFooter.js","Services/Api/ClaimsVerifierSupervisorServices/ClaimsAdjudicationServices.js","Services/Api/ClaimsVerifierSupervisorServices/MedicalCollectiblesServices.js","Services/Api/ClaimsVerifierSupervisorServices/index.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList.js","Pages/Protected/Claims/Components/Tiles/RejectedClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ClaimsVerifierTile.js","Pages/Protected/Claims/Components/Tiles/ReconciledClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ClaimsForApprovalTile.js","Pages/Protected/Claims/Components/Tiles/MedicalCollectiblesTile.js","Pages/Protected/Claims/Components/Tiles/ReimbursementClaimTile.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/ClaimsVerifierSupervisor.js","Services/Api/ClaimsManagerServices/ClaimsManagerServices.js","Pages/Protected/Claims/Components/ClaimsManager/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage.js","Services/Api/ClaimsMaintainerServices.js","Pages/Protected/Claims/Components/ClaimsManager/MaintenancePage/MaintenancePage.js","Pages/Protected/Claims/Routes/ClaimsManager.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/bundlesReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/batchReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/index.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/claimReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/claimTypeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/dropDownReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/procedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/hospitalItemReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/professionalFeeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/grandTotalReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/dentalProcedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/reassignReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/index.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/claimReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/claimTypeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/dropDownReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/procedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/hospitalItemReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/professionalFeeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/discrepancyReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/errorReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/escalationReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/inquiryReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/reassignReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/rejectReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/reconReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/utilizationReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/index.js","Pages/Protected/Claims/Store/index.js","Pages/Protected/Claims/Store/reducers/index.js","Pages/Protected/Claims/index.js","Utilities/TextFormatter.js","SharedComponents/DatePicker/DatePicker.js","Services/ExtractValidationResult.js","SharedComponents/Alert/Alert.js","SharedComponents/Table/Table.js","SharedComponents/SearchTextComponent/SearchTextComponent.js","SharedComponents/TextFieldCurrency/TextFieldCurrency.js","SharedComponents/TaskTrayComponent/TaskTrayComponent.js","Pages/Protected/Claims/Components/DentalChart/Teeth/style.module.scss","SharedComponents/EnhancedTable/EnhancedTable.js","SharedComponents/Table/Table.module.scss","SharedComponents/TaskTrayComponent/TaskTrayComponent.module.scss","SharedComponents/DatePicker/DatePicker.module.scss","SharedComponents/TextFieldCurrency/TextFieldCurrency.module.scss","SharedComponents/DashboardTileComponent/DashboardTileComponent.module.scss","Pages/Protected/Claims/Components/ViewList2/ViewList.module.scss","SharedComponents/TicketListComponent/TicketListComponent.module.scss","Pages/Protected/Claims/Components/BatchEncoder/Dashboard/Dashboard.module.scss","SharedComponents/AutoComplete/AutoComplete.module.scss","SharedComponents/TextFieldNumber/TextFieldNumber.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BundleDetails/BundleDetails.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchList/BatchList.module.scss","SharedComponents/DropDown/DropDown.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchForm.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundlePage.module.scss","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundlePage.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/UploadSpace/UploadSpace.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/DynamicTable/DynamicTable.module.scss","Pages/Protected/Claims/Components/FieldMapper/DataPairs/DataPairs.module.scss","Pages/Protected/Claims/Components/FieldMapper/FieldMapper.module.scss","Pages/Protected/Claims/Components/TransmittalReport/Footer/Footer.module.scss","Pages/Protected/Claims/Components/TransmittalReport/TransmittalReport.module.scss","Pages/Protected/Claims/Components/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.module.scss","SharedComponents/ClientMemberLookup/ClientMemberLookup.module.scss","SharedComponents/ClientMemberLookup/ClientMemberModal.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisList.module.scss","SharedComponents/CustomTable/CustomTable.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.module.scss","SharedComponents/TextFieldSubmit/TextFieldSubmit.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/ChatBox.module.scss","SharedComponents/CustomTabs/CustomTabs.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/FloatingFields/FloatingFields.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Benefits.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Exclusions.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utilization.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Contract/Contract.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/RightPanelTabs/RightPanelTabs.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimsRemarks/ClaimsRemarks.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","SharedComponents/ContractRange/ContractRange.module.scss","Pages/Protected/Claims/Components/DentalChart/DentalChart.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimECU/ClaimECU.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPharmacy/ClaimPharmacy.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPPE/ClaimPPE.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimClinicManagement/ClaimClinicManagement.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ReimbursementInfo/ReimbursementInfo.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.module.scss","SharedComponents/DashboardRedirect/Error.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ProviderSchedule/ProviderSchedule.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/BatchPage.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/CptTextField/CptTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemTextField/HospitalItemTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimsRemarks/ClaimsRemarks.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ToothNumber/ToothNumber.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimECU/ClaimECU.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPPE/ClaimPPE.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPharmacy/ClaimPharmacy.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimClinicManagement/ClaimClinicManagement.module.scss","Pages/Protected/Claims/Components/ReimbursementInfo/ReimbursementInfo.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/ClaimReimbursement.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/ButtonFooter/ButtonFooter.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/BatchDetails/BatchDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimListHeader/ClaimListHeader.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimList/ClaimList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage.module.scss","Pages/Protected/Claims/Components/ViewList/ViewList.module.scss","Pages/Protected/Claims/Components/ClaimsAnalyst/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequest/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage.module.scss","Pages/Protected/Claims/Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage.module.scss","Pages/Protected/Claims/Components/PaymentRequestSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList.module.scss","Pages/Protected/Claims/Components/MedicalConsultant/ViewList/ViewList.module.scss","Pages/Protected/Claims/Components/MedicalConsultant/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsReconciliation/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/UtilizationReport/style/UtilizationReport.module.scss","Pages/Protected/Claims/Components/PRCheckReport/PRCheckReport.module.scss","Pages/Protected/Claims/Components/TreasuryTransmittalReport/TreasuryTransmittalReport.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/ButtonFooter/ButtonFooter.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsManager/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage.module.scss","Pages/Protected/Claims/Components/ClaimsManager/MaintenancePage/MaintenancePage.module.scss"],"names":["DashboardTileComponent","children","count","header","title","viewList","actionHeader","onFilterChange","isFilterShown","id","React","useState","filter","setFilter","Paper","className","classes","root","wrapper","Typography","variant","color","value","FormControl","Select","onChange","event","target","MenuItem","input","selected","action","list","Children","map","child","displayName","CustomizedDialogs","columns","searchTextPlaceHolder","setViewList","onViewListChange","body","handleOnClose","p","show","debounce","setDebounce","Dialog","fullWidth","maxWidth","onClose","aria-labelledby","open","PaperProps","style","height","display","DialogTitle","disableTypography","IconButton","aria-label","button","onClick","DialogContent","dividers","content","search","SearchTextComponent","e","clearTimeout","setTimeout","page","placeholder","TableContainerProps","overflow","position","TableProps","stickyHeader","head","headCell","TableCell","key","sortField","TableSortLabel","active","orderBy","direction","order","sort","name","args","field","match","handleColumnFiltering","align","data","limit","rowsPerPageOptions","CreatedBundlesTile","props","services","sizes","items","setItems","initialValue","useEffect","Promise","all","getBundles","category","range","getBundleCount","then","values","batchResponse","batchCountResponse","results","Fragment","state","Button","createBundle","res","history","push","prevState","size","TableHead","item","index","bundle_number","DateFormatter","date","due","facility","to","params","_params","_data","row","SubmittedBundlesTile","TicketListComponent","viewAllLink","Grid","container","spacing","xs","caption","axios","instance","BatchEncodingServices","url","method","batch_number","on","headers","ExcludeErrorConstants","Dashboard","PageTitleService","BreadcrumbsService","setSelectedItems","tiles","sm","float","AutoComplete","label","required","readOnly","suggestions","error","other","focus","setFocus","_error","setError","trim","onBlur","currentTarget","contains","relatedTarget","InputBase","autoComplete","onFocus","square","suggestion","handleItemClick","TextFieldNumber","customInput","isNumericString","displayType","allowLeadingZeros","onValueChange","floatValue","isAllowed","formattedValue","BundleDetails","details","errors","isReadOnly","disableControls","medicalPartner","doctorPartner","setSuggestions","getMedicalPartnerSuggestions","by","length","lookups","query","_items","d","getDoctorPartnerSuggestions","handleOnChangeAutosuggest","fieldName","fieldValue","handleOnChangeMedicalPartner","isSuggestionClick","selectedIndex","i","term","earliest_term","parseInt","isNaN","newDate","moment","date_received","add","format","full_name","ex","lg","md","total_rcs","DatePicker","due_date","soa_number","TextFieldCurrency","total_soa_amt","facility_id","disabled","facility_name","doctor_id","doctor_name","reassign_notes","multiline","rows","headCells","numeric","disablePadding","BatchList","batches","onDelete","openDialog","onCancel","canEdit","openError","onEdit","setForDeletion","forDeletion","isBundleCompleted","searchFilter","selectStatus","batch","setBatch","includes","claim","type","toLowerCase","parseFloat","loading","indeterminate","undefined","checked","batch_numbers","changeSelectAllState","_batches","selected_count","batchNumbers","b","EnhancedTable","handleSelectAllClick","checkAll","padding","Checkbox","Boolean","_index","handleClick","buttonWrapper","Alert","message","deleteMessage","getMessage","cancelLabel","okLabel","onOk","DropDown","disableComponents","addNew","text","select","types","prefix","Reimbursement","Emergency","Dental","APE","ECU","Pharmacy","PPE","schema","Joi","object","claim_type","string","claim_source","number","integer","min","amount_billed","less","greater","messages","notes","allow","when","is","otherwise","options","abortEarly","validate","ExtractValidationResult","BATCH_ENCODING","CLAIMS_ENCODING","CLAIMS_ANALYSIS","payload","for","constants","dasdas","setShowBatchForm","actions","setSelectedBatch","claim_types","ClaimTypes","claim_sources","BatchForm","close","onSave","bundle","onChangeDoctor","dispatch","useDispatch","useSelector","BatchEncoding","saveControl","showPrompt","setShowPrompt","confirmAction","setConfirmAction","setErrors","CustomTextField","doctor","DialogActions","BatchFormValidator","keys","max","ref","bundle_soa","batches_soa","valid","bundle_rcs","batches_rcs","setBatchAction","initSuggestions","resetSuggestionObject","setSuggestionObject","setSaveBatchControl","BundlePage","originalState","setOriginalState","setBundle","setBatches","setIsReadOnly","setSearchFilter","setOpenDialog","openBundleDialog","setOpenBundleDialog","openRCSDialog","setOpenRCSDialog","setOpenError","submitStatus","setsubmitStatus","isSupervisor","user_id","setDisableComponents","disabledSubmit","setDisabledSubmit","LoadingService","getBundleDetails","getBundle","_status","status","received","soa","amount","getBatches","cancelBundle","path","handleOnSubmit","submitBundle","getDoctorSuggestions","handleOnDeleteBatch","BundleValidator","validateSoaRcs","reduce","accu","curr","RcsSoaValidator","join","newBatch","updateBatch","f","createBatch","split","updateBundle","handleOnOk","deleteMultipleBatch","catch","onOpen","source","NewBundlePage","setDisableControls","openAlert","setOpenAlert","due_date_adjustment","newBundle","setNewBundle","form","inputs","save","toISOString","NewBundleValidator","ClaimsEncodingServices","claim_number","responseType","Accept","SoaEtlController","MINIMUM_KEYS","BUNDLE_SOA_NUM","BUNDLE_RCS_NUM","BUNDLE_RCS_DATE","BUNDLE_FACILITY_NAME","BUNDLE_FACILITY_CODE","BATCH_CLAIMS_SOURCE","BATCH_CLAIM_TYPE","CLAIM_DATE_AVAILMENT","CLAIM_DATE_ADMITTED","CLAIM_DATE_DISCHARGE","CLAIM_APPROVAL_CODE","CLAIM_MEMBER_NUM","CLAIM_MEMBER_NAME","CLAIM_DIAGNOSIS_NAME","CLAIM_DIAGNOSIS_CODE","CLAIM_DOCTOR_NAME","CLAIM_DOCTOR_AMOUNT","CLAIM_PROCEDURE_NAME","CLAIM_PROCEDURE_AMOUNT","CLAIM_HOSPITAL_ITEM_NAME","CLAIM_HOSPITAL_ITEM_AMOUNT","COLUMN_TEMPLATES","DEFAULT","transform","dataRows","dataMapping","defaults","console","log","fields","prepData","_transformPreviewDataToPrepData","_transformPrepDataToHierarchicalData","JSON","stringify","loadToApi","successCallback","resolve","reject","bundleNumber","bundleParam","addBatchPromises","batchParam","claims","resolveBatchPromise","rejectBatchPromise","a","addClaim","addClaims","outputEntries","forEach","dataEntry","outputEntry","hasSingleValue","Object","columnKey","dataValue","outputKey","fieldKey","prepDataRows","currentBatch","currentClaim","soaNumber","rcsTotal","dateReceived","claimType","approvalCode","nameParts","member_account_number","member_first_name","member_middle_name","member_last_name","approval_code","loa_number","diagnosis","professional_fees","hospital_items","procedures","date_from","date_to","claim_sub_type","claim_sub_sub_type","with_corporate_guarantee","loa_notes","room_type","room_rate","pro_id","pro_name","diagnosisName","diagnosisCode","flag","code","description","primary","lineItem","lineAmount","gross_amount","specialization","vat_amount","amount_paid_by_member","philhealth_amount_paid","philhealth_remarks","amount_not_covered","reason","amount_due_from_member","reason_for_charging_member","item_code","DEBUG","test","file","onComplete","reader","FileReader","onload","workbook","XLSX","read","result","sheet","Sheets","SheetNames","utils","sheet_to_json","raw","shift","_item","readAsBinaryString","Progress","withStyles","borderRadius","backgroundColor","bar","LinearProgress","UploadSpace","onSelectFile","dialogRef","useRef","dragged","setDragged","fileLoaded","setFileLoaded","progress","setProgress","handleOnDrag","preventDefault","stopPropagation","handleParse","Parser","fileName","onDrop","dataTransfer","files","onDragOver","onDragLeave","clickable","current","click","icon","warning","accept","DynamicTable","onRemoveFile","onDetectDataRows","tableState","setTableState","selectedItems","handleOnChangeItems","endAt","__index__","table","flex","DataPair","targets","sources","onClickRemove","onChangeSource","onChangeTarget","autoFocus","DataPairContainer","onClickAddNew","dropdown_source","dropdown_target","FieldMapper","claimSources","ApiService","onSaveSuccess","onChangeHeaderInputs","onChangeClaimTypeDataMapping","facilityTemplate","setFacilityTemplate","isDefault","template","setTemplate","templates","setTemplates","dialog","setDialog","mesage","alertDialog","setAlertDialog","getTemplates","_default","find","is_default","_id","handleOnChangeFacility","getFacilitySuggestions","handleOnChangeDialog","section","groups","_template","t","handleOnChangeTemplate","_fields","last","onClickAddField","splice","onRemoveField","storeTemplate","template_name","storeFacilityTemplate","template_id","FormControlLabel","control","default","footer","UploadSoaPage","setData","headerInputs","setHeaderInputs","claimTypeValues","setClaimTypeValues","setDataRows","handleOnCancelUpload","claimTypeMap","element","onSuccess","ClaimsUtilLedgerReport","username","total","CurrencyFormatter","ar_amount","signatories","CustomerCareServices","account_number","mct_id","where","skip","offset","client_account_no","ClaimsAdjudicationServices","client","MedicalConsultantServices","member_account_no","icd_code","filters","UserManagementServices","role_name","this","getUsers","Download","extension","statics","newLine","c_header","c_footer","_rows","joined","currentValue","slice","blob","Blob","FileSaver","saveAs","class","TransmittalReport","from","Date","setClaims","registered_name","corporate_account_no","setClient","returnClient","setReturnClient","setTotal","setUsername","localStorage","getItem","getUserById","handleClientOnChange","getClientSuggestions","getClientInfo","fetchTransmittalItems","ClaimsServices","transmittalReport","_totam_amout","c","total_amount","_ar_amount","total_due_from_member","handleOnPaginate","handleGenerateReport","member","last_name","first_name","middle_name","contracts","static_header","static_footer","staticHeaderFooter","ArrayToCSV","column","submit","PdfViewer2Service","service","getTransmittalReportPdf","fontSize","typo","maxHeight","no","left","right","handling","colSpan","pagination","SafeAccess","def","delimeter","obj","completeColumns","dataColumns","hideReport","hideHeader","dateRange","refresh","setColumns","handleOnFilter","fetchLedger","utilizationLegder","_claims","date_admission_from","date_admission_to","date_service","date_service_from","date_service_to","contract_from","contract_to","filtered","entry","indexOf","formatData","output","property","col","noMargin","claimIndex","colIndex","claimNo","getClaimResponse","analyzeRespone","analysis_results","ClaimsReconServices","sideBarItems","breadcrumbs","dashboard","specificBundle","uploadSoa","reports","transmittal","BatchEncoderRoutes","SideBarService","exact","component","render","BatchAndEncoderTile","getBatchEncoderWork","getBatchEncoderWorkCount","batchEncoders","total_bundle","total_batch","ForReconciliationClaimsTile","for_recon","ticket","getClaims","getClaimCount","claimResponse","claimCountResponse","allClaims","allClaimsCount","BatchEncodingSupervisoryServices","note","assignee","AssignDialog","setShow","onSubmit","reassign","setReassign","showAlert","setShowAlert","users","setUsers","reassignErrors","setReassignErrors","response","comment","assign","ReassignValidator","aria-describedby","columnss","CreatedBundlesPage","batchEncoderId","setBatchEncoderId","openModal","setOpenModal","activeAssigning","setActiveAssigning","headerCheckBox","setHeaderCheckBox","_batchEncoderId","handleOnViewListChange","marginTop","TextFieldStyle","margin","selectedCount","handleOnItemSelect","bundle_numbers","reassignBundles","DiscrepancyBase","discrepancy","iconStyle","others","retainSpace","autoWidth","anchorEl","setAnchorEl","setMessage","Array","isArray","flat","Infinity","m","spreadResult","handleClose","Popover","anchorOrigin","vertical","horizontal","transformOrigin","whiteSpace","includesAny","s1","s2","ClientMemberLookup","allSearch","allSearchText","allSearchFields","mode","onRecordSet","apiData","setApiData","finalRows","setFinalRows","setSelected","colFilters","setColFilters","fetchData","lodash","translateRows","filterData","fetches","responses","colIdx","some","val","cell","handleOnSort","handleColumnFilter","hover","role","tabIndex","renderRows","_row","entries","revertRow","ClientMemberModal","CustomerCareService","setClaimBaseDetails","setDropDown","setClaimFacility","addSuggestionToArray","renameProp","oldProp","newProp","old","AutoFillInitializer","AutoFill","loa","member_info","member_name","first_middle","given_name","pop","common","loa_no","member_id","loa_details","room","rate","pro","has_corp_guarantee","remarks","rooms","InPatient","proc","prof","customer_account_number","client_id","company_name","client_name","partner_id","partner_name","MedicineAllowance","other_name","subType","BaseDetails","onChangeReimbursementType","handleMemberAccountNumber","permissions","requiredFields","reimbursement_type","showReimbursement","showApprovalCode","showContractRange","showClaimSource","showLoaNumber","showCompany","isDental","showMemberAccountNumber","ClaimsAnalysis","memberAccountNumber","setMemberAccountNumber","memberModal","setMemberModal","clientModal","setClientModal","handleFetchContracts","accountNumber","getContractList","latest_contract","custom_metadata","coverage_start_date","coverage_end_date","years","getLoaDetails","update","client_account_number","client_account_name","contract","getMembers","handleSetMember","getClients","handleSetClient","ICDTextFields","delete","ICDTextField","codeId","onChangeDescription","onChangeCode","onChangePrimary","onDeleteDiagnosis","tooltipOpen","setTooltipOpen","Tooltip","Radio","addClaimDiagnosis","removeClaimDiagnosis","removeSuggestionToArray","setClaimPrimaryDiagnosis","setClaimDiagnosis","resetSuggestionArray","setSuggestionOnArray","DiagnosisList","openDeleteDialog","setOpenDeleteDialog","handleOnClickAddDiagnosis","defaultBehaviour","lastEntry","handleOnChangeIcd10","icd10","getIcd10Suggestions","IcdCptStorageServices","handleOnConfirmDelete","create","Table","_children","toArray","cloneElement","TableHeader","width","textAlign","TableBody","TableRow","expanded","expandable","setExpandable","cells","setCells","TableRowExpandable","setProcedure","addClaimProcedure","updateClaimProcedure","removeClaimProcedure","ProcedureForm","doValidate","showAmountPaidByMember","showPhilhealthField","showAmountNotCovered","showAmountDueFromMember","procedure","dropDown","_errors","prop","hasOwnProperty","handleOnChangeCpt","cpt","toString","getCptSuggestions","handleOnChangeDiagnosis","_field","diagnosi","diagnosis_code","diagnosis_description","handleOnChange","tooth_number","reason_charging","buttons","handleOnUpdate","handleOnRemoveConfirm","handleOnRemove","Item","List","lineItems","dental_procedures","grand","ProcedureList","handleClickLineDiscrepancy","Set","expand","center","Total","setHospitalItem","addClaimHospitalItem","updateClaimHospitalItem","removeClaimHospitalItem","resetError","HospitalItemForm","showPhilhealthRemarks","hospitalItem","handleOnChangeHospitalItem","getHospitalItemSuggestions","hospital_item","handleOnSave","handleOCancel","HospitalItemList","setProfessionalFee","addClaimProfessionalFee","updateClaimProfessionalFee","removeClaimProfessionalFee","ProfessionalFeeForm","professionalFee","pfSuggestions","pfDoctor","handleOnChangeDoctor","main","major","professional_fee","ProfessionalFeeList","resetEscalation","setEscalationMessage","setEscalationAssignee","resetReassign","setReassignMessage","setReassignAssignee","ClaimFooter","doReject","doViewAnalysisSheet","doViewLetterOfAdvice","doReassign","doSave","doEscalate","doApprove","doCancel","isReimbursement","doRemove","doViewClaimNotice","reimbursement_info","grandTotal","userManagementService","escalations","rejectStatus","confirm","escalateModal","setEscalateModal","reassignModal","setReassignModal","rejectModal","setRejectModal","approveModal","setApproveModal","saveModal","setSaveModal","cancelModal","setCancelModal","removeModal","setRemoveModal","validateModal","setValidateModal","dropDownUsers","setDropDownUsers","escalationErrors","setEscalationErrors","initDropdownUsers","roles","getUsersByRole","user","sortBy","doValidateMiddleware","return_advice","goBack","analysis_sheet","enabled","visible","letter_of_advice","escalate","return","approve","AuthorityMatrix","modalProps","other_types","selected_amount","handleOnShowModal","remove","modals","EscalateValidator","doValidateEscalation","ReconValidator","doValidateReassign","DisapprovedLabel","reasons","disapproved","substring","generateMessage","TextFieldSubmit","ChatBox","confirmMessage","onSubmitComment","lastDate","confirmSubmitDialog","setConfirmSubmitDialog","setComment","isMe","timestamp","sdate","doDateSplit","balloon","sender","me","receive","mheader","time","mbody","ExcalateValidator","TabPanel","hidden","CustomTabs","defaultIndex","containerSyles","setValue","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","CustomTab","SideBar","contractId","nodes","onItemClick","TreeView","defaultCollapseIcon","defaultExpandIcon","node","TreeItem","nodeId","planPackage","benefitCategory","benefits","tree_id","ValueField","FloatingFields","elements","setFields","elem","layout","unit","Functions","parent_name","limit_type","limits","age_limit","max_availee","DefaultValue","no_of_days","time_from","time_to","member_type","plan_type","peso_limit_amt","no_of_members","peso_limit","payment","availment","limit_unit","DigitFormatter","Unit","rollover","UpperWord","eligible_availees","days_deployed","eligibility","empty","RB","EM","IP","OP","PV","SD","MT","OM","CC","number_of_days","DNT","SH","ADD","mobile_ape_availees","partner","rb_limit_type","abl_mbl","rb_limit","rb_mode_of_payment","annual","semiannual","quarterly","monthly","mode_of_payment","rb_pec_limit_type","pec","PHP","Months","rb_pec_limit","rb_pec_limit_specify","time_based_limit","number_mount","day_based","billing_arangement","billingArrangement","premium","billback","rider_fee","imputed_in_premiums","billback_net","fixed_rate_rider","fixed_rate_personnel","soa_rate","soa_actual_cost","billback_fee","billback_type","rider_fee_unit","s","waiting_period","waiting_period_type","waitin_period_unit","limit_for_all","limit_for_all_unit","availment_per_year","voluntary_upgrading_type","voluntary_upgrading_amount","involuntary_upgrading_type","except_suite_room","involuntary_upgrading_amount","Benefits","isMember","setRows","setTable","setContractId","planType","setPlanType","setPlanPackage","setBenefitCategory","lastRoomAndBoard","setLastRoomAndBoard","roomAndBoard","setRoomAndBoard","coverages","setCoverages","riders","setRiders","rootNode","setRootNode","benefitNode","setBenefitNode","setHeaders","footers","setFooters","info","MCT","benefit_tree","toUpperCase","rnb","_keys","_name","getRows","BenefitTable","getHeaders","getFooters","_columns","parent_keys","pkey","sub_node","acc","BenefitHeaders","BenefitFooters","handleTableSort","handleTableFilter","selectedPlan","setSelectedPlan","planTypes","setPlanTypes","allExclusions","setAllExclusions","exclusionList","setExclusionList","getExclusions2","handleOnSetItem","plan_types","plan_types_keys","planTypeKey","ex_nodes","exclusionKey","inner_node","innerKey","is_excluded","item_name","parent_code","handleOnSearch","benefit","queriedData","mutable_data","_search","onQuery","exc","take","chunk","setPaginate","sortedData","Link","headCellsDoctors","PartnerNetwork","partnerService","doctorService","partnerId","setPartnerId","partnerName","setPartnerName","partnerLocation","setPartnerLocation","partners","setPartners","doctors","setDoctors","anySearch","setAnySearch","fetchAll","require","queryColumn","collection","searchObj","address","any","_partners","sorted","unit_no","floor","building_no","building_name","street","barangay","district","city","region","zip_code","fetchDoctors","first","middle","sub","schedule","mapData","claim_no","diagnoses","primary_diagnosis","icd10_code","primary_icd10_code","provider","partner_doctor_name","grand_total","session","date_admitted","date_issued","concat","setLimitType","resetLimitType","headCellsComplete","randomRange","Math","random","Utilization","fetchService","utilizationLoa","hideSearchBar","hideActionColumn","setHeadCells","allList","setAllList","filteredRows","setFilteredRows","utilized","ibnr","graph","setGraph","benefit_limits","icd","category_code","_utilizationLoa","startsWith","procedure_name","cpt_code","itemFilter","handleSearchChange","background","Contract","getMemberContract","getClientContract","setFileName","setTitle","setService","NameFormatter","format2","brand_name","pdf","initialPageNumber","initialScale","RightPanelTabs","onReturnEscalate","onReturnInquire","memberFetchStatus","clientFetchStatus","getUtilizations","getPartners","getDoctors","inquiries","recon","CircularProgress","tabs","communication","comments","ClaimsRemarks","selected_fields","available_fields","boolean","anesthesiologist_id","anesthesiologist_name","contract_year_from","contract_year_to","department","recommendation","medicine_category","reimbursement_category","official_receipt_number","claim_remarks","getValidators","getValidators2","hasPrimary","itemError","not","setClaimFields","setClaimRoom","initDropDowns","ClaimInPatient","onEscalate","onViewAnalysisSheet","onViewLetterOfAdvice","onReject","onReassign","onApprove","onChangeFacility","onChangePro","onRemove","_type","getClaimDetails","hasError","setHasError","allowedFields","setAllowedFields","setlineItemFields","getReason","_allowedFields","_lineItemFields","getRooms","claim_sub","sub_type","doValidateProcedure","ProcedureValidator","diagnosisError","ProcedureDiagnosisValidator","doValidateHospitalItem","HospitalItemValidator","HospitalItemDiagnosisValidator","doValidateProfessionalFee","ProfessionalFeeValidator","ProfessionalFeeDiagnosisValidator","group","groupEnd","base","startOf","constainerStyle","base_errors","MainValidator","doValidateBase","DiagnosisListValidator","invalid","ClaimOutPatientProcedure","onChangeAnaesthesiologist","anesthesiologist","ClaimOutPatientConsultation","ClaimEmergency","ClaimMedicineAllowance","account_name","ContractRange","hasDiscrepancy","handleOnItemClick","Incisor1","viewBox","crown","gums","fill","Incisor2","Incisor3","Incisor4","Canine1","Canine2","Premolar1","Molar1","Molar2","TeethFactory","flipY","circle","teeth","flipX","TeethGroup","states","setDetails","_details","startAt","reverse","uppper","lower","DentalChart","chart","upper","ClaimDental","contract_year","constructDentalStates","ClaimAPE","ClaimECU","setRejectStatus","ClaimPharmacy","setGrandTotal","totalAmount","sum","ClaimPPE","ppe_packagers","ppe_packages","ListItem","ListItemText","ClaimMedicalSupplies","ClaimClinicManagement","ReimbursementInfo","canPrintNotice","setShowModal","lookup","reimbursement_info_analysts","showAdd","setShowAdd","reasonDropdown","setReasonDropdown","showCell","handleOnClickCancel","handleOnClickUpdate","handleOnItemSave","date_created","prepared_by","date_encoded","released_to","date_released","date_return","handleOnClickSave","scrollTo","top","scrollHeight","behavior","ItemForm","defaultFunction","setItem","today","handleOnLookup","handleOnChangeReason","tempReasons","other_details","__index","other_fields","AdditionalFields","additional_fields","exist","ClaimReimbursement","onViewClaimNotice","batchNumber","setBatchNumber","initialAllowedFields","setInitialAllowedFields","showReimbursementModal","setShowReimbursementModal","_claim","reimbursement_details","endOf","permission","DashboardRedirect","counter","setCounter","_counter","interval","setInterval","clearInterval","GetClaimComponent","_props","SelectecClaimType","resetClaim","setClaimType","setClaimDoctor","initDiscrepancy","setDiscrepancy","setEscalationMessages","setInquiryMessages","setClaimPro","resetRecon","setReconNotes","ClaimAnalysis","fetching","setFetching","setMember","setMemberFetchStatus","setClientFetchStatus","setUtilizationLoa","breadCrumbsList","isManager","claimNumber","setClaimNumber","getClaim","_claim_type","__type","getDiscrepancy","getClaimType","getEscalationLogs","getInquiryLogs","getReconNotes","getMember","getMemberUtilizationLoa","err","getClient","adjudicationResults","fieldIndex","item_type","item_id","getComments","getInquiries","getNotes","getReport","getAnalysisSheet","getReports","getLetterOfAdvice","getLetterNotice","callback","anaesthesiologist","getAnaesthesiologistSuggestions","inquire","receiver_id","onInquire","employee_id","proUsersLookup","getProSuggestions","removeClaim","createdBundles","specificClaim","utilization","contact","BatchEncoderSupervisorRoutes","OpenBatchesTile","getBatchCount","openBatches","openBatchCount","handleOnEncode","assignBatch","MyBatchesTile","myBatches","myBatchCount","CompletedBatchesTile","completedBatches","completedBatchCount","openTickets","BatchesPage","BatchDetails","ClaimListHeader","onClickAdd","onClickProviderSchedule","inputChange","cmHeadCells","prManagerheadCells","ClaimList","selectedClaimNumber","onConfirm","actionItems","setActionItems","submittedBatch","setPagination","setOrder","setOrderBy","claim_numbers","claimNumbers","handleRequestSort","rowsLength","allowCheck","allowCheckDisabled","ProviderSchedule","header1","fontStyle","partition","BatchPage","apiService","setSelectedClaimNumber","claimCount","setClaimCount","showProviderSchedule","setShowProviderSchedule","cancelDialog","setCancelDialog","rowsPerPage","onChangePage","newPage","onChangeRowsPerPage","getClaimsAndCount","_batchNumber","getBatch","submitBatch","deleteMultipleClaim","diag","date_admitted_date","now","date_discharged_date","partner_doctor_id","OutPatientProcedure","pshilhealth_amount_paid","OutPatientConsultation","MedicalSupplies","reqApprovalCode","reqLoaNumber","ClaimsEncoding","setApprovalCode","handleOnRemoveDiagnosis","CptTextFields","CptTextField","unsubscribe","subscribe","procedureICD","handleOnChangeProcedureForm","baseError","ProcedureFormValidator","DiagnosisValidator","HospitalItemTextFields","HospitalItemTextField","onChangeName","hospitalItemICD","handleOnChangeHospitalForm","HospitalItemFormValidator","professionalFeeICD","handleOnChangeProfessionalFeeForm","ProfessionalFeeFormValidator","setDentalProcedure","showProcedureForm","generateKey","showHospitalItemForm","showProfessionalFeeForm","_setDialog","_resolve","SoftValidatorAlertComponent","SoftValidatorService","isAdd","setIsAdd","lineItemFields","doValidateAll","_claimNumber","updateClaim","ToothNumber","DentalProcedureForm","dentalProcedure","DentalProcedureFormValidator","setType","initial_values","resetGrandTotal","ClaimPage","pageTitle","breadCrumbs","getBatchDetails","specificBatch","ClaimsDetailsEncoderRoutes","ClaimsEncoderTile","getEncoders","getEncodersBatches","param","startCase","total_batches","ClaimsEncoderSupervisorServices","setReassignNotes","handleOnSubmitReassign","alert","handleOnCancel","CreatedBatchesPage","setSelectStatus","headcell","setId","getEncoderBatches","handleTableRenderer","handleSelectAll","handleItemSelect","date_due","cesFooter","prev_user","getEncoderBatch","assigned","ClaimsDetailsEncoderSupervisorRoutes","BatchePage","ForAdjudicationTile","handleOnAnalyze","assignClaim","handleFilterChange","MyClaimsTile","my","aria-controls","aria-haspopup","SubmittedClaimsTile","disableLoaButton","setDisableLoaButton","handleClickSubmitted","has_amount_concerns","submitted","handleOnShowPdf","Menu","keepMounted","zIndex","ITEM_HEIGHT","ReturnedEscalatedClaimsTile","escalated","analyze","exclusions","ClaimsAnalystRoutes","ForPaymentRequestTile","mTitle","paymentRequestClaims","paymentRequestClaimCount","SubmittedPaymentRequestTile","OverrideClaimTile","PaymentRequestServices","pendingHeadCells","submittedHeadCells","PaymentRequestPage","setBundleNumber","pending","getPaymentRequest","getPaymentRequestBatches","resetBatches","approved_amount","utilization_amount","pr_amount","selectedBatches","_batch","getSelectedPending","checkboxColor","requestBatch","should_include","supervisor","approved_by_uid","paymentRequest","specificPaymentRequest","submittedPaymentRequest","PaymentRequestRoutes","SubmittedPaymentRequestPage","SubmittedPrSupervisorTile","getSubmittedPaymentRequest","bundleResponse","submittedRequestClaims","submittedRequestClaimCount","verifierName","total_bundles","processor_id","PaymentRequestSupervisorServices","pr_officer","getPaymentRequestBundles","handleOnSearchColumn","SubmittedPaymentRequestList","for_review","handleOnReview","review","MedicalConsultantRoutes","theme","ClinicManagement","mockData","months","clientColumns","memberDataColumns","UtilizationReport","setReports","reportType","setReportType","initial","actual","graphData","setGraphData","graphFilter","setGraphFilter","account_no","fetchTable","newData","newChild","percentage","getPercentage","childContainer","utilizationClientTable","RadioGroup","utilizationClient","getClientUtilization","getClientUtilizationLoa","graphClientRes","clientUtilRes","clientUtilLoaRes","utilAmount","loaAmount","total_utilization_amount","total_ibnr_amount","legend","mark","tooltip","bottom","LargeNumberFormatter","month","year","minHeight","toFixed","cases","availed_by_principals","availed_by_dependents","memberinfo","memberinfoRow","memberInfoLabel","memberInfoValue","diff","PRCheckReport","fetchReport","_reports","report","date_requested","check_date","TreasuryTransmittalReport","treasury","pr","ClaimsReconcilationRoutes","reassignData","setReassignData","getClaimsAnalyst","claimsCount","ClaimsReimbursementServices","MedicalCollectiblesServices","ClaimsPage","userId","setClaimsCount","ClaimsVerifierSupervisorServices","getItems","handleUnselectAll","handleOnSearchAll","RejectedClaimsTile","getItemCount","ClaimsVerifierTile","verifiers","setVerifiers","getSubordinatesCount","getClaimsBySubbordinateCount","getSubordinates","usersCount","prev","handleOnReviewUser","totalBatches","totalClaims","ReconTIle","ClaimsForApprovalTile","MedicalCollectiblesTile","ReimbursementClaimTile","showTitle","ReconciledClaimsTile","reconciled","forApproval","view","reimbursement","forAdjudicationPermissions","forApprovalPermissions","checkThreshold","forReconciledPermissions","viewPermission","reviewPermission","rejectedPermissions","ClaimsSupervisorRoutes","ClaimsList","ClaimsManagerServices","BatchDetailsPage","UserManagementApi","setClaim","forOverride","setForOverride","getBatchAndClaims","getApprovedClaims","batchRes","claimsRes","getClaimsVerifierSupervisors","analystRes","supervisorRes","overrideClaims","initialItem","deactivate","MaintenancePage","setLookup","showAddItem","setShowAddItem","ClaimsMaintainerServices","isActive","activate","initialLookup","storeLookups","updateLookups","handleOnEditItem","maintenance","submittedSpecificPaymentRequest","prManagerPermissions","ClaimsManagerRoutes","initialState","bundlesReducer","batchReducer","suggestionsReducer","combineReducers","bundles","claimReducer","claimTypeReducer","dropDownReducer","procedureReducer","hospitalItemReducer","professionalFeeReducer","grandTotalReducer","dentalProcedureReducer","reassignReducer","discrepancyReducer","errorReducer","escalationReducer","inquiryReducer","rejectReducer","reconReducer","utilizationReducer","reducers","createStore","ClaimsModule","userRole","setUserRole","isLoading","setIsLoading","document","store","Store","removeItem","batchEncoderLogic","PaymentRequestSupervisorRoutes","ClaimsReconRoutes","ClaimsVerifierSupervisorRoutes","numeral","sentence","charAt","_value","isValid","DateFormatterByAbbreviation","abr","lastName","firstName","middleName","format1","tabindex","setOpen","selectedDate","setSelectedDate","InputRef","handleOnFocus","handleOnBlur","MomentUtils","TextFieldComponent","inputProps","extract","useStyles1","makeStyles","flexShrink","marginLeft","TablePaginationActions","useTheme","ceil","CustomTable","SelectProps","native","ActionsComponent","useStyles","alignItems","minWidth","border","borderColor","iconButton","divider","currency","thousandSeparator","decimalScale","fixedDecimalScale","TaskTrayComponent","_sizes","itemSize","module","exports","paddingLeft","paddingRight","highlight","palette","secondary","lighten","light","dark","spacer","paper","marginBottom","analystTable","tableWrapper","overflowX","visuallyHidden","clip","sorter","analyst","sortDirection"],"mappings":"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","file":"static/js/4.714deb73.chunk.js","sourcesContent":["import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\n\n// CSS Classes\nimport classes from './DashboardTileComponent.module.scss'\n\n/**\n * Create dashboard tile component\n *\n * @param children child components\n * @param count count value to be displayed; keys: color, value\n * @param header tile header label; keys: color, value\n * @param title title string\n * @param viewList view list\n * @param onFilterChange change filter handler\n * @param isFilterShown flag for showing filter\n */\nconst DashboardTileComponent = ({\n  children,\n  count,\n  header,\n  title,\n  viewList,\n  actionHeader = null,\n  onFilterChange,\n  isFilterShown = true,\n  id\n}) => {\n  const [filter, setFilter] = React.useState('this-week')\n  const handleFilterChange = event => {\n    setFilter(event.target.value)\n    if (typeof onFilterChange === 'function') onFilterChange(event.target.value)\n  }\n\n  return (\n    <Paper className={classes.root} id={id}>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          {header && (\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${header.color}`}>\n                {header.value}\n              </Typography>\n            </div>\n          )}\n\n          <div className={classes['first-row']}>\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${count.color}`} id={count.id}>\n                {count.value || 0}\n              </Typography>\n            </div>\n            {isFilterShown && (\n              <div className={classes.filter}>\n                <span>\n                  <FormControl>\n                    <Select\n                      className={classes['select']}\n                      value={filter}\n                      onChange={handleFilterChange}\n                      id={`${id}-filter`}\n                    >\n                      <MenuItem value='today' id={`${id}-today`}>\n                        <Typography className={classes.input}>Today</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-week' id={`${id}-this-week`} selected>\n                        <Typography className={classes.input}>This Week</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-month' id={`${id}-this-month`}>\n                        <Typography className={classes.input}>This Month</Typography>\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </span>\n              </div>\n            )}\n          </div>\n\n          <div className={classes['second-row']}>\n            <div className={classes.title}>\n              <Typography variant='subtitle2'>{title}</Typography>\n            </div>\n            <div className={classes.action}>{actionHeader || ''}</div>\n          </div>\n        </div>\n\n        <div className={classes.list}>\n          {React.Children.map(children, child => {\n            return child\n          })}\n        </div>\n\n        <div className={classes.action}>{viewList || ''}</div>\n      </div>\n    </Paper>\n  )\n}\n\nDashboardTileComponent.displayName = 'DashboardTileComponent'\n\nexport default DashboardTileComponent\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\nexport default function CustomizedDialogs ({\n  columns,\n  searchTextPlaceHolder,\n  viewList,\n  setViewList,\n  onViewListChange,\n  body\n}) {\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    // console.log(args)\n    setViewList(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    onViewListChange({ filter: { ...viewList.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose} id='close'>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent id='search' onChange={handleSearchChange} placeholder={searchTextPlaceHolder} />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {columns.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                  <TextField\n                    onChange={event => {\n                      const search = event.target.value\n                      clearTimeout(debounce)\n                      setDebounce(\n                        setTimeout(() => {\n                          handleColumnFiltering({\n                            field: headCell.sortField,\n                            value: search,\n                            match: headCell.match\n                          })\n                        }, 500)\n                      )\n                    }}\n                  />\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={body(viewList.data)}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'bundle-number', name: ' Bundle Number', sortField: 'bundle_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst CreatedBundlesTile = props => {\n  const { services, sizes } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  const generateBundleNumber = () => {\n    services.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n    })\n  }\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBundles({\n        category: 'created',\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n        range: 'this-week'\n      }),\n      services.getBundleCount({ category: 'created' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      setItems({ data: batchResponse.data.data.results, count: batchCountResponse.data.data })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    services\n      .getBundles({\n        category: 'created',\n        range: value,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setItems(prevState => ({ ...prevState, data: data.results }))\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Created Bundles' })\n    services\n      .getBundles({ category: 'created', limit: 10, sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'created',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBundles(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'created-count' }}\n        sizes={sizes}\n        title='Created Bundles'\n        id='created-bundles'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='created-view-list'\n          >\n            View List\n          </Typography>\n        }\n        actionHeader={\n          <Button\n            variant='contained'\n            color='primary'\n            className='button-neutral'\n            onClick={generateBundleNumber}\n            id='create-new-bundle'\n          >\n            Create New Bundle\n          </Button>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`created-${item.id}`} id={`created-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {items.data.map((item, index) => (\n              <TableRow key={item.bundle_number}>\n                <TableCell id={`created-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                <TableCell id={`created-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`created-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/bundles/${item.bundle_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                      Update\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((row, index) => (\n            <TableRow key={row.bundle_number}>\n              <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell id={`update-bundle-${index}`}>\n                <Link to={`/bundles/${row.bundle_number}`}>\n                  <Typography variant='caption' className='text-link underline'>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nCreatedBundlesTile.displayName = 'DashboardTileComponent'\n\nexport default CreatedBundlesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'bundle-number', name: ' Bundle Number', sortField: 'bundle_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst SubmittedBundlesTile = props => {\n  const { services, sizes } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBundles({\n        category: 'submitted',\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n        range: 'this-week'\n      }),\n      services.getBundleCount({ category: 'submitted' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      setItems({ data: batchResponse.data.data.results, count: batchCountResponse.data.data })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    services\n      .getBundles({\n        category: 'submitted',\n        range: value,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setItems(prevState => ({ ...prevState, data: data.results }))\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Submitted Bundles' })\n    services\n      .getBundles({ category: 'submitted', limit: 10, sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'submitted',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBundles(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'submitted-count' }}\n        sizes={sizes}\n        title='Submitted Bundles'\n        id='submitted-bundles'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-view-list'\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`created-${item.id}`} id={`created-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {items.data.map((item, index) => (\n              <TableRow key={item.bundle_number}>\n                <TableCell id={`submitted-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                <TableCell id={`submitted-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`submitted-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/bundles/${item.bundle_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((row, index) => (\n            <TableRow key={row.bundle_number}>\n              <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell id={`update-bundle-${index}`}>\n                <Link to={`/bundles/${row.bundle_number}`}>\n                  <Typography variant='caption' className='text-link underline'>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedBundlesTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedBundlesTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport { Link } from 'react-router-dom'\n\n// CSS Classes\nimport classes from './TicketListComponent.module.scss'\n\n/**\n * Create ticket list component\n *\n * @param children child components \n * @param count count value to be displayed; keys: color, value\n * @param title title string\n * @param viewAllLink view all link\n * @param isFilterShown flag for showing filter\n */\nexport default function TicketListComponent ({ children, count, title, viewAllLink, isFilterShown = true }) {\n  const [filter, setFilter] = React.useState('all')\n  const handleChange = event => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <Grid container className={classes.root}>\n      <Typography variant='subtitle1' className={classes.title}>\n        TICKET LIST\n      </Typography>\n      <Grid container className={classes.wrapper} spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.content}>\n            <div className={classes.wrapper}>\n              <div className={classes.header}>\n                <div className={classes.count}>\n                  <Typography variant='h5' className='color-7'>\n                    {count}\n                  </Typography>\n                </div>\n                { isFilterShown ? (\n                  <div className={classes.filter}>\n                    <span>\n                      <FormControl>\n                        <Select className={classes['select']} value={filter} onChange={handleChange}>\n                          <MenuItem value={'all'}>\n                            <Typography className={classes.input}>Assigned to All</Typography>\n                          </MenuItem>\n                        </Select>\n                      </FormControl>\n                    </span>\n                  </div>\n                ) : '' }\n              </div>\n              <Typography variant='subtitle2' className={classes.title}>\n                {title}\n              </Typography>\n              <div className={classes.list}>{children}</div>\n              <div className={classes.action}>\n                <Link to={viewAllLink.to} className='text-link'>\n                  <Typography variant='caption' className='bold'>\n                    {viewAllLink.caption}\n                  </Typography>\n                </Link>\n              </div>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/be')\n\nexport default class BatchEncodingServices {\n  static getBundles (params) {\n    return axios({\n      url: '/bundles',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundleCount (params) {\n    return axios({\n      url: `/bundles/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static createBundle () {\n    return axios({\n      url: `/bundles`,\n      method: 'POST'\n    })\n  }\n\n  static updateBundle ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static submitBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getBatches ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'GET'\n    })\n  }\n\n  static updateBatch ({ bundle_number, batch_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static createBatch ({ data, bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static deleteBatch ({ bundle_number, batch_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleBatch ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport CreatedBundlesTile from './../../../Components/Tiles/CreatedBundlesTile'\nimport SubmittedBundlesTile from './../../../Components/Tiles/SubmittedBundlesTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <CreatedBundlesTile services={BatchEncodingServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedBundlesTile services={BatchEncodingServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport classes from './AutoComplete.module.scss'\nexport default function AutoComplete (props) {\n  const { label = '', required, readOnly, suggestions = [], onChange, error, ...other } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event.target.value)\n  }\n\n  const handleItemClick = index => {\n    setFocus(false)\n    setError()\n    if (typeof onChange === 'function') onChange(suggestions[index], true, index)\n  }\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['autocomplete-field']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={handleBlur}\n            >\n              <InputBase\n                className={classes.input}\n                onChange={handleOnChange}\n                {...other}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n              />\n              {focus && (\n                <Paper id={`${props.id}-suggestion`} className={classes.suggestions} square>\n                  {suggestions.map((suggestion, index) => (\n                    <MenuItem\n                      id={`${props.id}-suggestion-${index}`}\n                      key={`${props.id}-suggestion-${index}`}\n                      onClick={() => {\n                        setFocus(true)\n                        handleItemClick(index)\n                      }}\n                    >\n                      {suggestion}\n                    </MenuItem>\n                  ))}\n                </Paper>\n              )}\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\n\nimport classes from './TextFieldNumber.module.scss'\nexport default function TextFieldNumber (props) {\n  const { label = '', required, readOnly, error, onChange, ...other } = props\n\n  const [focus, setFocus] = React.useState()\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {other.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={() => setFocus(false)}\n            >\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { formattedValue, floatValue } = values\n                  return formattedValue === '' || floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n              />\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n// import Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport moment from 'moment'\n\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n\n// Services\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\nimport classes from './BundleDetails.module.scss'\n\nexport default function BundleDetails ({ details, errors, isReadOnly, onChange, disableControls }) {\n  // const [newBundle, setNewBundle] = React.useState({\n  //   bundle_number: '',\n  //   total_rcs: '',\n  //   soa_number: '',\n  //   facility_id: '',\n  //   facility_name: '',\n  //   doctor_id: '',\n  //   doctor_name: '',\n  //   date_received: moment(),\n  //   due_date: moment()\n  // })\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n\n    doctorPartner: {\n      id: [],\n      name: [],\n      data: []\n    }\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, medicalPartner: { ...state.medicalPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, doctorPartner: { ...state.doctorPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = args => {\n    const { value, field } = args\n    // setNewBundle(state => ({ ...state, [field]: value }))\n\n    onChange({ fieldName: field, fieldValue: value })\n\n    handleOnChangeMedicalPartner(args)\n  }\n\n  const handleOnChangeMedicalPartner = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    // console.log(value, field)\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: {\n        id: [],\n        name: [],\n        data: []\n      },\n      doctorPartner: {\n        id: [],\n        name: [],\n        data: []\n      }\n    }))\n\n    if (field === 'facility_id' || field === 'facility_name') {\n      if (isSuggestionClick) {\n        for (let i of suggestions.medicalPartner.data) {\n          if (value === i.id || value === i.name) {\n            // setNewBundle(state => ({ ...state, facility_id: i.id, facility_name: i.name }))\n            // Compute due date based on date received and earliest term found\n            // Fallback term is 30 days\n            let term = 30\n            if (i.earliest_term) {\n              term = parseInt(i.earliest_term)\n              if (isNaN(term) || term < 0) {\n                term = 30\n              }\n            }\n            let newDate = moment(details.date_received)\n              .add(term, 'days')\n              .format('MM/DD/YYYY')\n            onChange({ fieldName: 'facility_id', fieldValue: i.id })\n            onChange({ fieldName: 'facility_name', fieldValue: i.name })\n            onChange({ fieldName: 'due_date', fieldValue: newDate })\n          }\n        }\n      } else {\n        switch (field) {\n          case 'facility_id':\n            getMedicalPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'facility_name':\n            getMedicalPartnerSuggestions({ value, by: 'name' })\n            break\n\n          default:\n            break\n        }\n      }\n    } else if (field === 'doctor_id' || field === 'doctor_name') {\n      if (isSuggestionClick) {\n        if (!isNaN(selectedIndex)) {\n          try {\n            const i = suggestions.doctorPartner.data[selectedIndex]\n            // setNewBundle(state => ({ ...state, doctor_id: i.id, doctor_name: i.full_name }))\n\n            // onChange({ fieldName: 'doctor_id', fieldValue: 'dasdsdasds' })\n            onChange({ fieldName: 'doctor_name', fieldValue: i.full_name })\n            onChange({ fieldName: 'doctor_id', fieldValue: i.id })\n          } catch (ex) {}\n        }\n      } else {\n        switch (field) {\n          case 'doctor_id':\n            getDoctorPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'doctor_name':\n            getDoctorPartnerSuggestions({ value, by: 'full_name' })\n            break\n\n          default:\n            break\n        }\n      }\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextField required readOnly='true' label='Bundle No.' id='bundle-no' value={details.bundle_number} />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldNumber\n            required\n            readOnly={isReadOnly}\n            id='total-rcs'\n            label='Total No. of RCS'\n            value={details.total_rcs}\n            onChange={e => onChange({ fieldName: 'total_rcs', fieldValue: e.target.value })}\n            error={errors.total_rcs}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            id='date-received'\n            label='Date Received'\n            readOnly={isReadOnly}\n            value={details.date_received}\n            onChange={e => onChange({ fieldName: 'date_received', fieldValue: moment(e).format('MM/DD/YYYY') })}\n            error={errors.date_received}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            readOnly={isReadOnly}\n            id='due-date'\n            label='Due Date'\n            value={details.due_date}\n            onChange={e => onChange({ fieldName: 'due_date', fieldValue: moment(e).format('MM/DD/YYYY') })}\n            error={errors.due_date}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextField\n            readOnly={isReadOnly}\n            id='soa-no'\n            label='SOA No.'\n            value={details.soa_number}\n            onChange={e => onChange({ fieldName: 'soa_number', fieldValue: e.target.value })}\n            error={errors.soa_number}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldCurrency\n            required\n            readOnly={isReadOnly}\n            id='total-soa-amt'\n            label='Total SOA Amount'\n            value={details.total_soa_amt}\n            onChange={e => onChange({ fieldName: 'total_soa_amt', fieldValue: e.target.value })}\n            error={errors.total_soa_amt}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-id'\n            label='Medical Partner ID'\n            value={details.facility_id}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner.id}\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_id', value, isSuggestionClick })\n            }\n            error={errors.facility_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-name'\n            label='Medical Partner Name (Facility)'\n            value={details.facility_name}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner.name}\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_name', value, isSuggestionClick })\n            }\n            error={errors.facility_name}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-partner-id'\n            label='Medical Partner ID'\n            value={details.doctor_id}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner.id}\n            onChange={(value, isSuggestionClick, selectedIndex) =>\n              handleOnChangeAutosuggest({ field: 'doctor_id', value, isSuggestionClick, selectedIndex })\n            }\n            error={errors.doctor_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-name'\n            label='Medical Partner Name (Doctor)'\n            value={details.doctor_name}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner.full_name}\n            onChange={(value, isSuggestionClick, selectedIndex) =>\n              handleOnChangeAutosuggest({ field: 'doctor_name', value, isSuggestionClick, selectedIndex })\n            }\n            error={errors.doctor_name}\n          />\n        </Grid>\n      </Grid>\n\n      {details.reassign_notes && (\n        <Grid container spacing={3}>\n          <Grid item sm={6} xs={12}>\n            <TextField\n              multiline\n              rows={3}\n              id='reassign-notes'\n              label='Reassign Notes'\n              value={details.reassign_notes}\n              readOnly\n            />\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\n\n// Components\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Style\nimport classes from './BatchList.module.scss'\n\nconst headCells = [\n  { id: 'batch-no', numeric: false, disablePadding: false, label: 'Batch No' },\n  { id: 'batch-claim-type', numeric: false, disablePadding: false, label: 'Claim Type' },\n  { id: 'batch-total-rcs', numeric: false, disablePadding: false, label: 'Total No. of RCS' },\n  {}\n]\n\nexport default function BatchList (props) {\n  const {\n    batches,\n    onDelete,\n    openDialog,\n    onCancel,\n    canEdit,\n    openError,\n    onEdit,\n    setForDeletion,\n    forDeletion,\n    isBundleCompleted = false,\n    searchFilter = '',\n    selectStatus = true\n  } = props\n  const [batch, setBatch] = React.useState([])\n\n  const getMessage = batches => {\n    let deleteMessage = 'Are you sure you want to delete this batch?'\n    if (batches.batch_numbers.length > 1) {\n      deleteMessage = 'Are you sure you want to delete these batches?'\n    }\n    return deleteMessage\n  }\n\n  React.useEffect(() => {\n    const data = batches\n      .filter(i => {\n        if (i.batch_number.includes(searchFilter)) return true\n        if (i.claim.type.toLowerCase().includes(searchFilter.toLowerCase())) return true\n        if (i.total_rcs === parseFloat(searchFilter)) return true\n      })\n      .map(i => ({\n        ...i,\n        selected: false\n      }))\n    setBatch({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setForDeletion({ batch_numbers: [] }) // Resets the batch list.\n  }, [batches, searchFilter])\n\n  const handleClick = ({ batch, index }) => {\n    const _batches = {\n      ...batch,\n      data: batch.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const handleSelectAllClick = event => {\n    let _batches = batch\n\n    if (_batches.data) {\n      _batches.data.map(i => {\n        i.selected = _batches.indeterminate ? true : !_batches.checked\n        return i\n      })\n    }\n\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _batches = data || batches\n    let selected_count = 0\n    let batchNumbers = []\n    if (_batches.data) {\n      for (let b of _batches.data) {\n        if (b.selected) {\n          selected_count++\n          batchNumbers.push(b.batch_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batches.data.length : false\n    let checked = selected_count ? selected_count === _batches.data.length : false\n    _batches = { ..._batches, indeterminate, checked }\n    setBatch(_batches)\n    setForDeletion({ batch_numbers: batchNumbers })\n  }\n\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        // handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        checkAll={canEdit}\n        indeterminate={!!batch.indeterminate}\n        checked={!!batch.checked}\n        selectStatus={selectStatus}\n        // allowCheck\n        // allowCheckDisabled={Boolean(isBundleCompleted)}\n      >\n        <TableBody>\n          {batch.data &&\n            batch.data.map((i, index) => (\n              <TableRow key={i.batch_number}>\n                {canEdit && (\n                  <TableCell id={`checkbox-${i}`} padding='checkbox'>\n                    <Checkbox\n                      color='default'\n                      disabled={Boolean(isBundleCompleted)}\n                      checked={i.selected}\n                      onClick={event => handleClick({ index, batch })}\n                    />\n                  </TableCell>\n                )}\n                <TableCell id={`batch-no-${index}`}>{i.batch_number}</TableCell>\n                <TableCell id={`batch-claim-type-${i.claim.type}`}>{i.claim.type}</TableCell>\n                <TableCell id={`batch-total-rcs-${i.total_rcs}`}>{i.total_rcs}</TableCell>\n                {canEdit && (\n                  <TableCell className={classes.buttonWrapper} align='right'>\n                    <Button variant='contained' color='primary' className='button-neutral' onClick={() => onEdit(i)}>\n                      Edit\n                    </Button>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      <Alert\n        open={openDialog}\n        message={getMessage(forDeletion)}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={onCancel}\n        onOk={onDelete}\n      />\n      <Alert\n        open={openError}\n        message='Delete Error: This batch has existing claim records'\n        cancelLabel='Ok'\n        onCancel={onCancel}\n      />\n    </React.Fragment>\n  )\n}\n","import Select from '@material-ui/core/Select'\n\nimport React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { Link } from 'react-router-dom'\n\nimport classes from './DropDown.module.scss'\n\n/**\n * Props\n * id required\n * label\n * required\n * value\n * items array {value, text}\n * onChange\n *\n */\nexport default function DropDown (props) {\n  const {\n    id,\n    label = '',\n    required,\n    items = [],\n    readOnly,\n    onChange,\n    disableComponents = false,\n    addNew = { show: false, value: 'add-new', text: 'Add New' },\n    error,\n    ...other\n  } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['select-container']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field ${disableComponents && classes.disabled} box-shadow-field`}\n            >\n              {items && (\n                <Select\n                  id={id}\n                  onChange={handleChange}\n                  onFocus={() => setFocus(true)}\n                  onBlur={() => setFocus(false)}\n                  classes={{ root: classes.select }}\n                  input={<InputBase className={classes.input} />}\n                  {...other}\n                  disabled={disableComponents}\n                >\n                  {items.map((item, index) => (\n                    <MenuItem key={`${id}-items${index}`} id={`${id}-items${index}`} value={item.value}>\n                      {item.text}\n                    </MenuItem>\n                  ))}\n                  {addNew.show && (\n                    <MenuItem key={`${id}-items-add-new`} id={`${id}-items-add-new`} value={addNew.value}>\n                      {addNew.text}\n                    </MenuItem>\n                  )}\n                </Select>\n              )}\n            </Paper>\n\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","const types = {\n  'In Patient': { prefix: 'IP' },\n  'Out Patient Procedure': { prefix: 'OP' },\n  'Out Patient Consultation': { prefix: 'PF' },\n  Reimbursement: { prefix: 'RM' },\n  Emergency: { prefix: 'ER' },\n  Dental: { prefix: 'DN' },\n  'Medicine Allowance': { prefix: 'MA' },\n  APE: { prefix: 'AP' },\n  ECU: { prefix: 'EC' },\n  Pharmacy: { prefix: 'PH' },\n  PPE: { prefix: 'PE' },\n  'Medical Supplies': { prefix: 'MS' },\n  'Clinic Management': { prefix: 'CM' }\n}\n\nconst dropdown = () => {\n  const list = []\n  for (const type in types) {\n    list.push({ text: type, value: type })\n  }\n  return list\n}\n\nexport default { types, dropdown }\n\n// 1. IP\n// 2. OP\n// 3. PF\n// 4. Reimbursement\n// 5. Emergency\n// 6. Dental\n// 7. Medicine Allowance\n// 8. APE\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  claim_type: Joi.string()\n    .trim()\n    .label('Claim Type')\n    .required(),\n  claim_source: Joi.string()\n    .trim()\n    .label('Claim Source')\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .integer()\n    .min(0)\n    .required(),\n  amount_billed: Joi.number()\n    .label('Billed Amount')\n    .less(100000000)\n    .greater(-1)\n    .messages({\n      'number.less': `Billed Amount should be less than {#limit}`,\n      'number.greater': 'Billed Amount should be greater than 0'\n    }),\n  notes: Joi.string()\n    .trim()\n    .label('Notes/Comments')\n    .allow('', null),\n  doctor_id: Joi.string()\n    .when('claim_type', { is: 'Out Patient Consultation', then: Joi.required(), otherwise: Joi.allow('', null) })\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` }),\n  doctor_name: Joi.string()\n    .when('claim_type', { is: 'Out Patient Consultation', then: Joi.required(), otherwise: Joi.allow('', null) })\n    .trim()\n    .label('Medical Partner (Doctor) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","export default {\n  for: { BATCH_ENCODING: 'BATCH_ENCODING', CLAIMS_ENCODING: 'CLAIMS_ENCODING', CLAIMS_ANALYSIS: 'CLAIMS_ANALYSIS' }\n}\n","import { setBundleItems, addBundle, setSelectedBundle, setBundleBatches, addBatch } from './bundles'\nimport { setSelectedBatch, setShowBatchForm, setBatchAction, setSaveBatchControl } from './batch'\nimport { initSuggestions, setSuggestionObject, resetSuggestionObject } from './suggestion'\n\nexport default {\n  setBundleItems,\n  addBundle,\n  setSelectedBundle,\n  setBundleBatches,\n  addBatch,\n  //* Batch\n  setSelectedBatch,\n  setShowBatchForm,\n  setBatchAction,\n  // *Suggestions\n  initSuggestions,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setSaveBatchControl\n}\n","import constants from './../../contants'\n\nexport const setSelectedBatch = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SELECTED_BATCH',\n    payload\n  }\n}\n\nexport const setBatchAction = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_BATCH_ACTION',\n    payload\n  }\n}\n\nexport const setShowBatchForm = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SHOW_BATCH_FORM',\n    payload\n  }\n}\n\nexport const setSaveBatchControl = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SAVE_BATCH_CONTROL',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'INIT_SUGGESTIONS',\n    payload,\n    dasdas: 'dasdasd'\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n","import {\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setClaimPro\n} from './claim'\n\nimport { setClaimType } from './claimType'\n\nimport { setDropDown, initDropDowns } from './dropdown'\nimport {\n  initSuggestions,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray\n} from './suggestion'\n\nimport { setProcedure } from './procedure'\nimport { setHospitalItem } from './hospitalItem'\nimport { setProfessionalFee } from './professionalFee'\nimport { setGrandTotal, resetGrandTotal } from './grandTotal'\nimport { setDentalProcedure } from './dentalProcedure'\nimport { resetReassign, setReassignNotes, setReassignAssignee } from './reassign'\n\nexport default {\n  //* Claim\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  //* ClaimType\n  setClaimType,\n  //* DropDown\n  setDropDown,\n  initDropDowns,\n  //* Suggestions\n  initSuggestions,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray,\n  //* Procedure\n  setProcedure,\n  //* Hospital Item\n  setHospitalItem,\n  //* Professional Fee\n  setProfessionalFee,\n  // Grand Total\n  setGrandTotal,\n  resetGrandTotal,\n  // Dental Procedure\n  setDentalProcedure,\n  setClaimPro,\n  resetReassign,\n  setReassignNotes,\n  setReassignAssignee\n}\n","import constants from './../../contants'\n\nexport const resetClaim = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setClaimType = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDropDowns = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setGrandTotal = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_GRAND_TOTAL',\n    payload\n  }\n}\n\nexport const resetGrandTotal = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_GRAND_TOTAL'\n  }\n}\n","import constants from './../../contants'\n\nexport const setDentalProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_DENTAL_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReassign = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_REASSIGN_NOTES',\n    payload\n  }\n}\n\nexport const setReassignNotes = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_REASSIGN_NOTES',\n    payload\n  }\n}\n\nexport const setReassignAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_REASSIGN_ASSIGNEE',\n    payload\n  }\n}\n","import {\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  removeClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setClaimPro\n} from './claim'\n\nimport { setClaimType } from './claimType'\n\nimport { setDropDown, initDropDowns } from './dropdown'\nimport {\n  initSuggestions,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray\n} from './suggestion'\n\nimport { setProcedure } from './procedure'\nimport { setHospitalItem } from './hospitalItem'\nimport { setProfessionalFee } from './professionalFee'\n\nimport { initDiscrepancy, setDiscrepancy } from './discrepancy'\n\nimport { resetError, setError } from './error'\n\nimport {\n  resetEscalation,\n  addEscalationMessages,\n  setEscalationMessages,\n  setEscalationMessage,\n  setEscalationAssignee\n} from './escalation'\n\nimport { resetInquiry, addInquiryMessages, setInquiryMessages, setInquiryMessage, setInquiryAssignee } from './inquiry'\n\nimport {\n  resetReassign,\n  addReassignMessages,\n  setReassignMessages,\n  setReassignMessage,\n  setReassignAssignee\n} from './reassign'\n\nimport { setRejectStatus } from './reject'\n\nimport { resetRecon, setReconNotes } from './recon'\n\nimport { setLimitType, resetLimitType } from './utilization'\n\nexport default {\n  //* Claim\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  //* ClaimType\n  setClaimType,\n  //* DropDown\n  setDropDown,\n  initDropDowns,\n  //* Suggestions\n  initSuggestions,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray,\n  //* Procedure\n  setProcedure,\n  //* Hospital Item\n  setHospitalItem,\n  //* Professional Fee\n  setProfessionalFee,\n  // * Discrepancy\n  initDiscrepancy,\n  setDiscrepancy,\n  // * Errror\n  resetError,\n  setError,\n  resetEscalation,\n  addEscalationMessages,\n  setEscalationMessages,\n  setEscalationMessage,\n  setEscalationAssignee,\n  resetInquiry,\n  addInquiryMessages,\n  setInquiryMessages,\n  setInquiryMessage,\n  setInquiryAssignee,\n  // * Reassign\n  resetReassign,\n  addReassignMessages,\n  setReassignMessages,\n  setReassignMessage,\n  setReassignAssignee,\n  setRejectStatus,\n  setClaimPro,\n  // Recon\n  resetRecon,\n  setReconNotes,\n  setLimitType,\n  resetLimitType\n}\n","import constants from './../../contants'\n\nexport const resetClaim = () => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setClaimType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDropDowns = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDiscrepancy = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_DISCREPANCY',\n    payload\n  }\n}\n\nexport const setDiscrepancy = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_DISCREPANCY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetError = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_ERROR',\n    payload\n  }\n}\n\nexport const setError = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ERROR',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetEscalation = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationShow = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_SHOW',\n    payload\n  }\n}\n\nexport const addEscalationMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_MESSAGE',\n    payload\n  }\n}\n\nexport const setEscalationAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetInquiry = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const addInquiryMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const setInquiryMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const setInquiryMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_MESSAGE',\n    payload\n  }\n}\n\nexport const setInquiryAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReassign = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignShow = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_SHOW',\n    payload\n  }\n}\n\nexport const addReassignMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_MESSAGE',\n    payload\n  }\n}\n\nexport const setReassignAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setRejectStatus = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REJECT_CONTROL',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetRecon = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_RECON_NOTES',\n    payload\n  }\n}\n\nexport const setReconNotes = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_RECON_NOTES',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setLimitType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_LIMIT_TYPE',\n    payload\n  }\n}\n\nexport const resetLimitType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_LIMIT_TYPE',\n    payload\n  }\n}\n","import React from 'react'\n// import Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport moment from 'moment'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Constant\nimport ClaimTypes from 'Constant/claimTypes'\n\n// Styles\nimport classes from './BatchForm.module.scss'\n\n// Validator\nimport BatchFormValidator from './BatchFormValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setShowBatchForm, setSelectedBatch } = actions\n\nconst claim_types = ClaimTypes.dropdown()\n\nconst claim_sources = [\n  { value: 'Hospital', text: 'Hospital' },\n  { value: 'Clinic', text: 'Clinic' }\n]\n\nexport default function BatchForm ({\n  close,\n  open,\n  onSave,\n  bundle,\n  onChange,\n  disableControls,\n  onChangeDoctor,\n  disableComponents\n}) {\n  const dispatch = useDispatch()\n  const batch = useSelector(({ BatchEncoding: state }) => state.batch.selected)\n  const show = useSelector(({ BatchEncoding: state }) => state.batch.show)\n  const action = useSelector(({ BatchEncoding: state }) => state.batch.action)\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n  const saveControl = useSelector(({ BatchEncoding: state }) => state.batch.saveControl)\n  const [showPrompt, setShowPrompt] = React.useState(false)\n  const [confirmAction, setConfirmAction] = React.useState({\n    show: false,\n    message: 'Are you sure you want to save this batch?'\n  })\n\n  const [errors, setErrors] = React.useState({})\n  React.useEffect(() => {\n    setErrors({})\n  }, [])\n\n  const validate = () => {\n    const { error } = BatchFormValidator({\n      claim_type: batch.claim_type,\n      claim_source: batch.claim_source,\n      total_rcs: batch.total_rcs,\n      amount_billed: batch.amount_billed,\n      notes: batch.notes,\n      doctor_id: batch.doctor_id,\n      doctor_name: batch.doctor_name\n    })\n    setErrors(error || {})\n    if (error) setShowPrompt(true)\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      <Dialog open={show}>\n        <DialogTitle>{action}</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={3} className={classes.root}>\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Bundle No.' value={bundle.bundle_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='SOA No.' value={bundle.soa_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField\n                readOnly='true'\n                label='Date Received'\n                value={moment(bundle.date_received).format('MM/DD/YYYY')}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Due Date' value={moment(bundle.due_date).format('MM/DD/YYYY')} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner ID' value={bundle.facility_id} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner Name (Facility)' value={bundle.facility_name} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-id'\n                label='Medical Partner ID'\n                value={batch.doctor_id}\n                disabled={disableControls}\n                suggestions={suggestions.doctor.id}\n                onChange={(value, isSuggestionClick) =>\n                  onChangeDoctor({\n                    field: 'doctor_id',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n                error={errors.doctor_id}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-name'\n                label='Medical Partner Name (Doctor)'\n                value={batch.doctor_name}\n                disabled={disableControls}\n                suggestions={suggestions.doctor.full_name}\n                onChange={(value, isSuggestionClick) =>\n                  onChangeDoctor({\n                    field: 'doctor_name',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n                error={errors.doctor_name}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-type'\n                label='Claim Type'\n                required\n                items={claim_types}\n                value={batch.claim_type || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_type: event.target.value }))}\n                error={errors.claim_type}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-source'\n                label='Claim Source'\n                required\n                items={claim_sources}\n                value={batch.claim_source || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_source: event.target.value }))}\n                error={errors.claim_source}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldNumber\n                id='total-rcs'\n                label={'Total No. of RCS'}\n                required\n                value={batch.total_rcs}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ total_rcs: event.target.value }))}\n                error={errors.total_rcs}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldCurrency\n                id='billed-amount'\n                label='Billed Amount'\n                value={batch.amount_billed || 0}\n                disabled={disableControls}\n                // currency={false}\n                required\n                onChange={event => dispatch(setSelectedBatch({ amount_billed: event.target.value }))}\n                error={errors.amount_billed}\n              />\n            </Grid>\n\n            <Grid item xs={12} className={classes.input}>\n              <CustomTextField\n                id='notes-comments'\n                multiline\n                rows={6}\n                label='Notes/Comments'\n                value={batch.notes || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ notes: event.target.value }))}\n                error={errors.notes}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            id='cancel'\n            variant='contained'\n            color='primary'\n            className='button-negative'\n            onClick={() => {\n              dispatch(setShowBatchForm(false))\n              setErrors({})\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            id='save'\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            disabled={saveControl}\n            onClick={() => !validate() && setConfirmAction(state => ({ ...state, show: true }))}\n          >\n            Save\n          </Button>\n          <Alert\n            open={confirmAction.show}\n            message={confirmAction.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setConfirmAction(state => ({ ...state, show: false }))}\n            onOk={() => {\n              setConfirmAction(state => ({ ...state, show: false }))\n              onSave(batch)\n            }}\n          />\n          <Alert\n            open={showPrompt}\n            message={'Please ensure that all fields are filled-up except for Notes and Comments.'}\n            okLabel='Ok'\n            onOk={() => setShowPrompt(false)}\n          />\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object()\n  .keys({\n    bundle_number: Joi.number()\n      .label('Bundle Number')\n      .integer()\n      .greater(0)\n      .required(),\n    total_rcs: Joi.number()\n      .label('Total No. of RCS')\n      .required()\n      .integer()\n      .min(0),\n    date_received: Joi.date()\n      .label('Date Received')\n      .required()\n      .max('now'),\n    due_date: Joi.date()\n      .label('Due Date')\n      .required()\n      .min(Joi.ref('date_received'))\n      .messages({\n        'date.min': `\"Due Date\" should have a maximum length of Date Received`\n      }),\n    soa_number: Joi.string()\n      .trim()\n      .label('SOA No')\n      .allow('')\n      .required(),\n    total_soa_amt: Joi.number()\n      .label('Total SOA Amount')\n      .greater(0)\n      .less(100000000)\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner Name (Facility)')\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .allow('')\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner Name (Doctor)')\n      .allow('')\n      .required()\n  })\n  .options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  bundle_soa: Joi.number()\n    .label('Total Bundle Soa Amount')\n    .required(),\n  batches_soa: Joi.number()\n    .label('Total Batches Soa Amount')\n    .valid(Joi.ref('bundle_soa'))\n    .required(),\n  bundle_rcs: Joi.number()\n    .label('Total No. of Bundle RCS')\n    .required(),\n  batches_rcs: Joi.number()\n    .label('Total No. of Batches RCS')\n    .valid(Joi.ref('bundle_rcs'))\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\n\n//  Components\nimport BundleDetails from './Components/BundleDetails/BundleDetails'\nimport BatchList from './Components/BatchList/BatchList'\nimport BatchForm from './Components/BatchForm/BatchForm'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Style\nimport classes from './BundlePage.module.scss'\nimport Typography from '@material-ui/core/Typography'\n\n// Validator\nimport BundleValidator from './BundleValidator'\nimport RcsSoaValidator from './RcsSoaValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setShowBatchForm,\n  setSelectedBatch,\n  setBatchAction,\n  initSuggestions,\n  resetSuggestionObject,\n  setSuggestionObject,\n  setSaveBatchControl\n} = actions\n\nexport default function BundlePage (props) {\n  const dispatch = useDispatch()\n\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n\n  const [originalState, setOriginalState] = React.useState({})\n  const [bundle, setBundle] = React.useState(null)\n  const [batches, setBatches] = React.useState([])\n  const [isReadOnly, setIsReadOnly] = React.useState(true)\n  const [searchFilter, setSearchFilter] = React.useState('')\n  const [openDialog, setOpenDialog] = React.useState(false)\n  const [openBundleDialog, setOpenBundleDialog] = React.useState({})\n  const [openRCSDialog, setOpenRCSDialog] = React.useState({})\n\n  const [openError, setOpenError] = React.useState(false)\n  const [submitStatus, setsubmitStatus] = React.useState(false)\n  const { bundle_number, user_id: isSupervisor } = props.match.params\n  const [disableComponents, setDisableComponents] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [disableControls] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ batch_numbers: [] })\n  const [disabledSubmit, setDisabledSubmit] = React.useState(true)\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    getBundleDetails(bundle_number)\n    dispatch(initSuggestions())\n  }, [props.match.params.bundle_number])\n\n  React.useEffect(() => {\n    setDisabledSubmit(batches.length <= 0)\n  }, [batches])\n\n  const getBundleDetails = bundle_number => {\n    BatchEncodingServices.getBundle({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Submitted',\n          color: 'green'\n        }\n        setsubmitStatus(true)\n      }\n\n      PageTitleService(`Bundle No. ${bundle_number}`, {\n        text: _status.text,\n        color: _status.color\n      })\n\n      const { user_id } = props.match.params\n      if (user_id) {\n        BreadcrumbsService.setSelectedItems([\n          'dashboard',\n          `createdBundles:${user_id}`,\n          `specificBundle:${bundle_number}`\n        ])\n      } else {\n        BreadcrumbsService.setSelectedItems(['dashboard', `specificBundle:${bundle_number}`])\n      }\n\n      setBundle({\n        bundle_number,\n        total_rcs: data.total_rcs,\n        date_received: data.date.received,\n        due_date: data.date.due,\n        soa_number: data.soa.number,\n        total_soa_amt: data.soa.amount,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        doctor_id: data.doctor.id,\n        doctor_name: data.doctor.name,\n        status: data.status,\n        reassign_notes: data.reassign_notes\n      })\n\n      getBatches(bundle_number)\n    })\n  }\n\n  const getBatches = bundle_number => {\n    BatchEncodingServices.getBatches({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(data)\n      LoadingService.loading(false)\n    })\n  }\n\n  const createBundle = () => {\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n    })\n  }\n\n  const cancelBundle = () => {\n    const { user_id } = props.match.params\n    const path = user_id ? `/batch-encoder-work/${user_id}` : '/'\n    props.history.push(path)\n  }\n\n  const handleOnSubmit = () => {\n    LoadingService.loading(true)\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: false\n    }))\n\n    BatchEncodingServices.submitBundle({\n      bundle_number: bundle.bundle_number\n    }).then(({ data: res }) => {\n      LoadingService.loading(false)\n      // getBundleDetails(bundle.bundle_number)\n      cancelBundle()\n    })\n  }\n\n  const [debounce, setDebounce] = React.useState({ doctor: null })\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setSelectedBatch({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.doctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setSelectedBatch({ doctor_id: i.id, doctor_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'doctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'doctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnSaveBatch = newBatch => {\n    const { batch_number, ...data } = newBatch\n    dispatch(setSaveBatchControl(true))\n    if (batch_number) {\n      BatchEncodingServices.updateBatch({\n        bundle_number: bundle.bundle_number,\n        batch_number,\n        data\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state =>\n            state.map(i => {\n              if (i.batch_number === batch_number) {\n                for (let f in data) i[f] = data[f]\n                i.batch_number = data.batch_number\n              }\n              return i\n            })\n          )\n          dispatch(setSelectedBatch({}))\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    } else {\n      BatchEncodingServices.createBatch({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state => [...state, data])\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    }\n  }\n\n  const handleOnConfirmDeleteBatch = () => {\n    BatchEncodingServices.deleteMultipleBatch({\n      bundle_number: bundle_number,\n      data: forDeletion\n    })\n      .then(({ data: res }) => {\n        getBatches(bundle_number)\n        setOpenDialog(false)\n        setForDeletion({ batch_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDialog(false)\n        setOpenError(true)\n      })\n  }\n\n  const handleOnCancelDeleteBatch = () => {\n    setOpenDialog(false)\n    setOpenError(false)\n  }\n\n  const handleOnDeleteBatch = batch => {\n    setOpenDialog(true)\n  }\n\n  const handleOnEditBatch = batch => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(true)\n    dispatch(setBatchAction('Update Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: batch.batch_number,\n        doctor_id: batch.doctor.id,\n        doctor_name: batch.doctor.name,\n        claim_type: batch.claim.type,\n        claim_source: batch.claim.source,\n        total_rcs: batch.total_rcs,\n        amount_billed: batch.amount_billed,\n        notes: batch.notes\n      })\n    )\n  }\n\n  const handleOnchangeBundleDetails = ({ fieldName, fieldValue }) => {\n    setBundle(state => ({ ...state, [fieldName]: fieldValue }))\n  }\n\n  const handleOnSaveBundleDetails = () => {\n    let data = { ...bundle }\n\n    const hasError = validate({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n\n    if (hasError) return\n\n    const onOk = () => {\n      setOpenBundleDialog(state => ({\n        ...state,\n        show: false\n      }))\n\n      LoadingService.loading(true)\n\n      delete data.status\n      BatchEncodingServices.updateBundle({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(() => {\n        LoadingService.loading(false)\n        setIsReadOnly(true)\n      })\n    }\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: true,\n      message: 'Are you sure you want to update?',\n      handleOnOk: onOk\n    }))\n  }\n\n  const handleOnCancelBundleDetails = () => {\n    setErrors({})\n    setBundle(originalState)\n    setIsReadOnly(true)\n  }\n\n  const handleOnNewBatch = () => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(false)\n    dispatch(setBatchAction('New Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: null,\n        doctor_id: bundle.doctor_id,\n        doctor_name: bundle.doctor_name,\n        claim_type: '',\n        claim_source: '',\n        total_rcs: 0,\n        amount_billed: 0,\n        notes: ''\n      })\n    )\n  }\n\n  const ValidateBundle = () => {\n    if (validateSoaRcs()) {\n      setOpenRCSDialog(state => ({\n        ...state,\n        show: true\n        // message:\n        //   'The Total No. of RCS and Total SOA Amount of the Bundle details and the Total No. of RCS and Total Billed Amount of the Batch details do not match.'\n      }))\n    } else {\n      setOpenBundleDialog(state => ({\n        ...state,\n        show: true,\n        message: 'Are you sure you want to Submit this?',\n        handleOnOk: handleOnSubmit\n      }))\n    }\n  }\n\n  const validate = value => {\n    const { error } = BundleValidator(value)\n    setErrors(error || {})\n    return !!error\n  }\n\n  const validateSoaRcs = () => {\n    const batches_rcs = batches.reduce((accu, curr) => accu + curr.total_rcs, 0)\n    const batches_soa = batches.reduce((accu, curr) => accu + curr.amount_billed, 0)\n    const { error } = RcsSoaValidator({\n      bundle_rcs: bundle.total_rcs,\n      batches_rcs,\n      bundle_soa: bundle.total_soa_amt,\n      batches_soa\n    })\n    let messages = []\n    if (error) {\n      if (error.batches_rcs) messages.push('The Total No. of RCS')\n      if (error.batches_soa) messages.push('The Total SOA Amount')\n      setOpenRCSDialog(state => ({\n        ...state,\n        message: messages.length > 0 ? messages.join(' and ') + ' of Bundle Details and Batch details do not match' : ''\n      }))\n    }\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      {bundle && (\n        <div className={classes.root}>\n          <BatchForm\n            bundle={bundle}\n            disableControls={disableControls}\n            onSave={handleOnSaveBatch}\n            onChangeDoctor={handleOnChangeDoctor}\n            disableComponents={disableComponents}\n          />\n\n          <Paper className={classes['bundle-details']}>\n            <BundleDetails\n              details={bundle}\n              errors={errors}\n              isReadOnly={isReadOnly}\n              onChange={handleOnchangeBundleDetails}\n            />\n            {!submitStatus && !isSupervisor && (\n              <Grid item className={classes['actions']}>\n                {isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='add-new-bundle'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={createBundle}\n                    >\n                      Add New Bundle\n                    </Button>\n                    <Button\n                      id='update-details'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={() => {\n                        setOriginalState(bundle)\n                        setIsReadOnly(false)\n                      }}\n                    >\n                      Update Details\n                    </Button>\n                  </React.Fragment>\n                )}\n\n                {!isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='cancel-update'\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                      onClick={handleOnCancelBundleDetails}\n                    >\n                      Cancel\n                    </Button>\n\n                    <Button\n                      id='save'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={handleOnSaveBundleDetails}\n                    >\n                      Save\n                    </Button>\n                  </React.Fragment>\n                )}\n              </Grid>\n            )}\n          </Paper>\n          <Typography className={classes['list-header']} variant='h6'>\n            Batches\n          </Typography>\n          <Paper className={classes['table-container']}>\n            <Grid item className={classes['actions']}>\n              <SearchTextComponent onChange={event => setSearchFilter(event.target.value)} />\n              {bundle.status === 'IN_PROGRESS' && !isSupervisor && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-neutral'\n                  id='add-new-batch'\n                  onClick={handleOnNewBatch}\n                >\n                  Add New Batch\n                </Button>\n              )}\n            </Grid>\n            <BatchList\n              batches={batches}\n              bundle_number={bundle_number}\n              onDelete={handleOnConfirmDeleteBatch}\n              openDialog={openDialog}\n              onCancel={handleOnCancelDeleteBatch}\n              onOpen={handleOnDeleteBatch}\n              openError={openError}\n              canEdit={!submitStatus && !isSupervisor}\n              onEdit={handleOnEditBatch}\n              forDeletion={forDeletion}\n              setForDeletion={setForDeletion}\n              isBundleCompleted={bundle && bundle.status && bundle.status === 'SUBMITTED' ? 1 : false}\n              searchFilter={searchFilter}\n            />\n          </Paper>\n          <div align='right' className={classes.buttonWrapper}>\n            {bundle && bundle.status && bundle.status !== 'SUBMITTED' && forDeletion.batch_numbers.length > 0 ? (\n              <Button\n                variant='contained'\n                color='primary'\n                className={`${'button-negative'} ${classes['delete-button']}`}\n                onClick={() => {\n                  handleOnDeleteBatch(true)\n                }}\n                id='cancel'\n              >\n                Delete\n              </Button>\n            ) : (\n              ''\n            )}\n            <Button variant='contained' color='primary' className='button-negative' id='cancel' onClick={cancelBundle}>\n              Cancel\n            </Button>\n\n            {bundle.status === 'IN_PROGRESS' && !isSupervisor && (\n              <Button\n                id='submit'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                disabled={disabledSubmit}\n                onClick={ValidateBundle}\n              >\n                Submit\n              </Button>\n            )}\n          </div>\n        </div>\n      )}\n\n      <Alert\n        open={openBundleDialog.show}\n        message={openBundleDialog.message}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenBundleDialog(state => ({ ...state, show: false }))}\n        onOk={openBundleDialog.handleOnOk}\n      />\n\n      <Alert\n        open={openRCSDialog.show}\n        message={openRCSDialog.message}\n        cancelLabel='Close'\n        onCancel={() => setOpenRCSDialog(state => ({ ...state, show: false }))}\n      />\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object()\n  .keys({\n    bundle_number: Joi.number()\n      .label('Bundle Number')\n      .integer()\n      .greater(0)\n      .required(),\n    total_rcs: Joi.number()\n      .label('Total No. of RCS')\n      .integer()\n      .min(0)\n      .required(),\n    date_received: Joi.date()\n      .label('Date Received')\n      .required()\n      .max('now'),\n    due_date: Joi.date()\n      .label('Due Date')\n      .required()\n      .min(Joi.ref('date_received'))\n      .messages({\n        'date.min': `The \"Due Date\" should be later than the Date Received`\n      }),\n    soa_number: Joi.string()\n      .trim()\n      .label('SOA No')\n      .allow('')\n      .required(),\n    total_soa_amt: Joi.number()\n      .label('Total SOA Amount')\n      .greater(0)\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner Name (Facility)')\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .allow('')\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner Name (Doctor)')\n      .allow('')\n      .required()\n  })\n  .options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport moment from 'moment'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Style\nimport classes from './NewBundlePage.module.scss'\n\n// Validator\nimport NewBundleValidator from './NewBundleValidator'\nexport default function NewBundlePage (props) {\n  const [disableControls, setDisableControls] = React.useState(false)\n  const [openAlert, setOpenAlert] = React.useState({})\n  const [newBundle, setNewBundle] = React.useState({\n    bundle_number: '',\n    total_rcs: 0,\n    soa_number: '',\n    facility_id: '',\n    facility_name: '',\n    total_soa_amt: 0,\n    doctor_id: '',\n    doctor_name: '',\n    date_received: moment(),\n    due_date_adjustment: 0,\n    due_date: moment().add(30, 'days')\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n\n    doctorPartner: {\n      id: [],\n      name: [],\n      data: []\n    }\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, medicalPartner: { ...state.medicalPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, doctorPartner: { ...state.doctorPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = args => {\n    const { value, field } = args\n    setNewBundle(state => ({ ...state, [field]: value }))\n    handleOnChangeMedicalPartner(args)\n  }\n\n  const handleOnChangeMedicalPartner = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: {\n        id: [],\n        name: [],\n        data: []\n      },\n      doctorPartner: {\n        id: [],\n        name: [],\n        data: []\n      }\n    }))\n\n    if (field === 'facility_id' || field === 'facility_name') {\n      if (isSuggestionClick) {\n        for (let i of suggestions.medicalPartner.data) {\n          if (value === i.id || value === i.name) {\n            // Compute due date based on date received and earliest term found\n            // Fallback term is 30 days\n            let term = 30\n            if (i.earliest_term) {\n              term = parseInt(i.earliest_term)\n              if (isNaN(term) || term < 0) {\n                term = 30\n              }\n            }\n            let newDate = moment(newBundle.date_received).add(term, 'days')\n\n            setNewBundle(state => ({\n              ...state,\n              facility_id: i.id,\n              facility_name: i.name,\n              due_date: newDate,\n              due_date_adjustment: term\n            }))\n          }\n        }\n      } else {\n        switch (field) {\n          case 'facility_id':\n            getMedicalPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'facility_name':\n            getMedicalPartnerSuggestions({ value, by: 'name' })\n            break\n\n          default:\n            break\n        }\n      }\n    } else if (field === 'doctor_id' || field === 'doctor_name') {\n      if (isSuggestionClick) {\n        if (!isNaN(selectedIndex)) {\n          try {\n            const i = suggestions.doctorPartner.data[selectedIndex]\n            setNewBundle(state => ({ ...state, doctor_id: i.id, doctor_name: i.full_name }))\n          } catch (ex) {}\n        }\n      } else {\n        switch (field) {\n          case 'doctor_id':\n            getDoctorPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'doctor_name':\n            getDoctorPartnerSuggestions({ value, by: 'full_name' })\n            break\n\n          default:\n            break\n        }\n      }\n    }\n  }\n\n  React.useEffect(() => {\n    PageTitleService(`Create New Bundle`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'newBundle'])\n    setNewBundle(state => ({ ...state, bundle_number: props.match.params.bundle_number }))\n  }, [props.match.params.bundle_number])\n\n  const validate = value => {\n    const { error } = NewBundleValidator(value)\n    setErrors(error || {})\n    return !!error\n  }\n  const handleOnSave = () => {\n    setDisableControls(true)\n    setOpenAlert(state => ({\n      ...state,\n      show: false\n    }))\n\n    const data = {\n      ...newBundle,\n      date_received: newBundle.date_received.toISOString(),\n      due_date: newBundle.due_date.toISOString()\n    }\n\n    const hasError = validate({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n\n    if (hasError) {\n      setDisableControls(false)\n      return\n    }\n    // return validate({ total_rcs: data.total_rcs })\n\n    LoadingService.loading(true)\n\n    // Remove date due adjustment; it will cause an error on server\n    delete data.due_date_adjustment\n\n    BatchEncodingServices.updateBundle({\n      data,\n      bundle_number: newBundle.bundle_number\n    }).then(res => {\n      props.history.push(`/bundles/${newBundle.bundle_number}`)\n    })\n  }\n\n  const cancel = () => props.history.push(`/`)\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['upload-container']}>\n        <Link to={`/bundles/upload-soa`}>\n          <Typography id='upload-soa-button' variant='subtitle2' className={`bold text-link ${classes.label}`}>\n            + Upload SOA\n          </Typography>\n        </Link>\n      </div>\n\n      <Paper className={classes.form}>\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <CustomTextField\n              id='create-new-bundle-bundle-number'\n              label='Bundle No.'\n              value={newBundle.bundle_number}\n              fullWidth\n              disabled\n              error={errors.bundle_number}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <TextFieldNumber\n              id='create-new-bundle-total-rcs'\n              required\n              label='Total No. of RCS'\n              value={newBundle.total_rcs}\n              fullWidth\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, total_rcs: e.target.value }))}\n              error={errors.total_rcs}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <DatePicker\n              id='create-new-bundle-date-received'\n              label='Date Received'\n              value={newBundle.date_received}\n              disabled={disableControls}\n              onChange={date => {\n                // Adjust due date accordingly to date received and term adjustment\n                const due_date = moment(date).add(newBundle.due_date_adjustment, 'days')\n\n                setNewBundle(state => ({ ...state, date_received: date, due_date: due_date }))\n              }}\n              error={errors.date_received}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <DatePicker\n              id='create-new-bundle-due-date'\n              label='Due Date'\n              disabled={disableControls}\n              value={newBundle.due_date}\n              onChange={date => setNewBundle(state => ({ ...state, due_date: date }))}\n              error={errors.due_date}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <CustomTextField\n              id='create-new-bundle-soa-number'\n              label='SOA No.'\n              fullWidth\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, soa_number: e.target.value }))}\n              error={errors.soa_number}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <TextFieldCurrency\n              id='create-new-bundle-total-soa'\n              required\n              label='Total SOA Amount'\n              fullWidth\n              value={newBundle.total_soa_amt}\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, total_soa_amt: e.target.value }))}\n              error={errors.total_soa_amt}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-facility-partner-id'\n              required\n              label='Medical Partner ID'\n              value={newBundle.facility_id}\n              disabled={disableControls}\n              suggestions={suggestions.medicalPartner.id}\n              onChange={(value, isSuggestionClick) =>\n                handleOnChangeAutosuggest({ field: 'facility_id', value, isSuggestionClick })\n              }\n              error={errors.facility_id}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-facility-partner-name'\n              required\n              label='Medical Partner Name (Facility)'\n              value={newBundle.facility_name}\n              disabled={disableControls}\n              suggestions={suggestions.medicalPartner.name}\n              onChange={(value, isSuggestionClick) =>\n                handleOnChangeAutosuggest({ field: 'facility_name', value, isSuggestionClick })\n              }\n              error={errors.facility_name}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-docotr-partner-id'\n              label='Medical Partner ID'\n              value={newBundle.doctor_id}\n              disabled={disableControls}\n              suggestions={suggestions.doctorPartner.id}\n              onChange={(value, isSuggestionClick, selectedIndex) =>\n                handleOnChangeAutosuggest({ field: 'doctor_id', value, isSuggestionClick, selectedIndex })\n              }\n              error={errors.doctor_id}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-doctor-name'\n              label='Medical Partner Name (Doctor)'\n              value={newBundle.doctor_name}\n              disabled={disableControls}\n              suggestions={suggestions.doctorPartner.full_name}\n              onChange={(value, isSuggestionClick, selectedIndex) =>\n                handleOnChangeAutosuggest({ field: 'doctor_name', value, isSuggestionClick, selectedIndex })\n              }\n              error={errors.doctor_name}\n            />\n          </Grid>\n        </Grid>\n\n        <div className={classes.actions}>\n          <Button variant='contained' color='primary' className='button-negative' onClick={cancel} id='cancel'>\n            Cancel\n          </Button>\n\n          <Button\n            variant='contained'\n            color='primary'\n            className={`${classes.save} button-positive`}\n            onClick={() =>\n              setOpenAlert(state => ({\n                ...state,\n                show: true,\n                message: 'Are you sure you want to save this?'\n              }))\n            }\n            disabled={disableControls}\n            id='save'\n          >\n            Save\n          </Button>\n\n          <Alert\n            open={openAlert.show}\n            message={openAlert.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenAlert(state => ({ ...state, show: false }))}\n            onOk={handleOnSave}\n          />\n        </div>\n      </Paper>\n    </div>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ce')\n\nexport default class ClaimsEncodingServices {\n  static getBatches (params) {\n    return axios({\n      url: `/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchCount (params) {\n    return axios({\n      url: `/batches/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static assignBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static submitBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getClaims ({ batch_number, params }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/count`,\n      method: 'GET'\n    })\n  }\n\n  static getClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getLetterNotice ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static addClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static updateClaim ({ batch_number, claim_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static deleteClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // static getDropdown (params) {\n  //   return axios({\n  //     url: '/lookups/dropdown',\n  //     method: 'GET',\n  //     params,\n  //     headers: { [ExcludeErrorConstants['all']]: 1 }\n  //   })\n  // }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","// TODO: Uncomment\nimport moment from 'moment'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport claimTypes from 'Constant/claimTypes'\n\n/**\n * SOA ETL Controller. \n * An ETL (Extract Transform Load) controller \"prototype/function\" class intended to contain ETL\n * logic for extracting, transforming and loading SOA import data.\n *\n * As of the moment, extraction and loading is being done elsewhere outside this\n * utility. So this class is currently only performing the \"Transformation phase\"\n */\nfunction SoaEtlController() { }\n\nSoaEtlController.MINIMUM_KEYS = {\n  BUNDLE_SOA_NUM: 'BUNDLE_SOA_NUM',\n  BUNDLE_RCS_NUM: 'BULDE_RCS_NUM',\n  BUNDLE_RCS_DATE: 'BUNDLE_RCS_DATE',\n\n  BUNDLE_FACILITY_NAME: 'BUNDLE_FACILITY_NAME',\n  BUNDLE_FACILITY_CODE: 'BUNDLE_FACILITY_CODE',\n\n  BATCH_CLAIMS_SOURCE: 'BATCH_CLAIMS_SOURCE',\n  BATCH_CLAIM_TYPE: 'BATCH_CLAIM_TYPE',\n\n  CLAIM_DATE_AVAILMENT: 'CLAIM_DATE_AVAILMENT',\n  CLAIM_DATE_ADMITTED: 'CLAIM_DATE_ADMITTED',\n  CLAIM_DATE_DISCHARGE: 'CLAIM_DATE_DISCHARGE',\n  CLAIM_APPROVAL_CODE: 'CLAIM_APPROVAL_CODE',\n  CLAIM_MEMBER_NUM: 'CLAIM_MEMBER_NUM',\n  CLAIM_MEMBER_NAME: 'CLAIM_MEMBER_NAME',\n  CLAIM_DIAGNOSIS_NAME: 'CLAIM_DIAGNOSIS_NAME',\n  CLAIM_DIAGNOSIS_CODE: 'CLAIM_DIAGNOSIS_CODE',\n\n  CLAIM_DOCTOR_NAME: 'CLAIM_DOCTOR_NAME',\n  CLAIM_DOCTOR_AMOUNT: 'CLAIM_DOCTOR_AMOUNT',\n\n  CLAIM_PROCEDURE_NAME: 'CLAIM_PROCEDURE_NAME',\n  CLAIM_PROCEDURE_AMOUNT: 'CLAIM_PROCEDURE_AMOUNT',\n\n  CLAIM_HOSPITAL_ITEM_NAME: 'CLAIM_HOSPITAL_ITEM_NAME',\n  CLAIM_HOSPITAL_ITEM_AMOUNT: 'CLAIM_HOSPITAL_ITEM_AMOUNT'\n}\n\nSoaEtlController.COLUMN_TEMPLATES = {\n  DEFAULT:\n  {\n    // Bundle fields\n    'SOA No.': SoaEtlController.MINIMUM_KEYS.BUNDLE_SOA_NUM,\n    'RCSNum': SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_NUM,\n    'RCS Date': SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE,\n\n    // Batch fields\n    'Claim Type': SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE,\n\n    // Claim fields\n\n    // Claim fields - date\n    'Date of Availment': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_AVAILMENT,\n    'Date Admitted': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_ADMITTED,\n    'Date Discharge': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_DISCHARGE,\n\n    'Approval Code / LOE No.': SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE,\n\n    'Member Number': SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM,\n    'Patient Name': SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NAME,\n\n    'Diagnosis': SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_NAME,\n    'ICD10 Code': SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_CODE,\n\n    // Claim fields - line items\n    'Doctors Name': SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_NAME,\n    'PF Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_AMOUNT,\n\n    'Procedure': SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_NAME,\n    'Proc Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_AMOUNT,\n\n    'Hospital Item': SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_NAME,\n    'HospItem Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_AMOUNT\n  }\n}\n\n/**\n * Performs transformation of specified data rows using the specified data mapping\n *\n * Data mapping given should contain the following keys:\n * <ul>\n *   <li>columns: for mapping columns from import file to Claims model</li>\n *   <li>fields: for mapping specific field values to Claims model</li>\n * </ul>\n *\n * Examples:\n * <code>\n *   {\n *     columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * <code>\n *   {\n *     columns: {},\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * @param dataRows data rows to be transformed\n * @param dataMapping data mapping information\n */\nSoaEtlController.transform = function (dataRows, dataMapping, defaults = {}) {\n  console.log('soa_etl', 'transform')\n\n  // Initial check parameters\n  if (!dataRows || !dataMapping || !dataMapping.columns || !dataMapping.fields[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]) throw { error: 'invalid parameters' }\n\n  const prepData = SoaEtlController._transformPreviewDataToPrepData(dataRows, dataMapping, defaults)\n  console.log(prepData)\n\n  const bundle = SoaEtlController._transformPrepDataToHierarchicalData(prepData)\n  console.log(JSON.stringify(bundle, null, 2))\n\n  return bundle\n}\n\n/** \n * Loads the specified bundle data unto the Claims server by invoking the appropriate API calls\n * for the bundle, batch and claims information found in the bundle data.\n * \n * @param bundle bundle data from transform()\n */\nSoaEtlController.loadToApi = function (bundle, successCallback) {\n\n  let promise = new Promise(function (resolve, reject) {\n    // TODO: refactor; callback hell\n\n    // Invoke Create Bundle\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      const bundleNumber = data\n      console.log(bundleNumber)\n\n      bundle.bundle_number = bundleNumber\n\n      const bundleParam = { ...bundle }\n      delete bundleParam.batches\n\n      // Invoke Update Bundle\n      BatchEncodingServices.updateBundle({ bundle_number: bundleNumber, data: bundleParam }).then(res => {\n\n        // Create promise for each add batch operation (which contains add-claims operation)\n        const addBatchPromises = bundle.batches.map(batch => {\n          const batchParam = { ...batch }\n          delete batchParam.claims\n\n          // Create single promise for add batch\n          const promise = new Promise((resolveBatchPromise, rejectBatchPromise) => {\n\n            // Call create batch API\n            BatchEncodingServices.createBatch({ data: batchParam, bundle_number: bundleNumber })\n              .then(res => {\n                const { data } = res.data\n                batch.batch_number = data.batch_number\n\n                async function addClaims() {\n                  for (let i = 0; i < batch.claims.length; i++) {\n                    const claim = batch.claims[i]\n                    // Invoke create claim\n                    await ClaimsEncodingServices.addClaim({ batch_number: batch.batch_number, data: claim })\n                  }\n                  resolveBatchPromise()\n                }\n\n                // Create claims for batch\n                addClaims()\n\n              })\n              .catch(() => {\n                rejectBatchPromise('Batch creation failed')\n              })\n          })\n\n          return promise\n        })\n\n        // Note: VNI requirement, is to not perform automatic bundle submission \n        //       and consequentially, no automatic claims creation for claims under the\n        //       automatically created batches. That is the function requirement. \n        //       The technical operation however, needs claims to be created but just \n        //       NOT visible as of yet to claims encoders (and up).\n        // // Todo: refactor to wait for all batches to be created before submitting bundle\n        // BatchEncodingServices.submitBundle({ bundle_number: bundleNumber }).then(res => {\n        //   if (successCallback) { successCallback();} \n        //   resolve()\n        //   // batch.claims.forEach(element => {\n        //   //   let claim = element\n        //   // })\n        // }).catch(() => {\n        //   reject('Bundle submission failed')\n        // })\n\n\n        // PromiseUtil.executeInSequence(addBatchPromises)\n        Promise.all(addBatchPromises)\n          .then(() => {\n            console.log('success SOA loading unto API')\n            //alert('success SOA loading unto API')\n            resolve()\n          })\n\n      }).catch(() => {\n        console.log('failed SOA loading unto API')\n        //alert('failed SOA loading unto API')\n        reject('Bundle creation failed')\n      })\n\n    })\n  });\n\n  return promise\n}\n\n\n/**\n * Performs transformation of \"preview data rows\" to \"preparation data rows\"\n *\n * Data mapping given should contain the following keys:\n * <ul>\n *   <li>columns: for mapping columns from import file to Claims model</li>\n *   <li>fields: for mapping specific field values to Claims model</li>\n * </ul>\n *\n * Examples:\n * <code>\n *   {\n *     columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * <code>\n *   {\n *     columns: {},\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * @param dataRows data rows to be transformed\n * @param dataMapping data mapping information\n *\n * @return mapped-out data rows\n */\nSoaEtlController._transformPreviewDataToPrepData = function (dataRows, dataMapping, defaults = {}) {\n  const outputEntries = []\n  let prevEntry = {}\n  dataRows.forEach(dataEntry => {\n    const outputEntry = {}\n    let hasSingleValue = false\n    Object.keys(dataMapping.columns).forEach(columnKey => {\n      let dataValue = dataEntry[columnKey]\n      let outputKey = dataMapping.columns[columnKey]\n\n      // If no value for the key\n      if (!dataValue || dataValue.trim().length === 0) {\n        dataValue = ''\n        // Attempt to use previous row's value\n        // dataValue = prevEntry[outputKey]\n        // if (!dataValue) dataValue = ''\n      } else {\n        hasSingleValue = true\n      }\n\n      // Store upon output entry\n      outputEntry[outputKey] = dataValue.trim()\n    })\n\n    if (hasSingleValue) {\n      if (defaults) {\n        Object.keys(defaults).forEach(key => {\n          outputEntry[key] = defaults[key]\n        })\n      }\n\n      Object.keys(dataMapping.fields).forEach(fieldKey => {\n        let value = outputEntry[fieldKey]\n        if (value && value.length > 0) outputEntry[fieldKey] = dataMapping.fields[fieldKey][value]\n      })\n\n      outputEntries.push(outputEntry)\n    }\n\n    // Keep track of previews row\n    prevEntry = outputEntry\n  })\n\n  return outputEntries\n}\n\n/** \n * Transforms Preparation Data into Hierarchical Data (bundle, batches and claims).\n * \n * @param prepDataRows output from _transformPreviewDataToPrepData()\n * \n * @return bundle object which includes underneath batches and claims objects\n */\nSoaEtlController._transformPrepDataToHierarchicalData = function (prepDataRows) {\n  let prevPrepEntry = {}\n\n  let bundle = null\n  let currentBatch = null\n  let currentClaim = null\n  let totalGrossAmount = 0\n\n  prepDataRows.forEach(dataEntry => {\n\n    const soaNumber = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_SOA_NUM]\n    if (!bundle) {\n      let rcsTotal = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_NUM]\n      try {\n        rcsTotal = parseInt(rcsTotal)\n      } catch {\n        throw 'Error: Invalid Total RCS (' + rcsTotal + ')'\n      }\n\n      // bundle = {\n      //   soa: { number: soaNumber, amount: 0.0 },\n      //   date: { received: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE] },\n      //   facility: {\n      //     id: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE],\n      //     name: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]\n      //   },\n      //   total_rcs: rcsTotal,\n      //   batches: []\n      // }\n      const dateReceived = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE]\n      bundle = {\n        soa_number: soaNumber,\n        total_soa_amt: 0.0,\n\n        // TODO: uncomment\n        date_received: moment(dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE]).format('MM/DD/YYYY'),\n        due_date: moment(dateReceived).add(30, 'days').format('MM/DD/YYYY'),\n\n        facility_id: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE],\n        facility_name: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME],\n        total_rcs: rcsTotal,\n        doctor_id: '',\n        doctor_name: '',\n        batches: []\n      }\n    }\n\n    // Enforce there is only SOA number\n    if (soaNumber !== '' && soaNumber !== bundle.soa_number) {\n      throw 'Error: Another SOA Number found (' + soaNumber + ')'\n    }\n\n    // Fetch claim type and check if there is a change\n    const claimType = dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]\n    if (!currentBatch || (claimType != '' && claimType != currentBatch.claim_type)) {\n      // currentBatch = {\n      //   claim: {\n      //     type: claimType,\n      //     source: dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE],\n      //   },\n      //   claims: []\n      // }\n\n      currentBatch = {\n        claim_type: claimType,\n        claim_source: dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE],\n        doctor_id: '',\n        doctor_name: '',\n        total_rcs: 0,\n        amount_billed: 0.0,\n        notes: \"SYSTEM GENERATED BATCH VIA SOA UPLOAD\\n\",\n        claims: []\n      }\n\n      bundle.batches.push(currentBatch)\n    }\n\n    // Fetch approval code and check if there is a change\n    const approvalCode = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE]\n    if (!currentClaim || (approvalCode != '' && approvalCode != currentClaim[SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE])) {\n\n      // Increment total RCS for the parent batch\n      currentBatch.total_rcs += 1\n\n      const memberName = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NAME]\n      const nameParts = memberName.split(',')\n\n      // currentClaim = {\n      //   member: {\n      //     account_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM],\n      //     last_name: nameParts[0].trim(),\n      //     first_name: nameParts[1].trim(),\n      //     middle_name: '',\n      //   },\n      //   approval_code: approvalCode,\n      //   professional_fees: [],\n      //   hospital_items: [],\n      //   procedures: []\n      // }\n\n      currentClaim = {\n        member_account_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM],\n        member_first_name: nameParts[1].trim(),\n        member_middle_name: '',\n        member_last_name: nameParts[0].trim(),\n\n        facility_id: bundle.facility_id,\n        facility_name: bundle.facility_name,\n\n        approval_code: approvalCode,\n        loa_number: '',\n\n        diagnosis: [],\n        professional_fees: [],\n        hospital_items: [],\n        procedures: [],\n\n        date_from: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_ADMITTED],\n        date_to: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_DISCHARGE],\n\n        claim_sub_type: 'Surgical',\n        claim_sub_sub_type: 'Physical',\n\n        with_corporate_guarantee: '',\n        loa_notes: '',\n\n      }\n\n      if (currentBatch.claim_type === 'In Patient') {\n        currentClaim.room_type = 'WARD'\n        currentClaim.room_rate = 0.0\n        currentClaim.pro_id = 'N/A'\n        currentClaim.pro_name = 'N/A'\n      }\n\n      currentBatch.claims.push(currentClaim)\n    }\n\n    // Check for diagnosis entries  \n    const diagnosisName = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_NAME]\n    const diagnosisCode = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_CODE]\n    if (diagnosisName && diagnosisCode) {\n      const flag = currentClaim.diagnosis.length == 0\n      currentClaim.diagnosis.push({ code: diagnosisCode, description: diagnosisName, primary: flag })\n    }\n\n    let lineItem = null\n    let lineAmount = null\n\n    // Check for line item - professional fee \n    lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_NAME]\n    lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_AMOUNT]\n    if (lineItem && lineAmount) {\n      try {\n        lineAmount = parseFloat(lineAmount)\n      } catch {\n        lineAmount = 0.0\n      }\n \n      bundle.total_soa_amt += lineAmount\n      currentBatch.amount_billed += lineAmount\n      \n      currentClaim.professional_fees.push({\n        doctor_name: lineItem, doctor_id: \"unknown\", gross_amount: lineAmount,\n        specialization: \"unknown\", vat_amount: 0, amount_paid_by_member: 0,\n        philhealth_amount_paid: 0, philhealth_remarks: \"\", amount_not_covered: 0, reason: \"\", amount_due_from_member: 0, reason_for_charging_member: \"\"\n      })\n    }\n\n    if (currentBatch.claim_type !== 'Out Patient Procedure') {\n      // Check for line item - hospital item \n      lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_NAME]\n      lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_AMOUNT]\n      if (lineItem && lineAmount) {\n        try {\n          lineAmount = parseFloat(lineAmount)\n        } catch {\n          lineAmount = 0.0\n        }\n\n        bundle.total_soa_amt += lineAmount\n        currentBatch.amount_billed += lineAmount\n\n        currentClaim.hospital_items.push({\n          name: lineItem, item_code: \"unknown\", gross_amount: lineAmount,\n          vat_amount: 0, amount_paid_by_member: 0, philhealth_amount_paid: 0, philhealth_remarks: \"\", amount_not_covered: 0, reason: \"\", amount_due_from_member: 0, reason_for_charging_member: \"\"\n        })\n      }\n    }\n\n    if (currentBatch.claim_type !== 'Out Patient Consultation') {\n        // Check for line item - procedure\n      lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_NAME]\n      lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_AMOUNT]\n      if (lineItem && lineAmount) {\n        try {\n          lineAmount = parseFloat(lineAmount)\n        } catch {\n          lineAmount = 0.0\n        }\n\n        bundle.total_soa_amt += lineAmount\n        currentBatch.amount_billed += lineAmount\n\n        currentClaim.professional_fees.push({\n          description: lineItem, gross_amount: lineAmount,\n          code: \"unknown\", vat_amount: 0, amount_paid_by_member: 0, philhealth_amount_paid: 0, philhealth_remarks: \"\"\n        })\n      }\n    }\n\n  })\n\n  return bundle\n}\n\n\n// TODO: set to false on normal operation; set to true only for debugging purposes\nSoaEtlController.DEBUG = false\n\nif (SoaEtlController.DEBUG) {\n  SoaEtlController.test = function () {\n\n    const dataRows = [\n      {\n        'SOA No.': 'SOA0001',\n        'RCSNum': '1',\n        'RCS Date': '1/10/2020',\n        'Claim Type': 'IP',\n        'Date of Availment': '1/11/2020',\n        'Date Admitted': '1/11/2020',\n        'Date Discharge': '1/14/2020',\n        'Approval Code / LOE No.': '5556',\n        'Member Number': '8000-0001',\n        'Patient Name': 'Yu, Eusebio',\n        'Diagnosis': 'Dengue',\n        'ICD10 Code': 'D0001',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 0\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': 'Cardiac Arrest',\n        'ICD10 Code': 'C0055',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 1\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': 'Dr. ABC',\n        'PF Amt': '500',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 2\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': 'X-Ray',\n        'Proc Amt': '1000',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 3\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': 'Dextrose',\n        'HospItem Amt': ' 850.00 ',\n        '__index__': 4\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 5\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 6\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 7\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 8\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 9\n      },\n      {\n        'SOA No.': 'SOA0001',\n        'RCSNum': '1',\n        'RCS Date': '1/10/2020',\n        'Claim Type': 'IP',\n        'Date of Availment': '1/11/2020',\n        'Date Admitted': '1/11/2020',\n        'Date Discharge': '1/14/2020',\n        'Approval Code / LOE No.': '6667',\n        'Member Number': '8000-0001',\n        'Patient Name': 'Conan, Detective',\n        'Diagnosis': 'Dengue',\n        'ICD10 Code': 'D0001',\n        'Doctors Name': 'Dr. Evil',\n        'PF Amt': '100000.00',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 10\n      },\n    ]\n\n    const dataMapping = {\n      columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n      fields: {\n        [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]:\n        {\n          'IP': 'In Patient',\n          'OPP': 'Out Patient Procedure',\n          'OPC': 'Out Patient Consultation'\n        }\n\n      }\n    }\n    console.log(dataMapping)\n\n    const defaults = {\n      [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE]: 'Hospital',\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE]: 'HOS000012',\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]: 'Davao Doctors Hospital',\n    }\n\n    const bundle = SoaEtlController.transform(dataRows, dataMapping, defaults)\n    SoaEtlController.loadToApi(bundle)\n  }\n\n  // TODO: comment out\n  // SoaEtlController.test()\n}\n\n// TODO: Uncomment\nexport default SoaEtlController\n","import XLSX from 'xlsx'\n\nexport default async function XLSXParser ({ file, onComplete }) {\n  let headers = null\n  const results = []\n\n  var reader = new FileReader()\n  reader.onload = function (e) {\n    const workbook = XLSX.read(e.target.result, { type: 'binary' })\n\n    const sheet = workbook.Sheets[workbook.SheetNames[0]]\n    const data = XLSX.utils.sheet_to_json(sheet, { raw: false, header: 1 })\n    headers = data.shift()\n\n    for (let index = 0; index < data.length; index++) {\n      const _item = {}\n      headers.map(i => (_item[i] = ''))\n\n      data[index].map((value, index) => (_item[headers[index]] = value))\n\n      if (index === data.length - 1 && !data[index].length) continue\n\n      results.push(_item)\n    }\n\n    onComplete({ headers, results })\n  }\n\n  reader.readAsBinaryString(file)\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport Parser from './../../Parser'\n\n// Style\nimport classes from './UploadSpace.module.scss'\n\nconst Progress = withStyles({\n  root: {\n    height: 15,\n    borderRadius: 20,\n    backgroundColor: '#c7c7c7'\n  },\n  bar: {\n    borderRadius: 20,\n    backgroundColor: '#00ab00'\n  }\n})(LinearProgress)\n\nexport default function UploadSpace (props) {\n  const { onSelectFile } = props\n  const dialogRef = React.useRef()\n\n  const [dragged, setDragged] = React.useState(false)\n  const [fileLoaded, setFileLoaded] = React.useState()\n  const [progress, setProgress] = React.useState(0)\n\n  const handleOnClick = event => {\n    event.stopPropagation()\n    event.preventDefault()\n    dialogRef.current.click()\n  }\n\n  const handleOnChangeFile = event => {\n    event.stopPropagation()\n    event.preventDefault()\n    const file = event.target.files[0]\n\n    if (!file) return\n\n    handleParse(file)\n  }\n\n  const handleOnDrag = state => e => {\n    e.preventDefault()\n    e.stopPropagation()\n    setDragged(state)\n  }\n\n  const handleDrop = e => {\n    setDragged(false)\n    e.preventDefault()\n    e.stopPropagation()\n\n    // TODO if multiple file and invalid file type\n    const [file] = e.dataTransfer.files\n\n    handleParse(file)\n  }\n\n  const handleParse = file => {\n    setFileLoaded(true)\n\n    console.log(file)\n    Parser({\n      file,\n      onComplete: ({ results, headers }) => {\n        setProgress(100)\n        setTimeout(() => onSelectFile({ items: results, headers, fileName: file.name }), 1000)\n      }\n    })\n  }\n\n  return (\n    <React.Fragment>\n      {!fileLoaded && (\n        <div\n          className={`${classes.root} ${dragged && classes.dragged}`}\n          onDrop={handleDrop}\n          onDragOver={handleOnDrag(true)}\n          onDragLeave={handleOnDrag(false)}\n        >\n          <div className={`${classes.container} ${classes.clickable}`} onClick={handleOnClick}>\n            <FontAwesomeIcon icon='file-upload' className={classes.icon} />\n            <Typography variant='subtitle2' className={classes.label}>\n              Click or drag/drop filte to preview\n            </Typography>\n\n            <div className={classes.warning}>\n              <Typography variant='subtitle2' className={classes.label}>\n                Make sure the dates are in the format where the\n              </Typography>\n              <Typography variant='subtitle2' className={classes.label}>\n                <span>month is written first</span> (ex. MM/DD/YYYY or YYYY/MM/DD)\n              </Typography>\n            </div>\n          </div>\n\n          <input\n            id='file-dialog'\n            type='file'\n            ref={dialogRef}\n            style={{ display: 'none' }}\n            accept='.xlsx, .xls, .csv'\n            onChange={handleOnChangeFile}\n          />\n        </div>\n      )}\n\n      {fileLoaded && (\n        <div className={classes.root}>\n          <div className={classes.container}>\n            <div className={classes['progress-container']}>\n              <Progress variant='determinate' value={progress} />\n            </div>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Shared Components\nimport Table from 'SharedComponents/Table/Table'\n\n// Styles\nimport classes from './DynamicTable.module.scss'\n\nexport default function DynamicTable (props) {\n  const { headers, items, fileName } = props.data\n  const { onRemoveFile } = props\n  const { onDetectDataRows } = props\n\n  const [tableState, setTableState] = React.useState({\n    limit: 10,\n    page: 1\n  })\n\n  const [selectedItems, setSelectedItems] = React.useState([])\n\n  React.useEffect(() => {\n    handleOnChangeItems({})\n  }, [])\n\n  React.useEffect(() => {\n    onDetectDataRows(selectedItems)\n  }, [selectedItems])\n\n  const handleOnTableChange = params => {\n    setTableState(state => ({ ...state, ...params }))\n    handleOnChangeItems(params)\n  }\n\n  const handleOnChangeItems = ({ page = 1, limit = 10 }) => {\n    const _items = []\n\n    const startAt = (page - 1) * limit\n    const endAt = page * limit\n\n    for (let index = startAt; index < endAt; index++) {\n      const item = items[index]\n      if (!item) break\n\n      _items.push({ ...item, __index__: index })\n    }\n\n    setSelectedItems(_items)\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['file-name-container']}>\n        <Typography id='file-name' variant='subtitle2' className={classes['file-name']}>\n          {fileName}\n        </Typography>\n\n        <IconButton size='small'>\n          <FontAwesomeIcon icon='minus-circle' className={classes.icon} onClick={onRemoveFile} />\n        </IconButton>\n      </div>\n\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { flex: 1, overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              <TableCell id={`column-row-number`}>#</TableCell>\n\n              {headers.map(item => (\n                <TableCell key={item} id={`column-${item}`}>\n                  {item}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          body={selectedItems.map(item => (\n            <TableRow key={`${JSON.stringify(item)}-${item.__index__}`}>\n              <TableCell id={`row-${item.__index__}`}>{item.__index__ + 1}</TableCell>\n\n              {headers.map(header => (\n                <TableCell key={`item-${header}-${item.__index__}`}>{item[header]}</TableCell>\n              ))}\n            </TableRow>\n          ))}\n          count={items.length}\n          page={tableState.page}\n          limit={tableState.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={handleOnTableChange}\n        />\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\n// Shared Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './DataPairs.module.scss'\nimport { Typography } from '@material-ui/core'\n\nconst DataPair = props => {\n  const { index, sources, targets, source, target } = props\n  const { onClickRemove, onChangeSource, onChangeTarget } = props\n\n  return (\n    <div className={classes.child}>\n      <div className={classes.source}>\n        {/* <DropDown items={sources} value={source} onChange={onChangeSource} /> */}\n        <TextField\n          className={classes.name}\n          id={`input-source-${index}`}\n          value={source}\n          onChange={onChangeSource}\n          autoFocus\n          fullWidth\n        />\n      </div>\n      <div className={classes.target}>\n        <DropDown items={targets} value={target} onChange={onChangeTarget} />\n      </div>\n      <div className={classes.action}>\n        <Button onClick={onClickRemove}>Remove</Button>\n      </div>\n    </div>\n  )\n}\nexport default function DataPairContainer (props) {\n  const { headers = ['Source', 'Target'], fields = [], sources, targets } = props\n  const { onClickAddNew, onClickRemove, onChangeSource, onChangeTarget } = props\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        {headers.map((head, index) => (\n          <Typography key={`heade-${index}`} variant='h6'>\n            {head}\n          </Typography>\n        ))}\n      </div>\n      <div className={classes.children}>\n        {fields.map((field, index) => (\n          <DataPair\n            key={`field-${index}`}\n            index={index}\n            sources={sources}\n            targets={targets}\n            source={field.source || ''}\n            target={field.target || ''}\n            onChangeSource={event => onChangeSource({ index, value: event.target.value })}\n            onChangeTarget={event => onChangeTarget({ index, value: event.target.value })}\n            onClickRemove={event => onClickRemove({ index })}\n          />\n        ))}\n      </div>\n      <div className={classes.action}>\n        <Button onClick={onClickAddNew}>Add New</Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n// Shared Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport DataPairContainer from './DataPairs/DataPairs'\n\n// Styles\nimport classes from './FieldMapper.module.scss'\n\nconst claim_sources = [\n  { value: 'Hospital', text: 'Hospital' },\n  { value: 'Clinic', text: 'Clinic' }\n]\n\nconst dropdown_source = [\n  { value: 'OP', text: 'OP' },\n  { value: 'PF', text: 'PF' },\n  { value: 'IP', text: 'IP' }\n]\n\nconst dropdown_target = [\n  { value: 'In Patient', text: 'In Patient' },\n  { value: 'Out Patient Procedure', text: 'Out Patient Procedure' },\n  { value: 'Out Patient Consultation', text: 'Out Patient Consultation' },\n  { value: 'Reimbursement', text: 'Reimbursement' },\n  { value: 'Emergency', text: 'Emergency' },\n  { value: 'Dental', text: 'Dental' },\n  { value: 'Medicine Allowance', text: 'Medicine Allowance' },\n  { value: 'APE', text: 'APE' },\n  { value: 'ECU', text: 'ECU' },\n  { value: 'Pharmacy', text: 'Pharmacy' },\n  { value: 'PPE', text: 'PPE' },\n  { value: 'Medical Supplies', text: 'Medical Supplies' },\n  { value: 'Clinic Management', text: 'Clinic Management' }\n]\n\nexport default function FieldMapper (props) {\n  // Variables\n  const { sources = dropdown_source, targets = dropdown_target, claimSources = claim_sources } = props\n\n  // Services\n  const { ApiService } = props\n\n  // Callbacks\n  const { onSaveSuccess } = props\n  const { onChangeHeaderInputs } = props\n  const { onChangeClaimTypeDataMapping } = props\n\n  // Local Variables\n  const [facilityTemplate, setFacilityTemplate] = React.useState({\n    facility_id: '',\n    facility_name: '',\n    claim_source: ''\n  })\n  const [template, setTemplate] = React.useState({\n    id: '',\n    name: '',\n    isDefault: false,\n    fields: []\n  })\n\n  const [templates, setTemplates] = React.useState([])\n\n  const [suggestions, setSuggestions] = React.useState({\n    facility: {}\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null\n  })\n\n  const [dialog, setDialog] = React.useState({\n    show: false,\n    name: '',\n    isDefault: false,\n    error: {}\n  })\n\n  const [alertDialog, setAlertDialog] = React.useState({\n    show: false,\n    mesage: '',\n    okLabel: 'Okay'\n  })\n\n  // Listeners\n  React.useEffect(() => {\n    getTemplates()\n  }, [])\n\n  React.useEffect(() => {\n    onChangeHeaderInputs(facilityTemplate)\n  }, [facilityTemplate])\n\n  React.useEffect(() => {\n    onChangeClaimTypeDataMapping(template.fields)\n  }, [template])\n\n  // Fetchers\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            setSuggestions(state => ({ ...state, facility: { [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getTemplates = () => {\n    ApiService.getTemplates().then(res => {\n      const { data } = res.data\n      setTemplates(data.map(data => ({ ...data, value: data.name, text: data.name })))\n      const _default = data.find(d => d.is_default === true)\n      if (_default) {\n        setTemplate({ id: _default._id, name: _default.name, fields: _default.fields, isDefault: _default.is_default })\n      }\n    })\n  }\n\n  // Events\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    setFacilityTemplate(state => ({ ...state, [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.facility.data) {\n        if (value === i.id || value === i.name) {\n          setFacilityTemplate(state => ({ ...state, facility_id: i.id, facility_name: i.name }))\n        }\n      }\n    } else {\n      setSuggestions(state => ({ ...state, facility: [] }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const handleOnClickAddNewTemplate = () => {\n    setDialog({ show: true, name: '', isDefault: false, error: {} })\n  }\n\n  const handleOnChangeTemplate = ({ value, text }) => {\n    const _template = templates.find(t => t.value === value)\n    setTemplate({ id: _template._id, name: _template.name, fields: _template.fields, isDefault: _template.is_default })\n  }\n\n  const handleOnChangeDialog = ({ field, value }) => {\n    setDialog(state => ({ ...state, [field]: value }))\n  }\n\n  const onClickAddField = () => {\n    const _fields = template.fields\n    const last = _fields[_fields.length - 1]\n    if (last && (last.source === '' || last.target === '')) return\n    _fields.push({ source: '', target: '' })\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onRemoveField = ({ index }) => {\n    const _fields = template.fields\n    _fields.splice(index, 1)\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onChangeSource = ({ index, value }) => {\n    const _fields = template.fields\n    _fields[index] = { ..._fields[index], source: value }\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onChangeTarget = ({ index, value }) => {\n    const _fields = template.fields\n    _fields[index] = { ..._fields[index], target: value }\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const doValidateTemplate = () => {\n    if (dialog.name === '') return false\n\n    return true\n  }\n\n  const doValidateFacilityTemplate = () => {\n    if (template.fields.length < 1) return false\n    template.fields.forEach(field => {\n      if (field.source === '' || field.target === '') {\n        return false\n      }\n    })\n\n    return true\n  }\n\n  const handleOnSaveTemplateDialog = () => {\n    if (!doValidateTemplate()) {\n      setAlertDialog({\n        show: true,\n        message: 'Enter Template Name',\n        okLabel: 'Okay'\n      })\n      return\n    }\n\n    ApiService.storeTemplate({\n      data: { is_default: dialog.isDefault, fields: [] },\n      template_name: dialog.name\n    }).then(res => {\n      const { data } = res.data\n      setDialog({\n        show: false,\n        name: '',\n        isDefault: false,\n        error: {}\n      })\n      getTemplates()\n      setTemplate({ id: data._id, name: data.name, isDefault: data.is_default, fields: data.fields })\n    })\n  }\n\n  const handleOnSaveFacilityTemplate = () => {\n    if (!doValidateFacilityTemplate()) {\n      setAlertDialog({\n        show: true,\n        message:\n          'SOA details and mapping of data is required. Please complete first the SOA details and mapping of data to continue.',\n        okLabel: 'Okay'\n      })\n      return\n    }\n\n    ApiService.storeTemplate({\n      data: { is_default: template.isDefault, fields: template.fields },\n      template_name: template.name\n    }).then(res => {\n      const { data } = res.data\n      ApiService.storeFacilityTemplate({\n        data: {\n          facility_name: facilityTemplate.facility_name,\n          claim_source: facilityTemplate.claim_source,\n          template_id: data._id\n        },\n        facility_id: facilityTemplate.facility_id\n      }).then(res => {\n        setAlertDialog({\n          show: true,\n          message: 'SOA details mapping of data successfully saved.',\n          okLabel: 'Okay'\n        })\n        onSaveSuccess({ template, facility: facilityTemplate })\n      })\n    })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <AutoComplete\n              id='medical-partner-id'\n              required\n              label='Medical Partner ID'\n              value={facilityTemplate.facility_id}\n              suggestions={suggestions.facility.id}\n              onChange={(value, isSuggestionClick) =>\n                handleOnChangeFacility({\n                  field: 'facility_id',\n                  value,\n                  isSuggestionClick\n                })\n              }\n            />\n          </div>\n          <div className={classes['input']}>\n            <AutoComplete\n              id='medical-partner-facility-name'\n              required\n              label='Medical Partner (Facility) Name'\n              value={facilityTemplate.facility_name}\n              suggestions={suggestions.facility.name}\n              onChange={(value, isSuggestionClick) =>\n                handleOnChangeFacility({\n                  field: 'facility_name',\n                  value,\n                  isSuggestionClick\n                })\n              }\n            />\n          </div>\n          <div className={classes['input']}>\n            <DropDown\n              id='claim-source'\n              label='Claim Source'\n              required\n              items={claimSources}\n              value={facilityTemplate.claim_source}\n              onChange={event => setFacilityTemplate(state => ({ ...state, claim_source: event.target.value }))}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <Typography variant='h6' className={classes.title}>\n            Data Values\n          </Typography>\n        </div>\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <DropDown\n              id='data-templates'\n              label='Data Mapping Template'\n              required\n              items={templates}\n              value={template.name}\n              onChange={event =>\n                event.target.value !== 'add-new'\n                  ? handleOnChangeTemplate({ value: event.target.value, text: event.target.text })\n                  : handleOnClickAddNewTemplate()\n              }\n              addNew={{\n                show: true,\n                text: '+ Add New Data Map',\n                value: 'add-new'\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <div className={classes.field}>\n            <div className={classes.label}>\n              <Typography>Claim Type</Typography>\n            </div>\n            <div className={classes.table}>\n              <DataPairContainer\n                headers={['Values', 'Data Column']}\n                sources={sources}\n                targets={targets}\n                fields={template.fields}\n                onClickAddNew={() => onClickAddField()}\n                onClickRemove={({ index }) => onRemoveField({ index })}\n                onChangeSource={({ index, value }) => onChangeSource({ index, value })}\n                onChangeTarget={({ index, value }) => onChangeTarget({ index, value })}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={classes.groups}>\n          <Button\n            id='save'\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            onClick={handleOnSaveFacilityTemplate}\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n      <Dialog\n        fullWidth\n        maxWidth='sm'\n        onClose={() => setDialog(state => ({ ...state, show: false }))}\n        aria-labelledby='customized-dialog-title'\n        open={dialog.show}\n        className={classes.dialog}\n        PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <Typography variant='h6' className={classes.title}>\n              Define Data Map\n            </Typography>\n            <IconButton\n              aria-label='close'\n              className={classes.button}\n              onClick={() => setDialog(state => ({ ...state, show: false }))}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers className={classes.content}>\n          <div className={classes.input}>\n            <TextField\n              className={classes.name}\n              id='data-map-name'\n              value={dialog.name}\n              autoFocus\n              fullWidth\n              placeholder='Template Name'\n              onChange={event => handleOnChangeDialog({ field: 'name', value: event.target.value })}\n              error={dialog.error.name}\n            />\n          </div>\n          <div className={classes.input}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  className={classes.default}\n                  id='data-map-default'\n                  checked={dialog.isDefault}\n                  value={dialog.isDefault}\n                  onChange={event => handleOnChangeDialog({ field: 'isDefault', value: event.target.checked })}\n                />\n              }\n              label={'Set as default template'}\n            />\n          </div>\n          <div className={classes.footer}>\n            <div className={classes.action}>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, show: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={handleOnSaveTemplateDialog}\n                variant='contained'\n                color='primary'\n                className='button-positive'\n              >\n                Save\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      <Alert\n        open={alertDialog.show}\n        message={alertDialog.message}\n        okLabel={alertDialog.okLabel}\n        onOk={() => {\n          setAlertDialog(state => ({ ...state, show: false }))\n        }}\n      />\n    </Paper>\n  )\n}\n","import React, { Fragment } from 'react'\n// import Grid from '@material-ui/core/Grid'\n// import Paper from '@material-ui/core/Paper'\n// import moment from 'moment'\nimport Button from '@material-ui/core/Button'\n// import Typography from '@material-ui/core/Typography'\n\n// Controller\nimport SoaEtlController from 'Controllers/SoaEtlController'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport UploadSpace from './Components/UploadSpace/UploadSpace'\nimport DynamicTable from './Components/DynamicTable/DynamicTable'\nimport FieldMapper from '../../FieldMapper/FieldMapper'\n// import CustomTextField from 'SharedComponents/TextField/CustomTextField'\n// import DatePicker from 'SharedComponents/DatePicker/DatePicker'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n// import TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n// import Alert from 'SharedComponents/Alert/Alert'\n\n// // Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// Style\nimport classes from './UploadSoaPage.module.scss'\nimport claimTypes from 'Constant/claimTypes'\n\nexport default function UploadSoaPage (props) {\n  const { ApiService } = props\n  const [data, setData] = React.useState()\n  const [headerInputs, setHeaderInputs] = React.useState({})\n  const [claimTypeValues, setClaimTypeValues] = React.useState([])\n  const [openAlert, setOpenAlert] = React.useState({})\n  const [dataRows, setDataRows] = React.useState([])\n\n  React.useEffect(() => {\n    PageTitleService(`Upload SOA File`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'uploadSoa'])\n  }, [])\n\n  const handleOnSelectFile = data => setData(data)\n\n  const handleOnRemoveFile = () => setData()\n\n  const handleOnCancelUpload = () => setData()\n\n  const handleProceedUpload = () => {\n    if (!claimTypeValues || claimTypeValues.length === 0) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Data Mapping'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.facility_id) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Medical Partner ID'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.facility_name) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Medical Partner Name'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.claim_source) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Claim Source'\n      }))\n      return\n    }\n\n    LoadingService.loading(true)\n\n    // Construct data mapping for Transformation\n    const claimTypeMap = {}\n    claimTypeValues.forEach(element => {\n      claimTypeMap[element.source] = element.target\n    })\n\n    const dataMapping = {\n      columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n      fields: {\n        [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: claimTypeMap\n      }\n    }\n\n    // Construct defaults for Transformation\n    const defaults = {\n      [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE]: headerInputs.claim_source,\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE]: headerInputs.facility_id,\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]: headerInputs.facility_name\n    }\n\n    // Invoke transformation\n    const bundle = SoaEtlController.transform(dataRows, dataMapping, defaults)\n\n    const onSuccess = function () {\n      // alert('SOA Upload successful')\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'SOA Upload successful'\n      }))\n\n      handleOnCancelUpload()\n    }\n\n    // Invoke loading unto Claims API\n    SoaEtlController.loadToApi(bundle, onSuccess)\n      .then(() => {\n        onSuccess()\n        LoadingService.loading(false)\n      })\n      .catch(() => {\n        LoadingService.loading(false)\n        setOpenAlert(state => ({\n          ...state,\n          show: true,\n          message: 'SOA Upload failed'\n        }))\n      })\n  }\n\n  const handleOnClose = () => {\n    setOpenAlert(state => ({\n      ...state,\n      show: false\n    }))\n  }\n\n  const handleOnCancel = () => {\n    handleOnCancelUpload()\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {SoaEtlController.DEBUG && (\n        <Button\n          variant='contained'\n          color='primary'\n          className='button-negative'\n          id='test-etl'\n          onClick={SoaEtlController.test}\n        >\n          Test ETL\n        </Button>\n      )}\n\n      {!data && <UploadSpace onSelectFile={handleOnSelectFile} />}\n\n      {data && (\n        <DynamicTable\n          data={data}\n          onRemoveFile={handleOnRemoveFile}\n          onDetectDataRows={dataRows => {\n            setDataRows(dataRows)\n          }}\n        />\n      )}\n\n      {data && (\n        <Fragment>\n          <FieldMapper\n            ApiService={ApiService}\n            onSaveSuccess={({ template, facility }) => {\n              console.log('Field Mapper Saved!', { template, facility })\n            }}\n            onChangeHeaderInputs={headerInputs => {\n              setHeaderInputs(headerInputs)\n            }}\n            onChangeClaimTypeDataMapping={fields => {\n              setClaimTypeValues(fields)\n            }}\n          />\n\n          {/* TODO: replace evil quick-fix */}\n          <br />\n\n          <div align='right'>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              id='cancel-upload'\n              onClick={handleOnCancel}\n            >\n              Cancel\n            </Button>\n            {/* TODO: replace evil quick-fix */}\n            &nbsp; &nbsp;\n            <Button\n              id='proceed-upload'\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={handleProceedUpload}\n            >\n              Upload\n            </Button>\n          </div>\n        </Fragment>\n      )}\n\n      <Alert open={openAlert.show} message={openAlert.message} okLabel='Close' onOk={handleOnClose} />\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Component\nimport { Typography } from '@material-ui/core'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Footer.module.scss'\n\nexport default function ClaimsUtilLedgerReport (props) {\n  const { username, total = {} } = props\n\n  // TODO For refactoring :(( )\n  return (\n    <div className={classes.footer}>\n      <hr />\n      <div className={classes.total}>\n        <div className={classes['total-row']}>\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL AMOUNT: ${CurrencyFormatter(total.amount)}`}</p>\n          </div>\n\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL AR: ${CurrencyFormatter(total.ar_amount)}`}</p>\n          </div>\n        </div>\n      </div>\n      <div className={classes['all-signatories']}>\n        <div className={classes.signatories}>\n          <Typography>Transmitted by: </Typography>\n          <Typography className={classes.username}>{username}</Typography>\n        </div>\n        <div className={classes.signatories}>\n          <Typography>Noted by: </Typography>\n          <div className={classes['line-note']} />\n        </div>\n        <div className={classes.signatories}>\n          <Typography>Received by: </Typography>\n          <div className={classes['line-received']} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/x/cc')\n\nexport default class CustomerCareServices {\n  static getMember ({ account_number }) {\n    return axios({\n      url: `/member`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { account_number }\n    })\n  }\n\n  static getClient ({ account_number }) {\n    return axios({\n      url: `/client`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { account_number }\n    })\n  }\n\n  static getMemberUtilizationLoa ({ account_number }) {\n    return axios({\n      url: `/members/${account_number}/utilization-loa`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // PRO User lookup\n  static proUsersLookup ({ value, field }) {\n    return axios({\n      url: '/users/pro',\n      method: 'GET',\n      params: { [field]: value }\n    })\n  }\n\n  static getMemberContract ({ mct_id }) {\n    return axios({\n      url: `/member/contract`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1, Accept: 'application/pdf' },\n      responseType: 'blob',\n      params: { mct_id }\n    })\n  }\n\n  static getClientContract ({ mct_id }) {\n    return axios({\n      url: `/client/contract`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1, Accept: 'application/pdf' },\n      responseType: 'blob',\n      params: { mct_id }\n    })\n  }\n\n  static getClientInfo ({ value, field }) {\n    return axios({\n      url: `/client-info`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { [field]: value }\n    })\n  }\n\n  static getClients ({ where, fields, order, limit, skip, offset }) {\n    return axios({\n      url: `/clients`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { where, fields, order, limit, skip, offset }\n    })\n  }\n\n  static getMembers ({ where, fields, order, limit, skip, offset }) {\n    return axios({\n      url: `/members`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { where, fields, order, limit, skip, offset }\n    })\n  }\n\n  static getClientUtilizationLoa ({ client_account_no }) {\n    return axios({\n      url: `/client/${client_account_no}/utilization-loa`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import instance from './instance'\n// import { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/c')\n\nexport default class ClaimsAdjudicationServices {\n  static utilizationLegder (params) {\n    return axios({\n      url: `/utilization-ledger`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static transmittalReport (params, client) {\n    return axios({\n      url: '/transmittal-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getTransmittalReportPdf (params) {\n    return axios({\n      url: '/transmittal-report/reports',\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' },\n      params\n    })\n  }\n\n  static utilizationClient (params) {\n    return axios({\n      url: '/utilization-ledger/client',\n      method: 'GET',\n      params\n    })\n  }\n\n  static utilizationClientTable (params) {\n    return axios({\n      url: '/utilization-ledger/client/table',\n      method: 'GET',\n      params\n    })\n  }\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/md')\n\nexport default class MedicalConsultantServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static inquire ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/inquire`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import MedicalConsultantServices from './MedicalConsultantServices'\nimport instance from './instance'\nconst axios = instance('/client')\n\nexport default class UserManagementServices {\n  static getUsers (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getUsersByRole (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getClaimsVerifierSupervisors () {\n    return this.getUsers('CLAIMS_VERIFIER_SUPERVISOR')\n  }\n\n  static getClaimsAnalyst () {\n    return this.getUsers('CLAIMS_ANALYST')\n  }\n\n  static getUserById (id) {\n    return axios({\n      url: `http://18.138.94.224:4101/api/users/${id}`,\n      method: 'GET'\n    })\n  }\n}\n","import FileSaver from 'file-saver'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\nexport default function Download ({ fileName = 'CSV', header = [], rows = [], extension = 'csv', statics = [] }) {\n  const valueSeperator = ','\n  const newLine = '\\r\\n'\n  const [c_header = [], c_footer = []] = statics\n\n  const _rows = [\n    ...c_header,\n    header.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(valueSeperator), '').slice(1),\n    newLine,\n    ...rows.map(row =>\n      [\n        row.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(valueSeperator), '').slice(1),\n        newLine\n      ].join('')\n    ),\n    ...c_footer\n  ]\n  const blob = new Blob(_rows, { type: 'data:text/csv;charset=utf-8' })\n  FileSaver.saveAs(blob, `${fileName}.${extension}`)\n}\n","export default {\n  header: ['Company:', 'Account No.:', 'Contract:', 'Date:'],\n  footer: ['Total', 'Transmitted by:', 'Noted by:', 'Received by:']\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport PrintIcon from '@material-ui/icons/Print'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Components\nimport Footer from './Footer/Footer'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { staticHeaderFooter } from './helper/staticHeaderFooter'\n\n// Styles\nimport classes from './TransmittalReport.module.scss'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { initSuggestions, resetSuggestionObject, setSuggestionObject } = actions\n\nconst columns = [\n  { label: 'NO.', sortField: 'number', sort: false, align: 'left', class: 'h_no' },\n  { label: 'LOA NO.', sortField: 'latest.loa_number', sort: true, align: 'left', class: 'h_loa' },\n  { label: 'DATE', sortField: 'status_date', sort: true, align: 'left', class: 'h_date' },\n  { label: 'MEMBER', sortField: 'latest.member.last_name', sort: true, align: 'left', class: 'h_member' },\n  { label: 'AMOUNT', sortField: 'total_amount', sort: false, align: 'right', class: 'h_amount' },\n  { label: 'AR', sortField: 'total_due_from_member', sort: false, align: 'right', class: 'h_ar' }\n]\n\nexport default function TransmittalReport (props) {\n  const dispatch = useDispatch()\n\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n\n  const [claims, setClaims] = React.useState({\n    raw: [],\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    orderBy: 'loa_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [client, setClient] = React.useState({\n    registered_name: '',\n    corporate_account_no: ''\n  })\n\n  const [returnClient, setReturnClient] = React.useState({})\n\n  const [total, setTotal] = React.useState({\n    amount: 0,\n    ar_amount: 0\n  })\n\n  const [username, setUsername] = React.useState('')\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    PageTitleService('Transmittal Report')\n    BreadcrumbsService.setSelectedItems(['transmittal'])\n\n    // TODO is this right?\n    const _id = localStorage.getItem('user_id')\n    UserManagementServices.getUserById(_id).then(res => {\n      const { username = '' } = res.data\n      setUsername(username)\n    })\n  }, [])\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleClientOnChange = ({ value, field, isSuggestionClick }) => {\n    setClient(state => ({ ...state, [field]: value }))\n    if (isSuggestionClick) {\n      for (const i of suggestions.client.data) {\n        if (value === i.registered_name || value === i.corporate_account_no) {\n          dispatch(resetSuggestionObject({ field: 'client' }))\n          setClient(state => ({\n            ...state,\n            registered_name: i.registered_name,\n            corporate_account_no: i.corporate_account_no\n          }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'client' }))\n      getClientSuggestions({ value, field })\n    }\n  }\n\n  const getClientSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          CustomerCareServices.getClientInfo({ value, field }).then(res => {\n            const { data = [] } = res.data\n\n            const item = []\n            for (const d of data) {\n              item.push(d[field])\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'client',\n                suggestion: { [field]: item, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const fetchTransmittalItems = params => {\n    if (client.registered_name === '' || client.corporate_account_no === '') {\n      return setClaims(state => ({ ...state, data: [] }))\n    }\n\n    ClaimsServices.transmittalReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      client\n    }).then(res => {\n      const { results = [], raw = [], count, limit, page, client = {} } = res.data.data\n      const _totam_amout = raw.reduce((a, c) => a + c.total_amount, 0)\n      const _ar_amount = raw.reduce((a, c) => a + c.total_due_from_member, 0)\n\n      setReturnClient(client)\n      setClaims(state => ({ ...state, data: results, raw, count, page, limit }))\n      setTotal(state => ({\n        ...state,\n        amount: !_totam_amout <= 0 ? _totam_amout : 0,\n        ar_amount: !_ar_amount <= 0 ? _ar_amount : 0\n      }))\n    })\n  }\n\n  const handleOnPaginate = args => {\n    const params = {\n      ...claims,\n      ...args\n    }\n\n    setClaims(state => ({ ...state, ...args }))\n    fetchTransmittalItems(params)\n  }\n\n  const handlePrintReport = params => {\n    if (!claims.data.length) return\n\n    PdfViewer2Service({\n      name: 'Transmittal Report',\n      fileName: 'transmittal_report',\n      service: ClaimsServices.getTransmittalReportPdf({\n        range: params.range,\n        sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n        client\n      }),\n      open: true\n    })\n  }\n\n  const handleGenerateReport = () => {\n    if (!claims.raw.length) return\n\n    const header = columns.map(i => i.label)\n    const rows = []\n\n    claims.raw.forEach(item => {\n      item.member = `${item.member.last_name}, ${item.member.first_name} ${item.member.middle_name}`\n      item.date = DateFormatter(item.date)\n      rows.push(Object.values(item))\n    })\n\n    const statics = staticHeaderFooter({ ...returnClient, ...total, username })\n\n    ArrayToCSV({ fileName: `${client.registered_name} Transmittal Report`, header, rows, statics })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes['search-header']}>\n          <div className={classes['search-header-child']}>\n            <div className={classes.column}>\n              <Typography variant='h6'>Company:</Typography>\n            </div>\n            <div className={classes.column}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by company name'\n                  id='company-name'\n                  value={client.registered_name}\n                  suggestions={suggestions.client.registered_name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleClientOnChange({\n                      field: 'registered_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n          <div className={classes['search-header-child']}>\n            <div className={classes.column}>\n              <Typography variant='h6'>Account No.:</Typography>\n            </div>\n            <div className={classes.column}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by account number'\n                  id='account-number'\n                  value={client.corporate_account_no}\n                  suggestions={suggestions.client.corporate_account_no}\n                  onChange={(value, isSuggestionClick) =>\n                    handleClientOnChange({\n                      field: 'corporate_account_no',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range: </Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={event =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: DateFormatter(event)\n                    }\n                  }))\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={event =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: DateFormatter(event)\n                    }\n                  }))\n                }\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => fetchTransmittalItems(claims)}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='print-report' onClick={() => handlePrintReport(claims)} disabled={!claims.data.length}>\n              <PrintIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Print Report\n              </Typography>\n            </Button>\n            <Button id='generate-report' onClick={() => handleGenerateReport()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <TableSortLabel\n                        active={claims.orderBy === headCell.sortField}\n                        direction={claims.order ? 'asc' : 'desc'}\n                        onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n                      >\n                        {headCell.label}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell align='left'>{item.no}</TableCell>\n                    <TableCell className={classes.left} align='left'>\n                      {item.loa_number}\n                    </TableCell>\n                    <TableCell className={classes.left} align='left'>\n                      {DateFormatter(item.date)}\n                    </TableCell>\n                    <TableCell\n                      className={classes.member}\n                      align='left'\n                    >{`${item.member.last_name}, ${item.member.first_name} ${item.member.middle_name}`}</TableCell>\n                    <TableCell className={classes.right} align='right'>\n                      {CurrencyFormatter(!item.total_amount <= 0 ? item.total_amount : 0)}\n                    </TableCell>\n                    <TableCell className={classes.right} align='right'>\n                      {CurrencyFormatter(!item.total_due_from_member <= 0 ? item.total_due_from_member : 0)}\n                    </TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n          <Footer username={username} total={total} />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import constants from './constants'\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport moment from 'moment'\n\nexport const staticHeaderFooter = args => {\n  const { registered_name, corporate_account_no, contracts = [], amount, ar_amount, username } = args\n\n  const static_header = constants.header.map(i => {\n    switch (i) {\n      case 'Company:':\n        return [i, registered_name, '\\r\\n']\n      case 'Account No.:':\n        return [i, corporate_account_no, '\\r\\n']\n      case 'Contract:':\n        return [i, contracts.length, '\\r\\n']\n      case 'Date:':\n        return [i, `${DateFormatter(new Date())} ${moment().format('LTS')}`, '\\r\\n']\n    }\n  })\n\n  const static_footer = constants.footer.map(i => {\n    switch (i) {\n      case 'Total':\n        return ['', '', '', i, amount, ar_amount, '\\r\\n']\n      case 'Transmitted by:':\n        return [i, username, '\\r\\n']\n      case 'Noted by:':\n        return [i, '--', '\\r\\n']\n      case 'Received by:':\n        return [i, '--', '\\r\\n']\n    }\n  })\n\n  return [\n    [...static_header, '\\r\\n'],\n    ['\\r\\n', ...static_footer]\n  ]\n}\n","// Received Path as Array\n// Received Path as String\n\nconst SafeAccess = (value, path, def = undefined, delimeter = '.') => {\n  if (typeof path === 'object') {\n    return path.reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), value) || def\n  } else if (typeof path === 'string') {\n    return (\n      path.split(delimeter).reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), value) || def\n    )\n  }\n} // pass in your object structure as array elements\n\nexport { SafeAccess }\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './ClaimsUtilLedgerReport.module.scss'\n\nconst columns0 = [\n  { label: 'Claim No.', data: 'claim_number', search: true, match: 'any' },\n  { label: 'Approval Code', data: 'approval_code', search: true, match: 'start' },\n  { label: 'Claim ID', data: 'claim_number', search: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, match: 'any' },\n  { label: 'Client ID', data: 'client_id', search: true, match: 'any' },\n  { label: 'Client Name', data: 'client_name', search: true, match: 'any' },\n  { label: 'Contract ID', data: 'contract_id', search: true, match: 'any' },\n  { label: 'Company Name', data: 'company_name', search: true, match: 'any' },\n  { label: 'Date Admitted', type: 'date', data: 'date_admitted', search: true, match: 'date' },\n  { label: 'Date Discharged', type: 'date', data: 'date_discharged', search: true, match: 'date' },\n  { label: 'Date Issued', type: 'date', data: 'date_issued', search: true, match: 'date' },\n  { label: 'Diagnosis Description', data: 'diagnosis', search: true, match: 'any' }\n]\n\nconst completeColumns = [\n  { label: 'Batch No.', data: 'batch_number', search: true, match: 'any' },\n  { label: 'Claim No.', data: 'claim_number', search: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, match: 'any' },\n  { label: 'Approval Code', data: 'approval_code', search: true, match: 'start' },\n  { label: 'Loa No.', data: 'loa_number', search: true, match: 'any' },\n  { label: 'Claim Source', data: 'claim_source', search: true, match: 'any' },\n  { label: 'Member Account No.', data: 'member_account_number', search: true, match: 'any' },\n  { label: 'Member Last Name', data: 'member_last_name', search: true, match: 'any' },\n  { label: 'Member First Name', data: 'member_first_name', search: true, match: 'any' },\n  { label: 'Member Middle Name', data: 'member_middle_name', search: true, match: 'any' },\n  { label: 'Client Account Number', data: 'client_account_number', search: true, match: 'any' },\n  { label: 'Client Account Name', data: 'client_name', search: true, match: 'any' },\n  { label: 'Customer (Company) Account Number', data: 'customer_company_account_number', search: true, match: 'any' },\n  { label: 'Company Name', data: 'company_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID', data: 'facility_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Facility) Name', data: 'facility_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID', data: 'doctor_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Doctor) Name', data: 'doctor_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID (Anesthesiologist)', data: 'anesthesiologist_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Anesthesiologist) Name', data: 'anesthesiologist_name', search: true, match: 'any' },\n  { label: 'Admission (From)', type: 'date', data: 'date_admission_from', search: true, match: 'date' },\n  { label: 'Admission (To)', type: 'date', data: 'date_admission_to', search: true, match: 'date' },\n  { label: 'Date of Service', type: 'date', data: 'date_service', search: true, match: 'date' },\n  { label: 'Date of Service (From)', type: 'date', data: 'date_service_from', search: true, match: 'date' },\n  { label: 'Date of Service (To)', type: 'date', data: 'date_service_to', search: true, match: 'date' },\n  { label: 'Contract Year (From)', type: 'date', data: 'contract_from', search: true, match: 'date' },\n  { label: 'Contract Year (To)', type: 'date', data: 'contract_to', search: true, match: 'date' },\n  { label: 'Department', data: 'department', search: true, match: 'any' },\n  { label: 'Recommendation', data: 'recommendation', search: true, match: 'any' },\n  { label: 'Room Type', data: 'room_type', search: true, match: 'any' },\n  { label: 'Room Rate', data: 'room_rate', search: true, match: 'exact' },\n  { label: 'PRO ID', data: 'pro_id', search: true, match: 'any' },\n  { label: 'PRO Name', data: 'pro_name', search: true, match: 'any' },\n  { label: 'Claim Sub Type', data: 'claim_sub_type', search: true, match: 'any' },\n  { label: 'Claim Sub-sub Type', data: 'claim_sub_sub_type', search: true, match: 'any' },\n  { label: 'With Corporate Guaranty', data: 'with_corporate_guaranty', search: true, match: 'any' },\n  { label: 'Medicine Category', data: 'medicine_category', search: true, match: 'any' },\n  { label: 'Reimbursement Type', data: 'reimbursement_type', search: true, match: 'any' },\n  { label: 'Reimbursement Category', data: 'reimbursement_category', search: true, match: 'any' },\n  { label: 'Official Receipt Number', data: 'receipt_number', search: true, match: 'any' },\n  { label: 'APE/PPE Package/s', data: 'ape_ppe_packages', search: true, match: 'any' },\n  { label: 'ICD10 Description', type: 'array', data: 'diagnosis.description', search: true, match: 'any' },\n  { label: 'ICD10 Code', type: 'array', data: 'diagnosis.code', search: true, match: 'any' },\n  { label: 'ICD10 Primary', type: 'array', data: 'diagnosis.primary', search: true, match: 'any' },\n  { label: 'LOA Notes', data: 'loa_notes', search: true, match: 'any' },\n  { label: 'Tooth Number', type: 'array', data: 'dental_procedures.tooth_number', search: true, match: 'exact' },\n  { label: 'Procedure Name', type: 'array', data: 'procedures.description', search: true, match: 'any' },\n  { label: 'CPT Code', type: 'array', data: 'procedures.code', search: true, match: 'any' },\n  { label: '(Procedures) Gross Amount', type: 'array', data: 'procedures.gross_amount', search: true, match: 'exact' },\n  { label: '(Procedures) Vat Amount', type: 'array', data: 'procedures.vat_amount', search: true, match: 'exact' },\n  {\n    label: '(Procedures) Amount Paid by Member',\n    type: 'array',\n    data: 'procedures.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'procedures.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) PhilHealth Remarks',\n    type: 'array',\n    data: 'procedures.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Procedures) Amount not Covered',\n    type: 'array',\n    data: 'procedures.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Procedures) Reason', type: 'array', data: 'procedures.reason', search: true, match: 'any' },\n  {\n    label: '(Procedures) Amount due From Member',\n    type: 'array',\n    data: 'procedures.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) Reason for Charging Member',\n    type: 'array',\n    data: 'procedures.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Hospital Item Name', type: 'array', data: 'hospital_items.name', search: true, match: 'any' },\n  { label: 'Item Code', type: 'array', data: 'hospital_items.item_code', search: true, match: 'any' },\n  {\n    label: '(Hospital Items) Gross Amount',\n    type: 'array',\n    data: 'hospital_items.gross_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Vat Amount',\n    type: 'array',\n    data: 'hospital_items.vat_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Amount Paid by Member',\n    type: 'array',\n    data: 'hospital_items.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'hospital_items.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) PhilHealth Remarks',\n    type: 'array',\n    data: 'hospital_items.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Hospital Items) Amount not Covered',\n    type: 'array',\n    data: 'hospital_items.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Hospital Items) Reason', type: 'array', data: 'hospital_items.reason', search: true, match: 'any' },\n  {\n    label: '(Hospital Items) Amount due From Member',\n    type: 'array',\n    data: 'hospital_items.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Reason for Charging Member',\n    type: 'array',\n    data: 'hospital_items.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Medical Partner ID', type: 'array', data: 'professional_fees.doctor_id', search: true, match: 'any' },\n  { label: 'Doctor Name', type: 'array', data: 'professional_fees.doctor_name', search: true, match: 'any' },\n  { label: 'Specialization', type: 'array', data: 'professional_fees.specialization', search: true, match: 'any' },\n  {\n    label: '(Professional Fee) Gross Amount',\n    type: 'array',\n    data: 'professional_fees.gross_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Vat Amount',\n    type: 'array',\n    data: 'professional_fees.vat_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Amount Paid by Member',\n    type: 'array',\n    data: 'professional_fees.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'professional_fees.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) PhilHealth Remarks',\n    type: 'array',\n    data: 'professional_fees.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Professional Fee) Amount not Covered',\n    type: 'array',\n    data: 'professional_fees.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Professional Fee) Reason', type: 'array', data: 'professional_fees.reason', search: true, match: 'any' },\n  {\n    label: '(Professional Fee) Amount due From Member',\n    type: 'array',\n    data: 'professional_fees.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Reason for Charging Member',\n    type: 'array',\n    data: 'professional_fees.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n  { label: 'Claim Remarks', data: 'claim_remarks', search: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ClaimsUtilLedgerReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange, refresh } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'status_date'\n    },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  // const [allClaims, setAllClaims] = React.useState({\n  //   data: [],\n  //   columns: columns.map(value => ({\n  //     name: value.name,\n  //     type: value.type\n  //   }))\n  // })\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchLedger = () => {\n    console.log(claims)\n    ClaimsServices.utilizationLegder({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _claims = results.map(claim => ({\n        ...claim,\n        date_admission_from: DateFormatter(claim.date_admission_from),\n        date_admission_to: DateFormatter(claim.date_admission_to),\n        date_service: DateFormatter(claim.date_service),\n        date_service_from: DateFormatter(claim.date_service_from),\n        date_service_to: DateFormatter(claim.date_service_to),\n        contract_from: DateFormatter(claim.contract_from),\n        contract_to: DateFormatter(claim.contract_to)\n        // date_admission_from: DateFormatter(claim.date_admitted),\n        // date_discharged: DateFormatter(claim.date_discharged),\n        // date_issued: DateFormatter(claim.date_issued),\n        // diagnosis: claim.diagnosis && claim.diagnosis.length > 0 ? claim.diagnosis.shift().description : null\n      }))\n      setClaims(state => ({ ...state, data: _claims, count }))\n    })\n  }\n\n  const fetchCSV = () => {\n    ClaimsServices.utilizationLegder({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _claims = results.map(claim => ({\n        ...claim,\n        date_admission_from: DateFormatter(claim.date_admission_from),\n        date_admission_to: DateFormatter(claim.date_admission_to),\n        date_service: DateFormatter(claim.date_service),\n        date_service_from: DateFormatter(claim.date_service_from),\n        date_service_to: DateFormatter(claim.date_service_to),\n        contract_from: DateFormatter(claim.contract_from),\n        contract_to: DateFormatter(claim.contract_to)\n      }))\n\n      const rows = _claims.map(claim => {\n        return columns.map(col => {\n          if (col.type === 'array') console.log(formatData({ type: col.type, source: claim, field: col.data }))\n          return formatData({ type: col.type, source: claim, field: col.data })\n        })\n      })\n      // console.log(rows)\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Utilization Ledger Report', header, rows })\n    })\n  }\n\n  React.useEffect(() => {\n    PageTitleService('Utilization Ledger Report')\n    BreadcrumbsService.setSelectedItems(['reports'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchLedger()\n    // claim.range is triggered manually via Filter button\n  }, [props.refresh, claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <Typography variant='h6'>Utilization Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={event =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: DateFormatter(event)\n                    }\n                  }))\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={event =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: DateFormatter(event)\n                    }\n                  }))\n                }\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => fetchLedger()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: DateFormatter(event),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ca')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/analysis-sheet`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getLetterNotice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // static getDropdown (params) {\n  //   return axios({\n  //     url: '/lookups/dropdown',\n  //     method: 'GET',\n  //     params,\n  //     headers: { [ExcludeErrorConstants['all']]: 1 }\n  //   })\n  // }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/c/cr')\n\nexport default class ClaimsReconServices extends ClaimsAdjudicationServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static inquire ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/inquire`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static reassign ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getClientUtilization ({ client_account_no }) {\n    return axios({\n      url: `/claims/client/${client_account_no}/utilizations`,\n      method: 'GET'\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  static removeClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/destroy`,\n      method: 'DELETE',\n      data: { claim_number }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getTemplates () {\n    return axios({\n      url: `/data-map/templates`,\n      method: 'GET'\n    })\n  }\n\n  static getTemplate ({ template_name }) {\n    return axios({\n      url: `/data-map/templates/${template_name}`,\n      method: 'GET'\n    })\n  }\n\n  static storeTemplate ({ template_name, data }) {\n    return axios({\n      url: `/data-map/templates`,\n      method: 'POST',\n      params: { template_name },\n      data\n    })\n  }\n\n  static getFacilityTemplate ({ facility_id }) {\n    return axios({\n      url: `/data-map/templates/${facility_id}`,\n      method: 'GET'\n    })\n  }\n\n  static storeFacilityTemplate ({ facility_id, data }) {\n    return axios({\n      url: `/data-map/facilities`,\n      method: 'POST',\n      params: { facility_id },\n      data\n    })\n  }\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport Dashboard from './../Components/BatchEncoder/Dashboard/Dashboard'\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\nimport NewBundlePage from './../Components/BatchEncoder/NewBundlePage/NewBundlePage'\nimport UploadSoaPage from './../Components/BatchEncoder/UploadSoaPage/UploadSoaPage'\nimport TransmittalReport from './../Components/TransmittalReport/TransmittalReport'\nimport ClaimsUtilLedgerReport from './../Components/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Reports',\n    icon: 'chart-bar',\n    type: 'popover',\n    child: [\n      { label: 'Generate Utilization Ledger', to: '/util-ledger' },\n      { label: 'Transmittal Report', to: '/transmittal-report' }\n    ]\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  uploadSoa: {\n    text: 'Upload SOA',\n    to: ''\n  },\n  reports: {\n    text: 'Reports'\n  },\n  transmittal: {\n    text: 'Transmittal Report'\n  }\n}\nfunction BatchEncoderRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path='/' exact component={Dashboard} />\n        <Route path='/transmittal-report' exact render={() => <TransmittalReport />} />\n        <Route path='/util-ledger' exact render={() => <ClaimsUtilLedgerReport />} />\n        <Route path='/bundles/:bundle_number/create' exact component={NewBundlePage} />\n        <Route\n          path='/bundles/upload-soa'\n          exact\n          render={props => <UploadSoaPage {...props} ApiService={ClaimsReconServices} />}\n        />\n        <Route path='/bundles/:bundle_number' exact component={BundlePage} />\n      </Switch>\n    </React.Fragment>\n  )\n}\n\nexport default BatchEncoderRoutes\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\nconst columns = [\n  { id: 'encoder-name', name: 'Encoder Name', sortField: 'name' },\n  { id: 'total-bundle', name: 'Total Bundle', sortField: 'total_bundle' },\n  { id: 'total-batch', name: 'Total Batch', sortField: 'total_batch' }\n]\n\nconst BatchAndEncoderTile = props => {\n  const { services, sizes } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'name',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBatchEncoderWork({ category: 'created', limit: 10, sort: 'name|asc' }),\n      services.getBatchEncoderWorkCount()\n    ]).then(values => {\n      const [batchEncoders, count] = values\n      setItems({ data: batchEncoders.data.data.results, count: count.data.data })\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Bundle and Batch Encoder' })\n    services.getBatchEncoderWork({ limit: 10, sort: 'name|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getBatchEncoderWork(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'bundle-and-batch-encoder-count' }}\n        sizes={sizes}\n        title='Bundle and Batch Encoder'\n        id='bundle-and-batch-encoder'\n        isFilterShown={false}\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='bundle-and-batch-encoder-view-list'\n          >\n            View List\n          </Typography>\n        }\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={item.id} id={item.id}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {items.data.map((item, index) => (\n              <TableRow key={item.user_id}>\n                <TableCell id={`batch-encoder-name-${index}`}>{item.name}</TableCell>\n                <TableCell id={`total-bundle-${index}`}>{item.total_bundle}</TableCell>\n                <TableCell id={`total-batch-${index}`}>{item.total_batch}</TableCell>\n                <TableCell id={`view-work-${index}`}>\n                  <Link to={`/batch-encoder-work/${item.user_id}`}>\n                    <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for encoder name, total bundle or total batch'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.user_id}>\n              <TableCell id={`batch-encoder-name-${index}`}>{item.name}</TableCell>\n              <TableCell id={`total-bundle-${index}`}>{item.total_bundle}</TableCell>\n              <TableCell id={`total-batch-${index}`}>{item.total_batch}</TableCell>\n              <TableCell id={`view-work-${index}`}>\n                <Link to={`/batch-encoder-work/${item.user_id}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nBatchAndEncoderTile.displayName = 'DashboardTileComponent'\n\nexport default BatchAndEncoderTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { name: 'SOA No.', sortField: 'soa_number', match: 'any' },\n  { name: 'Bundle', sortField: 'bundle_number', match: 'any' },\n  { name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst ForReconciliationClaimsTile = props => {\n  const { services, sizes } = props\n  const [claims, setClaims] = React.useState({\n    for_recon: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const [viewList, setViewList] = React.useState({\n    category: 'for-recon',\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true,\n    filter: {}\n  })\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'for-recon',\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getClaimCount({ category: 'for-recon' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, for_recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'for_recon'\n\n    services\n      .getClaims({\n        category,\n        range: value,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    let title = `Claims for Reconciliation`\n    const category = 'for_recon'\n\n    setViewList(p => ({ ...p, show: true, title, category }))\n    services\n      .getClaims({ category, limit: viewList.limit, sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: claims.for_recon.count }}\n        sizes={sizes}\n        title='Claims for Reconciliation'\n        viewList={\n          <Typography id='fr-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map((item, index) => (\n                <TableCell\n                  key={index}\n                  // id={item.id}\n                >\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.for_recon.data.map((item, index) => (\n              <TableRow key={`${item.claim_number}-${index}`}>\n                <TableCell>{item.claim_number}</TableCell>\n                <TableCell>{item.soa.number}</TableCell>\n                <TableCell>{item.bundle_number}</TableCell>\n                <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell>{item.facility.name}</TableCell>\n                <TableCell id={`view-review-${index}`}>\n                  <Link to={`/claims/recon/${item.claim_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                      View Claim\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell>{item.claim_number}</TableCell>\n              <TableCell>{item.soa.number}</TableCell>\n              <TableCell>{item.bundle_number}</TableCell>\n              <TableCell>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell>{item.facility.name}</TableCell>\n              <TableCell id={`view-review-${index}`}>\n                <Link to={`/claims/recon/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                    View Claim\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForReconciliationClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default ForReconciliationClaimsTile\n","import instance from './instance'\n// import { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/bes')\n\nexport default class BatchEncodingSupervisoryServices {\n  static getBatchEncoderWork (params) {\n    return axios({\n      url: '/batch-encoder-work',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchEncoderWorkCount () {\n    return axios({\n      url: '/batch-encoder-work/count',\n      method: 'GET'\n    })\n  }\n\n  static getBundles ({ user_id, params }) {\n    return axios({\n      url: `/batch-encoder-work/${user_id}/bundles`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassignBundles ({ user_id, data }) {\n    return axios({\n      url: `/batch-encoder-work/${user_id}/bundles/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport CreatedBundlesTile from './../../../Components/Tiles/CreatedBundlesTile'\nimport SubmittedBundlesTile from './../../../Components/Tiles/SubmittedBundlesTile'\nimport BatchAndEncoderTile from './../../../Components/Tiles/BatchAndEncoderTile'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\nimport BatchEncodingSupervisoryServices from 'Services/Api/BatchEncodingSupervisoryServices'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 8 }} title='Bundle And Batch Encoding'>\n            <CreatedBundlesTile services={BatchEncodingServices} sizes={{ sm: 6 }} {...props} />\n            <SubmittedBundlesTile services={BatchEncodingServices} sizes={{ sm: 6 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }} title='Items to Monitor'>\n            <BatchAndEncoderTile services={BatchEncodingSupervisoryServices} sizes={{ sm: 6 }} {...props} />\n            <ForReconciliationClaimsTile services={ClaimsReconServices} sizes={{ sm: 6 }} {...props} />\n          </TaskTray>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nexport default function AssignDialog (props) {\n  const { show, setShow, services, onSubmit } = props\n\n  const [reassign, setReassign] = React.useState({})\n  const [showAlert, setShowAlert] = React.useState()\n  const [users, setUsers] = React.useState([])\n\n  const [reassignErrors, setReassignErrors] = React.useState({})\n\n  React.useEffect(() => {\n    setReassign({})\n    setReassignErrors({})\n    setUsers([])\n    setShowAlert()\n\n    if (show) {\n      services.getUsers('BATCH_ENCODER').then(({ data: response }) => {\n        setUsers(\n          response.map(item => ({\n            value: item._id,\n            text: `${item.first_name} ${item.last_name}`\n          }))\n        )\n      })\n    }\n  }, [show])\n\n  const validate = () => {\n    const { error } = ReassignValidator(reassign)\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (!validate()) setShowAlert(true)\n  }\n\n  const handleOnClose = () => {\n    setShow()\n  }\n\n  const handleOnAlertConfirm = () => {\n    setShow()\n    onSubmit({ ...reassign })\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={show || false}\n          onClose={handleOnClose}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                onChange={event => {\n                  const note = event.target.value\n                  setReassign(state => ({\n                    ...state,\n                    note\n                  }))\n                }}\n                id=''\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {users && users.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='dropdown-assign-to'\n                  items={users}\n                  value={reassign.assignee || ''}\n                  error={reassignErrors.assignee}\n                  onChange={event =>\n                    setReassign(state => ({\n                      ...state,\n                      assignee: event.target.value\n                    }))\n                  }\n                  disableComponents={!!(users && users.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button onClick={handleOnClose} variant='contained' color='primary' className='button-negative'>\n                  Cancel\n                </Button>\n                <Button onClick={handleOnSubmit} variant='contained' color='primary' className='button-positive'>\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={showAlert || false}\n          onClose={setShowAlert}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Bundle/SOA to Batch Encoder</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Bundle/SOA to the selected Batch Encoder?\n              </Typography>\n              <Typography variant='body1'>\n                This Bundle/SOA will be sent to the assigned Batch Encoder for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button onClick={() => setShowAlert()} variant='contained' color='primary' className='button-negative'>\n                Cancel\n              </Button>\n              <Button onClick={handleOnAlertConfirm} variant='contained' color='primary' className='button-positive'>\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\n// Shared Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Components\nimport AssignDialog from './Components/AssignDialog/AssignDialog'\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingSupervisoryServices from 'Services/Api/BatchEncodingSupervisoryServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Styles\nimport classes from './CreatedBundlesPage.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columnss = [\n  { id: 'bundle-number', name: 'Bundle/SOA No.', sortField: 'bundle_number', match: 'any' },\n  { id: 'date-received', name: 'Date Received', sortField: 'date_received', match: 'date' },\n  { id: 'date-due', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nexport default function CreatedBundlesPage (props) {\n  const [bundle, setBundle] = React.useState({\n    data: [],\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    orderBy: 'date_due',\n    order: true,\n    filter: {}\n  })\n\n  const [batchEncoderId, setBatchEncoderId] = React.useState()\n  const [openModal, setOpenModal] = React.useState()\n  const [activeAssigning, setActiveAssigning] = React.useState()\n  const [headerCheckBox, setHeaderCheckBox] = React.useState({})\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    const _batchEncoderId = props.match.params.user_id\n    setBatchEncoderId(_batchEncoderId)\n\n    PageTitleService('Created Bundles')\n    // BreadcrumbsService.setSelectedItems(['dashboard', `createdBundles:${_batchEncoderId}`])\n    BreadcrumbsService.setSelectedItems(['dashboard', `createdBundles:${' '}`])\n\n    BatchEncodingSupervisoryServices.getBundles({\n      user_id: _batchEncoderId,\n      params: { limit: 10, sort: `${bundle.orderBy}|${bundle.order ? 'desc' : 'asc'}` }\n    }).then(({ data: response }) => {\n      const { results: data } = response.data\n      setBundle(state => ({ ...state, ...response.data, data }))\n    })\n  }, [])\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setBundle(p => ({ ...p, search }))\n        handleOnViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setBundle(p => ({ ...p, orderBy, order: !bundle.order }))\n    handleOnViewListChange({ sort: `${orderBy}|${bundle.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: bundle.limit,\n      page: bundle.page,\n      search: bundle.search,\n      sort: `${bundle.orderBy}|${bundle.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    BatchEncodingSupervisoryServices.getBundles({\n      user_id: batchEncoderId,\n      params: _params\n    }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setBundle(state => ({ ...state, data: results, count, limit, page }))\n\n      setHeaderCheckBox({})\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnItemSelect = index => {\n    setBundle(state => {\n      const data = state.data\n      data[index].selected = !data[index].selected\n\n      const selectedCount = data.filter(i => i.selected).length\n      setHeaderCheckBox({ checked: !!selectedCount, indeterminate: selectedCount && selectedCount !== data.length })\n\n      return { ...state, data }\n    })\n  }\n\n  const handleOnSelectAllItem = () => {\n    const { checked, indeterminate } = headerCheckBox\n\n    setBundle(state => {\n      return {\n        ...state,\n        data: state.data.map(i => ({\n          ...i,\n          selected: checked && indeterminate ? true : !(checked && !indeterminate)\n        }))\n      }\n    })\n\n    setHeaderCheckBox({ checked: (checked && indeterminate) || !checked })\n  }\n\n  const handleOnSubmit = ({ note, assignee }) => {\n    LoadingService.loading(true)\n\n    const bundle_numbers = []\n    bundle.data.filter(i => i.selected && bundle_numbers.push(i.bundle_number))\n\n    BatchEncodingSupervisoryServices.reassignBundles({\n      user_id: batchEncoderId,\n      data: {\n        note,\n        assignee,\n        bundle_numbers\n      }\n    }).then(res => {\n      handleOnViewListChange({})\n    })\n  }\n\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    setBundle(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnViewListChange({ filter: { ...bundle.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.content}>\n        <div className={classes['first-container']}>\n          <div className={classes.action}>\n            <Button\n              id='cancelreassign-btn'\n              variant='contained'\n              color='primary'\n              className='button-neutral'\n              onClick={() => setActiveAssigning(true)}\n              disabled={!!activeAssigning}\n            >\n              Re-Assign\n            </Button>\n          </div>\n\n          <div className={classes.search}>\n            <SearchTextComponent\n              id='search'\n              onChange={handleSearchChange}\n              placeholder='Search for bundle number, date or facility name'\n            />\n          </div>\n        </div>\n\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { flex: 1, overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {activeAssigning && (\n                  <TableCell id='checkbox-selecte-all' padding='checkbox' size='small'>\n                    <Checkbox\n                      color='primary'\n                      style={{ marginTop: '30px' }}\n                      disabled={!bundle.data.length}\n                      checked={headerCheckBox.checked || false}\n                      indeterminate={headerCheckBox.indeterminate || false}\n                      onChange={handleOnSelectAllItem}\n                    />\n                  </TableCell>\n                )}\n\n                {columnss.map(column => (\n                  <TableCell key={column.sortField} id={column.id}>\n                    <TableSortLabel\n                      active={bundle.orderBy === column.sortField}\n                      direction={bundle.order ? 'asc' : 'desc'}\n                      onClick={handleOnSort(column.sortField)}\n                    >\n                      {column.name}\n                    </TableSortLabel>\n\n                    <TextField\n                      id={`text-field-${column.id}`}\n                      // value={newBundle.bundle_number}\n                      TextFieldStyle={{ margin: 0 }}\n                      fullWidth\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: column.sortField,\n                              value: search,\n                              match: column.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                    />\n                  </TableCell>\n                ))}\n\n                <TableCell align='center' />\n              </TableRow>\n            }\n            body={bundle.data.map((item, index) => (\n              <TableRow key={item.bundle_number}>\n                {activeAssigning && (\n                  <TableCell id='checkbox-selecte-all' padding='checkbox' size='small'>\n                    <Checkbox\n                      color='primary'\n                      onChange={() => handleOnItemSelect(index)}\n                      checked={item.selected || false}\n                    />\n                  </TableCell>\n                )}\n\n                <TableCell id={`bundle-number-${index}`}>{item.bundle_number}</TableCell>\n                <TableCell id={`received-date-${index}`}>{DateFormatter(item.date.received)}</TableCell>\n                <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`view-work-${index}`}>\n                  <Link to={`/batch-encoder-work/${batchEncoderId}/bundles/${item.bundle_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-bundle-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n            count={bundle.count}\n            page={bundle.page}\n            limit={bundle.limit}\n            rowsPerPageOptions={[10, 15, 20]}\n            onChange={handleOnViewListChange}\n          />\n        </div>\n\n        <div className={classes.footer}>\n          {activeAssigning && (\n            <Typography variant='subtitle2' className={classes.title}>\n              Total Bundle Selected: {bundle.data.filter(i => i.selected).length}\n            </Typography>\n          )}\n\n          <div className={classes.actions}>\n            {activeAssigning ? (\n              <React.Fragment>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  onClick={() => {\n                    setActiveAssigning()\n                  }}\n                  id='cancel'\n                >\n                  Cancel\n                </Button>\n\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className={`${classes.save} button-positive`}\n                  onClick={() => setOpenModal(true)}\n                  disabled={!(headerCheckBox.checked || false)}\n                  id='save'\n                >\n                  Assign\n                </Button>\n              </React.Fragment>\n            ) : (\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={() => props.history.push('/')}\n                id='cancel'\n              >\n                Close\n              </Button>\n            )}\n          </div>\n        </div>\n      </Paper>\n      <AssignDialog\n        show={openModal}\n        setShow={setOpenModal}\n        services={UserManagementServices}\n        onSubmit={handleOnSubmit}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DiscrepancyBase.module.scss'\n\nexport default function DiscrepancyBase (props) {\n  // INIT\n  const { discrepancy, id = '', children, iconStyle = {}, ...others } = props\n\n  // Breaking down props\n  const { result } = discrepancy\n  const { retainSpace = false, noMargin = false, autoWidth = false } = others\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n          list = list.flat(Infinity)\n        }\n      }\n\n      // const uniqOnly = Array.from(new Set(list))\n      // uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n\n      list.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  React.useEffect(() => {\n    spreadResult(result)\n  }, [result])\n\n  const open = Boolean(anchorEl)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const icon = ({ iconStyle }) => {\n    return (\n      <div\n        className={`${classes['discrepancy-icon']} ${\n          message === '' ? (retainSpace ? classes['display-hidden'] : classes['display-none']) : ''\n        } ${noMargin ? classes['no-margin'] : classes['with-margin']}`}\n      >\n        <FontAwesomeIcon\n          id={`exc-circle-${id}`}\n          style={iconStyle}\n          icon='exclamation-circle'\n          className={`${classes['icon']}`}\n          onClick={handleClick}\n        />\n        <Popover\n          id={`simple-popover`}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'center',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'center',\n            horizontal: 'left'\n          }}\n        >\n          <Typography style={{ whiteSpace: 'pre-line' }} className={classes['message']}>\n            {message}\n          </Typography>\n        </Popover>\n      </div>\n    )\n  }\n\n  return (\n    <div id={id} className={`${classes[`root`]}`}>\n      <div\n        className={`${classes[`input-wrapper`]} ${autoWidth ? classes['auto-width'] : classes['max-width']} ${\n          message !== '' ? classes['discrepancy'] : ''\n        }`}\n      >\n        {children}\n      </div>\n      {icon({ iconStyle })}\n      {/* {message !== '' && icon({ iconStyle })} */}\n    </div>\n  )\n}\n","const includesAny = (s1 = '', s2 = '') => {\n  return s1.toLowerCase().includes(s2.toLowerCase())\n}\n\nconst compare = (list, find, comparer = includesAny, fields = []) => {\n  if (Array.isArray(list)) {\n    return list.some(item => {\n      for (const field of fields) {\n        if (comparer(item[field], find)) return true\n      }\n    })\n  } else {\n    if (comparer(list, find)) return true\n  }\n  return false\n}\n\nexport { compare, includesAny }\n","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { includesAny } from 'Utilities/ArrayCompare'\nimport lodash from 'lodash'\n\n// Styles\nimport classes from './ClientMemberLookup.module.scss'\n\nexport default function ClientMemberLookup (props) {\n  // Variables\n  const { columns = [], allSearch = '', allSearchText = '', allSearchFields, mode = '' } = props\n  // Services\n  const { service } = props\n  // Events\n  // Callbacks\n  const { onRecordSet } = props\n\n  // Local Variables\n  const [apiData, setApiData] = React.useState({\n    rows: [],\n    search: '',\n    order: '',\n    limit: 10\n    // count: 0,\n    // page: 1,\n    // rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [finalRows, setFinalRows] = React.useState([])\n  const [selected, setSelected] = React.useState(-1)\n  const [debounce, setDebounce] = React.useState(null)\n  const [colFilters, setColFilters] = React.useState({})\n\n  React.useEffect(() => {\n    setApiData(state => ({ ...state, search: allSearch }), fetchData(allSearch))\n  }, [])\n\n  React.useEffect(() => {\n    const order = apiData.order.split(' ')\n    let _rows = lodash.orderBy(apiData.rows, [order[0]], [order[1]])\n    _rows = translateRows(_rows)\n    _rows = filterData(_rows)\n    setFinalRows(_rows)\n  }, [apiData.rows, apiData.order, colFilters])\n\n  const fetchData = search => {\n    if (search === '') return\n    LoadingService.loading(true)\n    let fields = {}\n    for (const col of columns) {\n      fields[col.id] = true\n    }\n    const order = apiData.order === '' ? `${columns[0].id} asc` : apiData.order\n    setApiData(state => ({ ...state, rows: [], order }))\n    let fetches = []\n    for (const field of allSearchFields) {\n      fetches.push(\n        new Promise((resolve, reject) => {\n          service({\n            where: { [field.id]: { value: search, match: field.match } },\n            order,\n            fields,\n            limit: apiData.limit\n          }).then(res => resolve(res))\n        })\n      )\n    }\n    Promise.all(fetches).then(responses => {\n      for (const res of responses) {\n        if (!res) return\n        const { data } = res.data\n        setApiData(state => ({ ...state, rows: [...state.rows, ...data[mode]] }))\n      }\n      LoadingService.loading(false)\n    })\n  }\n\n  const translateRows = rows => {\n    return rows.map(row => columns.map((col, colIdx) => col.value(row)))\n  }\n\n  const revertRow = row => {\n    if (!row) return\n    const _row = {}\n    for (const [index, cell] of Object.entries(row)) {\n      _row[columns[index].id] = cell\n    }\n    return _row\n  }\n\n  const filterData = rows => {\n    let _rows = rows\n    // _rows = _rows.filter(row => row.map((col, index) => includesAny(`${col}`, filters.all)).some(val => val))\n    _rows = _rows.filter(\n      row =>\n        !row\n          .map((col, index) => {\n            if (!colFilters[index]) return true\n            return includesAny(`${col}`, colFilters[index])\n          })\n          .some(val => val === false)\n    )\n    return _rows\n  }\n\n  const renderRows = rows => {\n    if (!rows) return\n    return rows.map((row, index) => (\n      <TableRow\n        id={`member-row-${index}`}\n        key={`member-${index}`}\n        hover\n        role='checkbox'\n        tabIndex={-1}\n        className={selected && selected[0] === row[0] ? classes.selected : classes['default-override']}\n      >\n        {columns.map((col, colIdx) => (\n          <TableCell key={`${col.id}-${colIdx}`} id={`${col.id}-${colIdx}`} onClick={() => handleItemClick(row)}>\n            {row[colIdx]}\n          </TableCell>\n        ))}\n      </TableRow>\n    ))\n  }\n\n  const handleOnSort = id => {\n    const [, direction] = apiData.order.split(' ')\n    setApiData(state => ({ ...state, order: `${id} ${direction !== 'asc' ? 'asc' : 'desc'}` }))\n  }\n\n  const handleColumnFilter = ({ id, index, value }) => {\n    setColFilters(state => ({ ...state, [index]: value }))\n  }\n\n  const handleItemClick = row => {\n    if (!selected) setSelected(row)\n    else if (row[0] === selected[0]) setSelected()\n    else setSelected(row)\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.search}>\n        <SearchTextComponent\n          id='search'\n          value={apiData.search}\n          onChange={event => {\n            const search = event.target.value\n            setApiData(state => ({ ...state, search }))\n            clearTimeout(debounce)\n            setDebounce(\n              setTimeout(() => {\n                fetchData(search)\n              }, 500)\n            )\n          }}\n          placeholder={allSearchText}\n        />\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { height: '300px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {columns.map((cell, colIdx) => (\n                <TableCell key={cell.id} id={cell.id}>\n                  <TableSortLabel\n                    active={apiData.order.split(' ')[0] === cell.id}\n                    direction={apiData.order.split(' ')[1] === 'asc' ? 'asc' : 'desc'}\n                    onClick={() => handleOnSort(cell.id)}\n                  >\n                    {cell.label}\n                  </TableSortLabel>\n                  <TextField\n                    onChange={event => {\n                      const search = event.target.value\n                      clearTimeout(debounce)\n                      setDebounce(\n                        setTimeout(() => {\n                          handleColumnFilter({\n                            id: cell.id,\n                            index: colIdx,\n                            value: search\n                          })\n                        }, 250)\n                      )\n                    }}\n                  />\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={renderRows(finalRows)}\n          pagination={false}\n          // count={count}\n          // page={page}\n          // limit={limit}\n          // rowsPerPageOptions={rowsPerPageOptions}\n          // onChange={onPaginate}\n        />\n      </div>\n      <div className={classes.footer}>\n        <Button\n          variant='contained'\n          color='primary'\n          id='select'\n          className='button-positive'\n          onClick={() => selected && onRecordSet(revertRow(selected))}\n        >\n          Select\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport MemberLookup from './ClientMemberLookup'\n\n// Styles\nimport classes from './ClientMemberModal.module.scss'\n\nexport default function ClientMemberModal (props) {\n  // Variables\n  const { show, title = '' } = props\n  // Services\n  // Events\n  // Callbacks\n  const { onClose } = props\n  // Local Variables\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      onClose={onClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <MemberLookup {...props} />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/client')\nexport default class CustomerCareService {\n  static getLoaDetails ({ approval_code }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa/approval/${approval_code}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1 }\n    })\n  }\n\n  static getUtilizationLoa ({ params }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa`,\n      method: 'GET',\n      params: {\n        filter: params\n      }\n    })\n  }\n\n  static getContractList ({ member_account_number }) {\n    return axios({\n      url: `api/customer-care/members/${member_account_number}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1 }\n    })\n  }\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let details = {\n    ...common,\n    date_from: loa.loa_details[0].date.from,\n    date_to: loa.loa_details[0].date.to,\n    room_type: loa.loa_details[0].room.type,\n    room_rate: loa.loa_details[0].room.rate,\n    pro_id: loa.loa_details[0].pro.id,\n    pro_name: loa.loa_details[0].pro.name,\n    claim_sub_type: loa.loa_details[0].claim_sub_type ? loa.loa_details[0].claim_sub_type : '',\n    claim_sub_sub_type: loa.loa_details[0].claim_sub_sub_type ? loa.loa_details[0].claim_sub_sub_type : '',\n    with_corporate_guarantee: loa.has_corp_guarantee ? 'Yes' : 'No',\n    diagnosis: loa.loa_details[0].diagnosis,\n    loa_notes: loa.remarks,\n    procedures: loa.loa_details[0].procedures,\n    hospital_items: loa.loa_details[0].hospital_items,\n    professional_fees: loa.loa_details[0].professional_fees\n  }\n\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  dispatch(setClaimFacility({ facility_id: loa.loa_details[0].facility_id }))\n  dispatch(setClaimFacility({ facility_name: loa.loa_details[0].facility_name }))\n  console.log(loa.rooms)\n  dispatch(setDropDown({ rooms: loa.rooms }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","const renameProp = (\n  oldProp,\n  newProp,\n  { [oldProp]: old, ...others }\n) => ({\n  [newProp]: old,\n  ...others\n})\n\nexport { renameProp }\n","import { renameProp } from 'Utilities/RenameProperty'\n\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].doctor_id = ''\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    customer_account_number: loa.client_id || '',\n    company_name: loa.client_name || '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import InPatient from './InPatient'\nimport MedicineAllowance from './MedicineAllowance'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\nlet dispatch = null\nconst AutoFillInitializer = () => {\n  dispatch = useDispatch()\n  return ''\n}\n\nconst AutoFill = ({ loa, claim_type }) => {\n  // Work Around for Member Names\n  const [last_name, others] = loa.member_info.member_name.split(',')\n  const first_middle = others.trim().split(' ')\n  let given_name = ''\n  let middle_name = ''\n  switch (first_middle.length) {\n    case 0:\n      break\n    case 1:\n      given_name = first_middle.join(' ')\n      break\n    case 2:\n      given_name = first_middle[0]\n      middle_name = first_middle[1]\n      break\n    case 3:\n      middle_name = first_middle.pop()\n      given_name = first_middle.join(' ')\n      break\n  }\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: last_name,\n    member_first_name: given_name,\n    member_middle_name: middle_name\n  }\n  switch (claim_type) {\n    case 'IN_PATIENT':\n      InPatient({ common, loa, dispatch })\n      break\n    case 'MedicineAllowance':\n      MedicineAllowance({ common, loa, dispatch })\n      break\n\n    default:\n      break\n  }\n}\n\nexport { AutoFill, AutoFillInitializer }\n","export default {\n  'In Patient': { prefix: 'IP', other_name: 'InPatient' },\n  'Out Patient Procedure': { prefix: 'OP', other_name: 'OutPatientProcedure' },\n  'Out Patient Consultation': { prefix: 'PF', other_name: 'OutPatientConsultation' },\n  Emergency: { prefix: 'ER', other_name: 'Emergency' },\n  Dental: { prefix: 'DN', other_name: 'Dental' },\n  'Medicine Allowance': { prefix: 'MA', other_name: 'MedicineAllowance' },\n  APE: { prefix: 'AP', other_name: 'APE' },\n  ECU: { prefix: 'EC', other_name: 'ECU' },\n  Pharmacy: { prefix: 'PH', other_name: 'Pharmacy' },\n  PPE: { prefix: 'PE', other_name: 'PPE' },\n  'Medical Supplies': { prefix: 'MS', other_name: 'MedicalSupplies' },\n  'Clinic Management': { prefix: 'CM', other_name: 'ClinicManagement' },\n  Reimbursement: {\n    prefix: 'RM',\n    other_name: 'Reimbursement',\n    subType: [\n      { text: 'In Patient', value: 'InPatient' },\n      { text: 'Out Patient', value: 'OutPatient' },\n      { text: 'Professional Fee', value: 'ProfessionalFee' },\n      { text: 'Maternity Assistance', value: 'MaternityAssistance' },\n      { text: 'OPD Medicine', value: 'OPDMedicine' },\n      { text: 'Optical', value: 'Optical' },\n      { text: 'Dental', value: 'Dental' }\n    ]\n  }\n}\n","import React from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\n\n// Components\nimport DiscrepancyBase from './..//DiscrepancyBase/DiscrepancyBase'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClientMemberModal from 'SharedComponents/ClientMemberLookup/ClientMemberModal'\n\n// Services\nimport CustomerCareService from 'Services/Api/CustomerCareService'\nimport { AutoFill, AutoFillInitializer } from '../../AutoFill'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\n// import ReimbursementTypes from 'Constant/reimbursementTypes'\n// Constants\nimport ClaimTypes from '../../../../Constant/ClaimTypes'\n\n// On Init\n// const reimbursementTypes = ReimbursementTypes.dropdown()\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimBaseDetails, resetSuggestionObject, setSuggestionObject } = actions\n\nexport default function BaseDetails (props) {\n  const {\n    onChange,\n    claim,\n    disableControls,\n    onChangeReimbursementType = () => {},\n    handleMemberAccountNumber,\n    permissions,\n    requiredFields = {\n      approval_code: true,\n      loa_number: true,\n      reimbursement_type: true\n    },\n    showReimbursement = false,\n    showApprovalCode = true,\n    showContractRange = false,\n    showClaimSource = false,\n    showLoaNumber = true,\n    showCompany = false,\n    isDental = false,\n    showMemberAccountNumber = true\n  } = props\n\n  const dispatch = useDispatch()\n  const claim_type = useSelector(({ ClaimsAnalysis: state }) => state.claimType)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const errors = useSelector(({ ClaimsAnalysis: state }) => state.error)\n\n  const [memberAccountNumber, setMemberAccountNumber] = React.useState()\n\n  const [memberModal, setMemberModal] = React.useState(false)\n  const [clientModal, setClientModal] = React.useState(false)\n\n  const handleOnClickMemberLookup = () => {\n    setMemberModal(true)\n  }\n\n  const handleOnClickClientLookup = () => {\n    setClientModal(true)\n  }\n\n  const handleSetMember = member => {\n    const { member_id, first_name, middle_name, last_name } = member\n    onChange({\n      field: 'member_account_number',\n      value: member_id\n    })\n    onChange({\n      field: 'member_first_name',\n      value: first_name\n    })\n    onChange({ field: 'member_last_name', value: last_name })\n    onChange({ field: 'member_middle_name', value: middle_name })\n    handleFetchContracts(member_id)\n  }\n\n  const handleSetClient = client => {\n    const { corporate_account_no, registered_name } = client\n    onChange({ field: 'client_account_number', value: corporate_account_no })\n    onChange({ field: 'client_account_name', value: registered_name })\n  }\n\n  const handleFetchContracts = accountNumber => {\n    if (!handleMemberAccountNumber) return\n\n    if (accountNumber === memberAccountNumber) return\n\n    dispatch(resetSuggestionObject({ field: 'contract' }))\n    setMemberAccountNumber(accountNumber)\n    dispatch(setClaimBaseDetails({ field: 'contract_year_from', value: null }))\n    dispatch(setClaimBaseDetails({ field: 'contract_year_to', value: null }))\n\n    if (!accountNumber) return\n\n    LoadingService.loading(true)\n    CustomerCareService.getContractList({ member_account_number: accountNumber }).then(({ data: res }) => {\n      LoadingService.loading(false)\n\n      if (!res) return\n\n      const { latest_contract } = res\n      const { coverage_start_date: from, coverage_end_date: to } = latest_contract.custom_metadata\n\n      dispatch(\n        setSuggestionObject({\n          field: 'contract',\n          suggestion: { years: [{ from, to }] }\n        })\n      )\n    })\n  }\n\n  const handleLoaDetails = event => {\n    const { value } = event.target\n    if (value.trim()) {\n      CustomerCareService.getLoaDetails({ approval_code: value }).then(res => {\n        const loa = res.data.data\n        if (loa) {\n          AutoFill({\n            loa,\n            claim_type\n          })\n        }\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {showApprovalCode && (\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-approval-code'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.approval_code\n                  }}\n                >\n                  <TextField\n                    id='approval-code'\n                    required={!!requiredFields.approval_code}\n                    label='Approval Code'\n                    placeholder={claim.approval_code || 'Pending'}\n                    value={claim.approval_code}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n                    onBlur={handleLoaDetails}\n                    error={errors.approval_code}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            {showLoaNumber && (\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-loa-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.loa_number\n                  }}\n                >\n                  <TextField\n                    id='loa-number'\n                    required={!!requiredFields.loa_number}\n                    label='LOA No.'\n                    placeholder={claim.loa_number || 'Pending'}\n                    value={claim.loa_number}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n                    error={errors.loa_number}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            {showReimbursement && (\n              <div className={classes['input']}>\n                <DropDown\n                  id='reimbursement-type'\n                  label='Reimbursement Type'\n                  required={!!requiredFields.reimbursement_type}\n                  items={ClaimTypes.Reimbursement.subType}\n                  value={claim.reimbursement_type}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })\n                  }\n                  error={errors.reimbursement_type}\n                  readOnly={!permissions.update}\n                />\n              </div>\n            )}\n\n            {showCompany && (\n              <React.Fragment>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-customer-account-number'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.client_account_number\n                    }}\n                  >\n                    <TextField\n                      id='company-account-number'\n                      label='Customer (Company) Account Number'\n                      value={claim.client_account_number}\n                      disabled={disableControls}\n                      required\n                      onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                      error={errors.client_account_number}\n                      readOnly={!permissions.update}\n                    />\n                    {permissions.update && (\n                      <div className={classes.wrapper}>\n                        <IconButton\n                          aria-label='close'\n                          className={`${classes.button} ${classes['no-pad']}`}\n                          onClick={handleOnClickClientLookup}\n                        >\n                          <SearchIcon />\n                        </IconButton>\n                      </div>\n                    )}\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-company-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.client_account_name\n                    }}\n                  >\n                    <TextField\n                      id='company-name'\n                      label='Company Name'\n                      value={claim.client_account_name}\n                      disabled={disableControls}\n                      required\n                      onChange={event => onChange({ field: 'client_account_name', value: event.target.value })}\n                      error={errors.client_account_name}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </React.Fragment>\n            )}\n            {showClaimSource && (\n              <div className={classes['input']}>\n                <TextField\n                  id='claim-source'\n                  label='Claim Source'\n                  required\n                  value={claim.claim_source}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'claim_source', value: event.target.value })}\n                  error={errors.claim_source}\n                  readOnly={!permissions.update}\n                />\n              </div>\n            )}\n          </div>\n\n          <div className={classes.groups}>\n            {showMemberAccountNumber && (\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-member-account-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.member_account_number\n                  }}\n                >\n                  <TextField\n                    id='member-account-number'\n                    required\n                    label='Member Account No.'\n                    value={claim.member_account_number}\n                    disabled={disableControls}\n                    onChange={event =>\n                      onChange({\n                        field: 'member_account_number',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.member_account_number}\n                    readOnly={!permissions.update}\n                  />\n\n                  {permissions.update && (\n                    <div className={classes.wrapper}>\n                      <IconButton\n                        aria-label='close'\n                        className={`${classes.button} ${classes['no-pad']}`}\n                        onClick={handleOnClickMemberLookup}\n                      >\n                        <SearchIcon />\n                      </IconButton>\n                    </div>\n                  )}\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-member-last-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_last_name\n                }}\n              >\n                <TextField\n                  id='member-last-name'\n                  required\n                  label='Member Last Name'\n                  value={claim.member_last_name}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n                  error={errors.member_last_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-member-first-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_first_name\n                }}\n              >\n                <TextField\n                  id='member-first-name'\n                  required\n                  label='Member First Name'\n                  value={claim.member_first_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_first_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_first_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-member-middle-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_middle_name\n                }}\n              >\n                <TextField\n                  id='member-middle-name'\n                  required={!!isDental}\n                  label='Member Middle Name'\n                  value={claim.member_middle_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_middle_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_middle_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n      <AutoFillInitializer />\n      <ClientMemberModal\n        show={memberModal}\n        mode={'members'}\n        title={'Member Search'}\n        allSearchText={'Member Account No., Account Name, Member Name'}\n        allSearch={claim.member_account_number}\n        columns={[\n          { id: 'member_id', label: 'Member Account Number', value: data => data.member_id },\n          { id: 'last_name', label: 'Member Last Name', value: data => data.last_name },\n          { id: 'first_name', label: 'Member First Name', value: data => data.first_name },\n          { id: 'middle_name', label: 'Member Middle Name', value: data => data.middle_name },\n          { id: 'registered_name', label: 'Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'member_id', match: 'like' },\n          { id: 'last_name', match: 'like' },\n          { id: 'first_name', match: 'like' },\n          { id: 'middle_name', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getMembers}\n        onRecordSet={member => {\n          if (!member) return\n          setMemberModal(false)\n          handleSetMember(member)\n        }}\n        onClose={() => setMemberModal(false)}\n      />\n      <ClientMemberModal\n        show={clientModal}\n        mode={'clients'}\n        title={'Account Search'}\n        allSearchText={'Client Account No., Account Name'}\n        allSearch={claim.client_account_number}\n        columns={[\n          { id: 'corporate_account_no', label: 'Client Account Number', value: data => data.corporate_account_no },\n          { id: 'registered_name', label: 'Client Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'corporate_account_no', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getClients}\n        onRecordSet={client => {\n          if (!client) return\n          setClientModal(false)\n          handleSetClient(client)\n        }}\n        onClose={() => setClientModal(false)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = props => {\n  const { children, required } = props\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.delete}>\n          {''}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description {required && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code {required && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary {required && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.discrepancy}>\n          {''}\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst ICDTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    onDeleteDiagnosis,\n    error = { description: '', code: '' },\n    permissions\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.delete}>\n        {permissions.delete && (\n          <IconButton id='delete-icd' onClick={index => onDeleteDiagnosis({ index })}>\n            <DeleteIcon fontSize='small' />\n          </IconButton>\n        )}\n      </div>\n\n      <Tooltip onClose={() => setTooltipOpen(false)} onOpen={handleTooltipOpen} open={tooltipOpen} title={description}>\n        <div className={`${classes['description']}`}>\n          <AutoComplete\n            id={id}\n            value={description}\n            suggestions={suggestions.description}\n            onChange={(value, isSuggestionClick) => onChangeDescription({ value, isSuggestionClick })}\n            error={error.description}\n            readOnly={!permissions.update}\n          />\n        </div>\n      </Tooltip>\n      <div className={`${classes['code']}`}>\n        <AutoComplete\n          id={codeId}\n          value={code}\n          suggestions={suggestions.code}\n          onChange={(value, isSuggestionClick) => onChangeCode({ value, isSuggestionClick })}\n          error={error.code}\n          readOnly={!permissions.update}\n        />\n      </div>\n      <div className={classes.primary}>\n        <Radio color='primary' checked={primary} onClick={onChangePrimary} disabled={!permissions.update} />\n      </div>\n    </div>\n  )\n}\n\nexport { ICDTextFields, ICDTextField }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Components\n\nimport { ICDTextFields, ICDTextField } from '../ICDTextField/ICDTextField'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  addClaimDiagnosis,\n  removeClaimDiagnosis,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  resetSuggestionArray,\n  setSuggestionOnArray,\n  setError\n} = actions\n\nexport default function DiagnosisList (props) {\n  const { items, error, permissions, id } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n\n  const handleOnClickAddDiagnosis = (defaultBehaviour = true) => {\n    const lastEntry = items.length !== 0 ? items[items.length - 1] : null\n    if (defaultBehaviour && lastEntry && (!lastEntry.code.length || !lastEntry.description.length)) {\n      return false\n    }\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnConfirmDelete = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    setOpenDeleteDialog({ show: false, index: null })\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(setError({ diagnosis: {} }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n    if (items.length === 1 && index !== null) {\n      handleOnClickAddDiagnosis(false)\n    }\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, isSuggestionClick, index } = args\n\n    dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      for (let i of suggestions.icd10[index].data) {\n        if (value === i[field]) {\n          dispatch(\n            setClaimDiagnosis({\n              index,\n              data: { description: i.description, code: i.code }\n            })\n          )\n        }\n      }\n    } else getIcd10Suggestions({ value, by: field, index })\n\n    dispatch(resetSuggestionArray({ field: 'icd10', index }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const getIcd10Suggestions = ({ value, by, index }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'icd-10',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n\n            dispatch(\n              setSuggestionOnArray({\n                field: 'icd10',\n                index,\n                by,\n                suggestion: _items,\n                data\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.groups} id={id}>\n          <div className={`${classes['diagnosis-list']} ${error['list'] && classes['has-error']}`}>\n            <Typography variant='h6' className={classes.title}>\n              Diagnosis List\n            </Typography>\n            <ICDTextFields required>\n              {items.map((item, index) => (\n                <DiscrepancyBase\n                  id={`dp-icd-description-${index}`}\n                  key={`icd-${index}`}\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.diagnosis[index]\n                  }}\n                  retainSpace\n                  noMargin\n                >\n                  <ICDTextField\n                    key={`icd-${index} ${error[index]}`}\n                    id={`icd-description-${index}`}\n                    codeId={`icd-code-${index}`}\n                    error={error.error && error.items[index]}\n                    description={item.description}\n                    suggestions={suggestions.icd10[index]}\n                    code={item.code}\n                    primary={item.primary}\n                    onChangeDescription={args => handleOnChangeIcd10({ field: 'description', index, ...args })}\n                    onChangeCode={args => handleOnChangeIcd10({ field: 'code', index, ...args })}\n                    onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                    onDeleteDiagnosis={() => handleOnConfirmDelete(index)}\n                    permissions={permissions}\n                  />\n                </DiscrepancyBase>\n              ))}\n            </ICDTextFields>\n            {permissions.create && (\n              <Button\n                id='add-diagnosis-button'\n                className={classes['add-diagnosis-button']}\n                onClick={handleOnClickAddDiagnosis}\n              >\n                + Add a diagnosis\n              </Button>\n            )}\n          </div>\n          {error.error && <span className={classes.error}>{error.list}</span>}\n          <Alert\n            open={openDeleteDialog.show}\n            message='Are you sure you want to delete this diagnosis?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n            onOk={() => handleOnRemoveDiagnosis(openDeleteDialog.index)}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './CustomTable.module.scss'\n\nconst Table = ({ children }) => {\n  const _children = React.Children.toArray(children)\n\n  const headers = []\n  const body = []\n  _children.filter((item, index) => {\n    if (item.type.displayName === 'TableHeader') {\n      headers.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n\n    if (item.type.displayName === 'TableBody') {\n      body.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n  })\n\n  return (\n    <table className={classes.table}>\n      {headers}\n      {body}\n    </table>\n  )\n}\n\nconst TableHeader = ({ items = [] }) => {\n  return (\n    <thead>\n      <tr>\n        {items.map((i, index) => (\n          <th key={i.name} style={{ width: `${i.width}px`, textAlign: i.align }}>\n            {i.name}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  )\n}\nTableHeader.displayName = 'TableHeader'\n\nconst TableBody = ({ children }) => {\n  return <tbody>{children}</tbody>\n}\nTableBody.displayName = 'TableBody'\n\nconst TableRow = ({ children, className, onClick, expanded, id }) => {\n  const _children = React.Children.toArray(children)\n  // const [open, setOpen] = React.useState(expanded)\n  const [expandable, setExpandable] = React.useState([])\n  const [cells, setCells] = React.useState([])\n\n  React.useEffect(() => {\n    _children.filter((item, index) => {\n      if (item.type === 'td') {\n        setCells(state => [\n          ...state,\n          React.cloneElement(item, {\n            key: index\n          })\n        ])\n      }\n\n      if (item.type) {\n        if (item.type.displayName === 'TableRowExpandable') {\n          setExpandable(state => [\n            ...state,\n            React.cloneElement(item, {\n              key: index\n            })\n          ])\n        }\n      }\n    })\n  }, [])\n\n  const handleOnClick = () => {\n    // setOpen(!open)\n    if (typeof onClick === 'function') onClick()\n  }\n\n  return (\n    <React.Fragment>\n      <tr id={id} onClick={handleOnClick} className={className}>\n        {cells}\n      </tr>\n      <tr id={id} className={classes.expandable}>\n        <td colSpan={cells.length}>\n          <div className={`${classes.container} ${expanded ? classes.open : ''}`}>\n            <div className={classes.content}>{expandable}</div>\n          </div>\n        </td>\n      </tr>\n    </React.Fragment>\n  )\n}\nTableRow.displayName = 'TableRow'\n\nconst TableRowExpandable = ({ children }) => {\n  return children\n}\nTableRowExpandable.displayName = 'TableRowExpandable'\n\nexport { Table, TableHeader, TableBody, TableRow, TableRowExpandable }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setProcedure,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} = actions\n\nexport default function ProcedureForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    isDental,\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n\n  const procedure = useSelector(({ ClaimsAnalysis: state }) => state.procedure)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState(null)\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  // ***** EVENTS\n\n  const handleOnChangeCpt = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      if (!isNaN(selectedIndex)) {\n        try {\n          const i = suggestions.cpt.data[selectedIndex]\n          dispatch(resetSuggestionObject({ field: 'cpt' }))\n          return dispatch(\n            setProcedure({\n              details: { description: i.description, code: i.code.toString() }\n            })\n          )\n        } catch (ex) {}\n      }\n    } else getCptSuggestions({ value, by: field })\n\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const _field = field.split('_')[1]\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(setProcedure({ details: { diagnosis_code: diagnosi.code, diagnosis_description: diagnosi.description } }))\n  }\n\n  // ***** FETCHING\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'cpt',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _error = doValidate({ ...procedure })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimProcedure(procedure.details))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _error = doValidate({ ...procedure })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimProcedure({ index, details: procedure.details }))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProcedure({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Procedure Form')} */}\n      {/* {console.log('Data', procedure)} */}\n      {/* {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', procedure.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {procedure.show && procedure.index === index && (\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            {diagnosis && (\n              <React.Fragment>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={procedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={procedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_code}\n                  />\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-description'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { code: discrepancy.code, description: discrepancy.description }\n                }}\n              >\n                <div className={classes.description}>\n                  <AutoComplete\n                    id={`procedure-description-autocomplete`}\n                    required\n                    label={'Procedure Details'}\n                    value={procedure.details.description}\n                    suggestions={suggestions.cpt.description}\n                    onChange={(value, isSuggestionClick, selectedIndex) =>\n                      handleOnChangeCpt({\n                        field: 'description',\n                        value,\n                        isSuggestionClick,\n                        selectedIndex\n                      })\n                    }\n                    error={_errors.description}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n\n                <div className={classes.code}>\n                  <AutoComplete\n                    id={`procedure-code-autocomplete`}\n                    required\n                    label={'CPT Code'}\n                    value={procedure.details.code}\n                    suggestions={suggestions.cpt.code}\n                    onChange={(value, isSuggestionClick, selectedIndex) =>\n                      handleOnChangeCpt({ field: 'code', value, isSuggestionClick, selectedIndex })\n                    }\n                    error={_errors.code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {isDental && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-procedure-tooth-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.tooth_number\n                  }}\n                  autoWidth\n                >\n                  <Typography variant='subtitle2' className={classes['label']}>\n                    {`Tooth Number *`}\n                  </Typography>\n                  <TextField\n                    id='tooth-number'\n                    value={procedure.details.tooth_number}\n                    onChange={event => {\n                      handleOnChange({\n                        field: 'tooth_number',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.tooth_number}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={procedure.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={procedure.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-procedure-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='procedure-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={procedure.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-amount-paid'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_amount_paid\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='philhealth-amount-paid'\n                    label='PhilHealth Amount Paid'\n                    value={procedure.details.philhealth_amount_paid}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_amount_paid',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_amount_paid}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={procedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_not_covered\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-not-covered'\n                    label='Amount Not Covered'\n                    value={procedure.details.amount_not_covered}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        procedure.details.reason = ''\n                        setErrors(state => ({ ...state, reason: '' }))\n                      }\n\n                      handleOnChange({\n                        field: 'amount_not_covered',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_not_covered}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered-reason'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason\n                  }}\n                >\n                  <DropDown\n                    id='amount-not-covered-reason'\n                    label='Reason'\n                    required={procedure.details.amount_not_covered > 0}\n                    disableComponents={procedure.details.amount_not_covered === 0}\n                    value={procedure.details.reason}\n                    items={dropDown.reason}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-due-from-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_due_from_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-due-from-member'\n                    label='Amount Due from Member'\n                    value={procedure.details.amount_due_from_member}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        procedure.details.reason_for_charging_member = ''\n                        setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                      }\n\n                      handleOnChange({\n                        field: 'amount_due_from_member',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_due_from_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-hospital-item'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason_for_charging_member\n                  }}\n                >\n                  <DropDown\n                    id='hospital-item'\n                    label='Reason for Charging Member'\n                    required={procedure.details.amount_due_from_member > 0}\n                    disableComponents={procedure.details.amount_due_from_member === 0}\n                    value={procedure.details.reason_for_charging_member}\n                    items={dropDown.reason_charging}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason_for_charging_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason_for_charging_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {procedure.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSave}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {procedure.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(procedure.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='procedure-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(procedure.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`procedure-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(procedure.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this procedure?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(procedure.index)}\n      />\n    </React.Fragment>\n  )\n}\n","const Item = item => {\n  // fields from Encoder\n  const { gross_amount = 0, vat_amount = 0, amount_paid_by_member = 0, philhealth_amount_paid = 0 } = item\n  // fields from Analyst\n  const { amount_not_covered = 0, amount_due_from_member = 0 } = item\n\n  return (\n    parseFloat(gross_amount) +\n    parseFloat(vat_amount) -\n    (parseFloat(amount_not_covered) +\n      parseFloat(philhealth_amount_paid) +\n      parseFloat(amount_due_from_member) +\n      parseFloat(amount_paid_by_member))\n  )\n}\n\nconst List = items => {\n  return items.reduce((current, item) => current + Item(item), 0)\n}\n\nconst Grand = lineItems => {\n  const { procedures, dental_procedures, hospital_items, professional_fees } = lineItems || {}\n  let grand = 0\n  if (procedures) grand += List(procedures)\n  if (dental_procedures) grand += List(dental_procedures)\n  if (hospital_items) grand += List(hospital_items)\n  if (professional_fees) grand += List(professional_fees)\n  return grand\n}\n\nexport default { Item, List, Grand }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setProcedure } = actions\n\nexport default function ProcedureList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.procedure)\n  const procedure = useSelector(({ ClaimsAnalysis: state }) => state.procedure)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.procedure)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProcedure({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-procedure'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProcedure({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Procedure\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Procedure List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${procedure ? procedure.show : ''}`}\n                id={`procedure-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={procedure.index === index ? procedure.show : false}\n              >\n                <td\n                  id={`procedure-row-description-${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.description}\n                </td>\n                <td\n                  id={`procedure-row-code-${index}`}\n                  className={`${classes.align} ${classes.center}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.code}\n                </td>\n                <td\n                  id={`procedure-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {procedure.mode === 'add' && (\n              <TableRow\n                key={`add ${procedure ? procedure.show : ''} `}\n                id={`procedure-add`}\n                className={`${classes['row']}`}\n                expanded={procedure.mode === 'add' ? procedure.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'procedure-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setHospitalItem,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetError\n} = actions\n\nexport default function HospitalItemForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    showAmountPaidByMember = true,\n    showPhilhealthRemarks = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n\n  const hospitalItem = useSelector(({ ClaimsAnalysis: state }) => state.hospitalItem)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  // ***** EVENTS\n\n  const handleOnChangeHospitalItem = ({ value, field, isSuggestionClick }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.hospitalItem.data) {\n        if (value === i.name || value === i.item_code) {\n          dispatch(\n            setHospitalItem({\n              details: {\n                id: i.id,\n                name: i.name,\n                item_code: i.item_code\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const _field = field.split('_')[1]\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setHospitalItem({ details: { diagnosis_code: diagnosi.code, diagnosis_description: diagnosi.description } })\n    )\n  }\n\n  // ***** FETCHING\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'hospitalItem',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    const _error = doValidate({ ...hospitalItem })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimHospitalItem(hospitalItem.details))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    const _error = doValidate({ ...hospitalItem })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimHospitalItem({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOCancel = index => {\n    dispatch(resetError({ index }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Hospital Item Form')} */}\n      {/* {console.log('Data', hospitalItem)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', hospitalItem.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {hospitalItem.show && hospitalItem.index === index && (\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            {diagnosis && (\n              <React.Fragment>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={hospitalItem.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={hospitalItem.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_code}\n                  />\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospital-item'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { item_code: discrepancy.item_code, name: discrepancy.name }\n                }}\n              >\n                <div className={classes.description}>\n                  <AutoComplete\n                    label={'Item Name'}\n                    required\n                    id={`hospital-item-name`}\n                    value={hospitalItem.details.name}\n                    suggestions={suggestions.hospitalItem.name}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeHospitalItem({ field: 'name', value, isSuggestionClick })\n                    }\n                    error={_errors.name}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n                <div className={classes.code}>\n                  <AutoComplete\n                    label={'Item Code'}\n                    required\n                    id={`hospital-item-code`}\n                    value={hospitalItem.details.item_code}\n                    suggestions={suggestions.hospitalItem.item_code}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeHospitalItem({ field: 'item_code', value, isSuggestionClick })\n                    }\n                    error={_errors.item_code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospital-item-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={hospitalItem.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospital-item-vat-amount'\n                  label='VAT Amount'\n                  value={hospitalItem.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-hospitalItem-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='hospital-item-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={hospitalItem.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-philhealth-amount-paid'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.philhealth_amount_paid\n                }}\n              >\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={hospitalItem.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.philhealth_amount_paid}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n            {showPhilhealthRemarks && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={hospitalItem.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n          </div>\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_not_covered\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-not-covered'\n                    label='Amount Not Covered'\n                    value={hospitalItem.details.amount_not_covered}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        hospitalItem.details.reason = ''\n                        setErrors(state => ({ ...state, reason: '' }))\n                      }\n\n                      handleOnChange({\n                        field: 'amount_not_covered',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_not_covered}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered-reason'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason\n                  }}\n                >\n                  <DropDown\n                    id='amount-not-covered-reason'\n                    label='Reason'\n                    required={hospitalItem.details.amount_not_covered > 0}\n                    disableComponents={hospitalItem.details.amount_not_covered === 0}\n                    value={hospitalItem.details.reason}\n                    items={dropDown.reason}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-due-from-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_due_from_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-due-from-member'\n                    label='Amount Due from Member'\n                    value={hospitalItem.details.amount_due_from_member}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        hospitalItem.details.reason_for_charging_member = ''\n                        setErrors(state => ({ ...state, reason_for_charging_member: '' }))\n                      }\n\n                      handleOnChange({\n                        field: 'amount_due_from_member',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_due_from_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-reason-for-charging-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason_for_charging_member\n                  }}\n                >\n                  <DropDown\n                    id='reason-for-charging-member'\n                    label='Reason for Charging Member'\n                    required={hospitalItem.details.amount_due_from_member > 0}\n                    disableComponents={hospitalItem.details.amount_due_from_member === 0}\n                    value={hospitalItem.details.reason_for_charging_member}\n                    items={dropDown.reason_charging}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason_for_charging_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason_for_charging_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {hospitalItem.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='hospital-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnSave(hospitalItem.index)}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {hospitalItem.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='hospital-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(hospitalItem.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='hospital-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(hospitalItem.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`hospital-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOCancel(hospitalItem.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this hospital item?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(hospitalItem.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setHospitalItem } = actions\n\nexport default function HospitalItemList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.hospital_item)\n  const hospitalItem = useSelector(({ ClaimsAnalysis: state }) => state.hospitalItem)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.hospital_item)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setHospitalItem({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-hospital-item'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setHospitalItem({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Items\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Hospital List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', hospitalItem)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospital-item-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={hospitalItem.index === index ? hospitalItem.show : false}\n              >\n                <td id={`hospital-item-row-name-${index}`} onClick={() => expand({ mode: 'edit', index, details: i })}>\n                  {i.name}\n                </td>\n                <td\n                  id={`hospital-item-row-code${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                  className={`${classes.align} ${classes.center}`}\n                >\n                  {i.item_code}\n                </td>\n                <td\n                  id={`hospital-item-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {hospitalItem.mode === 'add' && (\n              <TableRow\n                key={`add ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospitalItem-add`}\n                className={`${classes['row']}`}\n                expanded={hospitalItem.mode === 'add' ? hospitalItem.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'hospital-item-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setProfessionalFee,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setError\n} = actions\n\nexport default function ProfessionalFeeForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n  const professionalFee = useSelector(({ ClaimsAnalysis: state }) => state.professionalFee)\n  const pfSuggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  // ***** EVENTS\n\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of pfSuggestions.pfDoctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(\n            setProfessionalFee({\n              details: {\n                doctor_id: i.id,\n                doctor_name: i.full_name,\n                specialization: i.specialization.main + ', ' + i.specialization.major\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const _field = field.split('_')[1]\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProfessionalFee({ details: { diagnosis_code: diagnosi.code, diagnosis_description: diagnosi.description } })\n    )\n  }\n\n  // ***** FETCHING\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'pfDoctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _error = doValidate({ ...professionalFee })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimProfessionalFee(professionalFee.details))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _error = doValidate({ ...professionalFee })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProfessionalFee({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('ProfessionalFee Form')} */}\n      {/* {console.log('Data', professionalFee)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', professionalFee.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {professionalFee.show && professionalFee.index === index && (\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            {diagnosis && (\n              <React.Fragment>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={professionalFee.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={professionalFee.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_code}\n                  />\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-medical-partner-id'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_id\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={professionalFee.details.doctor_id}\n                  suggestions={pfSuggestions.pfDoctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={_errors.doctor_id}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-doctor-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_name\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-doctor-name'\n                  required\n                  label='Doctor Name'\n                  value={professionalFee.details.doctor_name}\n                  suggestions={pfSuggestions.pfDoctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={_errors.doctor_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-specialization'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.specialization\n                }}\n              >\n                <TextField\n                  id='professional-fee-specialization'\n                  required\n                  label='Specialization'\n                  value={professionalFee.details.specialization}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'specialization',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.specialization}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={professionalFee.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-vat-amount'\n                  label='VAT Amount'\n                  value={professionalFee.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-professional-fee-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='professional-fee-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={professionalFee.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-amount-paid'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_amount_paid\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='philhealth-amount-paid'\n                    label='PhilHealth Amount Paid'\n                    value={professionalFee.details.philhealth_amount_paid}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_amount_paid',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_amount_paid}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={professionalFee.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_not_covered\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-not-covered'\n                    label='Amount Not Covered'\n                    value={professionalFee.details.amount_not_covered}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        professionalFee.details.reason = ''\n                        setErrors(state => ({ ...state, reason: '' }))\n                      }\n\n                      handleOnChange({\n                        field: 'amount_not_covered',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_not_covered}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered-reason'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason\n                  }}\n                >\n                  <DropDown\n                    id='amount-not-covered-reason'\n                    label='Reason'\n                    required={professionalFee.details.amount_not_covered > 0}\n                    disableComponents={professionalFee.details.amount_not_covered === 0}\n                    value={professionalFee.details.reason}\n                    items={dropDown.reason}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-due-from-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_due_from_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-due-from-member'\n                    label='Amount Due from Member'\n                    value={professionalFee.details.amount_due_from_member}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        professionalFee.details.reason_for_charging_member = ''\n                        setErrors(state => ({ ...state, reason_for_charging_member: '' }))\n                      }\n                      handleOnChange({\n                        field: 'amount_due_from_member',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_due_from_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-hospital-item'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason_for_charging_member\n                  }}\n                >\n                  <DropDown\n                    id='hospital-item'\n                    label='Reason for Charging Member'\n                    required={professionalFee.details.amount_due_from_member > 0}\n                    disableComponents={professionalFee.details.amount_due_from_member === 0}\n                    value={professionalFee.details.reason_for_charging_member}\n                    items={dropDown.reason_charging}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason_for_charging_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason_for_charging_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {professionalFee.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSave}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {professionalFee.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(professionalFee.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='professional-fee-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(professionalFee.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`professional-fee-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(professionalFee.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this professional fee?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(professionalFee.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setProfessionalFee } = actions\n\nexport default function ProfessionalFeeList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.professional_fee)\n  const professionalFee = useSelector(({ ClaimsAnalysis: state }) => state.professionalFee)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.professional_fee)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProfessionalFee({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-professional-fee'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProfessionalFee({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Professional Fee\n            </Typography>\n          )}\n        </div>\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Professional Fee List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${professionalFee ? professionalFee.show : ''}`}\n                id={`professional-fee-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={professionalFee.index === index ? professionalFee.show : false}\n              >\n                <td\n                  id={`professional-fee-row-doctor-${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.doctor_name}\n                </td>\n                <td\n                  id={`professional-fee-row-specialization-${index}`}\n                  className={classes.specialization}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.specialization}\n                </td>\n                <td\n                  id={`professional-fee-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {professionalFee.mode === 'add' && (\n              <TableRow\n                key={`add ${professionalFee ? professionalFee.show : ''}`}\n                id={`professionalFee-add`}\n                className={`${classes['row']}`}\n                expanded={professionalFee.mode === 'add' ? professionalFee.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'professional-fee-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string().trim()\n    .label('Escalation Message')\n    .messages({ 'string.empty': `Please enter reason of escalation.` })\n    .required(),\n  assignee: Joi.string().trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string()\n    .trim()\n    .label('Message')\n    .required()\n    .messages({ 'string.empty': 'Please enter a remarks/notes.' }),\n  assignee: Joi.string()\n    .trim()\n    .label('Assignee')\n    .required()\n    .messages({ 'string.empty': 'Please select a name from the Assigned To field.' })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport Button from '@material-ui/core/Button'\n\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\n// Validations\nimport EscalateValidator from './EscalateValidator'\nimport ReconValidator from './ReconValidator'\n\n// lodash\nimport { sortBy } from 'lodash'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  resetEscalation,\n  setEscalationMessage,\n  setEscalationAssignee,\n  resetReassign,\n  setReassignMessage,\n  setReassignAssignee\n} = actions\n\nexport default function ClaimFooter (props) {\n  // Events\n  const {\n    doValidate,\n    doReject,\n    doViewAnalysisSheet,\n    doViewLetterOfAdvice,\n    doReassign,\n    doSave,\n    doEscalate,\n    doApprove,\n    doCancel,\n    isReimbursement,\n    doRemove,\n    doViewClaimNotice\n  } = props\n  // Variables\n  const { disabled, permissions, reimbursement_info = [] } = props\n  // Services\n  const { grandTotal, claimType, userManagementService = () => {} } = props\n\n  const dispatch = useDispatch()\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const reassign = useSelector(({ ClaimsAnalysis: state }) => state.reassign)\n  const rejectStatus = useSelector(({ ClaimsAnalysis: state }) => state.rejectStatus)\n\n  const [escalateModal, setEscalateModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [reassignModal, setReassignModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [approveModal, setApproveModal] = React.useState({ message: '', show: false })\n  const [saveModal, setSaveModal] = React.useState(false)\n  const [cancelModal, setCancelModal] = React.useState(false)\n  const [removeModal, setRemoveModal] = React.useState(false)\n  const [validateModal, setValidateModal] = React.useState(false)\n\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  const [escalationErrors, setEscalationErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  // Init functions\n  const initDropdownUsers = async ({ roles }) => {\n    userManagementService.getUsersByRole(roles[0]).then(({ data }) => {\n      let users = data.map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n      setDropDownUsers(sortBy(users, ['text']))\n    })\n  }\n\n  // Validators\n  const doValidateEscalation = () => {\n    const { error } = EscalateValidator({\n      message: escalations.message,\n      assignee: escalations.assignee.id\n    })\n\n    setEscalationErrors({ ...error })\n    return !!error\n  }\n\n  const doValidateReassign = () => {\n    const { error } = ReconValidator({\n      message: reassign.message,\n      assignee: reassign.assignee.id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  // UI Functions\n  const handleEscalateDialog = () => {\n    dispatch(resetEscalation())\n    initDropdownUsers({ roles: permissions.escalate.options.roles })\n    setEscalationErrors({ message: '', assignee: '' })\n    dispatch(setEscalationMessage(''))\n    setEscalateModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleReassignDialog = () => {\n    dispatch(resetReassign())\n    initDropdownUsers({ roles: permissions.reassign.options.roles })\n    setReassignErrors({ message: '', assignee: '' })\n    dispatch(setReassignMessage(''))\n    setReassignModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleOnShowModal = () => {\n    const { AuthorityMatrix } = permissions.approve.options\n\n    const modalProps = { show: true }\n\n    if (AuthorityMatrix) {\n      const { other_types } = AuthorityMatrix\n\n      const selected_amount = AuthorityMatrix[claimType] === undefined ? other_types : AuthorityMatrix[claimType]\n\n      if (grandTotal > selected_amount) {\n        modalProps.message =\n          'The billed amount to be approved is higher than the threshold. Are you sure you want to approve this claim?'\n      }\n    }\n\n    setApproveModal(modalProps)\n    return true\n  }\n\n  const handleOnClickReject = () => {\n    if (!doValidateMiddleware()) {\n      if (isReimbursement) doReject()\n      else setRejectModal(true)\n    }\n  }\n\n  const doValidateMiddleware = () => {\n    if (doValidate()) {\n      setValidateModal(true)\n      return true\n    } else {\n      return false\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.left}>\n        {SafeAccess(permissions.return_advice, ['visible']) && reimbursement_info.length > 0 && (\n          <Button\n            variant='contained'\n            color='secondary'\n            className='button-positive'\n            onClick={() => doViewClaimNotice({ goBack: false })}\n            disabled={disabled && permissions.analysis_sheet.enabled}\n          >\n            Return Advice\n          </Button>\n        )}\n      </div>\n      <div className={classes.center} />\n      <div className={classes.right}>\n        {permissions.visible && (\n          <React.Fragment>\n            {SafeAccess(permissions.analysis_sheet, ['visible']) && (\n              <Button\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && doViewAnalysisSheet({ goBack: false })}\n                disabled={disabled && permissions.analysis_sheet.enabled}\n              >\n                View Analysis Sheet\n              </Button>\n            )}\n            {SafeAccess(permissions.letter_of_advice, ['visible']) && (\n              <Button\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && doViewLetterOfAdvice({ goBack: false })}\n                disabled={disabled && permissions.letter_of_advice.enabled}\n              >\n                View Letter of Advice\n              </Button>\n            )}\n            {SafeAccess(permissions.escalate, ['visible']) && (\n              <Button\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && handleEscalateDialog()}\n                disabled={disabled && permissions.escalate.enabled}\n              >\n                Escalate\n              </Button>\n            )}\n            {SafeAccess(permissions.reject, ['visible']) && (\n              <Button\n                variant='contained'\n                color='secondary'\n                onClick={handleOnClickReject}\n                disabled={rejectStatus && !isReimbursement}\n              >\n                Reject\n              </Button>\n            )}\n\n            {SafeAccess(permissions.return, ['visible']) && (\n              <Button\n                id='btn-return'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                // onClick={() => setApproveModal(true)}\n                // disabled={disabled && permissions.return.enabled}\n              >\n                Return\n              </Button>\n            )}\n\n            {SafeAccess(permissions.approve, ['visible']) && (\n              <Button\n                id='approve'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && handleOnShowModal()}\n                disabled={disabled && permissions.approve.enabled}\n              >\n                Approve\n              </Button>\n            )}\n            {SafeAccess(permissions.save, ['visible']) && (\n              <Button\n                id='save-for-now'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && setSaveModal(true)}\n                disabled={disabled && permissions.save.enabled}\n              >\n                Save for now\n              </Button>\n            )}\n            {SafeAccess(permissions.remove, ['visible']) && (\n              <Button\n                id='remove'\n                variant='contained'\n                color='secondary'\n                onClick={() => setRemoveModal(true)}\n                disabled={disabled && permissions.remove.enabled}\n              >\n                Remove\n              </Button>\n            )}\n          </React.Fragment>\n        )}\n        <Button id='cancel' variant='contained' color='secondary' onClick={() => setCancelModal(true)}>\n          {permissions.close ? 'Close' : 'Cancel'}\n        </Button>\n        {permissions.visible && (\n          <React.Fragment>\n            {SafeAccess(permissions.reassign, ['visible']) && (\n              <Button\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && handleReassignDialog()}\n                disabled={disabled && permissions.reassign.enabled}\n              >\n                Reassign\n              </Button>\n            )}\n          </React.Fragment>\n        )}\n      </div>\n      <div className={classes.modals}>\n        {SafeAccess(permissions.escalate, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={escalateModal.dialog}\n              className={classes.escalate}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Reason For Escalation\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={escalations.message}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setEscalationMessage(event.target.value))}\n                    error={escalationErrors.message}\n                  />\n                </div>\n                <div className={classes.footer}>\n                  <div className={classes.assign}>\n                    <Typography variant='subtitle2' className={classes.to}>\n                      {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                    </Typography>\n                    <DropDown\n                      id='escalate-to'\n                      items={dropDownUsers}\n                      value={escalations.assignee.id}\n                      onChange={event =>\n                        dispatch(\n                          setEscalationAssignee({\n                            id: event.target.value,\n                            name: event.target.value\n                          })\n                        )\n                      }\n                      error={escalationErrors.assignee}\n                      disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                    />\n                  </div>\n\n                  <div className={classes.action}>\n                    <Button\n                      onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() =>\n                        !doValidateEscalation() && setEscalateModal(state => ({ ...state, confirm: true }))\n                      }\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n            <Alert\n              open={escalateModal.confirm}\n              message='Are you sure you want to escalate claim?'\n              cancelLabel='No'\n              okLabel='Yes'\n              onCancel={() => setEscalateModal(state => ({ ...state, confirm: false }))}\n              onOk={() => {\n                setEscalateModal(state => ({ ...state, dialog: false, confirm: false }))\n                doEscalate({ goBack: true })\n              }}\n            />\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.reassign, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setReassignModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={reassignModal.dialog}\n              className={classes.reassign}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Reassign\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={reassign.message}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setReassignMessage(event.target.value))}\n                    error={reassignErrors.message}\n                  />\n                </div>\n                <div className={classes.footer}>\n                  <div className={classes.assign}>\n                    <Typography variant='subtitle2' className={classes.to}>\n                      Assign To:\n                    </Typography>\n                    <DropDown\n                      id='reassign-to'\n                      items={dropDownUsers}\n                      value={reassign.assignee.id}\n                      onChange={event =>\n                        dispatch(\n                          setReassignAssignee({\n                            id: event.target.value,\n                            name: event.target.value\n                          })\n                        )\n                      }\n                      error={reassignErrors.assignee}\n                    />\n                  </div>\n\n                  <div className={classes.action}>\n                    <Button\n                      onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() => !doValidateReassign() && setReassignModal(state => ({ ...state, confirm: true }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n            <Alert\n              open={reassignModal.confirm}\n              message={\n                permissions.reassign && permissions.reassign.message\n                  ? permissions.reassign.message\n                  : 'Are you sure you want to re-assign claim?'\n              }\n              cancelLabel='No'\n              okLabel='Yes'\n              onCancel={() => setReassignModal(state => ({ ...state, confirm: false }))}\n              onOk={() => {\n                setReassignModal(state => ({ ...state, dialog: false, confirm: false }))\n                doReassign({ goBack: true })\n              }}\n            />\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.reject, ['enabled']) && (\n          <Alert\n            open={rejectModal}\n            message='Are you sure you want to reject this claim?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setRejectModal(false)}\n            onOk={() => {\n              setRejectModal(false)\n              doReject({ goBack: false })\n            }}\n          />\n        )}\n\n        {SafeAccess(permissions.approve, ['enabled']) && (\n          <Alert\n            open={approveModal.show}\n            message={approveModal.message || 'Are you sure you want to approve the claim?'}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setApproveModal({ show: false })}\n            onOk={() => {\n              setApproveModal({ show: false })\n              doApprove({ goBack: false })\n            }}\n          />\n        )}\n\n        <Alert\n          open={validateModal}\n          message='Please input all mandatory fields'\n          okLabel='Ok'\n          onOk={() => {\n            setValidateModal(false)\n          }}\n        />\n\n        <Alert\n          open={saveModal}\n          message='Are you sure you want to save the changes?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setSaveModal(false)}\n          onOk={() => {\n            setSaveModal(false)\n            doSave(true)\n          }}\n        />\n\n        <Alert\n          open={cancelModal}\n          message='Are you sure you want to cancel?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setCancelModal(false)}\n          onOk={() => {\n            setCancelModal(false)\n            doCancel({ goBack: true })\n          }}\n        />\n\n        <Alert\n          open={removeModal}\n          message='Are you sure you want to remove this claim?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setRemoveModal(false)}\n          onOk={() => {\n            setRemoveModal(false)\n            doRemove({ goBack: true })\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DisapprovedLabel.module.scss'\n\nexport default function DisapprovedLabel(props) {\n  // INIT\n  const { reasons, ...other } = props\n\n  // Breaking down props\n  let { id } = props\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  // FUNCTIONS\n\n  function generateMessage(results) {\n    if (typeof results === 'string') {\n      return '\\u2022 ' + results\n    } else if (typeof results === 'object') {\n      let message = ''\n      results.map((value, index) => {\n        message += '\\u2022 ' + value + '\\n'\n      })\n      return message.substring(0, message.length - 1)\n    }\n  }\n\n  const open = Boolean(anchorEl)\n  id = open ? 'simple-popover' : id\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget)\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n  return (\n    <React.Fragment>\n      {reasons && reasons.length > 0 ? (\n        <div className={`${classes[`root`]} ${reasons.length > 0 ? classes.disapproved : ''}`}>\n          <div id={id} className={`${classes[`input-wrapper`]}`}>\n            <Typography\n              id={props.id}\n              variant='h6'\n              className={`${classes.label} ${classes['read-only-value']}`}\n              {...other}\n            >\n              {props.value}\n            </Typography>\n            {reasons.length > 0 ? (\n              <div id={`container-${id}`} className={classes['icon-container']}>\n                <FontAwesomeIcon\n                  id={`exc-circle-${id}`}\n                  icon='exclamation-circle'\n                  className={classes.icon}\n                  onClick={handleClick} />\n                <Popover\n                  id={id}\n                  open={open}\n                  anchorEl={anchorEl}\n                  onClose={handleClose}\n                  anchorOrigin={{\n                    vertical: 'center',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'center',\n                    horizontal: 'left'\n                  }}\n                >\n                  <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n                    {generateMessage(reasons)}\n                  </Typography>\n                </Popover>\n              </div>\n            ) : (\n                ''\n              )}\n          </div>\n        </div>\n      ) : (\n          ''\n        )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport classes from './TextFieldSubmit.module.scss'\nexport default function TextFieldSubmit (props) {\n  const { label = '', required, readOnly, error, onSubmit, ...other } = props\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {props.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper className={`${classes['text-field']} ${error && classes['has-error']}`}>\n              <InputBase className={classes.input} {...other} autoComplete='no' />\n              <Button\n                className={`button-positive ${classes.submit}`}\n                onClick={onSubmit}\n                variant='contained'\n                color='primary'\n                autoFocus\n              >\n                Send\n              </Button>\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  comment: Joi.string()\n    .trim()\n    .label('Comment')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextFieldSubmit from 'SharedComponents/TextFieldSubmit/TextFieldSubmit'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ChatBox.module.scss'\n\n// Validator\nimport ExcalateValidator from './EscalateValidator'\n\nexport default function ChatBox (props) {\n  let {\n    messages = [],\n    title,\n    permissions,\n    placeholder = 'Compose Message',\n    confirmMessage = 'Are you sure you want to reply to the escalated claim?',\n    okLabel = 'Send',\n    cancelLabel = 'Cancel',\n    onSubmitComment = () => {},\n    confirm = false\n  } = props\n\n  if (permissions.options) {\n    confirmMessage = permissions.options.confirmMessage\n    okLabel = permissions.options.okLabel\n    cancelLabel = permissions.options.cancelLabel\n    confirm = permissions.options.confirm\n  }\n\n  let lastDate = ''\n\n  const [confirmSubmitDialog, setConfirmSubmitDialog] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [comment, setComment] = React.useState('')\n\n  const isMe = args => {\n    const user_id = localStorage.getItem('user_id')\n    return args._id === user_id\n  }\n\n  const doDateSplit = date => {\n    const sdate = DateFormatter(date)\n\n    if (lastDate !== sdate) {\n      lastDate = sdate\n      return true\n    }\n    return false\n  }\n\n  const doValidate = () => {\n    const { error } = ExcalateValidator({ comment })\n    if (error) {\n      setErrors(error)\n      return !!error\n    }\n  }\n\n  const doSubmit = () => {\n    if (confirm) setConfirmSubmitDialog(true)\n    else onSubmitComment(comment)\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.root}>\n          <Paper className={classes.wrapper}>\n            {title && (\n              <div className={classes.header}>\n                <Typography variant='h6' className={classes.title}>\n                  {title}\n                </Typography>\n              </div>\n            )}\n\n            <div className={classes.body}>\n              {messages.length <= 0 ? (\n                <div className={classes.placeholder}>\n                  <Typography variant='subtitle2'>No Message</Typography>\n                </div>\n              ) : (\n                <div className={classes.messages}>\n                  {messages.map((m, index) => (\n                    <React.Fragment key={`${m.timestamp.object}`}>\n                      {doDateSplit(m.timestamp.object) && (\n                        <Typography variant='subtitle2' className={classes.split}>\n                          {DateFormatter(m.timestamp.object)}\n                        </Typography>\n                      )}\n                      <div\n                        key={`${index}`}\n                        className={`${classes.balloon} ${isMe(m.sender) ? classes.me : classes.receive} `}\n                      >\n                        <div className={classes.mheader}>\n                          <Typography variant='subtitle2' className={classes.sender}>\n                            {m.sender.username}\n                          </Typography>\n                          <Typography variant='subtitle2' className={classes.time}>\n                            {DateFormatter(m.timestamp.object, 'hh:mm A')}\n                          </Typography>\n                        </div>\n                        <div className={classes.mbody}>\n                          <Typography\n                            variant='subtitle2'\n                            style={{ whiteSpace: 'pre-line' }}\n                            className={classes.content}\n                          >\n                            {m.message}\n                          </Typography>\n                        </div>\n                      </div>\n                    </React.Fragment>\n                  ))}\n                </div>\n              )}\n            </div>\n            <div className={classes.action}>\n              {permissions.create && (\n                <div className={classes['comment-box']}>\n                  <TextFieldSubmit\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={comment}\n                    autoFocus\n                    fullWidth\n                    placeholder={placeholder}\n                    onChange={event => setComment(event.target.value)}\n                    onSubmit={event => !doValidate() && doSubmit()}\n                    error={errors.comment}\n                  />\n                </div>\n              )}\n            </div>\n          </Paper>\n          <Alert\n            open={confirmSubmitDialog}\n            message={confirmMessage}\n            cancelLabel={cancelLabel}\n            okLabel={okLabel}\n            onCancel={() => setConfirmSubmitDialog(false)}\n            onOk={() => {\n              setConfirmSubmitDialog(false)\n              onSubmitComment(comment)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './CustomTabs.module.scss'\n\nfunction TabPanel (props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <Typography\n      component='div'\n      role='tabpanel'\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      key={`tab-${index}`}\n      {...other}\n    >\n      <div>{children}</div>\n    </Typography>\n  )\n}\n\nconst CustomTabs = props => {\n  const { children, defaultIndex = 0, containerSyles = {} } = props\n  const [value, setValue] = React.useState(defaultIndex)\n\n  let items = React.Children.toArray(children)\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'CustomTab') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n  function handleChange (event, newValue) {\n    setValue(newValue)\n  }\n\n  return (\n    <div className={classes.root} style={containerSyles}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        indicatorColor='primary'\n        textColor='primary'\n        variant='scrollable'\n        scrollButtons='auto'\n        aria-label='scrollable auto tabs example'\n        className={classes['header']}\n      >\n        {items.map((item, index) => (\n          <Tab\n            id={`${item.props.id}-control`}\n            key={`${item.props.label}-tab-label`}\n            className={classes['item']}\n            label={item.props.label}\n          />\n        ))}\n      </Tabs>\n\n      {items.map((item, index) => (\n        <TabPanel\n          id={item.props.id}\n          key={`${item.props.label}-tab-content`}\n          className={classes['panels']}\n          value={value}\n          index={index}\n        >\n          {item}\n        </TabPanel>\n      ))}\n    </div>\n  )\n}\n\nconst CustomTab = ({ children }) => {\n  return children\n}\nCustomTab.displayName = 'CustomTab'\n\nexport { CustomTabs, CustomTab }\n","import React from 'react'\n\n// Components\nimport TreeView from '@material-ui/lab/TreeView'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport TreeItem from '@material-ui/lab/TreeItem'\n\n// Styles\nimport classes from './SideBar.module.scss'\n\nexport default function SideBar (props) {\n  const { contractId, nodes = [], onItemClick } = props\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['contract-id']}>\n        <span>CONTRACT ID</span>\n        <span className={classes.id}>{contractId}</span>\n      </div>\n      <div className={classes['plan-types']}>\n        <TreeView defaultCollapseIcon={<ExpandMoreIcon />} defaultExpandIcon={<ChevronRightIcon />}>\n          {nodes.map(node =>\n            node.type === 'item' ? (\n              <TreeItem\n                id={`${node.id}-control`}\n                key={`node-${node.id}`}\n                className={`${classes.node}`}\n                nodeId={`node-${node.id}`}\n                label={node.label}\n                onClick={() => onItemClick({ planPackage: node.planPackage, benefitCategory: node.benefitCategory })}\n              />\n            ) : (\n              <TreeItem\n                id={`${node.id}-control`}\n                key={`node-${node.id}`}\n                className={`${classes['benefit-label']}`}\n                nodeId={`node-${node.id}`}\n                label={node.label}\n              >\n                {node.benefits &&\n                  Object.keys(node.benefits).map(key => (\n                    <TreeItem\n                      id={`node-coverages-${node.benefits[key].details.tree_id}-control`}\n                      key={`node-coverages-${node.benefits[key].details.tree_id}`}\n                      className={classes.node}\n                      nodeId={`node-coverages-${node.benefits[key].details.tree_id}`}\n                      label={node.benefits[key].details.name}\n                      onClick={() =>\n                        onItemClick({\n                          planPackage: node.planPackage,\n                          benefitCategory: node.benefits[key].details.code\n                        })\n                      }\n                    />\n                  ))}\n              </TreeItem>\n            )\n          )}\n        </TreeView>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport classes from './ValueField.module.scss'\nimport { Typography } from '@material-ui/core'\n\nexport default function ValueField (props) {\n  const { title = '', label = '', value = '' } = props\n\n  return (\n    <div className={`${classes.root}`}>\n      {title !== '' && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {title}\n        </Typography>\n      )}\n      {label !== '' && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n        </Typography>\n      )}\n      <Typography variant='subtitle2' className={classes.value}>\n        {value}\n      </Typography>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport ValueField from '../ValueField/ValueField'\n\nimport classes from './FloatingFields.module.scss'\n\nexport default function FloatingFields (props) {\n  // Variables\n  const { elements, node } = props\n  // Events\n\n  const [fields, setFields] = React.useState([])\n\n  React.useEffect(() => {\n    if (!elements) return\n    const values = elements.map(elem => ({ ...elem, value: elem.data(node) }))\n    setFields(values)\n  }, [props])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        {fields.map(\n          field =>\n            field.value && (\n              <div key={field.id} className={classes[field.layout ? `w-${field.layout}` : 'w-100']}>\n                <ValueField\n                  key={`${field.id}`}\n                  id={field.id}\n                  title={field.title}\n                  label={field.label}\n                  value={field.value}\n                />\n              </div>\n            )\n        )}\n      </div>\n    </div>\n  )\n}\n","export default function (unit) {\n  if (!unit) return ''\n\n  switch (unit.toLowerCase()) {\n    case 'percentage':\n    case 'percent':\n      return '%'\n    case 'amount_limit':\n      return 'Amount Limit'\n    case 'max_session':\n      return 'Max Session'\n    case 'max_amount':\n      return 'Max Amount'\n    case 'percent_mbl':\n      return 'Percent of MBL'\n    case 'percent_abl':\n      return 'Percent of ABL'\n    case 'no_visits':\n      return 'No. of Visits'\n    default:\n      return unit\n  }\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  name: ({ nodes, details }) => details.name,\n  parent_name: ({ nodes, details }) => details.parent_name,\n  title: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.title', '-'),\n  limit_type: ({ nodes, details }) => details.limits.map(limit => limit.type).join('\\r\\n'),\n  age_limit: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.age_limit', 0),\n  max_availee: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.max_availee', 0),\n  number: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.number', 0),\n  required: ({ nodes, details }) => DefaultValue(SafeAccess(details, 'custom_metadata.required') || false),\n  no_of_days: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.no_of_days', ''),\n  time_from: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.time_from', ''),\n  time_to: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.time_to', ''),\n  member_type: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.member_type', ''),\n  plan_type: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.plan_type', ''),\n  peso_limit_amt: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.peso_limit_amt', ''),\n  no_of_members: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.no_of_members', 0),\n  peso_limit: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.peso_limit', ''),\n\n  // Arrays\n  payment: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.payment', ''),\n  availment: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.availment', ''),\n  limit: ({ nodes, details }) =>\n    details.limits\n      .map(limit => limit.limit && limit.limit_unit && `${DigitFormatter(limit.limit)} ${Unit(limit.limit_unit)}`)\n      .join('\\r\\n'),\n  rollover: ({ nodes, details }) => UpperWord(SafeAccess(details, 'custom_metadata.rollover', '')),\n  refresh: ({ nodes, details }) => UpperWord(SafeAccess(details, 'custom_metadata.refresh', '')),\n  eligible_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.eligible_availees', ''),\n  days_deployed: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.days_deployed', ''),\n  eligibility: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.eligibility', ''),\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    { id: 'limit', name: 'Limit', data: Functions.limit, search: true },\n    { id: 'rollover', name: 'Rollover', data: Functions.rollover, search: true },\n    { id: 'refresh', name: 'Refresh', data: Functions.refresh, search: true }\n  ],\n  // COVERAGE\n  EM: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    {\n      id: 'limit',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  IP: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'inner-limit-type',\n      name: 'Inner Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'inner-limit',\n      name: 'Inner Limit',\n      data: Functions.limit,\n      search: true\n    },\n    { id: 'daily-inner-limit', name: 'Daily Inner Limit', data: Functions.empty, search: true }\n  ],\n  OP: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'benefit', name: 'Benefit', data: Functions.name, search: true },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  PV: [\n    {\n      id: 'provision',\n      name: 'Provision',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  APE: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'minimum-age',\n      name: 'Minimum Age',\n      data: Functions.age_limit,\n      search: true\n    },\n    {\n      id: 'max-availee',\n      name: 'Max Availee',\n      data: Functions.max_availee,\n      search: true\n    },\n    { id: 'payment', name: 'Payment', data: Functions.payment, search: true },\n    {\n      id: 'required',\n      name: 'Required',\n      data: Functions.required,\n      search: true\n    }\n  ],\n  PPE: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'minimum_age',\n      name: 'Minimum Age',\n      data: Functions.age_limit,\n      search: true\n    },\n    {\n      id: 'max-availee',\n      name: 'Max Availee',\n      data: Functions.max_availee,\n      search: true\n    },\n    { id: 'payment', name: 'Payment', data: Functions.payment, search: true },\n    {\n      id: 'required',\n      name: 'Required',\n      data: Functions.required,\n      search: true\n    }\n  ],\n  SD: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    { id: 'limit', name: 'Limit', data: Functions.limit, search: true }\n  ],\n\n  // RIDERS\n  MT: [\n    { id: 'provision', name: 'Provision', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    },\n    { id: 'availment-type', name: 'Availment Type', data: Functions.availment, search: true }\n  ],\n  OM: [\n    {\n      id: 'excluded-medicine',\n      name: 'Excluded Medicine',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    },\n    {\n      id: 'availment-type',\n      name: 'Availment Type',\n      data: Functions.availment,\n      search: true\n    }\n  ],\n  CC: [\n    {\n      id: 'personnel',\n      name: 'Personnel',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'number',\n      name: 'Number',\n      data: Functions.number,\n      search: true\n    },\n    {\n      id: 'no-of-days',\n      name: 'No. of Days',\n      data: Functions.number_of_days,\n      search: true\n    },\n    {\n      id: 'days-deployed',\n      name: 'Days Deployed',\n      data: Functions.days_deployed,\n      search: true\n    },\n    {\n      id: 'time-from',\n      name: 'Time From',\n      data: Functions.time_from,\n      search: true\n    },\n    {\n      id: 'time-to',\n      name: 'Time To',\n      data: Functions.time_to,\n      search: true\n    }\n  ],\n  DNT: [\n    {\n      id: 'category',\n      name: 'Category',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  SH: [\n    {\n      id: 'plan',\n      name: 'Plan',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'member-type',\n      name: 'Member Type',\n      data: Functions.member_type,\n      search: true\n    }\n  ],\n  ADD: [\n    {\n      id: 'provision',\n      name: 'Provision',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'member-type',\n      name: 'Member Type',\n      data: Functions.member_type,\n      search: true\n    },\n    {\n      id: 'plan-type',\n      name: 'Plan Type',\n      data: Functions.plan_type,\n      search: true\n    },\n    {\n      id: 'peso-limit-amount',\n      name: 'Peso Limit Amount',\n      data: Functions.peso_limit_amt,\n      search: true\n    }\n  ],\n  ECU: [\n    {\n      id: 'benefit',\n      name: 'Benefit',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'eligibility',\n      name: 'Eligibility',\n      data: Functions.eligibility,\n      search: true\n    },\n    {\n      id: 'no-of-members',\n      name: 'No. of Members',\n      data: Functions.no_of_members,\n      search: true\n    },\n    {\n      id: 'number',\n      name: 'Number',\n      data: Functions.number,\n      search: true\n    },\n    {\n      id: 'peso-limit',\n      name: 'Peso Limit',\n      data: Functions.peso_limit,\n      search: true\n    }\n  ]\n}\n","export default function (value) {\n  switch (typeof value) {\n    case 'boolean':\n      return value ? 'Yes' : 'Optional'\n    case 'number':\n      return value\n    default:\n      return '--'\n  }\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  mobile_ape_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.mobile_ape_availees', ''),\n  partner: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.dental_form_partner', '-'),\n  rate: ({ nodes, details }) => `${DigitFormatter(SafeAccess(details, 'custom_metadata.dental_form_rate', 0))} PHP`,\n  rb_limit_type: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const abl_mbl = limits.find(item => ['ABL', 'MBL'].includes(item.type))\n    if (!abl_mbl) return ''\n    return abl_mbl.type ? abl_mbl.type : ''\n  },\n  rb_limit: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const abl_mbl = limits.find(item => ['ABL', 'MBL'].includes(item.type))\n    if (!abl_mbl) return ''\n    return abl_mbl.limit ? `${DigitFormatter(abl_mbl.limit)} ${Unit(abl_mbl.limit_unit)}` : ''\n  },\n  rb_mode_of_payment: ({ nodes, details }) => {\n    const modeOfPayment = {\n      annual: 'Annual',\n      semiannual: 'Semi-Annual',\n      quarterly: 'Quarterly',\n      monthly: 'Monthly'\n    }\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return modeOfPayment[data.mode_of_payment] || ''\n  },\n  rb_pec_limit_type: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    const units = {\n      PHP: 'Peso',\n      Months: 'Time-based'\n    }\n    return units[pec.limit_unit] || ''\n  },\n  rb_pec_limit: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    if (!['Percentage', 'PHP'].includes(pec.limit_unit)) return ''\n    return `${DigitFormatter(pec.limit)} ${pec.limit_unit}`\n  },\n  rb_pec_limit_specify: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    if (['Percentage', 'PHP'].includes(pec.limit_unit)) return ''\n    if (!pec.time_based_limit) return ''\n    const lines = pec.time_based_limit.map(\n      item => `After ${item.number_mount} ${item.day_based}: ${item.limit} ${Unit(item.limit_type)}`\n    )\n    return lines.join('\\r\\n')\n  },\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    {\n      id: 'limit-type',\n      title: 'Limit Type',\n      label: '',\n      data: Functions.rb_limit_type,\n      layout: '30'\n    },\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: '',\n      data: Functions.rb_limit,\n      layout: '30'\n    },\n    {\n      id: 'mode-of-payment',\n      title: 'Mode of Payment',\n      label: '',\n      data: Functions.rb_mode_of_payment,\n      layout: '30'\n    },\n    {\n      id: 'pec-limit-type',\n      title: 'PEC Limit Type',\n      label: '',\n      data: Functions.rb_pec_limit_type,\n      layout: '30'\n    },\n    {\n      id: 'pec-limit',\n      title: 'PEC  Limit',\n      label: '',\n      data: Functions.rb_pec_limit,\n      layout: '30'\n    },\n    {\n      id: 'specify-limit',\n      title: 'Specify  Limit*',\n      label: '',\n      data: Functions.rb_pec_limit_specify,\n      layout: '30'\n    }\n  ],\n  // COVERAGE\n  EM: [],\n  IP: [],\n  OP: [],\n  PV: [],\n  APE: [],\n  PPE: [],\n  SD: [],\n\n  // RIDERS\n  MT: [],\n  OM: [],\n  CC: [],\n  DNT: [\n    {\n      id: 'partner',\n      title: 'Partner',\n      label: '',\n      data: Functions.partner,\n      layout: '50'\n    },\n    {\n      id: 'rate-person',\n      title: 'Rate/Person',\n      label: '',\n      data: Functions.rate,\n      layout: '50'\n    }\n  ],\n  SH: [],\n  ADD: [],\n  ECU: []\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  mobile_ape_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.mobile_ape_availees', ''),\n  billing_arangement: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    const billingArrangement = {\n      premium: 'Imputed in premiums',\n      billback: 'Bill back with admin fee',\n      rider_fee: '1-time rider fee to be upon enrollment',\n      imputed_in_premiums: 'Imputed in premiums',\n      billback_net: 'Bill back, net of APE cost with admin fee',\n      fixed_rate_rider: 'Scheduled fixed rate for the entire rider',\n      fixed_rate_personnel: 'Scheduled fixed rate per personnel deployed',\n      soa_rate: 'Scheduled SOA based on fixed rate/hour/personnel deployed',\n      soa_actual_cost: 'Scheduled SOA based on actual cost of personnel deployed'\n    }\n    // CC\n    // const billingArrangement = {\n    //   premium: \"Imputed in premiums\",\n    //   fixed_rate_rider: \"Scheduled fixed rate for the entire rider\",\n    //   fixed_rate_personnel: \"Scheduled fixed rate per personnel deployed\",\n    //   soa_rate: \"Scheduled SOA based on fixed rate/hour/personnel deployed\",\n    //   soa_actual_cost: \"Scheduled SOA based on actual cost of personnel deployed\",\n    //   rider_fee: \"1-time rider fee to be upon start of contract\",\n    // }\n    // ECU\n    // const billingArrangement = {\n    //   imputed_in_premiums: 'Imputed in premiums',\n    //   billback: 'Bill back with admin fee',\n    //   billback_net: 'Bill back, net of APE cost with admin fee',\n    //   rider_fee: '1-time rider fee to be upon enrollment'\n    // }\n    // MT\n    // const billingArrangement = {\n    //   premium: \"Imputed in premiums\",\n    //   billback: \"Bill back with admin fee\",\n    //   rider_fee: \"1-time rider fee to be upon enrollment\"\n    // }\n    if (!data) return ''\n    if (!billingArrangement[data.billing_arangement]) return ''\n    return [\n      billingArrangement[data.billing_arangement],\n      data.billback_fee ? `${data.billback_fee} ${Unit(data.billback_type)}` : '',\n      data.rider_fee ? `${data.rider_fee} ${Unit(data.rider_fee_unit)}` : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n  waiting_period: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data || !data.waiting_period_type) return ''\n    return [\n      data.waiting_period_type === 'effectivity' ? 'Waiting period after effectivity of member' : '',\n      data.waiting_period_type === 'date_of_hire' ? 'Waiting period after date of hire' : '',\n      data.waiting_period ? `${data.waiting_period} ${Unit(data.waitin_period_unit)}` : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n  limit: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.limit ? `${data.limit} ${Unit(data.limit_unit)}` : ''\n  },\n  limit_for_all: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.limit_for_all ? `${data.limit_for_all} ${Unit(data.limit_for_all_unit)}` : ''\n  },\n  availment_per_year: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.availment_per_year ? `${DigitFormatter(data.availment_per_year)}` : ''\n  },\n  voluntary_upgrading_type: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    if (!data.voluntary_upgrading_type) return ''\n    switch (data.voluntary_upgrading_type) {\n      case 'paid_by_member':\n        return 'Room and Board difference is paid by the Member'\n      case 'first_hours_free':\n        return data.voluntary_upgrading_amount\n          ? `First ${data.voluntary_upgrading_amount} hours free`\n          : 'First 0 hour free'\n      case 'rate':\n        return data.voluntary_upgrading_amount ? `Rate: ${data.voluntary_upgrading_amount} %` : 'Rate: 0%'\n    }\n  },\n  involuntary_upgrading_type: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    if (!data.involuntary_upgrading_type) return ''\n    return [\n      data.except_suite_room && data.except_suite_room === true ? 'Except Suite Room' : '',\n      data.involuntary_upgrading_type === 'paid_by_member' ? 'Room and Board difference is paid by the Member' : '',\n      data.involuntary_upgrading_type === 'first_hours_free'\n        ? `First ${data.involuntary_upgrading_amount ? `${data.involuntary_upgrading_amount} hours` : '0 hour'} free`\n        : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    {\n      id: 'involuntary-room-upgrading',\n      title: 'Involuntary Room Upgrading',\n      label: '',\n      data: Functions.involuntary_upgrading_type\n    },\n    {\n      id: 'voluntary-room-upgrading',\n      title: 'Voluntary Room Upgrading',\n      label: '',\n      data: Functions.voluntary_upgrading_type\n    }\n  ],\n  // COVERAGE\n  EM: [\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    },\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  IP: [\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: 'Amount Limit for all procedures',\n      data: Functions.limit\n    }\n  ],\n  OP: [\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: 'Amount Limit for all procedures',\n      data: Functions.limit\n    }\n  ],\n  PV: [],\n  APE: [\n    {\n      id: 'mobile-ape',\n      title: 'Mobile APE',\n      label: 'Min no. of availees in a shift (8 hrs)',\n      data: Functions.mobile_ape_availees\n    }\n  ],\n  PPE: [],\n  SD: [\n    {\n      id: 'limit',\n      title: 'Limit for All',\n      label: '',\n      data: Functions.limit_for_all\n    }\n  ],\n\n  // RIDERS\n  MT: [\n    {\n      id: 'availment-per-year',\n      title: 'Availment Per Year',\n      label: '',\n      data: Functions.availment_per_year\n    },\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    },\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  OM: [\n    {\n      id: 'limit',\n      title: 'Limit for All',\n      label: '',\n      data: Functions.limit_for_all\n    },\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    }\n  ],\n  CC: [\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  DNT: [\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    }\n  ],\n  SH: [],\n  ADD: [],\n  ECU: []\n}\n","import React from 'react'\n\n// Components\n\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\n\nimport SideBar from './Components/SideBar/SideBar'\nimport FloatingFields from './Components/FloatingFields/FloatingFields'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Utilities\nimport { includesAny } from 'Utilities/ArrayCompare'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Mapper\nimport BenefitTable from './Mapper/BenefitTable'\nimport BenefitHeaders from './Mapper/BenefitHeaders'\nimport BenefitFooters from './Mapper/BenefitFooters'\n\n// Styles\nimport classes from './Benefits.module.scss'\n\nexport default function Benefits (props) {\n  // Events\n\n  // Variables\n  const { isMember, member, client } = props\n\n  // Collections\n  const [columns, setColumns] = React.useState([])\n  const [rows, setRows] = React.useState([])\n\n  // Table Variables\n  const [table, setTable] = React.useState({\n    count: 0,\n    orderBy: 0,\n    order: 'asc',\n    limit: 5,\n    filters: { all: '', fields: {} },\n    page: 1,\n    rowsPerPageOptions: [5, 10, 15, 20]\n  })\n\n  // Local Variables\n  const [contractId, setContractId] = React.useState('')\n  const [planType, setPlanType] = React.useState('')\n  const [planPackage, setPlanPackage] = React.useState('')\n  const [benefitCategory, setBenefitCategory] = React.useState('')\n  const [lastRoomAndBoard, setLastRoomAndBoard] = React.useState('')\n\n  // Nodes\n  const [roomAndBoard, setRoomAndBoard] = React.useState({})\n  const [coverages, setCoverages] = React.useState({})\n  const [riders, setRiders] = React.useState({})\n\n  const [rootNode, setRootNode] = React.useState({})\n  const [benefitNode, setBenefitNode] = React.useState({})\n\n  const [headers, setHeaders] = React.useState([])\n  const [footers, setFooters] = React.useState([])\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      if (!member.latest_contract) return\n      let { plan_type } = member.info\n      const { MCT } = member.benefit_tree\n      plan_type = plan_type\n        .toUpperCase()\n        .split(' ')\n        .join('')\n\n      setContractId(member.latest_contract._id)\n      setPlanType(plan_type)\n      setRootNode(MCT)\n\n      const rnb = SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.RB`)\n      setRoomAndBoard(rnb)\n      setCoverages(SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.CV.nodes`))\n      setRiders(SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.RI.nodes`))\n\n      const _keys = Object.keys(rnb.nodes).sort()\n      const _name = _keys[_keys.length - 1]\n      setLastRoomAndBoard(_name)\n      setPlanPackage('RB')\n      setBenefitCategory(_name)\n    } else {\n    }\n  }, [isMember, member, client])\n\n  React.useEffect(() => {\n    if (planType === '' || planPackage === '' || benefitCategory === '') return\n    setBenefitNode(SafeAccess(rootNode, `nodes.CT.nodes.${planType}.nodes.${planPackage}.nodes.${benefitCategory}`))\n  }, [rootNode, planType, planPackage, benefitCategory])\n\n  React.useEffect(() => {\n    if (!benefitNode) return\n    const _rows = getRows()\n    setRows(_rows)\n    setColumns(BenefitTable[planPackage === 'RB' ? 'RB' : benefitCategory] || [])\n    setTable(state => ({ ...state, count: _rows.length }))\n\n    setHeaders(getHeaders())\n    setFooters(getFooters())\n  }, [benefitNode])\n\n  const getRows = () => {\n    let _columns = BenefitTable[benefitCategory]\n    const { nodes } = benefitNode\n\n    let parent_keys = []\n    if (benefitCategory === lastRoomAndBoard) {\n      if (!benefitNode) return []\n\n      if (Object.keys(benefitNode).length <= 0) {\n        return []\n      }\n    } else if (lastRoomAndBoard === '') {\n      return []\n    } else {\n      if (!nodes) return []\n\n      if (Object.keys(nodes).length <= 0) return []\n\n      parent_keys = Object.keys(nodes).sort()\n    }\n\n    let _rows = []\n    switch (benefitCategory) {\n      case lastRoomAndBoard:\n        _columns = BenefitTable['RB']\n        _rows = [_columns.map(col => col.data(benefitNode))]\n        break\n      case 'EM':\n      case 'PV':\n      case 'SD':\n      case 'ADD':\n        _rows = parent_keys.map((key, index) => _columns.map(col => col.data(nodes[key])))\n        break\n      default:\n        _rows = parent_keys\n          .map((pkey, index) =>\n            Object.keys(nodes[pkey].nodes)\n              .sort()\n              .map(key => {\n                const sub_node = nodes[pkey].nodes[key]\n                sub_node.details.parent_name = nodes[pkey].details.name\n                return _columns.map(col => col.data(sub_node))\n              })\n          )\n          .reduce((acc, curr) => [...acc, ...curr], [])\n\n        break\n    }\n\n    return _rows\n  }\n\n  const renderRows = () => {\n    if (!rows) return\n    const { all, fields } = table.filters\n\n    let _rows = rows\n\n    const ascending = (a, b) => a[table.orderBy].length - b[table.orderBy].length\n\n    const descending = (a, b) => b[table.orderBy].length - a[table.orderBy].length\n\n    _rows = table.order === 'asc' ? rows.sort(ascending) : rows.sort(descending)\n\n    _rows = _rows.filter(row => row.map((col, index) => includesAny(`${col}`, all)).some(val => val))\n\n    _rows = _rows.filter(\n      row =>\n        !row\n          .map((col, index) => {\n            if (!fields[index]) return true\n            return includesAny(`${col}`, fields[index])\n          })\n          .some(val => val === false)\n    )\n\n    return _rows.slice((table.page - 1) * table.limit, table.page * table.limit).map((row, index) => (\n      <TableRow key={`limits-row-${index}`}>\n        {columns.map((col, index) => (\n          <TableCell key={`limits-row-${index}-column-${col.id}`}>{row[index]}</TableCell>\n        ))}\n      </TableRow>\n    ))\n  }\n\n  const getHeaders = () => {\n    if (planPackage === 'RB') return BenefitHeaders['RB']\n    return BenefitHeaders[benefitCategory]\n  }\n\n  const getFooters = () => {\n    if (planPackage === 'RB') return BenefitFooters['RB']\n    return BenefitFooters[benefitCategory]\n  }\n\n  const handleSidebarItemClick = args => {\n    const { planPackage, benefitCategory } = args\n    setPlanPackage(planPackage)\n    setBenefitCategory(benefitCategory)\n  }\n\n  const handleTableSort = ({ id, index }) => {\n    const order = table.order === 'asc' ? 'desc' : 'asc'\n    setTable(state => ({ ...state, orderBy: index, order }))\n  }\n\n  const handleTableFilter = ({ id, value, index }) => {\n    setTable(state => ({\n      ...table,\n      filters: { ...state.filters, fields: { ...state.filters.fields, [index]: value } }\n    }))\n  }\n\n  const handleOnChangeSearchBox = value => {\n    setTable(state => ({ ...table, filters: { ...state.filters, all: value } }))\n  }\n\n  const handleOnPaginate = args => {\n    setTable(state => ({ ...state, ...args }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <div className={classes['left-side']}>\n          <Typography className={classes.title}>Member Benefits</Typography>\n          <SideBar\n            contractId={contractId}\n            nodes={[\n              {\n                id: 'room_and_board',\n                label: 'Room and Board',\n                type: 'item',\n                planPackage: 'RB',\n                benefitCategory: lastRoomAndBoard\n              },\n              {\n                id: 'coverage',\n                label: 'Coverage',\n                type: 'list',\n                planPackage: 'CV',\n                benefits: coverages\n              },\n              {\n                id: 'riders',\n                label: 'Riders',\n                type: 'list',\n                planPackage: 'RI',\n                benefits: riders\n              }\n            ]}\n            onItemClick={handleSidebarItemClick}\n          />\n        </div>\n        <div className={classes['right-side']}>\n          <div className={classes.header}>\n            <FloatingFields elements={headers} node={planPackage === 'RB' ? roomAndBoard : benefitNode} />\n          </div>\n          {planPackage !== 'RB' && (\n            <div className={classes['table-header']}>\n              <div className={classes.search}>\n                <SearchTextComponent onChange={event => handleOnChangeSearchBox(event.target.value)} />\n              </div>\n              <div className={classes.contract}>\n                <span>Contract Type</span>\n                <span>---</span>\n              </div>\n            </div>\n          )}\n\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {columns.map((cell, index) => (\n                    <TableCell key={cell.data}>\n                      <TableSortLabel\n                        active={table.orderBy === cell.id || table.orderBy === index}\n                        direction={table.order === 'asc' ? 'asc' : 'desc'}\n                        onClick={event => handleTableSort({ id: cell.id, index })}\n                      >\n                        {cell.name}\n                      </TableSortLabel>\n                      {cell.search && (\n                        <TextField\n                          id={`${cell.id}-input`}\n                          className={`${classes.search}`}\n                          onChange={event => handleTableFilter({ value: event.target.value, id: cell.id, index })}\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={renderRows()}\n              pagination\n              count={table.count}\n              page={table.page}\n              limit={table.limit}\n              rowsPerPageOptions={table.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n            />\n          </div>\n          <div className={classes.footer}>\n            <FloatingFields elements={footers} node={planPackage === 'RB' ? roomAndBoard : benefitNode} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Utilities\nimport { setPaginate } from './Utils/pagination'\nimport { sort } from './Utils/sortBy'\nimport { onQuery } from './Utils/query'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './Exclusions.module.scss'\n\nlet columns = [\n  { name: 'Type', sortField: 'type', search: true },\n  { name: 'Item', sortField: 'item_name', search: true }\n]\n\nexport default function Benefits (props) {\n  const { isMember, member, client } = props\n\n  const [selectedPlan, setSelectedPlan] = React.useState('BASE')\n  const [planTypes, setPlanTypes] = React.useState([])\n  const [rows, setRows] = React.useState([])\n  const [allExclusions, setAllExclusions] = React.useState([])\n  const [exclusionList, setExclusionList] = React.useState({\n    data: [],\n    orderBy: '',\n    order: 'desc',\n    count: 0,\n    page: 1,\n    limit: 5,\n    filter: {},\n    search: {},\n    plan_type: '',\n    rowsPerPageOptions: [5, 10, 15]\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      // getExclusions(member.benefit_tree)\n      const _rows = getExclusions2(member.benefit_tree)\n\n      setAllExclusions(_rows)\n      setExclusionList(state => ({ ...state, data: _rows, count: _rows.length }))\n      setRows(_rows.slice(0, exclusionList.limit))\n      handleOnSetItem(selectedPlan)\n    }\n  }, [member, isMember, client])\n\n  const getExclusions = nodes => {\n    const { MCT } = nodes\n    let arr_list = []\n\n    if (Object.keys(nodes).length) {\n      let plan_types = SafeAccess(MCT, `nodes.CT.nodes`, {})\n      let plan_type_keys = Object.keys(plan_types)\n\n      setPlanTypes(plan_type_keys)\n\n      for (const type of plan_type_keys) {\n        Object.keys(plan_types[type].nodes).forEach(i => {\n          if (i === 'EX') {\n            let child_node = Object.keys(plan_types[type].nodes[i].nodes)\n              .map(c => plan_types[type].nodes[i].nodes[c])\n              .filter(i => Object.keys(i.nodes).length)\n              .map(outer_node => {\n                if (Object.keys(outer_node.nodes).length) {\n                  return Object.values(outer_node.nodes)\n                    .filter(i => i.details.custom_metadata.is_excluded)\n                    .map(inner_node => ({\n                      item_name: inner_node.details.name,\n                      plan_type: type,\n                      type: outer_node.details.name,\n                      code: inner_node.details.code,\n                      parent_code: outer_node.details.code\n                    }))\n                }\n              })\n            arr_list = [].concat.apply([], child_node)\n          }\n        })\n      }\n    }\n    let _rows = arr_list.filter(benefit => benefit.plan_type === selectedPlan)\n\n    setAllExclusions(arr_list)\n    setExclusionList(state => ({ ...state, data: _rows, count: _rows.length }))\n    setRows(_rows.slice(0, exclusionList.limit))\n  }\n\n  const getExclusions2 = nodes => {\n    const { MCT } = nodes\n    const plan_types = SafeAccess(MCT, `nodes.CT.nodes`, {})\n\n    const plan_types_keys = Object.keys(plan_types)\n    setPlanTypes(plan_types_keys)\n\n    let rows = []\n    plan_types_keys.forEach(planTypeKey => {\n      const ex_nodes = SafeAccess(plan_types, `${planTypeKey}.nodes.EX.nodes`, null)\n      if (ex_nodes) {\n        Object.keys(ex_nodes).map(exclusionKey => {\n          const inner_node = ex_nodes[exclusionKey]\n          Object.keys(inner_node.nodes).map(innerKey => {\n            const { details } = inner_node.nodes[innerKey]\n            if (details.custom_metadata.is_excluded) {\n              rows.push({\n                item_name: details.name,\n                plan_type: planTypeKey,\n                type: inner_node.details.name,\n                code: details.code,\n                parent_code: inner_node.details.code\n              })\n            }\n          })\n        })\n      }\n    })\n    return rows\n  }\n  // TODO will park this for now\n  // const handleOnSearchAll = args => {\n  //   const { search, page } = args\n\n  //   const queriedData = onQueryAll({\n  //     search: search.toLowerCase(),\n  //     data: allExclusions.filter(benefit => benefit.plan_type === selectedPlan)\n  //   })\n\n  //   setExclusionList(state => ({ ...state, page, count: queriedData.length, data: queriedData }))\n  //   setRows(queriedData.slice(0, exclusionList.limit))\n  // }\n  const handleOnSearch = args => {\n    const { search, page, range } = args\n    const _data = allExclusions.filter(benefit => benefit.plan_type === selectedPlan)\n\n    if (range !== 'all') {\n      exclusionList.filter[range] = search\n    } else {\n      exclusionList.search[range] = search\n    }\n\n    const queriedData = onQuery({ filter: exclusionList.filter, search: exclusionList.search, data: _data })\n\n    setExclusionList(state => ({ ...state, page, count: queriedData.length, data: queriedData }))\n    setRows(queriedData.slice(0, exclusionList.limit))\n  }\n\n  const handleOnPaginate = args => {\n    const { data, limit, page } = setPaginate({ args, exc: exclusionList })\n    setExclusionList(state => ({ ...state, limit, page }))\n    setRows(data)\n  }\n\n  const handleOnSetItem = item => {\n    let _rows = allExclusions.filter(benefit => benefit.plan_type === item)\n\n    setSelectedPlan(item)\n    setExclusionList(state => ({\n      ...state,\n      data: _rows,\n      count: _rows.length,\n      page: 1,\n      limit: state.rowsPerPageOptions[0]\n    }))\n    setRows(_rows.slice(0, exclusionList.rowsPerPageOptions[0]))\n\n    // TODO\n    // setExclusionList(state => ({ ...state, data: _rows, count: _rows.length, page: 1 }))\n    // setRows(_rows.slice(0, exclusionList.limit))\n  }\n\n  const handleOnSort = args => {\n    const { data: sortedData } = sort({ data: rows, field: args.orderBy, direction: args.order })\n\n    setRows(sortedData.slice(0, exclusionList.limit))\n    setExclusionList(state => ({ ...state, ...args }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header} />\n      <div className={classes.body}>\n        <div className={classes[`plan-types`]}>\n          {planTypes.map((item, index) => (\n            <Typography key={`plan-${index}`} className={classes.type}>\n              <Link onClick={() => handleOnSetItem(item)}>\n                <span>{item}</span>\n              </Link>\n            </Typography>\n          ))}\n        </div>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-exclusion'\n            onChange={e => {\n              const search = e.target.value\n              clearTimeout(debounce)\n              setDebounce(\n                setTimeout(() => {\n                  handleOnSearch({ search, page: 1, range: 'all' })\n                }, 500)\n              )\n            }}\n            placeholder='Search'\n          />\n        </div>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map(headCell => (\n                  <TableCell key={headCell.sortField}>\n                    <TableSortLabel\n                      active={exclusionList.orderBy === headCell.sortField}\n                      direction={exclusionList.order ? 'asc' : 'desc'}\n                      onClick={event => handleOnSort({ orderBy: headCell.sortField, order: !exclusionList.order })}\n                    >\n                      {headCell.name}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <TextField\n                        id={`${headCell.sortField}-input`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={e => {\n                          const search = e.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnSearch({ search, page: 1, range: headCell.sortField })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              rows.length ? (\n                rows.map((row, index) => (\n                  <TableRow id={`exlusions-tab-row-${index}`} key={`ex-${index}`}>\n                    <TableCell id={`exlusions-tab-row-item-${index}-type`}>{row.type}</TableCell>\n                    <TableCell id={`exlusions-tab-row-item-${index}-name`}>{row.item_name}</TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={2}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={exclusionList.count}\n            page={exclusionList.page}\n            limit={exclusionList.limit}\n            rowsPerPageOptions={exclusionList.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const onQuery = args => {\n  const { filter, search, data } = args\n  let mutable_data = []\n\n  if (search.all) {\n    const _search = search.all.toLowerCase()\n    mutable_data = data.filter(\n      i => i.item_name.toLowerCase().includes(_search) || i.type.toLowerCase().includes(_search)\n    )\n  } else {\n    mutable_data = data\n  }\n\n  if (Object.keys(filter).length > 0) {\n    const fields = Object.keys(filter)\n    fields.forEach((field, index) => {\n      const search = filter[field].toLowerCase()\n\n      if (index === 0) {\n        mutable_data = mutable_data.filter(item => item[field].toLowerCase().includes(search))\n      } else {\n        mutable_data = mutable_data.filter(item => item[field].toLowerCase().includes(search))\n      }\n    })\n  }\n\n  return mutable_data\n}\n","import lodash from 'lodash'\n\nexport const setPaginate = ({ args, exc }) => {\n  const { page, limit } = args\n\n  if (args && limit && page) return { page, limit, data: lodash.take(exc.data, limit) }\n\n  return { page, limit: exc.limit, data: lodash.chunk(exc.data, exc.limit)[page - 1] }\n}\n","import lodash from 'lodash'\n\nexport const sort = args => {\n  return { data: lodash.orderBy(args.data, [args.field], [args.direction ? 'asc' : 'desc']) }\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport Typography from '@material-ui/core/Typography'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\n// Utilities\nimport { compare, includesAny } from 'Utilities/ArrayCompare'\n\n// Styles\nimport classes from './PartnerNetwork.module.scss'\n\nconst headCells = [\n  { name: 'Code', sortField: 'id', search: true },\n  { name: 'Name', sortField: 'name', search: true },\n  { name: 'Location', sortField: 'address', search: true },\n  // { name: 'Type', sortField: 'type', search: true },\n  // { name: 'Groupings', sortField: 'groups', search: true },\n  { name: '', sortField: 'affiliated_doctors', search: false }\n]\n\nconst headCellsDoctors = [\n  { name: 'Medical Partner ID', sortField: 'id', search: true },\n  { name: 'Doctor Name', sortField: 'name', search: true },\n  { name: 'Specialization', sortField: 'specialization', search: true },\n  { name: 'Schedule', sortField: 'schedule', search: true },\n  { name: 'Remarks', sortField: 'remarks', search: false }\n]\n\nexport default function PartnerNetwork (props) {\n  const { partnerService, doctorService, memberAccountNumber } = props\n  const [partnerId, setPartnerId] = React.useState('')\n  const [partnerName, setPartnerName] = React.useState('')\n  const [partnerLocation, setPartnerLocation] = React.useState('')\n\n  const [partners, setPartners] = React.useState({\n    data: [],\n    category: 'all',\n    search: '',\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [doctors, setDoctors] = React.useState({\n    show: false,\n    facility_id: '',\n    data: [],\n    filtered: [],\n    filters: {},\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [anySearch, setAnySearch] = React.useState('')\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const fetchAll = () => {\n    partnerService({\n      member_account_no: memberAccountNumber,\n      params: { limit: partners.limit, page: 1, sort: 'name|asc', search: '', category: 'all' }\n    }).then(res => {\n      const { data } = res.data\n      setPartners(state => ({\n        ...state,\n        data: data.results,\n        count: data.count,\n        page: 1,\n        orderBy: 'name',\n        order: true\n      }))\n    })\n  }\n\n  const fetchDoctors = ({ facility_id, filters }) => {\n    doctorService({\n      member_account_no: memberAccountNumber,\n      params: { limit: partners.limit, page: 1, sort: 'name|asc', search: '', category: 'all' },\n      facility_id,\n      filters\n    }).then(res => {\n      const { data } = res.data\n      setDoctors(state => ({\n        ...state,\n        ...data,\n        show: true,\n        facility_id,\n        data: data.results,\n        filtered: data.results,\n        filters\n      }))\n    })\n  }\n\n  const lodash = require('lodash')\n\n  React.useEffect(() => {\n    if (memberAccountNumber) fetchAll()\n  }, [memberAccountNumber])\n\n  React.useEffect(() => {\n    let filtered = doctors.data\n    for (const filter in doctors.filters) {\n      filtered = filtered.filter(item => {\n        if (typeof item[filter] !== 'object') {\n          return includesAny(item[filter], doctors.filters[filter])\n        } else {\n          for (const field in item[filter]) {\n            if (includesAny(item[filter][field], doctors.filters[filter])) return true\n          }\n        }\n      })\n    }\n    filtered = lodash.sortBy(filtered, doctors.sortBy, doctors.sort ? 'asc' : 'desc')\n    setDoctors(state => ({ ...state, filtered }))\n  }, [doctors.filters])\n\n  const queryColumn = (collection, { search, field }) => {\n    setPartners(state => ({ ...state, search, category: field }))\n    if (collection === 'partners') {\n      clearTimeout(debounce)\n      setDebounce(\n        setTimeout(() => {\n          let searchObj = search\n          let category = field\n          if (field === 'id') {\n            setPartnerId(search)\n            if (partnerName || partnerLocation) {\n              searchObj = {\n                id: search,\n                name: partnerName,\n                address: partnerLocation\n              }\n              category = 'and'\n            }\n          }\n          if (field === 'name') {\n            setPartnerName(search)\n            if (partnerId || partnerLocation || anySearch) {\n              searchObj = {\n                id: partnerId,\n                name: search,\n                address: partnerLocation,\n                any: anySearch\n              }\n              category = 'and'\n            }\n          }\n          if (field === 'address') {\n            setPartnerLocation(search)\n            if (partnerId || partnerName || anySearch) {\n              searchObj = {\n                id: partnerId,\n                name: partnerName,\n                address: search,\n                any: anySearch\n              }\n              category = 'and'\n            }\n          }\n          if (field === 'any') {\n            // Workaround for adding support for \"inclusive any\"\n\n            setAnySearch(search)\n\n            let obj = {\n              id: partnerId,\n              name: partnerName,\n              address: partnerLocation\n            }\n\n            let flag = false\n            // Check if the other fields have values and include them in the search\n            Object.entries(obj).forEach(value => {\n              if (value[1] && value[1].length > 1) {\n                if (flag === false) {\n                  searchObj = {\n                    any: search\n                  }\n                  category = 'and'\n                  flag = true\n                }\n                searchObj[value[0]] = value[1]\n              }\n            })\n          }\n          if (search.length >= 3 || (!search && category === 'and')) {\n            setPartners(state => ({ ...state, search: searchObj }))\n            partnerService({\n              member_account_no: memberAccountNumber,\n              params: {\n                limit: partners.limit,\n                page: partners.page,\n                sort: `${partners.orderBy}|${partners.order ? 'asc' : 'desc'}`,\n                search: searchObj,\n                category: category\n              }\n            }).then(res => {\n              const { data } = res.data\n              setPartners(state => ({\n                ...state,\n                data: data.results,\n                count: data.count,\n                page: 1,\n                orderBy: 'name',\n                order: true\n              }))\n            })\n          } else fetchAll()\n        }, 500)\n      )\n    } else {\n      setDoctors(state => ({ ...state, filters: { [field]: search } }))\n    }\n  }\n\n  const handleOnSort = (collection, orderBy) => e => {\n    if (collection === 'partners') {\n      let _partners = () => {\n        let _partners = partners\n        delete _partners.data\n        return _partners\n      }\n\n      let _params = {\n        ..._partners(),\n        orderBy,\n        order: !partners.order,\n        sort: `${orderBy}|${partners.order ? 'asc' : 'desc'}`\n        // category: orderBy\n      }\n\n      if (typeof partners.search !== 'string') {\n        _params = {\n          ..._params,\n          category: 'and'\n        }\n      }\n      partnerService({\n        member_account_no: memberAccountNumber,\n        params: _params\n      }).then(res => {\n        const { data } = res.data\n        setPartners(state => ({\n          ...state,\n          ..._params,\n          data: data.results,\n          count: data.count\n        }))\n      })\n    } else {\n      const sorted = lodash.sortBy(doctors.filtered, doctors.sortBy, doctors.sort ? 'asc' : 'desc')\n      setDoctors(state => ({ ...state, filtered: sorted }))\n    }\n  }\n\n  const handleOnPaginate = (collection, params) => {\n    if (collection === 'partners') {\n      const _params = {\n        category: partners.category,\n        limit: partners.limit,\n        page: partners.page,\n        search: partners.search,\n        sort: `${partners.orderBy}|${partners.order ? 'asc' : 'desc'}`,\n        ...params\n      }\n      partnerService({\n        member_account_no: memberAccountNumber,\n        params: _params\n      }).then(res => {\n        const { data } = res.data\n        setPartners(state => ({\n          ...state,\n          ..._params,\n          data: data.results,\n          count: data.count\n        }))\n      })\n    } else {\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-partner'\n            onChange={event => queryColumn('partners', { search: event.target.value, field: 'any' })}\n            placeholder='Search for Partner Network Code, Name, and Location'\n          />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={partners.orderBy === headCell.sortField}\n                    direction={partners.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort('partners', headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                  {headCell.search && (\n                    <TextField\n                      id={`pn-${headCell.sortField}-input`}\n                      className={`${classes.search}`}\n                      onChange={event =>\n                        queryColumn('partners', { search: event.target.value, field: headCell.sortField })\n                      }\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={partners.data.map((row, index) => (\n            <TableRow id={`pn-row-${index}`} key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n              <TableCell id={`pn-code-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.id}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-name-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.name}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-location-${index}`}>\n                <div className={classes.cell}>\n                  <span>\n                    {[\n                      row.address.unit_no,\n                      row.address.floor,\n                      row.address.building_no,\n                      row.address.building_name,\n                      row.address.street,\n                      row.address.barangay,\n                      row.address.district,\n                      row.address.city,\n                      row.address.region,\n                      row.address.zip_code\n                    ]\n                      .filter(Boolean)\n                      .join(' ')}\n                  </span>\n                </div>\n              </TableCell>\n\n              <TableCell id={`pn-view-link-${index}`}>\n                <div className={classes.cell}>\n                  <span>\n                    <Typography\n                      id={`pn-view-link-${index}-control`}\n                      variant='caption'\n                      className={`text-link `}\n                      onClick={() => {\n                        fetchDoctors({ facility_id: row.id, filters: [] })\n                      }}\n                    >\n                      View Affiliated Doctors\n                    </Typography>\n                  </span>\n                </div>\n              </TableCell>\n            </TableRow>\n          ))}\n          pagination\n          count={partners.count}\n          page={partners.page}\n          limit={partners.limit}\n          rowsPerPageOptions={partners.rowsPerPageOptions}\n          onChange={args => handleOnPaginate('partners', args)}\n        />\n      </div>\n\n      <Dialog\n        fullWidth\n        maxWidth='md'\n        onClose={() => setDoctors(state => ({ ...state, show: false }))}\n        aria-labelledby='customized-dialog-title'\n        open={doctors.show}\n        className={classes.doctors}\n        PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <Typography variant='h6' className={classes.title}>\n              Affiliated Doctors\n            </Typography>\n            <IconButton\n              aria-label='close'\n              className={classes.button}\n              onClick={() => setDoctors(state => ({ ...state, show: false }))}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </DialogTitle>\n\n        <DialogContent dividers className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCellsDoctors.map(cell => (\n                    <TableCell key={cell.sortField}>\n                      <TableSortLabel\n                        active={doctors.orderBy === cell.sortField}\n                        direction={doctors.order ? 'asc' : 'desc'}\n                        onClick={handleOnSort('doctors', cell.sortField)}\n                      >\n                        {cell.name}\n                      </TableSortLabel>\n                      {cell.search && (\n                        <TextField\n                          className={`${classes.search}`}\n                          onChange={event =>\n                            queryColumn('doctors', { search: event.target.value, field: cell.sortField })\n                          }\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                doctors.filtered.length <= 0 ? (\n                  <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                    <TableCell id={`no-record`} colSpan={5}>\n                      <div className={`${classes.cell} ${classes.center}`}>\n                        <span>No Records</span>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  doctors.filtered.map((row, index) => (\n                    <TableRow key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n                      <TableCell id={`doctor-id-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.id}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-name-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{[row.name.first, row.name.middle, row.name.last].join(' ')}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-specialization-${index}`}>\n                        <div className={classes.cell}>\n                          <span>\n                            {[\n                              row.specialization.main,\n                              row.specialization.major,\n                              row.specialization.sub,\n                              row.specialization.other\n                            ]\n                              .filter(Boolean)\n                              .join(', ')}\n                          </span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-schedule-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.schedule}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-remarks-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.remarks}</span>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                )\n              }\n              pagination\n              count={doctors.count}\n              page={doctors.page}\n              limit={doctors.limit}\n              rowsPerPageOptions={doctors.rowsPerPageOptions}\n              onChange={args => handleOnPaginate('doctors', args)}\n            />\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","import lodash from 'lodash'\n\nexport const setPaginate = ({ args, exc }) => {\n  const { page, limit } = args\n\n  if (args && limit && page) return { page, limit, data: lodash.take(exc.data, limit) }\n\n  return { page, limit: exc.limit, data: lodash.chunk(exc.data, exc.limit)[page - 1] }\n}\n","import { DateFormatter } from 'Utilities/TextFormatter'\n\nexport const mapData = ({ data }) => {\n  return data.map(i => {\n    return {\n      claim_no: i.claim_no || '',\n      diagnosis: i.diagnosis || i.diagnoses || [{ diagnosis: i.primary_diagnosis || '', icd10_code: i.primary_icd10_code || '' }],\n      procedures: i.procedures || [], // partner_doctor_name\n      provider: { facility: [i.partner_name] || '', doctor: i.doctors ? setDoctors(i.doctors, i.partner_doctor_name) : i.partner_doctor_name ? [i.partner_doctor_name] : [] },\n      amount: i.total_amount || i.grand_total || 0,\n      session: i.session || 1,\n      date: DateFormatter(i.date_admitted) || DateFormatter(i.date_issued),\n      type: i.type,\n      status: i.status\n    }\n  })\n}\n\nconst setDoctors = (doctors = [], partner_name) => {\n  if (partner_name == undefined) return doctors.map(i => (i.name))\n  return doctors.map(i => (i.name)).concat([partner_name])\n}\n","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n// import TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport { setPaginate } from './Utils/pagination'\nimport { mapData } from './Utils/mapData'\nimport { itemFilter } from './Utils/query'\n\n// Styles\nimport classes from './Utilization.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setLimitType, resetLimitType } = actions\n\nconst headCellsComplete = [\n  { name: 'Claim ID', sortField: 'claim_no', search: true },\n  { name: 'Diagnosis', sortField: 'diagnosis', search: true },\n  { name: 'Procedure', sortField: 'procedures', search: true },\n  { name: 'Provider', sortField: 'provider', search: true },\n  { name: 'Amount', sortField: 'amount', search: true },\n  { name: 'Session', sortField: 'session', search: true },\n  { name: 'Date', sortField: 'date', search: true },\n  { name: 'Type', sortField: 'type', search: true },\n  { name: 'Status', sortField: 'status', search: true }\n]\n\nconst randomRange = (min, max) => {\n  return Math.random() * (max - min) + min\n}\n\nexport default function Utilization (props) {\n  const dispatch = useDispatch()\n  const title = useSelector(({ ClaimsAnalysis: state }) => state.title)\n\n  const {\n    fetchService,\n    diagnosis,\n    isMember = true,\n    member = {},\n    utilizationLoa = [],\n    hideSearchBar = false,\n    hideActionColumn = false,\n    dataColumns\n  } = props\n\n  const [headCells, setHeadCells] = React.useState(headCellsComplete)\n  const [rows, setRows] = React.useState([])\n  const [allList, setAllList] = React.useState([])\n  const [filteredRows, setFilteredRows] = React.useState({\n    data: [],\n    orderBy: '',\n    order: 'desc',\n    category: 'all',\n    search: '',\n    filter: {},\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [graph, setGraph] = React.useState({\n    utilized: 0,\n    ibnr: 0,\n    total: 0\n  })\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = headCellsComplete\n    } else {\n      filtered = headCellsComplete.filter(entry => dataColumns.indexOf(entry.sortField) > -1)\n    }\n    setHeadCells(filtered)\n  }, [dataColumns])\n\n  React.useEffect(() => {\n    if (member) {\n      let type\n      let limit\n\n      if (member.benefit_limits) {\n        type = member.benefit_limits[0].type\n        limit = member.benefit_limits[0].limit\n      }\n\n      if (type === 'ABL') {\n        dispatch(setLimitType('Annual Benefit Limit'))\n\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        fetchService({\n          member_account_no: member.info.member_id,\n          type: '',\n          icd_code: ''\n        }).then(res => {\n          const { data } = res.data\n\n          const list = mapData({ data: [...utilizationLoa.map(i => ({ ...i, type: 'IBNR' })), ...data.map(i => ({ ...i, status: 'Approved' }))] })\n\n          setFilteredRows(state => ({ ...state, count: list.length, data: list }))\n          setRows(list.slice(0, filteredRows.limit))\n          setAllList(list)\n\n          let ibnr = 0\n          let utilized = 0\n\n          utilizationLoa.map(item => (ibnr += item.total_amount))\n          data.map(item => (utilized += item.grand_total))\n\n          setGraph(state => ({\n            ...state,\n            ibnr,\n            utilized\n          }))\n        })\n      } else if (type === 'MBL') {\n        dispatch(setLimitType('Maximum Benefit Limit'))\n\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        let primary = (diagnosis && diagnosis.filter(icd => icd.primary === true)[0]) || {\n          code: '',\n          description: '',\n          category_code: ''\n        }\n\n        IcdCptStorageServices.lookups({\n          on: 'icd-10',\n          params: { query: primary.code, by: 'code' }\n        }).then(res => {\n          const { data } = res.data\n          const { diagnosis_code } = data[0] || []\n          primary.category_code = diagnosis_code\n\n          fetchService({\n            member_account_no: member.info.member_id,\n            type: 'mbl',\n            icd_code: primary.category_code\n          }).then(res => {\n            const { data } = res.data\n\n            // ICD Screening\n            let _utilizationLoa = utilizationLoa.filter(item => {\n              if (item.primary_icd10_code) {\n                return item.primary_icd10_code.startsWith(primary.category_code)\n              }\n            })\n\n            const list = mapData({ data: [..._utilizationLoa.map(i => ({ ...i, type: 'IBNR' })), ...data.map(i => ({ ...i, status: 'Approved' }))] })\n\n            setFilteredRows(state => ({ ...state, count: list.length, data: list }))\n            setRows(list.slice(0, filteredRows.limit))\n            setAllList(list)\n\n            let ibnr = 0\n            let utilized = 0\n\n            _utilizationLoa.map(item => (ibnr += item.total_amount))\n            data.map(item => (utilized += item.grand_total))\n\n            setGraph(state => ({\n              ...state,\n              ibnr,\n              utilized\n            }))\n          })\n        })\n      }\n    } else {\n      dispatch(setLimitType('Member Not Found'))\n    }\n  }, [member, diagnosis])\n\n  React.useEffect(() => {\n    dispatch(resetLimitType())\n  }, [])\n\n  React.useEffect(() => {\n    // console.log(list)\n    const _data = itemFilter({ search: filteredRows.search, filter: filteredRows.filter, data: allList })\n\n    setFilteredRows(state => ({ ...state, count: _data.length, data: _data, page: 1 }))\n    setRows(_data.slice(0, filteredRows.limit))\n  }, [filteredRows.search, filteredRows.filter])\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = args => {\n    const { event, field, type } = args\n    const search = event.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (type === 'all') setFilteredRows(state => ({ ...state, search }))\n        else setFilteredRows(state => ({ ...state, filter: { ...state.filter, [field]: search } }))\n      }, 500)\n    )\n  }\n\n  const handleOnPaginate = args => {\n    const { data, limit, page } = setPaginate({ args, exc: filteredRows })\n    setFilteredRows(state => ({ ...state, limit, page }))\n    setRows(data)\n  }\n\n  const renderRows = ({ rows = [] }) => {\n    return rows.map((row, index) => (\n      <TableRow id={`utilization-row-${index}`} key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n        {headCells.map(headCell => {\n          switch (headCell.sortField) {\n            case 'claim_no':\n              return (\n                <TableCell key={`${index}-claim-no`} id={`utilization-claim_no-${index}`}>\n                  <div className={classes.cell}>\n                    <span>{row.claim_no}</span>\n                    <span className={classes.label}>SWIPE</span>\n                    <span>YES</span>\n                  </div>\n                </TableCell>\n              )\n\n            case 'diagnosis':\n              return (\n                <TableCell key={`${index}-diagnosis`} id={`utilization-diagnosis-${index}`}>\n                  {row.diagnosis.map((row, index) => (\n                    <div key={`icd-${index}`} className={classes.cell}>\n                      <span>{row.diagnosis}</span>\n                      <span className={classes.label}>ICD 10 CODE</span>\n                      <span>{row.icd10_code}</span>\n                    </div>\n                  ))}\n                </TableCell>\n              )\n\n            case 'procedures':\n              return (\n                <TableCell key={`${index}-procedures`} id={`utilization-procedures-${index}`}>\n                  <div className={classes.cell}>\n                    {row.procedures.map((row, index) => (\n                      <div key={`procedure-${index}`} className={classes.cell}>\n                        <span>{row.procedure_name}</span>\n                        <span className={classes.label}>CPT CODE</span>\n                        <span>{row.cpt_code}</span>\n                      </div>\n                    ))}\n                  </div>\n                </TableCell>\n              )\n\n            case 'provider':\n              return (\n                <TableCell key={`${index}-provider`} id={`utilization-partner_name-${index}`}>\n                  <div className={classes.cell}>\n                    <div className={classes.cell}>\n                      {row.provider.facility.map((row, index) => (\n                        <span key={`facility-${index}`}>{row}</span>\n                      ))}\n                      {row.provider.doctor.length !== 0 && <span className={classes.label}>MEDICAL DOCTOR</span>}\n                      {row.provider.doctor.map((row, index) => (\n                        <span key={`doctor-${index}`}>{`${row},`}</span>\n                      ))}\n                    </div>\n                  </div>\n                </TableCell>\n              )\n\n            case 'amount':\n              return (\n                <TableCell key={`${index}-amount`} align='right' id={`utilization-grand_total-${index}`}>\n                  <span>{CurrencyFormatter(row.amount)}</span>\n                </TableCell>\n              )\n\n            case 'session':\n              return (\n                <TableCell key={`${index}-session`} align='right' id={`utilization-session-${index}`}>\n                  <span>{row.session}</span>\n                </TableCell>\n              )\n\n            case 'date':\n              return (\n                <TableCell key={`${index}-date_admitted`} id={`utilization-date_admitted-${index}`}>\n                  <span>{row.date}</span>\n                </TableCell>\n              )\n\n            case 'type':\n              return (\n                <TableCell key={`${index}-type`} id={`utilization-type-${index}`}>\n                  <span>{row.type}</span>\n                </TableCell>\n              )\n\n            case 'status':\n              return (\n                <TableCell key={`${index}-status`} align='center' id={`utilization-status-${index}`}>\n                  <span>{row.status}</span>\n                </TableCell>\n              )\n          }\n        })}\n\n        {hideActionColumn === false && (\n          <TableCell key={`${index}-icon`} align='center' id={`utilization-action-${index}`}>\n            <FontAwesomeIcon icon='file-alt' size='lg' className={classes.icon} />\n          </TableCell>\n        )}\n      </TableRow>\n    ))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.graph}>\n          <div className={classes['anual-benefit']}>\n            <Typography variant='button'>{title}</Typography>\n            <Typography id='utilization-graph-total' variant='h6'>{`PHP ${CurrencyFormatter(graph.total)}`}</Typography>\n          </div>\n\n          <div className={classes['line-graph']}>\n            <div className={classes.container}>\n              <div className={classes['line-container']}>\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.utilized / graph.total) * 100}%`, background: '#4fb083' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.ibnr / graph.total) * 100}%`, background: '#2a2b6e' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{\n                    width: `${\n                      ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100 < 0\n                        ? 0\n                        : ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100\n                    }%`,\n                    background: '#f8b439'\n                  }}\n                />\n              </div>\n              <div className={classes['line-details']}>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#4fb083' }} />\n                    <Typography variant='button'>UTILIZED</Typography>\n                  </div>\n                  <Typography id='utilization-graph-utilized' variant='button' style={{ color: '#4fb083' }}>\n                    {`PHP ${CurrencyFormatter(graph.utilized)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#2a2b6e' }} />\n                    <Typography variant='button'>IBNR</Typography>\n                  </div>\n                  <Typography id='utilization-graph-ibnr' variant='button' style={{ color: '#2a2b6e' }}>\n                    {`PHP ${CurrencyFormatter(graph.ibnr)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#f8b439' }} />\n                    <Typography variant='button'>AVAILABLE</Typography>\n                  </div>\n                  <Typography id='utilization-graph-available' variant='button' style={{ color: '#f8b439' }}>\n                    {`PHP ${CurrencyFormatter(graph.total - graph.ibnr - graph.utilized)}`}\n                  </Typography>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={classes.search} style={{ display: hideSearchBar === true ? 'none' : 'block' }}>\n          <SearchTextComponent\n            id='search-utilization'\n            onChange={event => handleSearchChange({ event, field: 'all', type: 'all' })}\n            placeholder='Search'\n          />\n        </div>\n        <div style={{ display: hideSearchBar === false ? 'none' : 'block' }}>\n          {/* TODO: replace with filler */}\n          <br />\n          <br />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  {headCell.name}\n                  {headCell.search && (\n                    <TextField\n                      id={`utilization-${headCell.sortField}-input`}\n                      className={`${classes.search}`}\n                      onChange={event => handleSearchChange({ event, field: headCell.sortField, type: 'column' })}\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              {hideActionColumn === false && <TableCell align='center' />}\n            </TableRow>\n          }\n          body={renderRows({ rows: rows })}\n          pagination\n          count={filteredRows.count}\n          page={filteredRows.page}\n          limit={filteredRows.limit}\n          rowsPerPageOptions={filteredRows.rowsPerPageOptions}\n          onChange={args => handleOnPaginate(args)}\n        />\n      </div>\n    </div>\n  )\n}\n","export const itemFilter = args => {\n  const { search, filter, data = [] } = args\n  let _data = data\n\n  if (search) {\n    const _search = search.toLowerCase()\n    _data = _data.filter(i => {\n      return i.claim_no.toLowerCase().includes(_search) ||\n        i.diagnosis.some(i => i.diagnosis.toLowerCase().includes(_search) || i.icd10_code.toLowerCase().includes(_search)) ||\n        i.procedures.some(i => i.procedure_name.toLowerCase().includes(_search) || i.cpt_code.toLowerCase().includes(_search)) ||\n        i.provider.doctor.some(i => i.toLowerCase().includes(_search)) ||\n        i.provider.facility.some(i => i.toLowerCase().includes(_search)) ||\n        i.amount.toString().toLowerCase().includes(_search) ||\n        i.session.toString().toLowerCase().includes(_search) ||\n        i.date.toLowerCase().includes(_search) ||\n        i.type.toLowerCase().includes(_search) ||\n        i.status.toLowerCase().includes(_search)\n    })\n  }\n\n  if (Object.keys(filter).length > 0) {\n    const _fields = Object.keys(filter)\n\n    for (const f of _fields) {\n      let value = filter[f].toLowerCase()\n      if (value && f === 'diagnosis') {\n        _data = _data.filter(i => {\n          return i[f].some(i => i.diagnosis.toLowerCase().includes(value) || i.icd10_code.toLowerCase().includes(value))\n        })\n      } else if (value && f === 'procedures') {\n        _data = _data.filter(i => {\n          return i[f].some(i => i.procedure_name.toLowerCase().includes(value) || i.cpt_code.toLowerCase().includes(value))\n        })\n      } else if (value && f === 'provider') {\n        _data = _data.filter(i => {\n          return i[f].doctor.some(i => i.toLowerCase().includes(value)) || i[f].facility.some(i => i.toLowerCase().includes(value))\n        })\n      } else if (value) {\n        _data = _data.filter(i => {\n          return i[f].toString().toLowerCase().includes(value)\n        })\n      }\n    }\n  }\n  return _data\n}\n","import React from 'react'\n\n// Component\nimport { PdfView2Component } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Utilities\nimport { NameFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Contract.module.scss'\n\nexport default function Contract (props) {\n  // Service\n  const { getMemberContract, getClientContract } = props\n  // Variables\n  const { isMember, member, client } = props\n\n  const [fileName, setFileName] = React.useState('')\n  const [title, setTitle] = React.useState('')\n  const [service, setService] = React.useState(null)\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      const mct_id = member.benefit_tree.MCT.details._id\n      setService(getMemberContract({ mct_id }))\n      setFileName(`${NameFormatter(member.info).format2} Contract`)\n      setTitle('Member Contract')\n    } else {\n      if (!client) return\n      const mct_id = client.benefit_tree.MCT.details._id\n      setService(getClientContract({ mct_id }))\n      setFileName(`${client.info.brand_name} Contract`)\n      setTitle('Client Contract')\n    }\n  }, [isMember, member, client])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <div className={classes.pdf}>\n          <PdfView2Component\n            name={title}\n            fileName={fileName}\n            initialPageNumber={1}\n            initialScale={1.5}\n            service={service}\n            enabled\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Button, Typography } from '@material-ui/core'\n\n// Components\nimport ChatBox from '../ChatBox/ChatBox'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { CustomTabs, CustomTab } from 'SharedComponents/CustomTabs/CustomTabs'\n\n// Compare Tabs\nimport Benefits from '../Benefits/Benefits'\nimport Exclusions from '../Exclusions/Exclusions'\nimport PartnerNetwork from '../PartnerNetwork/PartnerNetwork'\nimport Utilization from '../Utilization/Utilization'\nimport Contract from '../Contract/Contract'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Store\nimport { useSelector } from 'react-redux'\n\n// Styles\nimport classes from './RightPanelTabs.module.scss'\n\nexport default function RightPanelTabs (props) {\n  // Events\n  const { onReturnEscalate, onReturnInquire = () => {} } = props\n  // Variables\n  const { claim, permissions, isMember, member, memberFetchStatus, client, clientFetchStatus, utilizationLoa } = props\n  // Services\n  const { getUtilizations, getPartners, getDoctors, getMemberContract, getClientContract } = props\n\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  return (\n    <CustomTabs id='medical-partner-tabs' defaultIndex={0}>\n      {SafeAccess(permissions, ['tabs', 'benefits', 'read']) && (\n        <CustomTab id='benefits-tab' label='BENEFITS'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>{'Internal Server Error'}</Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Benefits isMember={isMember} member={member} client={client} />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'exclusions', 'read']) && (\n        <CustomTab id='exclusions-tab' label='EXCLUSIONS'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>{'Internal Server Error'}</Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Exclusions isMember={isMember} member={member} client={client} />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'partner', 'read']) && (\n        <CustomTab id='partner-network-tab' label='PARTNER NETWORK'>\n          <PartnerNetwork\n            partnerService={getPartners}\n            doctorService={getDoctors}\n            memberAccountNumber={claim.member_account_number || '-'}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'utilization', 'read']) && (\n        <CustomTab id='utilization-tab' label='UTILIZATION'>\n          <Utilization\n            fetchService={getUtilizations}\n            utilizationLoa={utilizationLoa}\n            isMember={isMember}\n            member={member}\n            client={client}\n            diagnosis={claim.diagnosis || []}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'communication', 'read']) && (\n        <CustomTab id='communication-tab' label='COMMUNICATION'>\n          <ChatBox\n            messages={inquiries.messages}\n            title='Communication Logs'\n            onSubmitComment={comment => onReturnInquire({ comment: comment, goBack: true })}\n            permissions={permissions.tabs.communication}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'contact', 'read']) && (\n        <CustomTab id='contract-tab' label='CONTRACT'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>{'Internal Server Error'}</Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Contract\n              isMember={isMember}\n              member={member}\n              client={client}\n              getMemberContract={getMemberContract}\n              getClientContract={getClientContract}\n            />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'comments', 'read']) && (\n        <CustomTab id='comment-tab' label='COMMENTS'>\n          <ChatBox\n            messages={escalations.messages}\n            title='Escalation Logs'\n            onSubmitComment={comment => onReturnEscalate({ comment: comment, goBack: true })}\n            permissions={permissions.tabs.comments}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'notes', 'read']) && (\n        <CustomTab id='notes-tab' label='NOTES'>\n          <ChatBox messages={recon.messages} permissions={permissions.tabs.notes} />\n        </CustomTab>\n      )}\n    </CustomTabs>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsRemarks.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimBaseDetails } = actions\n\nexport default function ClaimsRemarks (props) {\n  const { data, permissions, onChange } = props\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Claims Remarks\n        </Typography>\n      </div>\n      <div className={classes['input']}>\n        <TextField\n          multiline\n          rows={8}\n          id='claim-remarks'\n          value={data}\n          readOnly={permissions}\n          onChange={onChange}\n        />\n      </div>\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .required(),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .required(),\n\n    // TODO Claim Source here\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n\n    // TODO addt'l dental validation\n    flag: Joi.boolean().default(false),\n\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Name')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer (Company) Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Doctor) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n      .required(),\n    anesthesiologist_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID (Anesthesiologist)')\n      .allow('', null),\n    anesthesiologist_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Anesthesiologist) Name')\n      .allow('', null),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    date_to: Joi.date()\n      .label('Admission Date (To)')\n      .required()\n      .min(Joi.ref('date_from'))\n      .messages({\n        'date.min': `\"Admission Date (To)\" should be on or after \"Admission Date (From)\"`\n      }),\n    contract_year_from: Joi.date().label('Contract Year (From)'),\n    contract_year_to: Joi.date().label('Contract Year (To)'),\n    department: Joi.string()\n      .trim()\n      .label('Department')\n      .allow('', null),\n    recommendation: Joi.string()\n      .trim()\n      .label('Recommendation')\n      .allow('', null),\n    room_type: Joi.string()\n      .trim()\n      .label('Room Type')\n      .messages({ 'string.empty': `\"Room Type\" is required.` })\n      .required(),\n    room_rate: Joi.number()\n      .label('Room Rate')\n      .messages({ 'string.empty': `\"Room Rate\" is required.` })\n      .required(),\n    pro_id: Joi.string()\n      .trim()\n      .label('PRO ID')\n      .messages({ 'string.empty': `\"PRO ID\" is required.` })\n      .required(),\n    pro_name: Joi.string()\n      .trim()\n      .label('PRO Name')\n      .messages({ 'string.empty': `\"PRO Name\" is required.` })\n      .required(),\n    claim_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub Type')\n      .allow('', null),\n    claim_sub_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub-subType')\n      .allow('', null),\n    with_corporate_guarantee: Joi.string()\n      .trim()\n      .label('Corporate Guaranty')\n      .allow('', null),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    reimbursement_type: Joi.string()\n      .trim()\n      .label('Reimbursement Type')\n      .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n      .required(),\n    reimbursement_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Reimbursement Category\" is required.` })\n      .allow('', null),\n    official_receipt_number: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Official Receipt Number\" is required.` })\n      .required(),\n    loa_notes: Joi.string()\n      .trim()\n      .allow('', null),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    result[field] = available_fields[field]\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n\n  return result\n}\n","import Joi from '@hapi/joi'\n\n// This if for claim types that have `Approval Code` and `Loa No.` as required fields.\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .messages({ 'string.empty': `\"Approval Code\" is required.` })\n      .required(),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .messages({ 'string.empty': `\"LOA No.\" is required.` })\n      .required(),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer (Company) Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    date_to: Joi.date()\n      .label('Service Date')\n      .required()\n      .messages({ 'string.empty': `\"Service Date\" is required.` }),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    result[field] = available_fields[field]\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\nimport getValidators from './getValidators'\nimport getValidators2 from './getValidators2'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst validate = fields => (data, type = false) => {\n  let schema = Joi.object(getValidators(fields)).options({ abortEarly: false })\n  // FOR Claim Types that have `Approval Code` and `LOA No.` as required fields.\n  if (type) schema = Joi.object(getValidators2(fields)).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  name: Joi.string()\n    .trim()\n    .label('Item Name')\n    .required(),\n  item_code: Joi.string()\n    .trim()\n    .label('Item Code')\n    .required(),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required(),\n  specialization: Joi.string()\n    .trim()\n    .label('Specialization')\n    .required(),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Description')\n    .required(),\n  code: Joi.string()\n    .trim()\n    .label('Code')\n    .required(),\n  tooth_number: Joi.string()\n    .label('Tooth Number')\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n    .messages({\n      'string.empty': `\"Tooth Number\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  flag: Joi.boolean().default(false)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangePro,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  //* Room\n\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? data[0].rooms.map(item => ({\n            text: item.type,\n            value: item.type,\n            rate: item.rate\n          }))\n        : []\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(event.toISOString())\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_type\n                    }}\n                  >\n                    <DropDown\n                      id='room-type'\n                      required\n                      label='Room Type'\n                      items={dropDown.rooms}\n                      value={claim.room_type}\n                      onChange={handleOnChangeRoomType}\n                      error={error.room_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-rate'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_rate\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='room-rate'\n                      required\n                      label='Room Rate'\n                      value={claim.room_rate}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'room_rate'\n                          })\n                        )\n                      }}\n                      error={error.room_rate}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangeDoctor,\n    onChangeAnaesthesiologist,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          department: data.department,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-department'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.department\n                    }}\n                  >\n                    <TextField\n                      id='department'\n                      label='Department'\n                      value={claim.department}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'department'\n                          })\n                        )\n                      }\n                      error={error.department}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      suggestions={suggestions.anesthesiologist.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      suggestions={suggestions.anesthesiologist.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangeDoctor,\n    onChangeAnaesthesiologist,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          recommendation: data.recommendation,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-facility-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-facility-id'\n                      required\n                      label='Medical Facility ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-recommendation'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.recommendation\n                    }}\n                  >\n                    <TextField\n                      id='recommendation'\n                      label='Recommendation'\n                      value={claim.recommendation}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'recommendation'\n                          })\n                        )\n                      }\n                      error={error.recommendation}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      suggestions={suggestions.anesthesiologist.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      suggestions={[]}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangePro,\n    onChangeDoctor,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_name: data.doctor.name,\n          doctor_id: data.doctor.id,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(event.toISOString())\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      required\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Controller\nimport ConfigController from 'Controllers/ConfigController2'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_name: '',\n      client_account_number: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: [],\n      hospital_items: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          // customer_account_number: data.customer_account_number,\n          // company_name: data.company_name,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          hospital_items: data.hospital_items || [],\n          loa_number: data.loa_number,\n          medicine_category: data.medicine_category,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n      // ConfigController.getUserManagementData().then(res => {\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: new Date().toISOString(),\n      //       field: 'approved_date'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: res.user_id,\n      //       field: 'approved_id'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: `${res.first_name} ${res.last_name}`,\n      //       field: 'approved_name'\n      //     })\n      //   )\n      // })\n    })\n  }, [])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data }, true)\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                showCompany\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medicine-category'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.medicine_category\n                    }}\n                  >\n                    <TextField\n                      id='medicine-category'\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      required\n                      error={error.medicine_category}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showAmountPaidByMember={false}\n                  showPhilhealthField={false}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showAmountPaidByMember={false}\n                  showPhilhealthRemarks={false}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ContractRange.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nexport default function ContractRange (props) {\n  const {\n    contract_year_from,\n    contract_year_to,\n    suggestions,\n    error,\n    required,\n    // disableControls = false,\n    onChange = () => {},\n    readOnly = false,\n    hasDiscrepancy = false\n  } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (!(contract_year_from || contract_year_to)) {\n      setError(error)\n    }\n  }, [error, contract_year_from, contract_year_to])\n\n  const handleOnItemClick = ({ event, item }) => {\n    onChange(item)\n    setTimeout(() => setFocus(false), 10)\n  }\n  return (\n    <div className={classes['root']}>\n      <div\n        className={`${classes.container} ${_error ? classes['has-error'] : focus && classes.focus} box-shadow-field`}\n        tabIndex={0}\n        onFocus={() => setFocus(true)}\n        onClick={() => setFocus(true)}\n        onBlur={() => setFocus(false)}\n      >\n        <div className={classes.label}>\n          <Typography variant='subtitle2'>{`${!readOnly && required ? '* ' : ''}Contract Year:`}</Typography>\n        </div>\n\n        <div className={classes['values']}>\n          <Typography variant={hasDiscrepancy ? 'subtitle2' : 'subtitle1'}>\n            <span>From: </span>\n            {contract_year_from ? DateFormatter(contract_year_from) : '----------'} <span>To: </span>\n            {contract_year_to ? DateFormatter(contract_year_to) : '----------'}\n          </Typography>\n        </div>\n\n        {!readOnly && focus && (\n          <Paper className={`${classes.suggestions} ${error && classes['add-margin']}`} square>\n            <div className={classes.header}>\n              <Typography variant='subtitle2'>Member Contract Period</Typography>\n            </div>\n\n            <div className={classes['values-container']}>\n              <div className={classes.message}>\n                <Typography variant='body2'>Please select contract period for this claim</Typography>\n              </div>\n\n              <div className={classes.list}>\n                {suggestions.map((item, index) => (\n                  <div key={index} className={classes.item} onClick={event => handleOnItemClick({ event, item })}>\n                    {DateFormatter(item.from)} To {DateFormatter(item.to)}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </Paper>\n        )}\n\n        {_error && <span className={classes.error}>\"Contract Year\" is required.</span>}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -98.753174, -57.20928955078125)'>\n        <path\n          className={classes.crown}\n          d='M256.5,66.8c0,0,13.6,48.5,11.2,91.9c-2.5,43.4-8.7,93.1-11.2,103c-2.5,9.9-14.9,33.5-11.2,40.9s1.2,24.8,5,34.7c3.7,9.9,0,37.9,0,46.2s-6.2,24.5-12.4,24.5c-6.2,0-21.8-1.2-28.5,0c-6.7,1.2-29.8-2.5-39.7,0c-9.9,2.5-40.9,12.4-38.5-5s-6.2-22.3,5-47.2c11.2-24.8,26.1-54.6,29.8-59.6c3.7-5,12.4-2.5,17.4-19.9c5-17.4,12.6-67,19.3-80.7c6.7-13.6,21.6-62,24.1-72c2.5-9.9,11.2-42.2,14.9-47.2C245.3,71.9,254.9,60.9,256.5,66.8z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -98.753174, -57.20928955078125)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M245.3,302.7c-3.7-7.4,8.7-31,11.2-40.9c2.5-9.9,8.7-59.6,11.2-103c2.5-43.4-11.2-91.9-11.2-91.9c-1.5-5.9-11.2,5.1-14.9,10c-3.7,5-12.4,37.2-14.9,47.2c-2.5,9.9-17.4,58.3-24.1,72c-6.7,13.6-14.4,63.3-19.3,80.7c-5,17.4-13.6,14.9-17.4,19.9c-1.7,2.2-5.5,9.4-10.3,18.8c10.9,2.2,80.1,15.2,95.6,25.7c-0.2-1.3-0.5-2.5-0.9-3.5C246.5,327.5,249,310.1,245.3,302.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor2 (props) {\n  // const {  state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -241.712036, -52.80860900878906)'>\n        <path\n          className={classes.crown}\n          d='M297.4,405.6c0,0-19.9-6.2-7.4-31c12.4-24.8,21.1-40.9,27.3-57.1c6.2-16.1,3.7-37.2,12.4-50.9c8.7-13.6,27.3-65.8,29.8-85.6c2.5-19.9,14.9-91.8,22.3-96.8c7.4-5,16.1,9.9,17.4,17.4c1.2,7.4,1.2,69.5,0,75.7c-1.2,6.2-5,67-6.2,79.4c-1.2,12.4-9.9,39.7-9.9,49.6c0,9.9,1.2,33.5,1.2,45.9c0,12.4-1.2,39.7-8.7,45.9c-7.4,6.2-10.6,7.4-32.6,7.4C321,405.6,297.4,405.6,297.4,405.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -241.712036, -52.80860900878906)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M393,256.7c1.2-12.4,5-73.2,6.2-79.4c1.2-6.2,1.2-68.2,0-75.7c-1.2-7.4-9.9-22.3-17.4-17.4c-7.4,5-19.9,76.9-22.3,96.8c-2.5,19.9-21.1,72-29.8,85.6c-8.7,13.6-6.2,34.7-12.4,50.9c-3.4,8.9-7.6,17.9-12.8,28.3c7.1-6.1,14.5-11.8,22.8-16.1c15.5-7.8,36.3-9,48.5,3.3c3.1,3.1,5.7,7.1,8.3,10.9c-0.3-12.7-1.1-29.6-1.1-37.6C383,296.4,391.7,269.1,393,256.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor3 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -108.091278, 806.1712341308594)'>\n        <path\n          className={classes.crown}\n          d='M239.7,459c4.1,11.8,5.9,37.2,5.9,43.1c0,5.9,1.8,29,0,35.5c-1.8,6.5-8.3,15.4-7.1,21.3c1.2,5.9,3,30.9,2.4,32.6c-0.6,1.7,0,20.6,1.2,25.3c1.2,4.7,8.3,50.2,10,55.6c1.8,5.3,8.3,34.9,8.3,36.6c0,1.8-2.4,8.3-8.9,7.1c-6.5-1.2-17.7-11.8-18.6-16c-0.9-4.1-18-38.4-21-45.5c-3-7.1-8.3-24.2-12.4-40.2c-4.1-16-11.2-42-11.2-43.7c0-1.8,2.4-13.6-5.9-27.2c-8.3-13.6-16.5-37.2-17.1-39.6c-0.6-2.4-3.5-26-3.5-33.7c0-7.7-2.4-17,5.9-18C175.8,451.3,235.5,447.2,239.7,459z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -108.091278, 806.2712097167969)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M188.2,570.7c0,1.8,7.1,27.8,11.2,43.7c4.1,16,9.5,33.1,12.4,40.2c3,7.1,20.1,41.4,21,45.5c0.9,4.1,12.1,14.8,18.6,16c6.5,1.2,8.9-5.3,8.9-7.1s-6.5-31.3-8.3-36.6c-1.8-5.3-8.9-50.8-10-55.6c-1.2-4.7-1.8-23.6-1.2-25.3c0.6-1.7-1.2-26.7-2.4-32.6c-1.1-5.5,4.4-13.5,6.6-19.8c-16.2,9.5-37.6,9.9-54,0.6c-4.9-2.8-10-6.5-15.2-8.3c2,4.4,4.2,8.7,6.4,12.2C190.6,557.1,188.2,569,188.2,570.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor4 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -220.271545, 809.1224517822266)'>\n        <path\n          className={classes.crown}\n          d='M279.9,455.5c-0.6,5.3-4.7,6.5-3.5,16.5c1.2,10,3,33.1,6.5,38.4c3.5,5.3,8.8,23.6,13.6,40.2c4.7,16.5,13,41.4,15.4,56.2c2.4,14.8,9.5,42,10.6,45.5c1.2,3.5,10.6,37.2,10.6,37.2s7.1,25.4,17.1,27.8c10,2.4,16.5,1.8,14.8-3.5c-1.8-5.3,2.4-27.8,0.3-30.7c-2.1-3-7.4-28.4-7.4-36.6c0-8.3-3.5-65.6-4.1-69.7c-0.6-4.1-4.1-29.6-0.6-31.9c3.5-2.4,7.1-19.5,7.1-29.6s-1.8-39.6-2.4-42c-0.6-2.4-1.2-18.3-7.7-18.3C343.7,454.9,280.5,450.2,279.9,455.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -220.271545, 809.2224884033203)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M311.8,606.8c2.4,14.8,9.5,42,10.6,45.5c1.2,3.5,10.6,37.2,10.6,37.2s7.1,25.4,17.1,27.8c10,2.4,16.5,1.8,14.8-3.5c-1.8-5.3,2.4-27.8,0.3-30.7c-2.1-3-7.4-28.4-7.4-36.6c0-8.3-3.5-65.6-4.1-69.7c-0.6-4.1-4.1-29.6-0.6-31.9c1.9-1.3,3.8-6.7,5.1-12.9c-5.7,7.2-11.9,13.7-20.1,15.3c-20,3.8-33.6-23.8-51.9-29.2c3.1,8.2,6.8,21,10.2,32.8C301.1,567.2,309.4,592,311.8,606.8z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Canine1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -392.134262, -41.07334899902344)'>\n        <path\n          className={classes.crown}\n          d='M455,426.7c-2.5-3.7-22.3-25-31-37.3s2.5-50.8,8.7-60.7c6.2-9.9,19.9-22.3,22.3-31c2.5-8.7,6.2-39.7,8.7-44.7c2.5-5,7.4-37,7.4-46.4c0-9.4,6.2-72.7,16.1-87.6c9.9-14.9,21.1-29.7,23.6-40.9c2.5-11.3,6.2-32.3,12.4-27.3c6.2,5,12.4,3.5,12.4,16s-1.2,33.6,0,49.7c1.2,16.1,0,67,0,73.2s2.3,35,0.6,54.7c-1.8,19.7-9.2,32.1-9.2,44.5s-6.2,27.3,0,39.7c6.2,12.4,9.9,39.7,9.9,50.9c0,11.2-3.7,14.9-11.2,19.9c-7.4,5-16.1,0-22.3,6.2c-6.2,6.2-27.3,17.4-29.8,21.1C471.1,430.5,455,426.7,455,426.7z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -392.134262, -41.07334899902344)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M527,289c0-12.4,7.4-24.8,9.2-44.5c1.8-19.7-0.6-48.5-0.6-54.7s1.2-57.1,0-73.2c-1.2-16.1,0-37.2,0-49.7c0-12.5-6.2-11.1-12.4-16c-6.2-5-9.9,16-12.4,27.3c-2.5,11.3-13.6,26.1-23.6,40.9c-9.9,14.9-16.1,78.2-16.1,87.6c0,9.4-5,41.4-7.4,46.4c-2.5,5-6.2,36-8.7,44.7c-2.4,8.3-14.9,19.9-21.4,29.6c11.8-15,29.5-25.3,48.5-28c9.2-1.3,19.2-0.7,26.6,4.9c12.2,9.3,13.2,28.8,23.3,39.4c-1.4-5.8-3.1-11-5-14.9C520.8,316.3,527,301.4,527,289z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Canine2 (props) {\n  // const {  state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -353.862335, 816.4396057128906)'>\n        <path\n          className={classes.crown}\n          d='M446,430.6c0,0,7.9,14.3,14.3,17.8c6.4,3.5,24.7,12.4,27.7,20.7c3,8.3,1.8,34.3,0,46.7c-1.8,12.4-11.2,31.3-12.4,39c-1.2,7.7-6.5,57.9,0,70.9c6.5,13,6.5,31.3,8.3,49.1c1.8,17.7,8.3,69.4,5.9,72.1c-2.4,2.7-14.8,14.3-21.6,2.7c-6.8-11.6-14.5-45.3-18-50.6c-3.5-5.3-24.8-46.1-26-53.2c-1.2-7.1-16.5-95.2-20.7-99.3c-4.1-4.1-11.8-33.7-13.6-52.6c-1.8-18.9-1.2-29.6,4.7-35.5c5.9-5.9,26-21.3,27.8-23.6c1.8-2.4,15.7-5.6,15.7-5.6S443.6,426.6,446,430.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -353.862335, 816.5395812988281)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M424.1,645.8c1.2,7.1,22.5,47.9,26,53.2c3.5,5.3,11.2,39,18,50.6c6.8,11.6,19.2,0,21.6-2.7c2.4-2.7-4.2-54.4-5.9-72.1c-1.8-17.7-1.8-36.1-8.3-49.1c-6.5-13-1.2-63.2,0-70.9c1-6.6,8.2-21.6,11.3-33.5c-3.8,3.2-7,7.3-10.9,10.6c-21,17.6-53.5,4.3-73.9-14c-3-2.7-6.1-5.6-9.7-7.3c3.1,16.2,8.1,32.9,11.1,36C407.5,550.6,422.9,638.7,424.1,645.8z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Premolar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -533.9918823242188, 827.0228881835938)'>\n        <path\n          className={classes.crown}\n          d='M700.7,708.5c0.5-1.8,10.6-32.5,7.7-66.8c-3-34.3-13-63.8-13-74.5c0-10.6,1.1-37.2,6.8-39.6c5.6-2.4,14.5-16,14.5-29c0-13-5.9-41.4-13-46.1c-7.1-4.7-30.1-3.5-37.2,0c-7.1,3.5-11.2,8.9-19.5,4.1c-8.3-4.7-17.1-20.8-34.3-17.5c-17.1,3.3-17.1,5.1-23.1,9.8c-5.9,4.7-14.2,8.9-21.3,9.5c-7.1,0.6-26.6,0-27.2,4.1c-0.6,4.1-3,7.7-3,18.9c0,11.2-1.2,18.9,0,27.2c1.2,8.3,5.9,27.2,10,31.9c4.1,4.7,11.2,13,11.2,20.7c0,7.7-1.2,31.9-3,41.4c-1.8,9.5-0.6,26.6-2.4,33.7c-1.8,7.1-0.2,28.8,0.6,35.5c4.4,35.7,6.5,77.7,16,77.7s13.7,0.9,14-5c0.2-5.9-3.8-14.2,0-39c3.8-24.8,6.4-53.1,9.7-66.2c13.5-53.5,40.9-59.1,48.5-49.1c7.6,10,19.4,32.5,22.4,42.6c3,10,10.6,27.2,13.6,42.6c3,15.4,4.7,26,5.9,30.7C685.9,710.8,698.9,714.5,700.7,708.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -533.9918823242188, 827.1229248046875)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M559.4,561.3c0,7.7-1.2,31.9-3,41.4c-1.8,9.5-0.6,26.6-2.4,33.7c-1.8,7.1-0.2,28.8,0.6,35.5c4.4,35.7,6.5,77.7,16,77.7c9.5,0,13.7,0.9,14-5c0.2-5.9-3.8-14.2,0-39c3.8-24.8,6.4-53.1,9.7-66.2c13.5-53.5,40.9-59.1,48.5-49.1c7.6,10,19.4,32.5,22.4,42.6c3,10,10.6,27.2,13.6,42.6c3,15.4,4.7,26,5.9,30.7c1.2,4.7,14.2,8.4,16,2.4c0.5-1.8,10.6-32.5,7.7-66.8c-3-34.3-13-63.8-13-74.5c0-10.6,1.1-37.2,6.8-39.6c3.2-1.3,7.3-6.2,10.4-12.5c-17.3-1-31.9,11.9-46.7,21c-38.6,23.8-80.4,14.6-117.8-10.9c-2.1-1.4-4.6-2.8-7.2-4c2,7.9,4.8,16.4,7.4,19.3C552.3,545.3,559.4,553.6,559.4,561.3z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Premolar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -768.6585083007814, 814.9726867675781)'>\n        <path\n          className={classes.crown}\n          d='M832.9,453.6c0,0-7.1-13.6-17.7-9.5c-10.6,4.1-23.6,2.8-27.8,4.3c-4.1,1.6-14.8,4.5-14.2,12.2c0.6,7.7-4.2,23.6,0,35.5c4.2,11.8,11.3,34.9,18.3,40.8c7.1,5.9,8.3,7.1,6.5,15.4c-1.8,8.3-13.6,48.5-14.8,53.8c-1.2,5.3-7.1,26-5.3,31.3c1.8,5.3,7.1,24.2,7.7,29.6c0.6,5.3,2.4,37.2,6.5,41.4c4.1,4.1,13,16.5,16.6,0c3.5-16.6,9.5-57.3,11.8-66.2c2.4-8.9,18.9-37.8,23.1-42c4.1-4.1,17.1-27.9,29.6-20.1c12.4,7.7,22.5,17.2,30.1,31.4c7.7,14.2,15.4,22.5,18.9,32.5c3.5,10,8.9,43.7,10.6,54.4c1.8,10.6,13.6,20.1,18.3,16c4.7-4.1,4.7-8.9,3.5-22.5c-1.2-13.6-1.1-44.3,0.7-55c1.7-10.6-4.2-41.4-6.6-47.9c-2.4-6.5-20.7-38.4-20.1-43.7c0.6-5.3,0-7.7,7.1-13c7.1-5.3,21.4-24.2,19.9-46.7c-1.6-22.5-3.3-41.4-7.5-45.5c-4.1-4.1-17.1-3-20.1,0c-3,3-14.8,7.1-16,4.1c-1.2-3-20.1-18.3-25.4-15.4c-5.3,3-21.3,3.5-28.4,8.9C851.2,442.9,832.9,453.6,832.9,453.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -768.6585083007814, 815.0726623535156)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M791.5,536.9c7.1,5.9,8.3,7.1,6.5,15.4c-1.8,8.3-13.6,48.5-14.8,53.8c-1.2,5.3-7.1,26-5.3,31.3c1.8,5.3,7.1,24.2,7.7,29.6c0.6,5.3,2.4,37.2,6.5,41.4c4.1,4.1,13,16.5,16.6,0c3.5-16.6,9.5-57.3,11.8-66.2c2.4-8.9,18.9-37.8,23.1-42c4.1-4.1,17.1-27.9,29.6-20.1c12.4,7.7,22.5,17.2,30.1,31.4c7.7,14.2,15.4,22.5,18.9,32.5c3.5,10,8.9,43.7,10.6,54.4c1.8,10.6,13.6,20.1,18.3,16c4.7-4.1,4.7-8.9,3.5-22.5c-1.2-13.6-1.1-44.3,0.7-55c1.7-10.6-4.2-41.4-6.6-47.9c-2.4-6.5-20.7-38.4-20.1-43.7c0.6-5.3,0-7.7,7.1-13c3.3-2.5,8.2-7.9,12.3-15.3c-7.5-0.5-15.3,0.3-22.8,1.1c-42.2,4.5-84.4,9.1-126.6,13.6c-6.7,0.7-9.8-0.1-12.2-1.7C788.1,533,789.8,535.5,791.5,536.9z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Molar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -586.72412109375, -33.668106)'>\n        <path\n          className={classes.crown}\n          d='M667.2,244.5c0,0-13.6-17.6-19.9-31.8c-6.2-14.2-26.1-55.1-23.6-62.6c2.5-7.4-2.5-38.5-9.9-26.1c-7.4,12.4-19.9,24.8-18.6,37.2c1.2,12.4-6.4,37.3-0.1,48.4s22.4,47.1,24.9,59.5c2.5,12.4,2.5,22.3-3.7,28.5c-6.2,6.2-16.1,27.3-17.4,34.7c-1.2,7.4-11.4,42.9-6.3,51.2c5.1,8.3,11.3,10.8,21.2,17c9.9,6.2,23.6,17.6,29.8,12.5c6.2-5.1,37.2-18.7,43.4-17.5c6.2,1.2,24.8,5,28.5,9.9c3.7,5,14.9,5,24.8,0c9.9-5,16.1-6.8,17.4-22c1.2-15.2,3.7-47.5,0-54.9c-3.7-7.4-18.6-22.3-14.9-31c3.7-8.7,16.3-53.4,16.9-69.5c0.5-16.1-4.2-65.8,0-69.5c4.2-3.7,5.8-40.5,0-37.6c-5.7,2.9-16.9,20.3-16.9,26.5s-8.7,26.1-11.2,37.2c-2.5,11.2-12.4,58.3-12.4,39.7c0-18.6-8.7-63.3-8.7-63.3s0-47.1-7.4-40.3c-7.4,6.8-17.4,5.5-17.4,21.7c0,16.1-9.4,59.8-8.4,64C678.3,210.8,671.1,249.8,667.2,244.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -586.72412109375, -33.668106)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M742.9,297.7c3.7-8.7,16.3-53.4,16.9-69.5c0.5-16.1-4.2-65.8,0-69.5c4.2-3.7,5.8-40.5,0-37.6c-5.7,2.9-16.9,20.3-16.9,26.5s-8.7,26.1-11.2,37.2c-2.5,11.2-12.4,58.3-12.4,39.7s-8.7-63.3-8.7-63.3s0-47.1-7.4-40.3c-7.4,6.8-17.4,5.5-17.4,21.7c0,16.1-9.4,59.8-8.4,64c1,4.2-6.3,43.1-10.2,37.8c0,0-13.6-17.6-19.9-31.8c-6.2-14.2-26.1-55.1-23.6-62.6c2.5-7.4-2.5-38.5-9.9-26.1c-7.4,12.4-19.9,24.8-18.6,37.2c1.2,12.4-6.4,37.3-0.1,48.4c6.3,11.1,22.4,47.1,24.9,59.5c2.5,12.4,2.5,22.3-3.7,28.5c-2.4,2.4-5.3,7-8.1,12.1c17.6-9.8,38.4-14,58.6-12.6c26.6,1.8,52.2,12.7,73.9,28.3c6,4.3,11.9,9,18.8,11.7c-0.3-3.8-0.8-6.8-1.7-8.5C754,321.3,739.1,306.4,742.9,297.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Molar2 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -799.4635620117188, -20.53668212890625)'>\n        <path\n          className={classes.crown}\n          d='M863.6,231.4c0,0-9.9-34.2-8.8-43.6c1.1-9.4,0.6-57.4-7.7-61.2c-8.3-3.9-12.7-1.1-13.2,3.9c-0.6,5-4.4,34.7-6.6,38.1c-2.2,3.3-13.2,38-11.6,41.1c1.7,3.1,2.8,39.5,6.6,47.2c3.9,7.7,13.2,29.8,11.6,37.5c-1.7,7.7,3.3,6.1-3.3,14.3c-6.6,8.3-21.5,33.6-21,43.6c0.6,9.9-6.1,35.3,0,39.7c6.1,4.4,12.7,4.4,17.7,5c5,0.6,8.3,5,11,5c2.8,0,43.6-22.6,48.5-22.1c5,0.6,18.2,10.5,25.4,12.1c7.2,1.7,27.6,5,37.5,0c9.9-5,14.9-11,16-33.1c1.1-22.1-4.4-48.5-8.3-51.8c-3.9-3.3-7.7-3.3-11-14.9c-3.3-11.6-2.2-39.7,3.9-49.1c6.1-9.4,15.2-45.8,15.6-53.5c0.4-7.7-5.1-46.3-9.5-50.2s-11.6-9.9-13.2-1.7c-1.7,8.3-6.6,28.1-8.3,38.6c-1.7,10.5-17.1,56.8-17.6,48c-0.6-8.8-5.5-23.7-5-34.2c0.6-10.5,0-43.6-2.8-52.4c-2.8-8.8-9.4-20.2-13.2-12.8c-3.9,7.3-10.2,15.6-9.8,23.9c0.4,8.3-5.1,24.3-6.8,37c-1.7,12.7-7.2,27.6-8.8,32.5C869.1,223.2,865,236.5,863.6,231.4z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -799.4635620117188, -20.53668212890625)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M946.3,292.1c-3.3-11.6-2.2-39.7,3.9-49.1c6.1-9.4,15.2-45.8,15.6-53.5c0.4-7.7-5.1-46.3-9.5-50.2c-4.4-3.9-11.6-9.9-13.2-1.7c-1.7,8.3-6.6,28.1-8.3,38.6c-1.7,10.5-17.1,56.8-17.6,48c-0.6-8.8-5.5-23.7-5-34.2c0.6-10.5,0-43.6-2.8-52.4c-2.8-8.8-9.4-20.2-13.2-12.8c-3.9,7.3-10.2,15.6-9.8,23.9c0.4,8.3-5.1,24.3-6.8,37c-1.7,12.7-7.2,27.6-8.8,32.5c-1.7,5-5.7,18.4-7.2,13.2c0,0-9.9-34.2-8.8-43.6c1.1-9.4,0.6-57.4-7.7-61.2c-8.3-3.9-12.7-1.1-13.2,3.9c-0.6,5-4.4,34.7-6.6,38.1c-2.2,3.3-13.2,38-11.6,41.1c1.7,3.1,2.8,39.5,6.6,47.2c3.9,7.7,13.2,29.8,11.6,37.5c-1.7,7.7,3.3,6.1-3.3,14.3c-1.9,2.3-4.4,6-7,10.3c5.1-2.9,10.2-5.7,15.3-8c20-9,42.5-10.4,64.3-11.6c19.1-1.1,40.2-1.5,55.5,9.4c-0.4-0.8-0.8-1.4-1.2-1.8C953.5,303.7,949.6,303.7,946.3,292.1z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\nimport Incisor1 from './Incisor/1'\nimport Incisor2 from './Incisor/2'\nimport Incisor3 from './Incisor/3'\nimport Incisor4 from './Incisor/4'\nimport Canine1 from './Canine/1'\nimport Canine2 from './Canine/2'\nimport Premolar1 from './Premolar/1'\nimport Premolar2 from './Premolar/2'\nimport Molar1 from './Molar/1'\nimport Molar2 from './Molar/2'\n\nimport classes from './style.module.scss'\n\nexport default function TeethFactory (props) {\n  const { type, index, transform = {}, state = [] } = props\n\n  return (\n    <div className={classes.root}>\n      {transform.flipY && (\n        <React.Fragment>\n          <div className={classes['other-details']}>\n            <div className={classes.circle} />\n            <span>{index + 1}</span>\n          </div>\n        </React.Fragment>\n      )}\n\n      <div\n        className={`${classes.teeth} ${classes[state]}  ${transform.flipX && classes['flip-x']} ${transform.flipY &&\n          classes['flip-y']}`}\n      >\n        <React.Fragment>\n          {type === 'Incisor1' && <Incisor1 state={state} />}\n          {type === 'Incisor2' && <Incisor2 state={state} />}\n          {type === 'Incisor3' && <Incisor3 state={state} />}\n          {type === 'Incisor4' && <Incisor4 state={state} />}\n\n          {type === 'Canine1' && <Canine1 state={state} />}\n          {type === 'Canine2' && <Canine2 state={state} />}\n\n          {type === 'Premolar1' && <Premolar1 state={state} />}\n          {type === 'Premolar2' && <Premolar2 state={state} />}\n\n          {type === 'Molar1' && <Molar1 state={state} />}\n          {type === 'Molar2' && <Molar2 state={state} />}\n        </React.Fragment>\n      </div>\n      {!transform.flipY && (\n        <React.Fragment>\n          <div className={classes['other-details']}>\n            <span>{index + 1}</span>\n            <div className={classes.circle} />\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport TeethFactory from './Teeth/TeethFactory'\n\nexport default function TeethGroup (props) {\n  const { number, teeth, states = {} } = props\n\n  const [details, setDetails] = React.useState()\n\n  React.useEffect(() => {\n    let _details = {}\n\n    switch (number) {\n      case 1:\n        _details = {\n          startAt: 0,\n          transform: {\n            flipX: 1\n          }\n        }\n        break\n\n      case 2:\n        _details = {\n          startAt: 8\n        }\n        break\n\n      case 3:\n        _details = {\n          startAt: 31,\n          reverse: true,\n          transform: {\n            flipX: 1,\n            flipY: 1\n          }\n        }\n        break\n\n      case 4:\n        _details = {\n          startAt: 23,\n          reverse: true,\n          transform: {\n            flipY: 1\n          }\n        }\n        break\n\n      default:\n        break\n    }\n\n    setDetails(_details)\n  }, [number])\n\n  return (\n    <React.Fragment>\n      {details && (\n        <React.Fragment>\n          {teeth.map((type, index) => {\n            const _index = !details.reverse ? details.startAt + index : details.startAt - index\n            return (\n              <TeethFactory\n                key={_index}\n                transform={details.transform}\n                type={type}\n                index={_index}\n                state={states[_index]}\n              />\n            )\n          })}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport TeethGroup from './TeethGroup'\n\n// Styles\nimport classes from './DentalChart.module.scss'\n\nconst teeth = {\n  uppper: {\n    left: ['Molar2', 'Molar1', 'Premolar1', 'Canine2', 'Canine1', 'Incisor3', 'Incisor2', 'Incisor1'],\n    right: ['Incisor1', 'Incisor2', 'Incisor3', 'Canine1', 'Canine2', 'Premolar1', 'Molar1', 'Molar2']\n  },\n  lower: {\n    left: ['Molar2', 'Premolar2', 'Premolar1', 'Canine1', 'Incisor4', 'Incisor3', 'Incisor2', 'Incisor1'],\n    right: ['Incisor1', 'Incisor2', 'Incisor3', 'Incisor4', 'Canine1', 'Premolar1', 'Premolar2', 'Molar2']\n  }\n}\n\n// props\n// states Object {\n//  enum: 'filled, extracted, default\n// }\n\nexport default function DentalChart (props) {\n  const { states } = props\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='h6'>Dental Examination Chart</Typography>\n      </div>\n      <div className={classes.container}>\n        <div className={classes.chart}>\n          <div className={classes.upper}>\n            <TeethGroup number={1} teeth={teeth.uppper.left} states={states} />\n            <TeethGroup number={2} teeth={teeth.uppper.right} reverse states={states} />\n          </div>\n\n          <div className={classes.lower}>\n            <TeethGroup number={3} teeth={teeth.lower.left} states={states} />\n            <TeethGroup number={4} teeth={teeth.lower.right} states={states} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport Typography from '@material-ui/core/Typography'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport DentalChart from '../../../DentalChart/DentalChart'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangeDoctor,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n  const [flag, setFlag] = React.useState({ flag: true })\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          procedures: data.dental_procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const constructDentalStates = procedures => {\n    const data = {}\n    for (const [index, value] of procedures.entries()) {\n      try {\n        data[value.tooth_number - 1] = 'extracted'\n      } catch (ex) {}\n    }\n    return data\n  }\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...allowedFields, ...flag }))({ ...data, ...flag })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      tooth_number: details.tooth_number,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member,\n      flag: true\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                isDental\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract.years}\n                      required\n                      readOnly={!permissions.base.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={`${classes.groups} ${classes.chart}`}>\n                <DentalChart states={constructDentalStates(claim.procedures)} />\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  isDental\n                  showPhilhealthField={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport Typography from '@material-ui/core/Typography'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...allowedFields }))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract.years}\n                      required\n                      readOnly={!permissions.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport Typography from '@material-ui/core/Typography'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimECU.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimECU (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangePro,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          claim_sub_type: data.claim_sub.type,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...allowedFields }))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                // showContractRange\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(event.toISOString())\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO/ECU Specialist ID'\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO/ECU Specialist Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract.years}\n                      required\n                      readOnly={!permissions.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showPhilhealthField={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showPhilhealthRemarks={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Controller\nimport ConfigController from 'Controllers/ConfigController2'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPharmacy.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError,\n  setRejectStatus\n} = actions\n\nexport default function ClaimPharmacy (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      claim_source: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: [],\n      hospital_items: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          claim_source: data.claim_source,\n          medicine_category: data.medicine_category,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n      // ConfigController.getUserManagementData().then(res => {\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: new Date().toISOString(),\n      //       field: 'approved_date'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: res.user_id,\n      //       field: 'approved_id'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: `${res.first_name} ${res.last_name}`,\n      //       field: 'approved_name'\n      //     })\n      //   )\n      // })\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      (parseFloat(i.amount_not_covered) +\n        parseFloat(i.philhealth_amount_paid) +\n        parseFloat(i.amount_due_from_member) +\n        parseFloat(i.amount_paid_by_member))\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n      dispatch(setRejectStatus(!(sum === 0)))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data }, true)\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <div className={classes.root}>\n              <Paper className={classes['first-container']}>\n                <BaseDetails\n                  claim={claim}\n                  showClaimSource\n                  onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                  permissions={permissions.base}\n                />\n                <div className={classes.groups}>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-admission-date-of-service'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='date-of-service'\n                        required\n                        label='Date of Service'\n                        value={claim.date_to}\n                        onChange={event => {\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.toISOString(),\n                              field: 'date_from'\n                            })\n                          )\n                        }}\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medical-partner-id'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.facility_id\n                      }}\n                    >\n                      <AutoComplete\n                        id='medical-partner-id'\n                        required\n                        label='Medical Partner ID'\n                        value={claim.facility_id}\n                        suggestions={suggestions.facility.id}\n                        onChange={(value, isSuggestionClick) =>\n                          handleOnChangeFacility({\n                            field: 'facility_id',\n                            value,\n                            isSuggestionClick\n                          })\n                        }\n                        error={error.facility_id}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medical-partner-facility-name'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.facility_name\n                      }}\n                    >\n                      <AutoComplete\n                        id='medical-partner-facility-name'\n                        required\n                        label='Medical Partner (Facility) Name'\n                        value={claim.facility_name}\n                        suggestions={suggestions.facility.name}\n                        onChange={(value, isSuggestionClick) =>\n                          handleOnChangeFacility({\n                            field: 'facility_name',\n                            value,\n                            isSuggestionClick\n                          })\n                        }\n                        error={error.facility_name}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medicine-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.medicine_category\n                      }}\n                    >\n                      <TextField\n                        id='medicine-category'\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        required\n                        error={error.medicine_category}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </div>\n              </Paper>\n            </div>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showAmountPaidByMember={false}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showAmountPaidByMember={false}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport Typography from '@material-ui/core/Typography'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimPPE (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_name: '',\n      client_account_number: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      ppe_packagers: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          // customer_account_number: data.customer_account_number,\n          // company_name: data.company_name,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          ppe_packagers: data.ppe_packages || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...allowedFields }))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                showMemberAccountNumber={false}\n                showCompany\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service-from'\n                      required\n                      label='Date of Service (From)'\n                      value={claim.date_from}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(event.toISOString())\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service-to'\n                      required\n                      label='Date of Service (To)'\n                      value={claim.date_to}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={`${classes['input']} ${classes['packages']}`}>\n                  <Typography>PPE Package/s:</Typography>\n                  <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                    <List>\n                      {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                        <ListItem key={index}>\n                          <ListItemText primary={`Package ${index + 1}`} />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </Paper>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showPhilhealthField={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showPhilhealthRemarks={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .messages({ 'string.empty': `\"Approval Code\" is required.` })\n    .required(),\n  loa_number: Joi.string()\n    .trim()\n    .label('LOA No.')\n    .messages({ 'string.empty': `\"LOA No.\" is required.` })\n    .required(),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .messages({ 'string.empty': `\"Member First Name\" is required.` })\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow('', null),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .allow('', null),\n  date_to: Joi.date()\n    .label('Service Date')\n    .required()\n    .messages({ 'string.empty': `\"Service Date\" is required.` }),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  claim_remarks: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport Typography from '@material-ui/core/Typography'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Controller\nimport ConfigController from 'Controllers/ConfigController2'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicalSupplies.module.scss'\n\n// Validator\nimport MainValidator from './ClaimMedicalSuppliesValidator'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError,\n  setRejectStatus\n} = actions\n\nexport default function ClaimMedicalSupplies (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: [],\n      hospital_items: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          hospital_items: data.hospital_items || [],\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n      // ConfigController.getUserManagementData().then(res => {\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: new Date().toISOString(),\n      //       field: 'approved_date'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: res.user_id,\n      //       field: 'approved_id'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: `${res.first_name} ${res.last_name}`,\n      //       field: 'approved_name'\n      //     })\n      //   )\n      // })\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      (parseFloat(i.amount_not_covered) +\n        parseFloat(i.philhealth_amount_paid) +\n        parseFloat(i.amount_due_from_member) +\n        parseFloat(i.amount_paid_by_member))\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n      dispatch(setRejectStatus(!(sum === 0)))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(data)\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <div className={classes.root}>\n              <Paper className={classes['first-container']}>\n                <BaseDetails\n                  claim={claim}\n                  onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                  permissions={permissions.base}\n                />\n                <div className={classes.groups}>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-admission-date-of-service'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='date-of-service'\n                        required\n                        label='Date of Service'\n                        value={claim.date_to}\n                        onChange={event => {\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.toISOString(),\n                              field: 'date_from'\n                            })\n                          )\n                        }}\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medical-partner-id'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.facility_id\n                      }}\n                    >\n                      <AutoComplete\n                        id='medical-partner-id'\n                        label='Medical Partner ID'\n                        value={claim.facility_id}\n                        suggestions={suggestions.facility.id}\n                        onChange={(value, isSuggestionClick) =>\n                          handleOnChangeFacility({\n                            field: 'facility_id',\n                            value,\n                            isSuggestionClick\n                          })\n                        }\n                        error={error.facility_id}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medical-partner-facility-name'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.facility_name\n                      }}\n                    >\n                      <AutoComplete\n                        id='medical-partner-facility-name'\n                        label='Medical Partner (Facility) Name'\n                        value={claim.facility_name}\n                        suggestions={suggestions.facility.name}\n                        onChange={(value, isSuggestionClick) =>\n                          handleOnChangeFacility({\n                            field: 'facility_name',\n                            value,\n                            isSuggestionClick\n                          })\n                        }\n                        error={error.facility_name}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </div>\n              </Paper>\n            </div>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showAmountPaidByMember={false}\n                  showPhilhealthField={false}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showAmountPaidByMember={false}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport Typography from '@material-ui/core/Typography'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Controller\nimport ConfigController from 'Controllers/ConfigController2'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimClinicManagement.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimClinicManagement (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      client_account_name: '',\n      client_account_number: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: [],\n      hospital_items: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n      // ConfigController.getUserManagementData().then(res => {\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: new Date().toISOString(),\n      //       field: 'approved_date'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: res.user_id,\n      //       field: 'approved_id'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: `${res.first_name} ${res.last_name}`,\n      //       field: 'approved_name'\n      //     })\n      //   )\n      // })\n    })\n  }, [])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data }, true)\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-client-account-number'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.client_account_number\n                    }}\n                  >\n                    <TextField\n                      id='client-account-number'\n                      label='Client Account Number'\n                      value={claim.client_account_number}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'client_account_number'\n                          })\n                        )\n                      }\n                      error={error.client_account_number}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-client-account-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.client_account_number\n                    }}\n                  >\n                    <TextField\n                      id='client-account-name'\n                      label='Client Account Name'\n                      value={claim.client_account_name}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'client_account_name'\n                          })\n                        )\n                      }\n                      error={error.client_account_number}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(event.toISOString())\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showAmountPaidByMember={false}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  showPhilhealthField={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showAmountPaidByMember={false}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ReimbursementInfo.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'date-created', name: 'Date Created' },\n  { id: 'prepared-by', name: 'Prepared By' },\n  { id: 'date-encoded', name: 'Date Encoded' },\n  { id: 'released-to', name: 'Released To' }\n]\n\nexport default function ReimbursementInfo (props) {\n  const {\n    show,\n    canPrintNotice = true,\n    setShowModal,\n    handleOnSave,\n    doReject,\n    doViewClaimNotice = () => {},\n    service,\n    lookup\n  } = props\n  const {\n    batch_number,\n    member_last_name,\n    member_first_name,\n    member_middle_name,\n    reimbursement_info_analysts: data = []\n  } = props.claim\n\n  const container = React.useRef()\n\n  const [showAdd, setShowAdd] = React.useState()\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [items, setItems] = React.useState([])\n  const [reasonDropdown, setReasonDropdown] = React.useState([])\n\n  React.useEffect(() => {\n    setItems(data)\n  }, [data])\n\n  React.useEffect(() => {\n    if (showAdd) {\n      service\n        .lookups({\n          on: 'dropdown',\n          params: { field: lookup }\n        })\n        .then(res => {\n          const { data } = res.data\n          setReasonDropdown(\n            data.map(item => ({\n              value: item.reason,\n              text: item.reason\n            }))\n          )\n        })\n    }\n  }, [showAdd])\n\n  const handleOnItemClick = ({ index, value = true }) => {\n    if (showAdd && value) return\n\n    setItems(items => {\n      return items.map((item, _index) => {\n        if (_index === index) item.show = value\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          if (_index === index) item.showCell = value\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnClickAdd = () => {\n    setShowAdd(true)\n\n    setTimeout(() => {\n      container.current.scrollTo({\n        top: container.current.scrollHeight,\n        behavior: 'smooth'\n      })\n    }, 1)\n  }\n\n  const handleOnClickCancel = index => {\n    if (index === 'add') return setShowAdd()\n    handleOnItemClick({ index, value: false })\n  }\n\n  const handleOnClickSave = ({ item }) => {\n    setItems(items => {\n      const _items = [...items, item]\n      handleOnItemSave(_items)\n      return _items\n    })\n    setShowAdd()\n  }\n\n  const handleOnClickUpdate = ({ index, item }) => {\n    items[index] = item\n    setItems(items => {\n      let _items = items.map((_item, _index) => {\n        if (_index === index) _item = { ...item, show: false, showCell: false }\n        return _item\n      })\n\n      handleOnItemSave(_items)\n      return _items\n    })\n  }\n\n  const handleOnClose = () => {\n    setShowModal(false)\n    setItems(items => {\n      return items.map((item, _index) => {\n        item.show = false\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          item.showCell = false\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnItemSave = items => {\n    const _items = []\n\n    for (let i of items) {\n      _items.push({\n        date_created: i.date_created,\n        prepared_by: i.prepared_by,\n        date_encoded: i.date_encoded,\n        released_to: i.released_to,\n        date_released: i.date_released,\n        date_return: i.date_return,\n        remarks: i.remarks,\n        reasons: i.reasons\n      })\n    }\n\n    handleOnSave(_items)\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            Reimbursement Info\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes['basic-info']}>\n          <Typography variant='subtitle2' className={classes.label}>\n            Batch No.: {batch_number}\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.label}>\n            Member Name.: {member_last_name}, {member_first_name} {member_middle_name}\n          </Typography>\n        </div>\n        <Table\n          TableContainerProps={{\n            style: { height: '100%', overflow: 'auto', position: 'relative' },\n            ref: container\n          }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.id} id={`header-${headCell.id}`}>\n                  {headCell.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          pagination={false}\n          body={\n            <React.Fragment>\n              {items.map((item, index) => (\n                <React.Fragment key={index}>\n                  <TableRow onClick={() => handleOnItemClick({ index })}>\n                    <TableCell id={`batch-number-${index}`}>{DateFormatter(item.date_created)}</TableCell>\n                    <TableCell id={`prepared-by-${index}`}>{item.prepared_by}</TableCell>\n                    <TableCell id={`date-encoded-${index}`}>{DateFormatter(item.date_encoded)}</TableCell>\n                    <TableCell id={`released-to-${index}`}>{item.released_to}</TableCell>\n                  </TableRow>\n\n                  {item.show && (\n                    <ItemForm\n                      reasonDropdown={reasonDropdown}\n                      index={index}\n                      item={item}\n                      handleOnClickCancel={handleOnClickCancel}\n                      handleOnClickUpdate={handleOnClickUpdate}\n                      service={service}\n                      lookup={lookup}\n                      setReasonDropdown={setReasonDropdown}\n                    />\n                  )}\n                </React.Fragment>\n              ))}\n\n              {/* Add Form */}\n              {showAdd && (\n                <ItemForm\n                  index='add'\n                  reasonDropdown={reasonDropdown}\n                  item={{}}\n                  handleOnClickSave={handleOnClickSave}\n                  handleOnClickCancel={handleOnClickCancel}\n                  service={service}\n                  lookup={lookup}\n                  setReasonDropdown={setReasonDropdown}\n                />\n              )}\n              {/* Add Form */}\n            </React.Fragment>\n          }\n        />\n\n        <div className={classes.footer}>\n          <Button variant='contained' color='primary' id='cancel' className='button-negative' onClick={handleOnClose}>\n            Close\n          </Button>\n\n          {doReject && (\n            <Button\n              variant='contained'\n              color='primary'\n              id='reject'\n              className='button-neutral'\n              onClick={() => setRejectModal(true)}\n            >\n              Reject\n            </Button>\n          )}\n\n          <Button\n            variant='contained'\n            color='primary'\n            id='save-for-now'\n            className='button-positive'\n            onClick={handleOnClickAdd}\n            disabled={showAdd}\n          >\n            Add\n          </Button>\n          {canPrintNotice && (\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={() => doViewClaimNotice({ goBack: false })}\n            >\n              Print Notice\n            </Button>\n          )}\n        </div>\n      </DialogContent>\n\n      <Alert\n        open={rejectModal}\n        message='Are you sure you want to reject this claim?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setRejectModal(false)}\n        onOk={() => {\n          setRejectModal(false)\n          setShowModal(false)\n          doReject()\n        }}\n      />\n    </Dialog>\n  )\n}\n\nconst ItemForm = props => {\n  const defaultFunction = () => {}\n  const { index, item: _item, readOnly, reasonDropdown, service, lookup, setReasonDropdown } = props\n\n  // Events\n  const {\n    handleOnClickCancel = defaultFunction,\n    handleOnClickSave = defaultFunction,\n    handleOnClickUpdate = defaultFunction\n  } = props\n\n  const [item, setItem] = React.useState({})\n\n  React.useEffect(() => {\n    const today = new Date().toISOString()\n\n    setItem({\n      date_created: today,\n      prepared_by: '',\n      date_encoded: today,\n      released_to: '',\n      date_released: today,\n      date_return: today,\n      remarks: '',\n      reasons: [],\n      ..._item\n    })\n  }, [])\n\n  const handleOnChange = ({ field, value }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(p => ({ ...p, [field]: value }))\n  }\n\n  const handleOnClickAddReason = () => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: [...item.reasons, { value: '', other_details: '' }]\n    }))\n  }\n  const handleOnClickRemoveReason = __index => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.filter((item, _index) => __index !== _index)\n    }))\n  }\n\n  const handleOnChangeReason = ({ field, value, index }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.map((item, _index) => {\n        if (index === _index) item[field] = value\n        return item\n      })\n    }))\n  }\n\n  const handleOnLookup = args => {\n    const { save = false, update = false } = args\n    service\n      .lookups({\n        on: 'dropdown',\n        params: { field: lookup }\n      })\n      .then(res => {\n        const { data } = res.data\n        setReasonDropdown(\n          data.map(item => ({\n            value: item.reason,\n            text: item.reason\n          }))\n        )\n        if (save || update) {\n          let hasError = false\n          const reasons = item.reasons\n          const tempReasons = []\n          reasons.map(reason => {\n            const existing = data.filter(i => i.reason === reason.value)\n            if (existing.length === 0) {\n              tempReasons.push({...reason, value: '', error: 'Please Input a Valid Reason'})\n              hasError = true\n            } else tempReasons.push(reason)\n          })\n          setItem({...item, reasons: tempReasons})\n          if (hasError) {\n            return false\n          }\n          if (save) handleOnClickSave({ index, item })\n          if (update) handleOnClickUpdate({ index, item })\n        }\n      })\n  }\n\n  const _handleOnClickUpdate = () => {\n    handleOnLookup({ update: true })\n  }\n\n  const _handleOnClickSave = () => {\n    handleOnLookup({ save: true })\n  }\n\n  return (\n    <TableRow key={`collapsible-${index}`}>\n      <TableCell colSpan={headCells.length} id={`collabsible-cell-${index}`} className={classes['collapsible-cell']}>\n        <div className={`${classes.container} ${!item.showCell || index === 'add' ? classes['show-cell'] : ''}`}>\n          <div className={classes.cell}>\n            <Typography variant='h6' className={classes.label}>\n              {index === 'add' ? 'Add Item' : 'Update Item'}\n            </Typography>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-created-${index}`}\n                  label='Date Created'\n                  value={item.date_created}\n                  onChange={event => handleOnChange({ field: 'date_created', value: event.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`prepared-by-${index}`}\n                  label='Prepared By'\n                  value={item.prepared_by || ''}\n                  onChange={event => handleOnChange({ field: 'prepared_by', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-encoded-${index}`}\n                  label='Date Encoded'\n                  value={item.date_encoded}\n                  onChange={event => handleOnChange({ field: 'date_encoded', value: event.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`released-to-${index}`}\n                  label='Released To'\n                  value={item.released_to || ''}\n                  onChange={event => handleOnChange({ field: 'released_to', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-released-${index}`}\n                  label='Date Released'\n                  value={item.date_released}\n                  onChange={event => handleOnChange({ field: 'date_released', value: event.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`return-date-${index}`}\n                  label='Return Date'\n                  value={item.date_return}\n                  disableComponents\n                  onChange={event => handleOnChange({ field: 'date_return', value: event.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']} style={{ width: '50%' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1 }}\n                  multiline\n                  rows={3}\n                  id='remarks'\n                  label='Remarks'\n                  value={item.remarks || ''}\n                  onChange={event => handleOnChange({ field: 'remarks', value: event.target.value })}\n                />\n              </div>\n            </div>\n\n            <div className={classes['reasons-container']}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Reasons\n                </Typography>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Other Details\n                </Typography>\n\n                <div className={classes.delete} />\n              </div>\n\n              {/* Reasons */}\n              {(item.reasons || []).map((item, _index) => (\n                <div className={classes.reasons} key={`reason-${_index}`}>\n                  <div className={classes['input']} style={{ width: '50%' }}>\n                    <DropDown\n                      items={reasonDropdown}\n                      id={`reason-text-${_index}`}\n                      value={item.value || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'value', value: event.target.value, index: _index })\n                      }\n                      error={item.error}\n                    />\n                  </div>\n\n                  <div className={classes['input']} style={{ width: '50%' }}>\n                    <TextField\n                      id={`reason-other-details-${_index}`}\n                      value={item.other_details || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'other_details', value: event.target.value, index: _index })\n                      }\n                    />\n                  </div>\n\n                  <div className={classes.delete}>\n                    <IconButton id='delete-reason'>\n                      <DeleteIcon fontSize='small' onClick={() => handleOnClickRemoveReason(_index)} />\n                    </IconButton>\n                  </div>\n                </div>\n              ))}\n\n              <Typography\n                variant='body2'\n                className={`${classes['add-link']} ${(item.reasons || []).length ? '' : classes['empty-reasons']}`}\n                onClick={() => handleOnClickAddReason()}\n              >\n                + Add a reason\n              </Typography>\n              {/* Reasons */}\n            </div>\n\n            <div className={classes.footer}>\n              <React.Fragment>\n                {!readOnly && (\n                  <React.Fragment>\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      id='cancel'\n                      className='button-negative'\n                      onClick={() => handleOnClickCancel(index)}\n                    >\n                      Cancel\n                    </Button>\n                    {index === 'add' && (\n                      <React.Fragment>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          id='save-for-now'\n                          className='button-positive'\n                          onClick={_handleOnClickSave}\n                        >\n                          Save\n                        </Button>\n                      </React.Fragment>\n                    )}\n                    {index !== 'add' && (\n                      <React.Fragment>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          id='save-for-now'\n                          className='button-positive'\n                          onClick={_handleOnClickUpdate}\n                        >\n                          Update\n                        </Button>\n                      </React.Fragment>\n                    )}\n                  </React.Fragment>\n                )}\n              </React.Fragment>\n            </div>\n          </div>\n        </div>\n      </TableCell>\n    </TableRow>\n  )\n}\n","const InPatient = ['date_to', 'room_type', 'room_rate', 'pro_id', 'pro_name']\nconst other_fields = ['doctor_id', 'doctor_name', 'department']\n\nconst AdditionalFields = type => {\n  if (type === undefined) return {}\n\n  const additional_fields = type === 'InPatient' ? InPatient : other_fields\n\n  let result = {}\n\n  for (let field of additional_fields) result[field] = ''\n\n  return result\n}\n\nAdditionalFields.exist = (fields, field) => fields[field] !== undefined\n\nexport default AdditionalFields\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ReimbursementInfo from '../ReimbursementInfo/ReimbursementInfo'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Controller\n// import ConfigController from 'Controllers/ConfigController2'\nimport AdditionalFields from './AdditionalFields'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onViewClaimNotice,\n    onChangeDoctor = () => {},\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {}, onChangePro } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  //\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  // const [openDialog, setOpenDialog] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [initialAllowedFields, setInitialAllowedFields] = React.useState({})\n  const [showReimbursementModal, setShowReimbursementModal] = React.useState(false)\n  //\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      reimbursement_type: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      medicine_category: '',\n      reimbursement_category: '',\n      official_receipt_number: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      diagnosis: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: [],\n      reimbursement_info: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields({ ..._allowedFields, ...AdditionalFields(undefined) })\n      setInitialAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n\n      let _claim = {\n        batch_number: data.batch_number,\n        approval_code: data.approval_code,\n        loa_number: data.loa_number,\n        reimbursement_type: data.reimbursement_details.type,\n        member_account_number: data.member.account_number,\n        member_last_name: data.member.last_name,\n        member_first_name: data.member.first_name,\n        member_middle_name: data.member.middle_name,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        date_from: data.date.from,\n        medicine_category: data.medicine_category,\n        reimbursement_category: data.reimbursement_details.category,\n        official_receipt_number: data.reimbursement_details.official_receipt_number,\n        diagnosis: data.diagnosis || [],\n        procedures: data.procedures || [],\n        professional_fees: data.professional_fees || [],\n        hospital_items: data.hospital_items || [],\n        reimbursement_info: data.reimbursement_info || [],\n        reimbursement_info_analysts: data.reimbursement_info_analysts || [],\n        claim_remarks: data.claim_remarks\n      }\n\n      if (data.reimbursement_details.type === 'InPatient') {\n        _claim = {\n          ..._claim,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate || 0,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name\n        }\n      } else {\n        _claim = {\n          ..._claim,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          department: data.department\n        }\n      }\n\n      dispatch(setClaimFields(_claim))\n      setAllowedFields({\n        ..._allowedFields,\n        ...AdditionalFields(data.reimbursement_details.type === 'InPatient' ? 'InPatient' : '')\n      })\n\n      setBatchNumber(data.batch_number)\n\n      // ConfigController.getUserManagementData().then(res => {\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: new Date().toISOString(),\n      //       field: 'approved_date'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: res.user_id,\n      //       field: 'approved_id'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: `${res.first_name} ${res.last_name}`,\n      //       field: 'approved_name'\n      //     })\n      //   )\n      // })\n    })\n  }, [])\n\n  //* Room\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const [data] = res.data.data\n\n      let rooms = []\n      if (data) {\n        rooms = (data.rooms || []).map(item => ({\n          text: item.type,\n          value: item.type,\n          rate: item.rate\n        }))\n      }\n\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(allowedFields))({ ...data })\n    console.log(error)\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  const onChangeReimbursementType = ({ value, field }) => {\n    setAllowedFields({ ...initialAllowedFields, ...AdditionalFields(value) })\n\n    if (value === 'InPatient') {\n      dispatch(\n        setClaimFields({\n          ...claim,\n          date_to: moment(claim.date_from)\n            .endOf('day')\n            .toISOString()\n        })\n      )\n    }\n\n    dispatch(setClaimBaseDetails({ value, field }))\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={onChangeReimbursementType}\n              permissions={permissions.base}\n              showReimbursement\n              requiredFields={{ reimbursement_type: true }}\n            />\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-medical-partner-id'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.facility_id\n                  }}\n                >\n                  <AutoComplete\n                    id='medical-partner-id'\n                    required\n                    label='Medical Partner ID'\n                    value={claim.facility_id}\n                    suggestions={suggestions.facility.id}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeFacility({\n                        field: 'facility_id',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={error.facility_id}\n                    readOnly={!permissions.base.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-medical-partner-facility-name'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.facility_name\n                  }}\n                >\n                  <AutoComplete\n                    id='medical-partner-facility-name'\n                    required\n                    label='Medical Partner (Facility) Name'\n                    value={claim.facility_name}\n                    suggestions={suggestions.facility.name}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeFacility({\n                        field: 'facility_name',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={error.facility_name}\n                    readOnly={!permissions.base.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              {AdditionalFields.exist(allowedFields, 'doctor_id') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='dp-medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'doctor_name') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_to') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-admission-date-from'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_from\n                      }}\n                    >\n                      <DatePicker\n                        id='admission-date-from'\n                        required\n                        label='Admission Date (From)'\n                        value={claim.date_from}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: moment(event.toISOString())\n                                .startOf('day')\n                                .toISOString(),\n                              field: 'date_from'\n                            })\n                          )\n                        }\n                        error={error.date_from}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='admission-date-to'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='admission-date-to'\n                        required\n                        label='Admission Date (To)'\n                        value={claim.date_to}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                        }\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-room-type'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.room_type\n                      }}\n                    >\n                      <DropDown\n                        id='room-type'\n                        label='Room Type'\n                        items={dropDown.rooms}\n                        value={claim.room_type}\n                        onChange={handleOnChangeRoomType}\n                        error={error.room_type}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-room-rate'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.room_rate\n                      }}\n                    >\n                      <TextFieldCurrency\n                        id='room-rate'\n                        label='Room Rate'\n                        value={claim.room_rate}\n                        onChange={event => {\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'room_rate'\n                            })\n                          )\n                        }}\n                        error={error.room_rate}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      required\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      required\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {!AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='admission-date-of-service'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='date-of-service'\n                        required\n                        label='Date of Service'\n                        value={claim.date_to}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                        }\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-department'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.department\n                      }}\n                    >\n                      <TextField\n                        id='department'\n                        label='Department'\n                        value={claim.department}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'department'\n                            })\n                          )\n                        }\n                        error={error.pro_id}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medicine-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.medicine_category\n                      }}\n                    >\n                      <TextField\n                        id='medicine-category'\n                        required\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.medicine_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      readOnly={!permissions.base.update}\n                      error={error.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <DiscrepancyBase\n                    id='dp-medicine-category'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.medicine_category\n                    }}\n                  >\n                    <div className={classes['input']}>\n                      <TextField\n                        id='medicine-category'\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.medicine_category}\n                      />\n                    </div>\n                  </DiscrepancyBase>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-reimbursement-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.reimbursement_category\n                      }}\n                    >\n                      <TextField\n                        id='reimbursement-category'\n                        label='Reimbursement Category'\n                        value={claim.reimbursement_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'reimbursement_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.reimbursement_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </React.Fragment>\n              )}\n              <DiscrepancyBase\n                id='dp-official-receipt-number'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.official_receipt_number\n                }}\n              >\n                <div className={classes['input']}>\n                  <TextField\n                    id='official-receipt-number'\n                    label='Official Receipt Number'\n                    value={claim.official_receipt_number}\n                    required\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'official_receipt_number'\n                        })\n                      )\n                    }\n                    readOnly={!permissions.base.update}\n                    error={error.official_receipt_number}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes['child-container']}>\n              <div className={classes['left-side']}>\n                {permissions.diagnosis.read && (\n                  <DiagnosisList\n                    id='diagnosis-list'\n                    permissions={permissions.diagnosis}\n                    items={claim.diagnosis}\n                    error={error.diagnosis}\n                  />\n                )}\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doViewClaimNotice={onViewClaimNotice}\n            doReject={() => setShowReimbursementModal(true)}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n            isReimbursement\n            reimbursement_info={claim.reimbursement_info}\n          />\n          <ReimbursementInfo\n            claim={{\n              ...claim,\n              batch_number: batchNumber\n            }}\n            show={showReimbursementModal}\n            setShowModal={setShowReimbursementModal}\n            service={ClaimsAdjudicationServices}\n            permission={permissions.reimbursement_info}\n            canPrintNotice={false}\n            doViewClaimNotice={onViewClaimNotice}\n            handleOnSave={data =>\n              dispatch(\n                setClaimBaseDetails({\n                  value: data,\n                  field: 'reimbursement_info_analysts'\n                })\n              )\n            }\n            doReject={() => onReject({ goBack: true })}\n            lookup={'reject-reason'}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport { useHistory } from 'react-router-dom'\n\n// Styles\nimport classes from './Error.module.scss'\n\nlet history = null\n\nconst DashboardRedirect = props => {\n  const { title = `Page not found`, body = `We cant seem to find the page you're looking for.` } = props\n  const [counter, setCounter] = React.useState()\n\n  React.useEffect(() => {\n    let _counter = 10\n    setCounter(_counter)\n    let interval = setInterval(() => {\n      if (_counter) {\n        _counter--\n        setCounter(_counter)\n      } else {\n        clearInterval(interval)\n        history.push('/')\n      }\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='h4' className={classes.title}>\n        {title}\n      </Typography>\n      <Typography variant='body1' className={classes.message}>\n        {body}\n      </Typography>\n\n      <div className={classes['action-messages']}>\n        <Typography variant='body2' className={classes.message}>\n          You will be redirected to Dashboard in {counter}\n        </Typography>\n        <Typography variant='body2' className={classes.message}>\n          Click the button below to go to that page.\n        </Typography>\n      </div>\n\n      <Button variant='contained' color='primary' className='button-neutral' onClick={() => history.push('/')}>\n        Go to Dashboard\n      </Button>\n    </div>\n  )\n}\n\nconst DashboardRedirectInit = props => {\n  history = useHistory()\n  return ''\n}\n\nconst DashboardRedirectService = {\n  redirect: () => {\n    history.push('/404')\n  }\n}\n\nexport { DashboardRedirectInit, DashboardRedirect, DashboardRedirectService }\n","import React from 'react'\n\n// Services\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Components\nimport ClaimInPatient from './Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from './Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from './Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimEmergency from './Components/ClaimEmergency/ClaimEmergency'\nimport ClaimMedicineAllowance from './Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimDental from './Components/ClaimDental/ClaimDental'\nimport ClaimAPE from './Components/ClaimAPE/ClaimAPE'\nimport ClaimECU from './Components/ClaimECU/ClaimECU'\nimport ClaimPharmacy from './Components/ClaimPharmacy/ClaimPharmacy'\nimport ClaimPPE from './Components/ClaimPPE/ClaimPPE'\nimport ClaimMedicalSupplies from './Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\nimport ClaimClinicManagement from './Components/ClaimClinicManagement/ClaimClinicManagement'\nimport ClaimReimbursement from './Components/ClaimReimbursement/ClaimReimbursement'\n\nimport { DashboardRedirect } from 'SharedComponents/DashboardRedirect/DashboardRedirect'\n\nexport default function GetClaimComponent (_props) {\n  const { _type } = _props\n  const props = _props\n\n  const SelectecClaimType = selected => {\n    // const type = ClaimTypes[selected].other_name\n    switch (selected) {\n      case 'InPatient':\n        return <ClaimInPatient {...props} />\n\n      case 'OutPatientProcedure':\n        return <ClaimOutPatientProcedure {...props} />\n\n      case 'OutPatientConsultation':\n        return <ClaimOutPatientConsultation {...props} />\n\n      case 'Emergency':\n        return <ClaimEmergency {...props} />\n\n      case 'Dental':\n        return <ClaimDental {...props} />\n\n      case 'MedicineAllowance':\n        return <ClaimMedicineAllowance {...props} />\n\n      case 'APE':\n        return <ClaimAPE {...props} />\n\n      case 'ECU':\n        return <ClaimECU {...props} />\n\n      case 'PPE':\n        return <ClaimPPE {...props} />\n\n      case 'Pharmacy':\n        return <ClaimPharmacy {...props} />\n\n      case 'MedicalSupplies':\n        return <ClaimMedicalSupplies {...props} />\n\n      case 'ClinicManagement':\n        return <ClaimClinicManagement {...props} />\n\n      case 'Reimbursement':\n        return <ClaimReimbursement {...props} />\n\n      default:\n        LoadingService.loading(false)\n        return <DashboardRedirect title='Claim Type Under Development' />\n    }\n  }\n\n  return <React.Fragment>{SelectecClaimType(_type)}</React.Fragment>\n}\n","import React from 'react'\n\n// Components\nimport GetClaimComponent from './GetClaimComponent'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  resetClaim,\n  setClaimType,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setClaimFacility,\n  setClaimDoctor,\n  addSuggestionToArray,\n  initDiscrepancy,\n  setDiscrepancy,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setEscalationMessages,\n  setInquiryMessages,\n  setClaimPro,\n  resetRecon,\n  setReconNotes,\n  setRejectStatus\n} = actions\n\nexport default function ClaimAnalysis (props) {\n  const dispatch = useDispatch()\n  const claim = useSelector(({ ClaimsAnalysis: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsAnalysis: state }) => state.claimType)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const reassign = useSelector(({ ClaimsAnalysis: state }) => state.reassign)\n\n  const [fetching, setFetching] = React.useState(true)\n\n  const [isMember, setIsMember] = React.useState(true)\n\n  const [member, setMember] = React.useState(null)\n  const [memberFetchStatus, setMemberFetchStatus] = React.useState('')\n  const [client, setClient] = React.useState(null)\n  const [clientFetchStatus, setClientFetchStatus] = React.useState('')\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  const [utilizationLoa, setUtilizationLoa] = React.useState({})\n\n  const { ApiService, breadCrumbsList, isManager = false } = props\n\n  const [claimNumber, setClaimNumber] = React.useState('')\n\n  const REPORT_LETTER_OF_ADVICE = 1\n  const REPORT_ANALYSIS_SHEET = 2\n  const REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE = 3\n  const NOTICE = 4\n\n  const getClaimType = ({ claim_number }) => {\n    setFetching(true)\n    BreadcrumbsService.setSelectedItems(breadCrumbsList)\n\n    ApiService.getClaim({ claim_number }).then(res => {\n      const { data } = res.data\n      const _claim_type = data.__type\n      dispatch(setClaimType(_claim_type))\n      dispatch(setDiscrepancy(getDiscrepancy(data.analysis_results.result)))\n      setFetching(false)\n    })\n  }\n\n  React.useEffect(() => {\n    dispatch(resetClaim())\n    dispatch(initDiscrepancy())\n    dispatch(resetError())\n    dispatch(resetRecon())\n    LoadingService.loading(true)\n    const { claim_number } = props.match.params\n\n    getClaimType({ claim_number })\n    getEscalationLogs({ claim_number })\n    getInquiryLogs({ claim_number })\n    getReconNotes({ claim_number })\n\n    return () => {\n      dispatch(setClaimType(''))\n    }\n  }, [props.match.params.claim_number])\n\n  React.useEffect(() => {\n    const grand = Total.Grand(claim)\n    setGrandTotal(grand)\n    dispatch(setRejectStatus(!(grand === 0)))\n  }, [claim])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const getClaimDetails = callback => {\n    const { claim_number } = props.match.params\n    setClaimNumber(claim_number)\n    dispatch(\n      setProcedure({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setHospitalItem({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setProfessionalFee({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n\n    ApiService.getClaim({\n      claim_number\n    }).then(res => {\n      const { data } = res.data\n      // Set Diagnosis Suggestions\n      const diagnosis = data.diagnosis || []\n      diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n      callback(data)\n\n      // FETCH Member from Customer Care\n      if (data.member && data.member.account_number) {\n        const member_account_no = data.member.account_number\n        const client_account_number = data.member.customer_account_number\n        if (isMember) {\n          getMember({ member_account_no })\n        } else {\n          getClient({ client_account_number })\n        }\n      }\n\n      LoadingService.loading(false)\n    })\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'facility',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'doctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // pro user lookup\n          CustomerCareServices.proUsersLookup({ value, field }).then(res => {\n            // limit temporary - no limit in api seer\n            const limit = []\n            for (let i = 0; i < 10; i++) {\n              if (!res.data.data[i]) break\n              limit.push(res.data.data[i])\n            }\n\n            const data = limit.map(elem => {\n              let full_name = `${elem.first_name} ${elem.last_name}`\n              delete elem.first_name\n              delete elem.last_name\n              return { ...elem, name: full_name }\n            })\n\n            let _items = []\n\n            if (field === 'pro_id') {\n              for (let d of data) {\n                _items.push(d[`employee_${field.split('_')[1]}`])\n              }\n            } else {\n              for (let d of data) {\n                _items.push(d['name'])\n              }\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'pro',\n                suggestion: { [`${field.split('_')[1]}`]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getUtilizations = args => ApiService.getUtilizations(args)\n\n  const getPartners = args => ApiService.getPartners(args)\n\n  const getDoctors = args => ApiService.getDoctors(args)\n\n  const getUsers = args => ApiService.getUsers(args)\n\n  const getMember = ({ member_account_no }) => {\n    CustomerCareServices.getMemberUtilizationLoa({ account_number: member_account_no }).then(res => {\n      const { data } = res.data\n      setUtilizationLoa(data)\n    })\n    setMemberFetchStatus('fetching')\n    CustomerCareServices.getMember({ account_number: member_account_no })\n      .then(res => {\n        const { data } = res.data\n        setMemberFetchStatus('success')\n        setMember(data)\n      })\n      .catch(err => {\n        console.log(err)\n        const { data } = err.response\n        // status === 404\n        setMemberFetchStatus(`${data.status}`)\n      })\n  }\n\n  const getClient = ({ client_account_number }) => {\n    setClientFetchStatus('fetching')\n    CustomerCareServices.getClient({ account_number: client_account_number })\n      .then(res => {\n        const { data } = res.data\n        setClientFetchStatus('success')\n        setClient(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setClientFetchStatus(`${data.status}`)\n      })\n  }\n\n  const getMemberContract = args => CustomerCareServices.getMemberContract(args)\n\n  const getClientContract = args => CustomerCareServices.getClientContract(args)\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'anesthesiologist',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getDiscrepancy = adjudicationResults => {\n    const debug = false\n    if (debug) console.group('Discrepancy Check')\n    let discrepancy = {}\n    let diagnosis = {}\n    let procedures = {}\n    let hospital_items = {}\n    let professional_fees = {}\n    if (debug) console.log(adjudicationResults)\n\n    if (adjudicationResults) {\n      adjudicationResults.map((result, index) => {\n        result.fields.map((field, fieldIndex) => {\n          if (field.item_type === 'procedures') {\n            if (!procedures[field.item_id]) procedures[field.item_id] = {}\n            if (!procedures[field.item_id][field.id]) procedures[field.item_id][field.id] = []\n            procedures = {\n              ...procedures,\n              [field.item_id]: {\n                ...procedures[field.item_id],\n                [field.id]: [...procedures[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'hospital_items') {\n            if (!hospital_items[field.item_id]) hospital_items[field.item_id] = {}\n            if (!hospital_items[field.item_id][field.id]) hospital_items[field.item_id][field.id] = []\n            hospital_items = {\n              ...hospital_items,\n              [field.item_id]: {\n                ...hospital_items[field.item_id],\n                [field.id]: [...hospital_items[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'professional_fees') {\n            if (!professional_fees[field.item_id]) professional_fees[field.item_id] = {}\n            if (!professional_fees[field.item_id][field.id]) professional_fees[field.item_id][field.id] = []\n            professional_fees = {\n              ...professional_fees,\n              [field.item_id]: {\n                ...professional_fees[field.item_id],\n                [field.id]: [...professional_fees[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else {\n            if (!discrepancy[field.id]) discrepancy[field.id] = []\n            discrepancy = { ...discrepancy, [field.id]: [...discrepancy[field.id], field.message] }\n          }\n        })\n      })\n    }\n    discrepancy = {\n      ...discrepancy,\n      diagnosis: diagnosis,\n      procedure: procedures,\n      hospital_item: hospital_items,\n      professional_fee: professional_fees\n    }\n    if (debug) console.log(discrepancy)\n    if (debug) console.groupEnd()\n    return discrepancy\n  }\n\n  const getEscalationLogs = ({ claim_number }) => {\n    ApiService.getComments({ claim_number }).then(res => {\n      const { data } = res.data\n      dispatch(setEscalationMessages({ messages: data }))\n    })\n  }\n\n  const getInquiryLogs = ({ claim_number }) => {\n    ApiService.getInquiries({ claim_number }).then(res => {\n      const { data } = res.data\n      dispatch(setInquiryMessages({ messages: data }))\n    })\n  }\n\n  const getReconNotes = ({ claim_number }) => {\n    const { permissions } = props\n    if (SafeAccess(permissions.tabs.notes, ['read'])) {\n      ApiService.getNotes({ claim_number }).then(res => {\n        const { data } = res.data\n        dispatch(setReconNotes({ messages: data }))\n      })\n    }\n  }\n\n  const getReport = mode => {\n    LoadingService.loading(true)\n    ApiService.getClaim({ claim_number: claimNumber }).then(value => {\n      LoadingService.loading(false)\n      // const hasAmount = value.data.data.has_amount_concerns\n\n      let pdf = {}\n\n      switch (mode) {\n        case REPORT_ANALYSIS_SHEET:\n          pdf = {\n            name: 'Analysis Sheet',\n            fileName: 'analysis_sheet',\n            service: ApiService.getAnalysisSheet({ claimNo: claimNumber })\n          }\n          break\n\n        case REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE:\n          pdf = {\n            name: 'Reports',\n            fileName: 'reports',\n            service: ApiService.getReports({ claimNo: claimNumber }),\n            onClose: () => props.history.push('/')\n          }\n          break\n\n        case REPORT_LETTER_OF_ADVICE:\n          pdf = {\n            name: 'Letter of Advice',\n            fileName: 'letter_of_advice',\n            service: ApiService.getLetterOfAdvice({ claimNo: claimNumber })\n          }\n          break\n\n        case NOTICE:\n          pdf = {\n            name: 'Claims Notice',\n            fileName: 'claim_notice',\n            service: ApiService.getLetterNotice({ claimNo: claimNumber }),\n            onClose: () => props.history.push('/')\n          }\n          break\n      }\n\n      PdfViewer2Service({ ...pdf, open: true })\n    })\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimFacility({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.facility.data) {\n        if (value === i.id || value === i.name) {\n          dispatch(setClaimFacility({ facility_id: i.id, facility_name: i.name }))\n          dispatch(resetSuggestionObject({ field: 'facility' }))\n          return i.rooms\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'facility' }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.doctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ doctor_id: i.id, doctor_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'doctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  // PRO\n  const handleOnChangePro = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimPro({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.pro.data) {\n        if (value === i.employee_id || value === i.name) {\n          dispatch(setClaimPro({ pro_name: i.name, pro_id: i.employee_id }))\n          dispatch(resetSuggestionObject({ field: 'pro' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    }\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.anesthesiologist.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ anesthesiologist_id: i.id, anesthesiologist_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by })\n    }\n  }\n\n  const handleOnEscalate = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      const { id } = escalations.assignee\n      ApiService.escalate({\n        claim_number: claimNumber,\n        data: { receiver_id: id, message: escalations.message }\n      }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnInquire = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      const { id } = inquiries.assignee\n      ApiService.inquire({\n        claim_number: claimNumber,\n        data: { receiver_id: id, message: inquiries.message }\n      }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnReject = ({ goBack = false }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      ApiService.reject({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) {\n          props.history.push('/')\n        } else {\n          getReport(REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE)\n        }\n      })\n    })\n  }\n\n  const handleOnReassign = ({ goBack = true }) => {\n    LoadingService.loading(true)\n\n    const { id } = reassign.assignee\n\n    ApiService.reassign({\n      claim_number: claimNumber,\n      data: { receiver_id: id, message: reassign.message }\n    }).then(res => {\n      if (goBack) props.history.push('/')\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnApprove = ({ goBack = false }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      ApiService.approve({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) {\n          props.history.push('/')\n        } else {\n          getReport(REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE)\n        }\n      })\n    })\n  }\n\n  const handleOnViewAnalysisSheet = () => {\n    getReport(REPORT_ANALYSIS_SHEET)\n  }\n\n  const handleOnViewLetterOfAdvice = () => {\n    getReport(REPORT_LETTER_OF_ADVICE)\n  }\n\n  const handleOnViewClaimNotice = ({ goBack = false }) => {\n    getReport(NOTICE)\n  }\n\n  const handleOnSave = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnCancel = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    if (goBack && !isManager) props.history.push('/')\n    else {\n      const { bundle_number, batch_number } = props.match.params\n      props.history.push(`/payment-request/${bundle_number}/submitted/${batch_number}`)\n    }\n    LoadingService.loading(false)\n  }\n\n  const handleOnReturnEscalate = ({ comment, goBack }) => {\n    LoadingService.loading(true)\n    ApiService.comment({ claim_number: claimNumber, data: { comment } }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnReturnInquire = ({ comment, goBack }) => {\n    LoadingService.loading(true)\n    ApiService.inquire({ claim_number: claimNumber, data: { comment } }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnRemove = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.removeClaim({ claim_number: claimNumber }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  return (\n    <React.Fragment>\n      {claim_type && !fetching && (\n        <GetClaimComponent\n          // #region VARIABLES\n          _type={claim_type}\n          {...props}\n          claim={claim}\n          isMember={isMember}\n          member={member}\n          memberFetchStatus={memberFetchStatus}\n          client={client}\n          clientFetchStatus={clientFetchStatus}\n          utilizationLoa={utilizationLoa}\n          grandTotal={grandTotal}\n          //  #endregion\n          //  #region FETCHING\n          getClaimDetails={getClaimDetails}\n          getUtilizations={getUtilizations}\n          getUsers={getUsers}\n          getPartners={getPartners}\n          getDoctors={getDoctors}\n          getMember={getMember}\n          getClient={getClient}\n          getMemberContract={getMemberContract}\n          getClientContract={getClientContract}\n          //  #endregion\n          //  #region EVENTS\n          onChangeFacility={handleOnChangeFacility}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          onReturnEscalate={handleOnReturnEscalate}\n          onReturnInquire={handleOnReturnInquire}\n          onEscalate={handleOnEscalate}\n          onInquire={handleOnInquire}\n          onViewAnalysisSheet={handleOnViewAnalysisSheet}\n          onViewLetterOfAdvice={handleOnViewLetterOfAdvice}\n          onViewClaimNotice={handleOnViewClaimNotice}\n          onReject={handleOnReject}\n          onReassign={handleOnReassign}\n          onApprove={handleOnApprove}\n          onSave={handleOnSave}\n          onCancel={handleOnCancel}\n          onChangePro={handleOnChangePro}\n          onRemove={handleOnRemove}\n          //  #endregion\n          //  #region SERVICES\n          userManagementService={UserManagementServices}\n          //  #endregion\n        />\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\nimport NewBundlePage from './../Components/BatchEncoder/NewBundlePage/NewBundlePage'\nimport UploadSoaPage from './../Components/BatchEncoder/UploadSoaPage/UploadSoaPage'\n// import FieldMapper from '../Components/FieldMapper/FieldMapper'\nimport TransmittalReport from './../Components/TransmittalReport/TransmittalReport'\nimport ClaimsUtilLedgerReport from './../Components/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\n\n// Pages of Batch Encoder Supervisor\nimport Dashboard from './../Components/BatchEncoderSupervisor/Dashboard/Dashboard'\nimport CreatedBundlesPage from './../Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage'\n\n// Pages of Recon User\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Reports',\n    icon: 'chart-bar',\n    type: 'popover',\n    child: [\n      { label: 'Generate Utilization Ledger', to: '/util-ledger' },\n      { label: 'Transmittal Report', to: '/transmittal-report' }\n    ]\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  uploadSoa: {\n    text: 'Upload SOA',\n    to: ''\n  },\n  createdBundles: {\n    text: data => `Created Bundles by Batch Encoder ${data}`,\n    to: data => `/batch-encoder-work/${data}`\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  },\n  reports: {\n    text: 'Reports'\n  },\n  transmittal: {\n    text: 'Transmittal Report'\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'] }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} }\n  }\n}\n\nfunction BatchEncoderSupervisorRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path='/' exact component={Dashboard} />\n        <Route path='/bundles/:bundle_number/create' exact component={NewBundlePage} />\n        <Route\n          path='/bundles/upload-soa'\n          exact\n          render={props => <UploadSoaPage {...props} ApiService={ClaimsReconServices} />}\n        />\n        <Route path='/bundles/:bundle_number' exact component={BundlePage} />\n        <Route path='/transmittal-report' exact render={() => <TransmittalReport />} />\n        <Route path='/util-ledger' exact render={() => <ClaimsUtilLedgerReport />} />\n        <Route path='/batch-encoder-work/:user_id' exact component={CreatedBundlesPage} />\n        <Route path='/batch-encoder-work/:user_id/bundles/:bundle_number' exact component={BundlePage} />\n        <Route\n          path='/claims/recon/:claim_number'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n              {...props}\n              permissions={permissions}\n              ApiService={ClaimsReconServices}\n            />\n          )}\n        />\n      </Switch>\n    </React.Fragment>\n  )\n}\n\nexport default BatchEncoderSupervisorRoutes\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst OpenBatchesTile = props => {\n  const { services, sizes } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBatches({\n        category: 'open',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'open' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setBatches({ data: openBatches, count: openBatchCount })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'open'\n    services.getBatches({ category, range: value, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnEncode = batch_number => {\n    services.assignBatch({ batch_number }).then(({ data: res }) => {\n      props.history.push(`/batches/${batch_number}`)\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'open'\n    setViewList({ ...initialValue, show: true, title: `Open Batches`, category })\n    services.getBatches({ category, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'open',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBatches(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='open-batches'\n        sizes={sizes}\n        count={{ color: 3, value: batches.count, id: 'open-batches-count' }}\n        title='Open Batches'\n        viewList={\n          <Typography id='ob-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`op-${item.id}`} id={`op-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {batches.data.map((item, index) => (\n              <TableRow key={item.batch_number}>\n                <TableCell id={`ob-batch-no-${index}`}>{item.batch_number}</TableCell>\n                <TableCell id={`ob-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`ob-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Typography\n                    id={`encode-batch-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnEncode(item.batch_number)}\n                  >\n                    Encode\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  onClick={() => handleOnEncode(item.batch_number)}\n                >\n                  Encode\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nOpenBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default OpenBatchesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' },\n  { id: 'status', name: ' Status', sortField: 'status', match: '' }\n]\n\nconst MyBatchesTile = props => {\n  const { services, sizes } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    //* My Batches\n    Promise.all([\n      services.getBatches({\n        category: 'my',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'my' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const myBatches = batchResponse.data.data.results\n      const myBatchCount = batchCountResponse.data.data\n      setBatches({ data: myBatches, count: myBatchCount })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'my'\n    services.getBatches({ category, range: value, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'my'\n    setViewList({ ...initialValue, show: true, title: `My Batches`, category })\n    services.getBatches({ category, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'my',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBatches(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='my-batches'\n        sizes={sizes}\n        count={{ color: 8, value: batches.count, id: 'my-batches-count' }}\n        title='My Batches'\n        viewList={\n          <Typography id='mb-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`mb-${item.id}`} id={`mb-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {batches.data.map((item, index) => (\n              <TableRow key={item.batch_number}>\n                <TableCell id={`mb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                <TableCell id={`mb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`mb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`mb-status-${index}`}>In Progress</TableCell>\n                <TableCell>\n                  <Link to={`/batches/${item.batch_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`update-batch-${index}`}>\n                      Update\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns.filter(i => i.id !== 'status')}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Link to={`/batches/${item.batch_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-batch-${index}`}>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMyBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default MyBatchesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst CompletedBatchesTile = props => {\n  const { services, sizes } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBatches({\n        category: 'completed',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'completed' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const completedBatches = batchResponse.data.data.results\n      const completedBatchCount = batchCountResponse.data.data\n      setBatches({ data: completedBatches, count: completedBatchCount })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'completed'\n    services.getBatches({ category, range: value, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'completed'\n    setViewList({ ...initialValue, show: true, title: `Completed Batches`, category })\n    services.getBatches({ category, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'completed',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBatches(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='completed-batches'\n        sizes={sizes}\n        count={{ color: 5, value: batches.count, id: 'completed-batches-count' }}\n        title='Completed Batches'\n        viewList={\n          <Typography id='cb-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`cb-${item.id}`} id={`cb-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {batches.data.map((item, index) => (\n              <TableRow key={item.batch_number}>\n                <TableCell id={`cb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                <TableCell id={`cb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`cb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/batches/${item.batch_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-batch-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Link to={`/batches/${item.batch_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-batch-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nCompletedBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default CompletedBatchesTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport OpenBatchesTile from './../../../Components/Tiles/OpenBatchesTile'\nimport MyBatchesTile from './../../../Components/Tiles/MyBatchesTile'\nimport CompletedBatchesTile from './../../../Components/Tiles/CompletedBatchesTile'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [openTickets] = React.useState({ count: 0, data: [] })\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <OpenBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n            <MyBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n            <CompletedBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList\n                count={openTickets.count}\n                title='Open Tickets'\n                viewAllLink={{ to: '/batches', caption: 'View all' }}\n              >\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {openTickets.data.map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Styles\nimport classes from './BatchesPage.module.scss'\n\nexport default function BatchesPage () {\n  PageTitleService('Batches')\n  BreadcrumbsService.setSelectedItems(['dashboard', 'batches'])\n\n  return (\n    <div className={classes.root}>\n      <span>My batches</span>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\n// Components\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './BatchDetails.module.scss'\n\nexport default function BatchDetails ({ details, reassign_notes = true }) {\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-received' label='Date Received' readOnly value={DateFormatter(details.date.received)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='due-date' label='Due Date' readOnly value={DateFormatter(details.date.due)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-type' label='Claim Type' readOnly value={details.claim.type} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-source' label='Claim Source' readOnly value={details.claim.source} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-facility' label='Medical Partner ID' readOnly value={details.facility.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-facility'\n            label='Medical Partner Name (Facility)'\n            readOnly\n            value={details.facility.name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-doctor' label='Medical Partner ID' readOnly value={details.doctor.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-doctor'\n            label='Medical Partner Name (Doctor)'\n            readOnly\n            value={details.doctor.name}\n          />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-range-from' label='Date Range (From)' readOnly value={DateFormatter(details.date_from)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='date-range-to' label='Date Range (To)' readOnly value={DateFormatter(details.date_to)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='soa-number' label='SOA No.' readOnly value={details.soa.number} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Comments/Notes' readOnly value={details.notes} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextFieldCurrency id='batch-amount' label='Batch Amount' readOnly value={details.amount_billed} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='total-no-of-rcs' label='Total No. of RCS' readOnly value={details.total_rcs} />\n        </div>\n        {reassign_notes && (\n          <div className={classes['input']}>\n            <TextField id='reassign-notes' label='Reassign Notes' readOnly value={details.reassign_notes || ''} />\n          </div>\n        )}\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimListHeader.module.scss'\n\nexport default function ClaimListHeader (props) {\n  const {\n    onClickAdd,\n    onClickProviderSchedule,\n    count,\n    status,\n    type = '',\n    inputChange = null,\n    disabled = false,\n    isManager = false\n  } = props\n  const handleChange = event => {\n    if (typeof inputChange === 'function') {\n      inputChange(event.target.value)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='subtitle2'>Claims</Typography>\n        <Typography id={'claim-count'} variant='subtitle2'>{`(${count})`}</Typography>\n      </div>\n\n      <div className={classes.wrapper}>\n        <SearchTextComponent onChange={handleChange} />\n\n        {status !== 'Completed' && !isManager && (\n          <React.Fragment>\n            {(type === 'APE' || type === 'ECU' || type === 'PPE') && (\n              <Button\n                id={`${type.toLowerCase()}-schedule`}\n                variant='contained'\n                color='primary'\n                className={`${classes.button} button-positive`}\n                onClick={onClickProviderSchedule}\n              >\n                Provider's {type} Schedule\n              </Button>\n            )}\n\n            <Button\n              id='add-claim'\n              variant='contained'\n              color='primary'\n              className={`${classes.button} button-positive`}\n              onClick={onClickAdd}\n              disabled={disabled}\n            >\n              Add Claim\n            </Button>\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n// import IconButton from '@material-ui/core/IconButton'\n// import DeleteIcon from '@material-ui/icons/Delete'\n\n// Services\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimList.module.scss'\n\nconst headCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'account-number', numeric: false, disablePadding: false, label: 'Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\nconst cmHeadCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'client-account-name', numeric: false, disablePadding: false, label: 'Client Account Name' },\n  { id: 'client-account-number', numeric: false, disablePadding: false, label: 'Client Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\n\nconst prManagerheadCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'client-account-name', numeric: false, disablePadding: false, label: 'Client Account Name' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' },\n  { id: 'view-link', numeric: false, disablePadding: false, label: '' }\n]\n\nconst rows = []\n\nexport default function ClaimList ({\n  items,\n  selectedClaimNumber,\n  onItemClick,\n  type,\n  onConfirm,\n  openDialog,\n  onCancel,\n  // forDeletion,\n  actionItems,\n  setActionItems,\n  // setForDeletion,\n  submittedBatch,\n  setSelected,\n  pagination,\n  setPagination,\n  isManager = false,\n  selectStatus = true\n}) {\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [claims, setClaims] = React.useState([])\n\n  const getMessage = claims => {\n    let message = 'Are you sure you want to delete this claim?'\n    if (claims.claim_numbers.length > 1) {\n      message = 'Are you sure you want to delete these claims?'\n    }\n    return message\n  }\n\n  React.useEffect(() => {\n    const data = items.map(i => ({\n      ...i,\n      selected: false\n    }))\n    setClaims({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setActionItems({ claim_numbers: [] })\n    setSelected([])\n  }, [items, selectStatus])\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc'\n    setOrder(isDesc ? 'asc' : 'desc')\n    setOrderBy(property)\n  }\n\n  const handleClick = ({ claims, index }) => {\n    const _claims = {\n      ...claims,\n      data: claims.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n  const handleSelectAllClick = event => {\n    let _claims = claims\n\n    if (_claims.data) {\n      _claims.data.map(i => {\n        i.selected = _claims.indeterminate ? true : !_claims.checked\n        return i\n      })\n    }\n\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _claims = data || claims\n    let selected_count = 0\n    let claimNumbers = []\n    if (_claims.data) {\n      for (let c of _claims.data) {\n        if (c.selected) {\n          selected_count++\n          claimNumbers.push(c.claim_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _claims.data.length : false\n    let checked = selected_count ? selected_count === _claims.data.length : false\n    _claims = { ..._claims, indeterminate, checked }\n    setClaims(_claims)\n\n    setActionItems({ claim_numbers: claimNumbers })\n    setSelected(state => [...claimNumbers])\n  }\n  const handleItemClick = index => onItemClick(index)\n\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={type === 'Clinic Management' ? cmHeadCells : !isManager ? headCells : prManagerheadCells}\n        handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        pagination={pagination}\n        rowsLength={rows.length}\n        checkAll\n        indeterminate={!!claims.indeterminate}\n        checked={!!claims.checked}\n        allowCheck\n        allowCheckDisabled={submittedBatch}\n        selectStatus={selectStatus}\n      >\n        <TableBody>\n          {claims.data &&\n            claims.data.map((row, index) => (\n              <TableRow\n                className={`${\n                  selectedClaimNumber === row.claim_number ? classes.selected : classes['default-override']\n                }`}\n                selected={selectedClaimNumber === row.claim_number}\n                role='checkbox'\n                tabIndex={-1}\n                key={row.claim_number}\n              >\n                {selectStatus ? (\n                  <TableCell padding='checkbox'>\n                    <Checkbox\n                      disabled={submittedBatch}\n                      checked={row.selected}\n                      color='default'\n                      onClick={event => handleClick({ index, claims })}\n                    />\n                  </TableCell>\n                ) : null}\n\n                <TableCell id={`claim-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.claim_number || ''}\n                </TableCell>\n                <TableCell id={`loa-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.loa_number || ''}\n                </TableCell>\n                <TableCell id={`approval-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.approval_code || ''}\n                </TableCell>\n                <TableCell id={`member-name-${index}`} onClick={() => handleItemClick(index)}>{`${\n                  row.member ? row.member.first_name : ''\n                } ${row.member ? row.member.last_name : ''}`}</TableCell>\n                {type === 'Clinic Management' || type === 'PPE' ? (\n                  <React.Fragment>\n                    {type === 'Clinic Management' && (\n                      <TableCell id={`client-account-name-${index}`} onClick={() => handleItemClick(index)}>\n                        {row.client.account_name}\n                      </TableCell>\n                    )}\n                    <TableCell id={`client-account-number-${index}`} onClick={() => handleItemClick(index)}>\n                      {row.client.account_number}\n                    </TableCell>\n                  </React.Fragment>\n                ) : !isManager ? (\n                  <TableCell id={`account-number-${index}`} onClick={() => handleItemClick(index)}>\n                    {row.member.account_number}\n                  </TableCell>\n                ) : (\n                  <TableCell id={`account-name-${index}`} onClick={() => handleItemClick(index)}>\n                    {row.client.account_name}\n                  </TableCell>\n                )}\n                <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${DateFormatter(row.date.from)}`}\n                  {type === 'In Patient' && ` - ${DateFormatter(row.date.to)}`}\n                </TableCell>\n                {isManager && (\n                  <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                    <Link\n                      to={`/payment-request/${row.bundle_number}/submitted/${row.batch_number}/claim/${row.claim_number}`}\n                    >\n                      <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                        View Claim\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      {!isManager ? (\n        <Alert\n          open={openDialog}\n          message={getMessage(actionItems)}\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={onCancel}\n          onOk={onConfirm}\n        />\n      ) : null}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ProviderSchedule.module.scss'\n\n// Validations\n\n// Store\n\nconst headCells = [\n  { id: '1', name: 'Reference No.', sortField: '' },\n  { id: '2', name: 'Inclusive Dates', sortField: '' },\n  { id: '3', name: 'Account Name', sortField: '' },\n  { id: '3', name: 'Prepared By', sortField: '' }\n]\n\nexport default function ProviderSchedule (props) {\n  // Events\n  const { type, facility, dialog, setDialog } = props\n  // Variables\n  // Services\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      onClose={() => setDialog(false)}\n      aria-labelledby='customized-dialog-title'\n      open={dialog}\n      className={classes.root}\n      PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header1}>\n          <Typography variant='h6' className={classes.title}>\n            {facility.name}\n          </Typography>\n          <div className={classes.search}>\n            <SearchTextComponent id='search' onChange={() => {}} placeholder='Search for ' />\n          </div>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.body}>\n        <div className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCells.map((headCell, index) => (\n                    <TableCell key={`${headCell.sortField} ${index}`} id={headCell.id}>\n                      <TableSortLabel active={false} direction={'asc'} onClick={() => {}}>\n                        {type} {headCell.name}\n                      </TableSortLabel>\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                  <TableCell id={`no-record`} colSpan={5}>\n                    <div\n                      className={`${classes.cell} ${classes.center}`}\n                      style={{\n                        textAlign: 'center',\n                        fontStyle: 'italic'\n                      }}\n                    >\n                      <span>No Records</span>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              }\n              pagination={false}\n            />\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.partition}>\n              <Typography>{type} Package/s:</Typography>\n              <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                <List>\n                  {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                    <ListItem key={index}>\n                      <ListItemText primary={`Package ${index + 1}`} />\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n            </div>\n            <div className={classes.partition}>\n              <Typography>Notes:</Typography>\n              <Paper style={{ height: '200px', overflow: 'auto' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                  multiline\n                  rows={3}\n                  id='notes'\n                  value={''}\n                  disabled={false}\n                  readOnly\n                  onChange={event => {}}\n                />\n              </Paper>\n            </div>\n          </div>\n        </div>\n        <div className={classes.action}>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-negative'>\n            Close\n          </Button>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-positive'>\n            Add Claim\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from './Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from './Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from './Components/ClaimList/ClaimList'\nimport ProviderSchedule from './Components/ProviderSchedule/ProviderSchedule'\n\nimport Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Styles\nimport classes from './BatchPage.module.scss'\n\nexport default function BatchPage (props) {\n  const { apiService } = props\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  const [selectedClaimNumber, setSelectedClaimNumber] = React.useState(null)\n  const [details, setDetails] = React.useState()\n  const [claims, setClaims] = React.useState([])\n  const [submitStatus, setsubmitStatus] = React.useState('')\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [openDialog, setOpenDialog] = React.useState({})\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n  const [showProviderSchedule, setShowProviderSchedule] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ claim_numbers: [] })\n  const [selected, setSelected] = React.useState([])\n  const [debounce, setDebounce] = React.useState(null)\n  const [dialog, setDialog] = React.useState({})\n  const [cancelDialog, setCancelDialog] = React.useState({})\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        /*\n         * @returnData is the sanitized input string\n         * returned by the component ClaimsListHeader 's\n         * inputChange props\n         */\n        // getClaimsAndCount({ batch_number: batchNumber, search })\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  const getClaimsAndCount = ({ batch_number }, test) => {\n    apiService\n      .getClaims({\n        batch_number,\n        params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n      })\n      .then(res => {\n        const { results, count, page, limit } = res.data.data\n        setClaims(results)\n        setClaimCount(count)\n        setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n      })\n  }\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const _batchNumber = props.match.params._batchNumber\n    setBatchNumber(_batchNumber)\n\n    apiService.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      setDetails(data)\n      LoadingService.loading(false)\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Completed',\n          color: 'green'\n        }\n      }\n\n      setsubmitStatus(_status.text)\n\n      BreadcrumbsService.setSelectedItems(['dashboard', 'batches', `specificBatch:${_batchNumber}`])\n\n      PageTitleService(`Batch No. ${_batchNumber}`, {\n        text: _status.text,\n        color: _status.color\n      })\n    })\n    getClaimsAndCount({ batch_number: _batchNumber })\n  }, [props.match.params._batchNumber])\n\n  React.useEffect(() => {\n    getClaimsAndCount({ batch_number: props.match.params._batchNumber })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  const handleOnItemClick = index => {\n    const { claim_number } = claims[index]\n    setSelectedClaimNumber(claim_number)\n\n    // if (submitStatus === 'Completed') return\n\n    // props.history.push(`/batches/${batchNumber}/claims/${claim_number}`)\n  }\n\n  const handleOnUpdate = () => {\n    if (submitStatus === 'Completed') return\n\n    // if (selected.length > 1) {\n    //   return setDialog({\n    //     open: true,\n    //     message: 'Please select ONLY one claim to update.',\n    //     okLabel: 'OK',\n    //     onOk: () => setDialog(state => ({ ...state, open: false }))\n    //   })\n    // } else if (!selected.length) {\n    //   return setDialog({\n    //     open: true,\n    //     message: 'Please select one claim to update.',\n    //     okLabel: 'OK',\n    //     onOk: () => setDialog(state => ({ ...state, open: false }))\n    //   })\n    // }\n    console.log(selectedClaimNumber)\n    if (!selectedClaimNumber || selectedClaimNumber === '') {\n      return setDialog({\n        open: true,\n        message: 'Please select one claim to update.',\n        okLabel: 'OK',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    props.history.push(`/batches/${batchNumber}/claims/${selectedClaimNumber}`)\n  }\n\n  const handleOnSubmit = index => {\n    LoadingService.loading(true)\n    setOpenDialog(state => ({ ...state, show: false }))\n\n    apiService.submitBatch({ batch_number: batchNumber }).then(res => {\n      LoadingService.loading(false)\n      props.history.push(`/`)\n    })\n  }\n\n  const onOpenDelete = claim => {\n    // setselectedClaim(claim)\n    setOpenDeleteDialog(true)\n  }\n\n  const onCancelDelete = () => {\n    setOpenDeleteDialog(false)\n  }\n\n  const onConfirmDelete = () => {\n    console.log(forDeletion)\n    apiService\n      .deleteMultipleClaim({\n        batch_number: batchNumber,\n        data: forDeletion\n      })\n      .then(() => {\n        getClaimsAndCount({ batch_number: batchNumber })\n        setOpenDeleteDialog(false)\n        setForDeletion({ claim_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDeleteDialog(false)\n      })\n  }\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} />\n          <ClaimListHeader\n            batchNumber={batchNumber}\n            type={details.claim.type}\n            onClickProviderSchedule={() => setShowProviderSchedule(true)}\n            // onClickPPESchedule={() => setShowPPESchedule(true)}\n            onClickAdd={() => props.history.push(`/batches/${batchNumber}/claims/add`)}\n            count={claimCount}\n            status={submitStatus}\n            inputChange={handleSearchChange}\n            disabled={!!(details.claim.type === 'Reimbursement' && claims.length > 0)}\n          />\n          <ClaimList\n            pagination={pagination}\n            setPagination={setPagination}\n            items={claims}\n            selectedClaimNumber={selectedClaimNumber}\n            onItemClick={handleOnItemClick}\n            type={details.claim.type}\n            onConfirm={onConfirmDelete}\n            openDialog={openDeleteDialog}\n            onCancel={onCancelDelete}\n            actionItems={forDeletion}\n            setActionItems={setForDeletion}\n            setSelected={setSelected}\n            submittedBatch={submitStatus === 'Completed'}\n            selectStatus\n          />\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              {submitStatus === 'In Progress' && (\n                <React.Fragment>\n                  {forDeletion.claim_numbers.length > 0 && (\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      className={`${'button-negative'} ${classes['delete-button']}`}\n                      onClick={() => {\n                        onOpenDelete(true)\n                      }}\n                      id='cancel'\n                    >\n                      Delete\n                    </Button>\n                  )}\n\n                  <Button\n                    id='cancel'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() =>\n                      setCancelDialog({\n                        open: true,\n                        message: 'Are you sure you want to cancel?',\n                        okLabel: 'Yes',\n                        cancelLabel: 'No',\n                        onCancel: () => setCancelDialog(state => ({ ...state, open: false })),\n                        onOk: () => props.history.push('/')\n                      })\n                    }\n                  >\n                    Cancel\n                  </Button>\n                  <Button variant='contained' color='primary' className='button-positive' onClick={handleOnUpdate}>\n                    Update Claim\n                  </Button>\n                  <Button\n                    id='submit-batch'\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() =>\n                      setOpenDialog(state => ({\n                        ...state,\n                        show: true,\n                        message: 'Are you sure you want to submit this batch?',\n                        handleOnOk: handleOnSubmit\n                      }))\n                    }\n                  >\n                    Submit\n                  </Button>\n                </React.Fragment>\n              )}\n\n              {submitStatus === 'Completed' && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  onClick={() => props.history.push('/')}\n                >\n                  Close\n                </Button>\n              )}\n            </div>\n          </div>\n          <ProviderSchedule\n            type={details.claim.type}\n            facility={details.facility}\n            dialog={showProviderSchedule}\n            setDialog={setShowProviderSchedule}\n          />\n\n          <Alert\n            open={openDialog.show}\n            message={openDialog.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(state => ({ ...state, show: false }))}\n            onOk={openDialog.handleOnOk}\n          />\n        </React.Fragment>\n      )}\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n      <Alert\n        open={!!cancelDialog.open}\n        message={cancelDialog.message}\n        cancelLabel={cancelDialog.cancelLabel}\n        okLabel={cancelDialog.okLabel}\n        onOk={cancelDialog.onOk}\n        onCancel={cancelDialog.onCancel}\n      />\n    </div>\n  )\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  const room_type = loa.room ? loa.room[0].room_type : ''\n  const room_rate = loa.room ? loa.room[0].total_amount : ''\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    // room_type: room_type,\n    // room_rate: room_rate,\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => {\n        if (item.text === room_type) {\n          dispatch(setClaimBaseDetails({ field: 'room_type', value: room_type }))\n          dispatch(setClaimBaseDetails({ field: 'room_rate', value: room_rate }))\n        }\n        return {\n          text: item.type,\n          value: item.type,\n          rate: item.rate\n        }\n      })\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientConsultation ({ common, loa, dispatch }) {\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].pshilhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  if (diagnosis.length === 0) {\n    diagnosis.push({\n      description: primary_diagnosis,\n      code: primary_icd10_code,\n      primary: true\n    })\n  } else {\n    diagnosis.map((diag, i) => {\n      let primary = false\n      if (diag.icd10_code === primary_icd10_code) primary = true\n      diagnosis[i].primary = primary\n      diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n      diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n    })\n  }\n  let details = {\n    ...common,\n    recommendation: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientProcedure ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    department: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    room_type: loa.room ? loa.room[0].room_type : '',\n    room_rate: loa.room ? loa.room[0].total_amount : '',\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    room_type: loa.room ? loa.room[0].room_type : '',\n    room_rate: loa.room ? loa.room[0].total_amount : '',\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    customer_account_number: loa.client_id || '',\n    company_name: loa.client_name || '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    claim_source: '',\n    medicine_category: '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import InPatient from './InPatient'\nimport OutPatientConsultation from './OutPatientConsultation'\nimport OutPatientProcedure from './OutPatientProcedure'\nimport Emergency from './Emergency'\nimport Reimbursement from './Reimbursement'\nimport MedicineAllowance from './MedicineAllowance'\nimport MedicalSupplies from './MedicalSupplies'\nimport Pharmacy from './Pharmacy'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\nlet dispatch = null\nconst AutoFillInitializer = () => {\n  dispatch = useDispatch()\n  return ''\n}\nconst AutoFill = ({ loa, claim_type }) => {\n  const type = ClaimTypes[claim_type].other_name\n\n  // Work Around for Member Names\n  const [last_name, others] = loa.member_info.member_name.split(',')\n  const first_middle = others.trim().split(' ')\n  let given_name = ''\n  let middle_name = ''\n  switch (first_middle.length) {\n    case 0:\n      break\n    case 1:\n      given_name = first_middle.join(' ')\n      break\n    case 2:\n      given_name = first_middle[0]\n      middle_name = first_middle[1]\n      break\n    case 3:\n      middle_name = first_middle.pop()\n      given_name = first_middle.join(' ')\n      break\n  }\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: last_name,\n    member_first_name: given_name,\n    member_middle_name: middle_name\n  }\n  switch (type) {\n    case 'InPatient':\n      InPatient({ common, loa, dispatch })\n      break\n\n    case 'OutPatientProcedure':\n      OutPatientProcedure({ common, loa, dispatch })\n      break\n\n    case 'OutPatientConsultation':\n      OutPatientConsultation({ common, loa, dispatch })\n      break\n\n    case 'Emergency':\n      Emergency({ common, loa, dispatch })\n      break\n\n    case 'Reimbursement':\n      Reimbursement({ common, loa, dispatch })\n      break\n    case 'MedicineAllowance':\n      MedicineAllowance({ common, loa, dispatch })\n      break\n    case 'MedicalSupplies':\n      MedicalSupplies({ common, loa, dispatch })\n      break\n    case 'Pharmacy':\n      Pharmacy({ common, loa, dispatch })\n      break\n  }\n}\n\nexport { AutoFill, AutoFillInitializer }\n","import React from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClientMemberModal from 'SharedComponents/ClientMemberLookup/ClientMemberModal'\n\n// Services\nimport CustomerCareService from 'Services/Api/CustomerCareService'\nimport { AutoFill, AutoFillInitializer } from '../AutoFill'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\n// Libraries\n\nconst { setClaimBaseDetails, resetSuggestionObject, setSuggestionObject } = actions\n\nexport default function BaseDetails (props) {\n  const defaultFunction = () => {}\n\n  const {\n    onChange,\n    onChangeReimbursementType = defaultFunction,\n    handleMemberAccountNumber,\n    claim,\n    errors,\n    disableControls,\n    showReimbursement = false,\n    showCompany = false,\n    // showContractRange = false,\n    showClaimSource = false,\n    showApprovalCode = true,\n    reqApprovalCode = false,\n    showLoaNumber = true,\n    reqLoaNumber = false,\n    isDental = false,\n    showMemberAccountNumber = true\n  } = props\n\n  const dispatch = useDispatch()\n\n  const claim_type = useSelector(({ ClaimsEncoding: state }) => state.claimType)\n  const [approvalCode, setApprovalCode] = React.useState('')\n  const [memberAccountNumber, setMemberAccountNumber] = React.useState()\n\n  const [memberModal, setMemberModal] = React.useState(false)\n  const [clientModal, setClientModal] = React.useState(false)\n\n  const handleOnClickMemberLookup = () => {\n    setMemberModal(true)\n  }\n\n  const handleOnClickClientLookup = () => {\n    setClientModal(true)\n  }\n\n  const handleLoaDetails = event => {\n    const value = event.target.value.trim()\n\n    if (value && value !== approvalCode) {\n      setApprovalCode(value)\n      LoadingService.loading(true)\n      CustomerCareService.getLoaDetails({ approval_code: value }).then(res => {\n        const loa = res.data\n        if (loa) {\n          AutoFill({\n            loa,\n            claim_type\n          })\n        }\n        LoadingService.loading(false)\n      })\n    }\n  }\n\n  const handleSetMember = member => {\n    const { member_id, first_name, middle_name, last_name } = member\n    onChange({\n      field: 'member_account_number',\n      value: member_id\n    })\n    onChange({\n      field: 'member_first_name',\n      value: first_name\n    })\n    onChange({ field: 'member_last_name', value: last_name })\n    onChange({ field: 'member_middle_name', value: middle_name })\n    handleFetchContracts(member_id)\n  }\n\n  const handleSetClient = client => {\n    const { corporate_account_no, registered_name } = client\n    onChange({ field: 'client_account_number', value: corporate_account_no })\n    onChange({ field: 'client_account_name', value: registered_name })\n  }\n\n  const handleFetchContracts = accountNumber => {\n    if (!handleMemberAccountNumber) return\n\n    if (accountNumber === memberAccountNumber) return\n\n    dispatch(resetSuggestionObject({ field: 'contract' }))\n    setMemberAccountNumber(accountNumber)\n    dispatch(setClaimBaseDetails({ field: 'contract_year_from', value: null }))\n    dispatch(setClaimBaseDetails({ field: 'contract_year_to', value: null }))\n\n    if (!accountNumber) return\n\n    LoadingService.loading(true)\n    CustomerCareService.getContractList({ member_account_number: accountNumber }).then(({ data: res }) => {\n      LoadingService.loading(false)\n\n      if (!res) return\n\n      const { latest_contract } = res\n      const { coverage_start_date: from, coverage_end_date: to } = latest_contract.custom_metadata\n\n      dispatch(\n        setSuggestionObject({\n          field: 'contract',\n          suggestion: { years: [{ from, to }] }\n        })\n      )\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <div className={classes.groups}>\n        {showApprovalCode && (\n          <div className={classes['input']}>\n            <TextField\n              id='approval-code'\n              label='Approval Code'\n              required={reqApprovalCode}\n              value={claim.approval_code}\n              disabled={disableControls}\n              onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n              onBlur={handleLoaDetails}\n              error={errors.approval_code}\n            />\n          </div>\n        )}\n        {showLoaNumber && (\n          <div className={classes['input']}>\n            <TextField\n              id='loa-number'\n              label='LOA No.'\n              required={reqLoaNumber}\n              value={claim.loa_number}\n              disabled={disableControls}\n              onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n              error={errors.loa_number}\n            />\n          </div>\n        )}\n        {showReimbursement && (\n          <div className={classes['input']}>\n            <DropDown\n              id='reimbursement-type'\n              label='Reimbursement Type'\n              items={ClaimTypes.Reimbursement.subType}\n              value={claim.reimbursement_type}\n              disabled={disableControls}\n              required\n              onChange={event => onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })}\n              error={errors.reimbursement_type}\n            />\n          </div>\n        )}\n        {showCompany && (\n          <React.Fragment>\n            <div className={classes['input']}>\n              <TextField\n                id='company-account-number'\n                label='Customer (Company) Account Number'\n                value={claim.client_account_number}\n                disabled={disableControls}\n                required\n                onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                error={errors.client_account_number}\n              />\n              <div className={classes.wrapper}>\n                <IconButton\n                  aria-label='close'\n                  className={`${classes.button} ${classes['no-pad']}`}\n                  onClick={handleOnClickClientLookup}\n                >\n                  <SearchIcon />\n                </IconButton>\n              </div>\n            </div>\n            <div className={classes['input']}>\n              <TextField\n                id='company-name'\n                label='Company Name'\n                required\n                value={claim.client_account_name}\n                disabled={disableControls}\n                onChange={event => onChange({ field: 'client_account_name', value: event.target.value })}\n                error={errors.client_account_name}\n              />\n            </div>\n          </React.Fragment>\n        )}\n        {showClaimSource && (\n          <div className={classes['input']}>\n            <TextField\n              id='claim-source'\n              label='Claim Source'\n              required\n              value={claim.claim_source}\n              disabled={disableControls}\n              onChange={event => onChange({ field: 'claim_source', value: event.target.value })}\n              error={errors.claim_source}\n            />\n          </div>\n        )}\n      </div>\n      <div className={classes.groups}>\n        {showMemberAccountNumber && (\n          <div className={classes['input']}>\n            <TextField\n              id='member-account-number'\n              required\n              label='Member Account No.'\n              value={claim.member_account_number}\n              disabled={disableControls}\n              onChange={event =>\n                onChange({\n                  field: 'member_account_number',\n                  value: event.target.value\n                })\n              }\n              error={errors.member_account_number}\n            />\n            <div className={classes.wrapper}>\n              <IconButton\n                aria-label='close'\n                className={`${classes.button} ${classes['no-pad']}`}\n                onClick={handleOnClickMemberLookup}\n              >\n                <SearchIcon />\n              </IconButton>\n            </div>\n          </div>\n        )}\n\n        <div className={classes['input']}>\n          <TextField\n            id='member-last-name'\n            required\n            label='Member Last Name'\n            value={claim.member_last_name}\n            disabled={disableControls}\n            onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n            error={errors.member_last_name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='member-first-name'\n            required\n            label='Member First Name'\n            value={claim.member_first_name}\n            disabled={disableControls}\n            onChange={event =>\n              onChange({\n                field: 'member_first_name',\n                value: event.target.value\n              })\n            }\n            error={errors.member_first_name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='member-middle-name'\n            label='Member Middle Name'\n            required={!!isDental}\n            value={claim.member_middle_name}\n            disabled={disableControls}\n            onChange={event =>\n              onChange({\n                field: 'member_middle_name',\n                value: event.target.value\n              })\n            }\n            error={errors.member_middle_name}\n          />\n        </div>\n      </div>\n      <AutoFillInitializer />\n      <ClientMemberModal\n        show={memberModal}\n        mode={'members'}\n        title={'Member Search'}\n        allSearchText={'Member Account No., Account Name, Member Name'}\n        allSearch={claim.member_account_number}\n        columns={[\n          { id: 'member_id', label: 'Member Account Number', value: data => data.member_id },\n          { id: 'last_name', label: 'Member Last Name', value: data => data.last_name },\n          { id: 'first_name', label: 'Member First Name', value: data => data.first_name },\n          { id: 'middle_name', label: 'Member Middle Name', value: data => data.middle_name },\n          { id: 'registered_name', label: 'Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'member_id', match: 'like' },\n          { id: 'last_name', match: 'like' },\n          { id: 'first_name', match: 'like' },\n          { id: 'middle_name', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getMembers}\n        onRecordSet={member => {\n          if (!member) return\n          setMemberModal(false)\n          handleSetMember(member)\n        }}\n        onClose={() => setMemberModal(false)}\n      />\n      <ClientMemberModal\n        show={clientModal}\n        mode={'clients'}\n        title={'Account Search'}\n        allSearchText={'Client Account No., Account Name'}\n        allSearch={claim.client_account_number}\n        columns={[\n          { id: 'corporate_account_no', label: 'Client Account Number', value: data => data.corporate_account_no },\n          { id: 'registered_name', label: 'Client Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'corporate_account_no', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getClients}\n        onRecordSet={client => {\n          if (!client) return\n          setClientModal(false)\n          handleSetClient(client)\n        }}\n        onClose={() => setClientModal(false)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <div className={classes.actions} />\n\n        <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst ICDTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    errors = { description: '', code: '' },\n    onDeleteDiagnosis\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      <div className={classes.wrapper}>\n        <div className={classes['sub-wrapper']}>\n          <div className={classes.actions}>\n            <IconButton id='delete-icd' onClick={() => setOpenDialog(true)}>\n              <DeleteIcon fontSize='small' />\n            </IconButton>\n          </div>\n\n          <Tooltip\n            onClose={() => setTooltipOpen(false)}\n            onOpen={handleTooltipOpen}\n            open={tooltipOpen}\n            title={description}\n          >\n            {/* {console.log('error ', errors)} */}\n            <div className={`${classes['description']}`}>\n              <AutoComplete\n                id={id}\n                value={description}\n                suggestions={suggestions.description}\n                onChange={(value, isSuggestionClick) => onChangeDescription({ value, isSuggestionClick })}\n                error={errors.description}\n              />\n            </div>\n          </Tooltip>\n\n          <div className={`${classes['code']}`}>\n            <AutoComplete\n              id={codeId}\n              value={code}\n              suggestions={suggestions.code}\n              onChange={(value, isSuggestionClick) => onChangeCode({ value, isSuggestionClick })}\n              error={errors.code}\n            />\n          </div>\n\n          <div className={classes.primary}>\n            <Radio color='primary' checked={primary} onClick={onChangePrimary} />\n          </div>\n        </div>\n      </div>\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to delete this diagnosis?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={() => {\n          setOpenDialog(false)\n          onDeleteDiagnosis()\n        }}\n      />\n    </React.Fragment>\n  )\n}\n\nexport { ICDTextFields, ICDTextField }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\n\nimport { ICDTextFields, ICDTextField } from '../ICDTextField/ICDTextField'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  addClaimDiagnosis,\n  addSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  removeSuggestionToArray,\n  resetSuggestionArray,\n  setSuggestionOnArray,\n  removeClaimDiagnosis\n} = actions\n\nexport default function DiagnosisList (props) {\n  const { items, errors = [] } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const handleOnClickAddDiagnosis = () => {\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, isSuggestionClick, index } = args\n\n    dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      for (let i of suggestions.icd10[index].data) {\n        if (value === i[field]) {\n          dispatch(\n            setClaimDiagnosis({\n              index,\n              data: { description: i.description, code: i.code }\n            })\n          )\n        }\n      }\n    } else getIcd10Suggestions({ value, by: field, index })\n\n    dispatch(resetSuggestionArray({ field: 'icd10', index }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const getIcd10Suggestions = ({ value, by, index }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'icd-10',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n\n            dispatch(\n              setSuggestionOnArray({\n                field: 'icd10',\n                index,\n                by,\n                suggestion: _items,\n                data\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n  }\n\n  React.useEffect(() => items && items.length === 0 && handleOnClickAddDiagnosis(), [])\n\n  return (\n    <div className={classes.groups}>\n      <div className={`${classes['diagnosis-list']} ${errors.error && classes['has-error']}`}>\n        <Typography variant='h6' className={classes.title}>\n          Diagnosis List\n        </Typography>\n        <ICDTextFields>\n          {items.map((item, index) => {\n            let error = null\n\n            try {\n              error = errors.items[index]\n            } catch (_error) {}\n\n            return (\n              <ICDTextField\n                key={`icd-${index}`}\n                id={`icd-description-${index}`}\n                codeId={`icd-code-${index}`}\n                errors={error || {}}\n                description={item.description}\n                suggestions={suggestions.icd10[index]}\n                code={item.code}\n                primary={item.primary}\n                onChangeDescription={args => handleOnChangeIcd10({ field: 'description', index, ...args })}\n                onChangeCode={args => handleOnChangeIcd10({ field: 'code', index, ...args })}\n                onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                onDeleteDiagnosis={() => handleOnRemoveDiagnosis(index)}\n              />\n            )\n          })}\n        </ICDTextFields>\n\n        <Button\n          id='add-diagnosis-button'\n          className={classes['add-diagnosis-button']}\n          onClick={handleOnClickAddDiagnosis}\n        >\n          + Add a diagnosis\n        </Button>\n      </div>\n      {errors.error && <span className={classes.error}>{errors.list}</span>}\n    </div>\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './CptTextField.module.scss'\n\nconst CptTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Procedure Details *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          CPT Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst CptTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    errors,\n    description = '',\n    code = '',\n    suggestions = [],\n    onChangeDescription,\n    onChangeCode = () => {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip\n          onClose={() => setTooltipOpen(false)}\n          onOpen={handleTooltipOpen}\n          open={tooltipOpen}\n          title={description}\n        >\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              value={description}\n              suggestions={suggestions.description}\n              onChange={onChangeDescription}\n              error={errors.description}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            value={code}\n            suggestions={suggestions.code}\n            onChange={onChangeCode}\n            error={errors.code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { CptTextFields, CptTextField }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    // .less(Joi.ref('gross_amount'))\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport ProcedureFormValidator from './ProcedureFormValidator'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setProcedure,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure\n} = actions\n\nexport default function ProcedureForm (props) {\n  const { showAmountPaidByMember = true, showPhilhealthField = true, diagnosis } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const procedure = useSelector(({ ClaimsEncoding: state }) => state.procedure)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [errors, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('procedure.show', state => {\n      setErrors({})\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const procedureICD = procedure.details.diagnosis_code\n      const existing = diagnosis.find(item => item.code === procedureICD)\n      if (!existing) dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n    }\n  }, [diagnosis])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const _field = field.split('_')[1]\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(setProcedure({ details: { diagnosis_code: diagnosi.code, diagnosis_description: diagnosi.description } }))\n  }\n\n  const handleOnChangeCpt = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      if (!isNaN(selectedIndex)) {\n        try {\n          const i = suggestions.cpt.data[selectedIndex]\n          dispatch(resetSuggestionObject({ field: 'cpt' }))\n          return dispatch(\n            setProcedure({\n              details: { description: i.description, code: i.code.toString() }\n            })\n          )\n        } catch (ex) {}\n      }\n    } else getCptSuggestions({ value, by: field })\n\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'cpt',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const validate = () => {\n    const baseError = ProcedureFormValidator({\n      description: procedure.details.description,\n      code: procedure.details.code.toString(),\n      gross_amount: procedure.details.gross_amount,\n      vat_amount: procedure.details.vat_amount,\n      amount_paid_by_member: procedure.details.amount_paid_by_member,\n      philhealth_amount_paid: procedure.details.philhealth_amount_paid\n    })\n    let diagnosisError = {}\n    if (diagnosis) {\n      diagnosisError = DiagnosisValidator({\n        diagnosis_description: procedure.details.diagnosis_description || '',\n        diagnosis_code: procedure.details.diagnosis_code || ''\n      })\n    }\n    const error = { ...baseError.error, ...diagnosisError.error }\n    console.log(error)\n    setErrors(error || {})\n    return !!Object.keys(error).length\n  }\n\n  const handleOnSaveProcedure = () => {\n    if (validate()) return\n\n    dispatch(addClaimProcedure(procedure.details))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    if (validate()) return\n\n    dispatch(updateClaimProcedure({ index, details: procedure.details }))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setProcedure({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    procedure.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            {diagnosis && (\n              <React.Fragment>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={procedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={procedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n          <CptTextFields>\n            <CptTextField\n              id={`procedure-description-autocomplete`}\n              codeId={`procedure-code-autocomplete`}\n              description={procedure.details.description}\n              suggestions={suggestions.cpt}\n              code={procedure.details.code}\n              onChangeDescription={(value, isSuggestionClick, selectedIndex) =>\n                handleOnChangeCpt({\n                  field: 'description',\n                  value,\n                  isSuggestionClick,\n                  selectedIndex\n                })\n              }\n              onChangeCode={(value, isSuggestionClick, selectedIndex) =>\n                handleOnChangeCpt({ field: 'code', value, isSuggestionClick, selectedIndex })\n              }\n              errors={errors}\n            />\n          </CptTextFields>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-gross-amount'\n                label='Gross Amount'\n                value={procedure.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-vat-amount'\n                label='VAT Amount'\n                value={procedure.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={procedure.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={procedure.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.philhealth_amount_paid}\n                />\n              </div>\n\n              <div className={classes.input}>\n                <TextField\n                  multiline\n                  rows={3}\n                  id='philhealth-remarks'\n                  label='PhilHealth Remarks'\n                  value={procedure.details.philhealth_remarks}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'philhealth_remarks',\n                      value: event.target.value\n                    })\n                  }\n                />\n              </div>\n            </div>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {procedure.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProcedure}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='procedure-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setProcedure({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n            {procedure.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProcedure(procedure.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='procedure-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this procedure?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProcedure(procedure.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './HospitalItemTextField.module.scss'\n\nconst HospitalItemTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Item Name *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          Item Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst HospitalItemTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    name = '',\n    item_code = '',\n    errors,\n    suggestions = [],\n    onChangeName,\n    onChangeCode = () => {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!name.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip onClose={() => setTooltipOpen(false)} onOpen={handleTooltipOpen} open={tooltipOpen} title={name}>\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              required\n              value={name}\n              suggestions={suggestions.name}\n              onChange={onChangeName}\n              error={errors.name}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            required\n            value={item_code}\n            suggestions={suggestions.item_code}\n            onChange={onChangeCode}\n            error={errors.item_code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { HospitalItemTextFields, HospitalItemTextField }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  name: Joi.string()\n    .trim()\n    .label('Item Name')\n    .required()\n    .messages({\n      'string.empty': `\"Item Name\" is required.`\n    }),\n  item_code: Joi.string()\n    .trim()\n    .label('Item Code')\n    .required()\n    .messages({\n      'string.empty': `\"Item Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { HospitalItemTextFields, HospitalItemTextField } from '../HospitalItemTextField/HospitalItemTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport HospitalItemFormValidator from './HospitalItemFormValidator'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n/// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setHospitalItem,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetSuggestionObject,\n  setSuggestionObject\n} = actions\n\nexport default function HospitalItemForm (props) {\n  const { showAmountPaidByMember = true, showPhilhealthRemarks = true, diagnosis } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const hospitalItem = useSelector(({ ClaimsEncoding: state }) => state.hospitalItem)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('hospitalItem.show', state => {\n      setErrors({})\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const hospitalItemICD = hospitalItem.details.diagnosis_code\n      const existing = diagnosis.find(item => item.code === hospitalItemICD)\n      if (!existing) dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n    }\n  }, [diagnosis])\n\n  const handleOnChangeHospitalItem = ({ value, field, isSuggestionClick }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.hospitalItem.data) {\n        if (value === i[field]) {\n          dispatch(\n            setHospitalItem({\n              details: {\n                id: i.id,\n                name: i.name,\n                item_code: i.item_code\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const _field = field.split('_')[1]\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setHospitalItem({ details: { diagnosis_code: diagnosi.code, diagnosis_description: diagnosi.description } })\n    )\n  }\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'hospitalItem',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeHospitalForm = args => {\n    const { value, field } = args\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const validate = () => {\n    const baseError = HospitalItemFormValidator({\n      name: hospitalItem.details.name,\n      item_code: hospitalItem.details.item_code.toString(),\n      gross_amount: hospitalItem.details.gross_amount,\n      vat_amount: hospitalItem.details.vat_amount,\n      amount_paid_by_member: hospitalItem.details.amount_paid_by_member,\n      philhealth_amount_paid: hospitalItem.details.philhealth_amount_paid\n    })\n    let diagnosisError = {}\n    if (diagnosis) {\n      diagnosisError = DiagnosisValidator({\n        diagnosis_description: hospitalItem.details.diagnosis_description || '',\n        diagnosis_code: hospitalItem.details.diagnosis_code || ''\n      })\n    }\n    const error = { ...baseError.error, ...diagnosisError.error }\n    console.log(error)\n    setErrors(error || {})\n    return !!Object.keys(error).length\n  }\n\n  const handleOnSaveHospitalItem = () => {\n    if (validate()) return\n\n    dispatch(addClaimHospitalItem(hospitalItem.details))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnUpdateHospitalItem = index => {\n    if (validate()) return\n\n    dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnRemoveHospitalItem = index => {\n    dispatch(removeClaimHospitalItem({ index }))\n    dispatch(setHospitalItem({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    hospitalItem.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            {diagnosis && (\n              <React.Fragment>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={hospitalItem.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={hospitalItem.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n          <HospitalItemTextFields>\n            <HospitalItemTextField\n              id='hospital-item-name'\n              codeId={`hospital-item-code`}\n              name={hospitalItem.details.name || ''}\n              item_code={hospitalItem.details.item_code || ''}\n              suggestions={suggestions.hospitalItem}\n              onChangeName={(value, isSuggestionClick) =>\n                handleOnChangeHospitalItem({ field: 'name', value, isSuggestionClick })\n              }\n              onChangeCode={(value, isSuggestionClick) =>\n                handleOnChangeHospitalItem({ field: 'item_code', value, isSuggestionClick })\n              }\n              errors={errors}\n            />\n          </HospitalItemTextFields>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='hospital-item-gross-amount'\n                label='Gross Amount'\n                value={hospitalItem.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='hospital-item-vat-amount'\n                label='VAT Amount'\n                value={hospitalItem.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='hospital-item-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={hospitalItem.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='philhealth-amount-paid'\n                label='PhilHealth Amount Paid'\n                value={hospitalItem.details.philhealth_amount_paid}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'philhealth_amount_paid',\n                    value: event.target.value\n                  })\n                }\n                error={errors.philhealth_amount_paid}\n              />\n            </div>\n            {showPhilhealthRemarks && (\n              <div className={classes.input}>\n                <TextField\n                  multiline\n                  rows={3}\n                  id='philhealth-remarks'\n                  label='PhilHealth Remarks'\n                  value={hospitalItem.details.philhealth_remarks}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'philhealth_remarks',\n                      value: event.target.value\n                    })\n                  }\n                />\n              </div>\n            )}\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {hospitalItem.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='hospital-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveHospitalItem}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='hospital-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setHospitalItem({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n\n            {hospitalItem.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='hospital-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateHospitalItem(hospitalItem.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='hospital-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this hospital item?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveHospitalItem(hospitalItem.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required()\n    .messages({\n      'string.empty': `\"Medical Partner ID\" is required.`\n    }),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Name\" is required.`\n    }),\n  specialization: Joi.string()\n    .trim()\n    .label('Doctor Specialization')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Specialization\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport ProfessionalFeeFormValidator from './ProfessionalFeeFormValidator'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setProfessionalFee,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  resetSuggestionObject,\n  setSuggestionObject\n} = actions\n\nexport default function ProfessionalFeeForm (props) {\n  const { diagnosis } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const professionalFee = useSelector(({ ClaimsEncoding: state }) => state.professionalFee)\n  const pfSuggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('professionalFee.show', state => {\n      setErrors({})\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const professionalFeeICD = professionalFee.details.diagnosis_code\n      const existing = diagnosis.find(item => item.code === professionalFeeICD)\n      if (!existing) dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n    }\n  }, [diagnosis])\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of pfSuggestions.pfDoctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(\n            setProfessionalFee({\n              details: {\n                doctor_id: i.id,\n                doctor_name: i.full_name,\n                specialization: i.specialization.main + ', ' + i.specialization.major\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'pfDoctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeProfessionalFeeForm = args => {\n    const { value, field } = args\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const _field = field.split('_')[1]\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProfessionalFee({ details: { diagnosis_code: diagnosi.code, diagnosis_description: diagnosi.description } })\n    )\n  }\n\n  const validate = () => {\n    const baseError = ProfessionalFeeFormValidator({\n      doctor_id: professionalFee.details.doctor_id,\n      doctor_name: professionalFee.details.doctor_name,\n      specialization: professionalFee.details.specialization,\n      gross_amount: professionalFee.details.gross_amount,\n      vat_amount: professionalFee.details.vat_amount,\n      amount_paid_by_member: professionalFee.details.amount_paid_by_member,\n      philhealth_amount_paid: professionalFee.details.philhealth_amount_paid\n    })\n    let diagnosisError = {}\n    if (diagnosis) {\n      diagnosisError = DiagnosisValidator({\n        diagnosis_description: professionalFee.details.diagnosis_description || '',\n        diagnosis_code: professionalFee.details.diagnosis_code || ''\n      })\n    }\n    const error = { ...baseError.error, ...diagnosisError.error }\n    console.log(error)\n    setErrors(error || {})\n    return !!Object.keys(error).length\n  }\n\n  const handleOnSaveProfessionalFee = () => {\n    if (validate()) return\n\n    dispatch(addClaimProfessionalFee(professionalFee.details))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnUpdateProfessionalFee = index => {\n    if (validate()) return\n\n    dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnRemoveProfessionalFee = index => {\n    dispatch(removeClaimProfessionalFee({ index }))\n    dispatch(setProfessionalFee({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    professionalFee.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            {diagnosis && (\n              <React.Fragment>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={professionalFee.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={professionalFee.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n          <div className={`${classes.groups} `}>\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-medical-partner-id'\n                required\n                label='Medical Partner ID'\n                value={professionalFee.details.doctor_id || ''}\n                suggestions={pfSuggestions.pfDoctor.id}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeDoctor({ field: 'doctor_id', value, isSuggestionClick })\n                }\n                error={errors.doctor_id}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-doctor-name'\n                required\n                label='Doctor Name'\n                value={professionalFee.details.doctor_name || ''}\n                suggestions={pfSuggestions.pfDoctor.full_name}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeDoctor({ field: 'doctor_name', value, isSuggestionClick })\n                }\n                error={errors.doctor_name}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                id='professional-fee-specialization'\n                required\n                label='Specialization'\n                value={professionalFee.details.specialization}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'specialization',\n                    value: event.target.value\n                  })\n                }\n                error={errors.specialization}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-gross-amount'\n                label='Gross Amount'\n                value={professionalFee.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-vat-amount'\n                label='VAT Amount'\n                value={professionalFee.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-amount-paid-by-member'\n                label='Amount Paid by Member'\n                value={professionalFee.details.amount_paid_by_member}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'amount_paid_by_member',\n                    value: event.target.value\n                  })\n                }\n                error={errors.amount_paid_by_member}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='philhealth-amount-paid'\n                label='PhilHealth Amount Paid'\n                value={professionalFee.details.philhealth_amount_paid}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'philhealth_amount_paid',\n                    value: event.target.value\n                  })\n                }\n                error={errors.philhealth_amount_paid}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                multiline\n                rows={3}\n                id='philhealth-remarks'\n                label='PhilHealth Remarks'\n                value={professionalFee.details.philhealth_remarks}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'philhealth_remarks',\n                    value: event.target.value\n                  })\n                }\n              />\n            </div>\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {professionalFee.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProfessionalFee}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='professional-fee-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setProfessionalFee({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n\n            {professionalFee.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProfessionalFee(professionalFee.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='professional-fee-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this professional fee?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProfessionalFee(professionalFee.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setProcedure, setProfessionalFee, setHospitalItem, resetSuggestionObject, setDentalProcedure } = actions\n\nexport default function ProcedureList (props) {\n  const { data, isDental = false } = props\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    if (isDental) return dispatch(setDentalProcedure({ show: false }))\n\n    dispatch(setProcedure({ show: false }))\n  }, [])\n\n  const showProcedureForm = params => e => {\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n\n    if (isDental) {\n      dispatch(setDentalProcedure(params))\n    } else {\n      dispatch(setProcedure(params))\n    }\n\n    // TODO currently creating baseform\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const generateKey = i =>\n    `${i.description} ${i.code} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProcedureForm({ show: true, mode: 'add' })}\n          >\n            + Add Procedure\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`procedure-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProcedureForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`procedure-row-description-${index}`}>{i.description}</td>\n                <td id={`procedure-row-code-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {i.code}\n                </td>\n                <td id={`procedure-row-amount-${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setHospitalItem, setProcedure, setDentalProcedure, setProfessionalFee, resetSuggestionObject } = actions\n\nexport default function HospitalItemList (props) {\n  const { data } = props\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    dispatch(setHospitalItem({ show: false }))\n  }, [])\n\n  const showHospitalItemForm = params => e => {\n    dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n    dispatch(setHospitalItem(params))\n\n    // TODO currently creating baseform\n    dispatch(setProcedure({ show: false }))\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const generateKey = i =>\n    `${i.name} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showHospitalItemForm({ show: true, mode: 'add' })}\n          >\n            + Add Items\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`hospital-item-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']} `}\n                onClick={showHospitalItemForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`hospital-item-row-name-${index}`}>{i.name}</td>\n                <td id={`hospital-item-row-code${index}`} className={`${classes.align} ${classes.center}`}>\n                  {i.item_code}\n                </td>\n                <td id={`hospital-item-row-amount${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setProfessionalFee, setHospitalItem, setProcedure, setDentalProcedure, resetSuggestionObject } = actions\n\nexport default function ProfessionalFeeList (props) {\n  const { data } = props\n\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    dispatch(setProfessionalFee({ show: false }))\n  }, [])\n\n  const showProfessionalFeeForm = params => e => {\n    dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n    dispatch(setProfessionalFee(params))\n\n    // TODO currently creating baseform\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProcedure({ show: false }))\n  }\n  const generateKey = i =>\n    `${i.doctor_name} ${i.specialization} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProfessionalFeeForm({ show: true, mode: 'add' })}\n          >\n            + Add Professional Fee\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`professional-fee-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProfessionalFeeForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`professional-fee-row-doctor-${index}`}>{i.doctor_name}</td>\n                <td id={`professional-fee-row-specialization-${index}`}>{i.specialization}</td>\n                <td id={`professional-fee-row-amount-${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsRemarks.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimBaseDetails } = actions\n\nexport default function ClaimsRemarks (props) {\n  const { data } = props\n  const dispatch = useDispatch()\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Claims Remarks\n        </Typography>\n      </div>\n      <div className={classes['input']}>\n        <TextField\n          multiline\n          rows={8}\n          id='claim-remarks'\n          value={data}\n          onChange={event =>\n            dispatch(\n              setClaimBaseDetails({\n                value: event.target.value,\n                field: 'claim_remarks'\n              })\n            )\n          }\n        />\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\nexport default function ClaimFooter (props) {\n  const { handleOnSave, setOpenDialog, openDialog, onOk, setShowReimbursementModal } = props\n  return (\n    <div className={classes.root}>\n      {setShowReimbursementModal && (\n        <Button\n          variant='contained'\n          color='primary'\n          id='save-for-now'\n          className='button-positive'\n          onClick={() => setShowReimbursementModal(true)}\n        >\n          Return\n        </Button>\n      )}\n\n      <Button\n        variant='contained'\n        color='primary'\n        id='save-for-now'\n        className='button-positive'\n        onClick={() => handleOnSave(true)}\n      >\n        Save for now\n      </Button>\n      <Button variant='contained' color='primary' className='button-positive' onClick={() => handleOnSave(false)}>\n        Save and Close\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        id='cancel'\n        className='button-negative'\n        onClick={() => setOpenDialog(true)}\n      >\n        Cancel\n      </Button>\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to cancel?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={onOk}\n      />\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .allow('', null),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n\n    // TODO addt'l dental validation\n    flag: Joi.boolean().default(false),\n\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer (Company) Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .default('')\n      .allow('', null),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Doctor) Name')\n      .default('')\n      .allow('', null),\n    anesthesiologist_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID (Anesthesiologist)')\n      .allow('', null),\n    anesthesiologist_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Anesthesiologist) Name')\n      .allow('', null),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    date_to: Joi.date()\n      .label('Admission Date (To)')\n      .required()\n      .min(Joi.ref('date_from'))\n      .messages({\n        'date.min': `\"Admission Date (To)\" should be on or after \"Admission Date (From)\"`\n      }),\n    contract_year_from: Joi.date().label('Contract Year (From)'),\n    contract_year_to: Joi.date().label('Contract Year (To)'),\n    department: Joi.string()\n      .trim()\n      .label('Department')\n      .default('')\n      .allow('', null),\n    recommendation: Joi.string()\n      .trim()\n      .label('Recommendation')\n      .allow('', null),\n    room_type: Joi.string()\n      .trim()\n      .label('Room Type')\n      .messages({ 'string.empty': `\"Room Type\" is required.` })\n      .allow('', null),\n    room_rate: Joi.number()\n      .label('Room Rate')\n      .messages({ 'string.empty': `\"Room Rate\" is required.` })\n      .required(),\n    pro_id: Joi.string()\n      .trim()\n      .label('PRO ID')\n      .messages({ 'string.empty': `\"PRO ID\" is required.` })\n      .required(),\n    pro_name: Joi.string()\n      .trim()\n      .label('PRO Name')\n      .messages({ 'string.empty': `\"PRO Name\" is required.` })\n      .required(),\n    claim_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub Type')\n      .messages({ 'string.empty': `\"Claim Sub Type\" is required.` })\n      .required(),\n    claim_sub_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub-subType')\n      .allow('', null),\n    with_corporate_guarantee: Joi.string()\n      .trim()\n      .label('Corporate Guaranty')\n      .allow('', null),\n    reimbursement_type: Joi.string()\n      .trim()\n      .label('Reimbursement Type')\n      .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n      .required(),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    reimbursement_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Reimbursement Category\" is required.` })\n      .allow('', null),\n    official_receipt_number: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Official Receipt Number\" is required.` })\n      .required(),\n    loa_notes: Joi.string()\n      .trim()\n      .allow('', null),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    result[field] = available_fields[field]\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\n// This if for claim types that have `Approval Code` and `Loa No.` as required fields.\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .messages({ 'string.empty': `\"Approval Code\" is required.` })\n      .required(),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .messages({ 'string.empty': `\"LOA No.\" is required.` })\n      .required(),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer (Company) Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    date_to: Joi.date()\n      .label('Service Date')\n      .required()\n      .messages({ 'string.empty': `\"Service Date\" is required.` }),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    result[field] = available_fields[field]\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\nimport getValidators from './getValidators'\nimport getValidators2 from './getValidators2'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst validate = fields => (data, type = false) => {\n  let schema = Joi.object(getValidators(fields)).options({ abortEarly: false })\n  // FOR Claim Types that have `Approval Code` and `LOA No.` as required fields.\n  if (type) schema = Joi.object(getValidators2(fields)).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Alert from 'SharedComponents/Alert/Alert'\n\nlet _setDialog = null\nlet _resolve = null\nconst SoftValidatorAlertComponent = () => {\n  const [dialog, setDialog] = React.useState({})\n\n  React.useState(() => {\n    setDialog(state => ({ ...state, show: false }))\n    _setDialog = setDialog\n  }, [])\n\n  const action = t => {\n    setDialog(state => ({ ...state, show: false }))\n    _resolve(t)\n  }\n\n  return (\n    <Alert\n      open={dialog.show}\n      message={dialog.message}\n      cancelLabel='No'\n      okLabel='Yes'\n      onCancel={() => action()}\n      onOk={() => action(true)}\n    />\n  )\n}\n\nconst SoftValidatorService = ({ fields = [] }) => {\n  const _fields = []\n\n  fields.map(i => {\n    const [key] = Object.keys(i)\n    if (!i[key].trim()) _fields.push(key)\n  })\n\n  if (!_fields.length) return true\n\n  let message = 'Missing'\n  const length = _fields.length\n\n  for (let i = 0; i < length; i++) {\n    if (i && i === length - 1) message = `${message} and`\n    else if (i && i < length - 1) message = `${message},`\n\n    message = `${message} ${_fields[i]}`\n  }\n\n  message = `${message}. Are you sure you want to proceed?`\n\n  return new Promise(resolve => {\n    _resolve = resolve\n    _setDialog({ show: true, message })\n  })\n}\n\nexport { SoftValidatorAlertComponent, SoftValidatorService }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string().trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string().trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, onChangePro, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        apiService\n          .lookups({\n            on: 'medical-partner',\n            params: { query: data.facility.id, by: 'id' }\n          })\n          .then(res => {\n            const { data } = res.data\n            const rooms = (data[0].rooms || []).map(room => ({\n              text: room.type,\n              value: room.type,\n              rate: room.rate\n            }))\n            dispatch(setDropDown({ rooms }))\n          })\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(event.toISOString())\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='room-type'\n                  required\n                  label='Room Type'\n                  items={dropDown.rooms}\n                  value={claim.room_type}\n                  disabled={disableControls}\n                  onChange={handleOnChangeRoomType}\n                  error={errors.room_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='room-rate'\n                  required\n                  label='Room Rate'\n                  value={claim.room_rate}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'room_rate'\n                      })\n                    )\n                  }\n                  error={errors.room_rate}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.id}\n                  required\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.name}\n                  required\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm diagnosis={claim.diagnosis} />\n                  <HospitalItemForm diagnosis={claim.diagnosis} />\n                  <ProfessionalFeeForm diagnosis={claim.diagnosis} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            department: data.department,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='department'\n                  label='Department'\n                  value={claim.department}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'department'\n                      })\n                    )\n                  }\n                  error={errors.department}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                  error={errors.with_corporate_guarantee}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm diagnosis={claim.diagnosis} />\n                  <ProfessionalFeeForm diagnosis={claim.diagnosis} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            recommendation: data.recommendation,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='recommendation'\n                  label='Recommendation'\n                  value={claim.recommendation}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'recommendation'\n                      })\n                    )\n                  }\n                  error={errors.recommendation}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                  error={errors.with_corporate_guarantee}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProfessionalFeeForm diagnosis={claim.diagnosis} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions, setGrandTotal } = actions\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails, onChangePro, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  required\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(event.toISOString())\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  required\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  required\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm diagnosis={claim.diagnosis} />\n                  <HospitalItemForm diagnosis={claim.diagnosis} />\n                  <ProfessionalFeeForm diagnosis={claim.diagnosis} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .greater(-1)\n    .required(),\n  tooth_number: Joi.string()\n    .label('Tooth Number')\n    .required()\n    .messages({\n      'string.empty': `\"Tooth Number\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\n// import TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ToothNumber.module.scss'\n\nexport default function ToothNumber (props) {\n  const { label = '', readOnly, error, onChange, value = '', required = false } = props\n  return (\n    <div className={classes['root']}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {`${label} ${required ? '*' : ''}`}\n      </Typography>\n      <div>\n        <TextField value={value} id='tooth-number' onChange={onChange} readOnly={readOnly} error={error} />\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport DentalProcedureFormValidator from './DentalProcedureFormValidator'\nimport ToothNumber from '../ToothNumber/ToothNumber'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './DentalProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setDentalProcedure,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure\n} = actions\n\nexport default function DentalProcedureForm (props) {\n  const { diagnosis } = props\n  const dispatch = useDispatch()\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const dentalProcedure = useSelector(({ ClaimsEncoding: state }) => state.dentalProcedure)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [errors, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('dentalProcedure.show', state => {\n      setErrors({})\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setDentalProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const _field = field.split('_')[1]\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setDentalProcedure({ details: { diagnosis_code: diagnosi.code, diagnosis_description: diagnosi.description } })\n    )\n  }\n\n  const handleOnChangeCpt = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    dispatch(setDentalProcedure({ details: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      if (!isNaN(selectedIndex)) {\n        try {\n          const i = suggestions.cpt.data[selectedIndex]\n          dispatch(resetSuggestionObject({ field: 'cpt' }))\n          return dispatch(\n            setDentalProcedure({\n              details: { description: i.description, code: i.code.toString() }\n            })\n          )\n        } catch (ex) {}\n      }\n    } else getCptSuggestions({ value, by: field })\n\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'cpt',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const validate = () => {\n    const baseError = DentalProcedureFormValidator({\n      description: dentalProcedure.details.description,\n      code: dentalProcedure.details.code.toString(),\n      tooth_number: dentalProcedure.details.tooth_number,\n      gross_amount: dentalProcedure.details.gross_amount,\n      vat_amount: dentalProcedure.details.vat_amount,\n      amount_paid_by_member: dentalProcedure.details.amount_paid_by_member\n    })\n    let diagnosisError = {}\n    if (diagnosis) {\n      diagnosisError = DiagnosisValidator({\n        diagnosis_description: dentalProcedure.details.diagnosis_description || '',\n        diagnosis_code: dentalProcedure.details.diagnosis_code || ''\n      })\n    }\n    const error = { ...baseError.error, ...diagnosisError.error }\n    console.log(error)\n    setErrors(error || {})\n    return !!Object.keys(error).length\n  }\n\n  const handleOnSaveProcedure = () => {\n    if (validate()) return\n\n    dispatch(addClaimProcedure(dentalProcedure.details))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    if (validate()) return\n\n    dispatch(updateClaimProcedure({ index, details: dentalProcedure.details }))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  return (\n    <React.Fragment>\n      {dentalProcedure.show && (\n        <React.Fragment>\n          <Paper className={classes.root}>\n            <div className={classes.groups}>\n              {diagnosis && (\n                <React.Fragment>\n                  <div className={classes.input}>\n                    <DropDown\n                      id='icd10-description'\n                      required\n                      label='ICD10 Description'\n                      items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                      value={dentalProcedure.details.diagnosis_description}\n                      onChange={event =>\n                        handleOnChangeDiagnosis({\n                          field: 'diagnosis_description',\n                          value: event.target.value\n                        })\n                      }\n                      error={errors.diagnosis_description}\n                    />\n                  </div>\n                  <div className={classes.input}>\n                    <DropDown\n                      id='icd10-code'\n                      required\n                      label='ICD10 Code'\n                      items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                      value={dentalProcedure.details.diagnosis_code}\n                      onChange={event =>\n                        handleOnChangeDiagnosis({\n                          field: 'diagnosis_code',\n                          value: event.target.value\n                        })\n                      }\n                      error={errors.diagnosis_code}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n            <CptTextFields>\n              <CptTextField\n                id={`procedure-description-autocomplete`}\n                codeId={`procedure-code-autocomplete`}\n                description={dentalProcedure.details.description}\n                suggestions={suggestions.cpt}\n                code={dentalProcedure.details.code}\n                onChangeDescription={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({\n                    field: 'description',\n                    value,\n                    isSuggestionClick,\n                    selectedIndex\n                  })\n                }\n                onChangeCode={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({ field: 'code', value, isSuggestionClick, selectedIndex })\n                }\n                errors={errors}\n              />\n            </CptTextFields>\n\n            <div className={classes.groups}>\n              <ToothNumber\n                id='tooth-number'\n                label='Tooth Number'\n                required\n                value={dentalProcedure.details.tooth_number}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'tooth_number',\n                    value: event.target.value\n                  })\n                }\n                error={errors.tooth_number}\n              />\n            </div>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  label='Gross Amount'\n                  value={dentalProcedure.details.gross_amount}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.gross_amount}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={dentalProcedure.details.vat_amount}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.vat_amount}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={dentalProcedure.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            </div>\n\n            <div className={`${classes.groups} ${classes.buttons}`}>\n              {dentalProcedure.mode === 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={handleOnSaveProcedure}\n                  >\n                    Save\n                  </Button>\n                  <Button\n                    variant='contained'\n                    color='secondary'\n                    onClick={() => dispatch(setDentalProcedure({ show: false }))}\n                  >\n                    Cancel\n                  </Button>\n                </React.Fragment>\n              )}\n              {dentalProcedure.mode !== 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() => handleOnUpdateProcedure(dentalProcedure.index)}\n                  >\n                    Update\n                  </Button>\n                  <Button variant='contained' color='secondary' onClick={() => setOpenDialog(true)}>\n                    Delete\n                  </Button>\n                </React.Fragment>\n              )}\n            </div>\n          </Paper>\n\n          <Alert\n            open={openDialog}\n            message='Are you sure you want to delete this procedure?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(false)}\n            onOk={() => handleOnRemoveProcedure(dentalProcedure.index)}\n          />\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\n// import ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DentalProcedureForm from '../DentalProcedureForm/DentalProcedureForm'\nimport DentalChart from 'Pages/Protected/Claims/Components/DentalChart/DentalChart'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\n// Libraries\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [flag] = React.useState({\n    flag: true\n  })\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_last_name: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            procedures: data.dental_procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const constructDentalStates = procedures => {\n    const data = {}\n    for (const [index, value] of procedures.entries()) {\n      try {\n        data[value.tooth_number - 1] = 'extracted'\n      } catch (ex) {}\n    }\n    return data\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...allowedFields, ...flag }))({ ...data, ...flag })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(base_errors)\n    return !!Object.keys(base_errors).length\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    data['date_to'] = data.date_from\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n              isDental\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={`${classes['input']} ${classes['contract-range']}`}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract.years}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n\n            <div className={`${classes.groups} ${classes.chart}`}>\n              <DentalChart states={constructDentalStates(claim.procedures)} />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} isDental />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <DentalProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_number: '',\n      client_account_name: '',\n      date_to: new Date().toISOString(),\n      date_from: new Date().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            date_from: new Date(data.date.to).toISOString(),\n            date_to: new Date(data.date.to).toISOString(),\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            hospital_items: data.hospital_items || [],\n            loa_number: data.loa_number,\n            medicine_category: data.medicine_category,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            procedures: data.procedures || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data }, true)\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(state => ({ ...state, ...base_errors }))\n    return !!Object.keys(base_errors).length\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push('/')\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              reqLoaNumber\n              reqApprovalCode\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category'\n                  value={claim.medicine_category}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'medicine_category'\n                      })\n                    )\n                  }\n                  error={errors.medicine_category}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} />\n                  <HospitalItemForm showAmountPaidByMember={false} showPhilhealthRemarks={false} />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\n// Libraries\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(allowedFields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(base_errors)\n    return !!Object.keys(base_errors).length\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    data['date_to'] = data.date_from\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_from}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['contract-range']}`}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract.years}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimECU.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimECU (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, onChangePro, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            claim_sub_type: data.claim_sub.type,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(allowedFields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(base_errors)\n    return !!Object.keys(base_errors).length\n  }\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(event.toISOString())\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-id'\n                  required\n                  label='PRO/ECU Specialist ID'\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-name'\n                  required\n                  label='PRO/ECU Specialist Name'\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract.years}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} />\n                  <HospitalItemForm showAmountPaidByMember={false} showPhilhealthRemarks={false} />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimPPE (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      client_account_number: '',\n      client_account_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      ppe_packagers: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        console.log(data)\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            ppe_packagers: data.ppe_packages || [],\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...allowedFields }))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(state => ({ ...state, ...base_errors }))\n    return !!Object.keys(base_errors).length\n  }\n\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              showMemberAccountNumber={false}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service-from'\n                  required\n                  label='Date of Service (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(event.toISOString())\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service-to'\n                  required\n                  label='Date of Service (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['packages']}`}>\n                <Typography>PPE Package/s:</Typography>\n                <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                  <List>\n                    {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                      <ListItem key={index}>\n                        <ListItemText primary={`Package ${index + 1}`} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Paper>\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} />\n                  <HospitalItemForm showAmountPaidByMember={false} showPhilhealthRemarks={false} />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPharmacy.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store./ClaimPharmacyValidator\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Libraries\n// import moment from 'moment'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initSuggestions } = actions\n\nexport default function ClaimPharmacy (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      claim_source: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            claim_source: data.claim_source,\n            medicine_category: data.medicine_category,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: new Date(data.date.to).toISOString(),\n            date_to: new Date(data.date.to).toISOString(),\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = () => {\n    const data = {}\n    const { ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data }, true)\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(state => ({ ...state, ...base_errors }))\n    return !!Object.keys(base_errors).length\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n    if (hasError) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push('/')\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showClaimSource\n              reqApprovalCode\n              reqLoaNumber\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {}}\n                  error={errors.date_from}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category *'\n                  value={claim.medicine_category}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'medicine_category'\n                      })\n                    )\n                  }\n                  error={errors.medicine_category}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .messages({ 'string.empty': `\"Approval Code\" is required.` })\n    .required(),\n  loa_number: Joi.string()\n    .trim()\n    .label('LOA No.')\n    .messages({ 'string.empty': `\"LOA No.\" is required.` })\n    .required(),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .messages({ 'string.empty': `\"Member First Name\" is required.` })\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_to: Joi.date()\n    .label('Service Date')\n    .required()\n    .messages({ 'string.empty': `\"Service Date\" is required.` }),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  claim_remarks: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicalSupplies.module.scss'\n\n// Validator\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport MainValidator from './ClaimMedicalSuppliesValidator'\n\n// Store./ClaimMedicalSuppliesValidator\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Libraries\n// import moment from 'moment'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimMedicalSupplies (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: new Date(data.date.to).toISOString(),\n            date_to: new Date(data.date.to).toISOString(),\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = () => {\n    const data = {}\n    const { ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n    const { error = {} } = MainValidator(data)\n    return error\n  }\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(state => ({ ...state, ...base_errors }))\n    return !!Object.keys(base_errors).length\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n    if (hasError) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push('/')\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              reqApprovalCode\n              reqLoaNumber\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimClinicManagement.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimClinicManagement (props) {\n  const dispatch = useDispatch()\n  const { claim, getClaimDetails, apiService } = props\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      client_account_number: '',\n      client_account_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data }, true)\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(base_errors)\n    return !!Object.keys(base_errors).length\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextField\n                  id='client-account-number'\n                  label='Client Account Number *'\n                  value={claim.client_account_number}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'client_account_number'\n                      })\n                    )\n                  }\n                  error={errors.client_account_number}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='client-account-name'\n                  label='Client Account Name *'\n                  value={claim.client_account_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'client_account_name'\n                      })\n                    )\n                  }\n                  error={errors.client_account_name}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ReimbursementInfo.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'date-created', name: 'Date Created' },\n  { id: 'prepared-by', name: 'Prepared By' },\n  { id: 'date-encoded', name: 'Date Encoded' },\n  { id: 'released-to', name: 'Released To' }\n]\n\nexport default function ReimbursementInfo (props) {\n  const { show, setShowModal, handleOnSave, doReject, doViewClaimNotice = () => {}, service, lookup } = props\n  const {\n    batch_number,\n    member_last_name,\n    member_first_name,\n    member_middle_name,\n    reimbursement_info: data = []\n  } = props.claim\n\n  const container = React.useRef()\n\n  const [showAdd, setShowAdd] = React.useState()\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [items, setItems] = React.useState([])\n  const [reasonDropdown, setReasonDropdown] = React.useState([])\n\n  React.useEffect(() => {\n    setItems(data)\n  }, [data])\n\n  React.useEffect(() => {\n    service\n      .lookups({\n        on: 'dropdown',\n        params: { field: lookup }\n      })\n      .then(res => {\n        const { data } = res.data\n        setReasonDropdown(\n          data.map(item => ({\n            value: item.reason,\n            text: item.reason\n          }))\n        )\n      })\n  }, [])\n\n  const handleOnItemClick = ({ index, value = true }) => {\n    if (showAdd && value) return\n\n    setItems(items => {\n      return items.map((item, _index) => {\n        if (_index === index) item.show = value\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          if (_index === index) item.showCell = value\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnClickAdd = () => {\n    setShowAdd(true)\n\n    setTimeout(() => {\n      container.current.scrollTo({\n        top: container.current.scrollHeight,\n        behavior: 'smooth'\n      })\n    }, 1)\n  }\n\n  const handleOnClickCancel = index => {\n    if (index === 'add') return setShowAdd()\n    handleOnItemClick({ index, value: false })\n  }\n\n  const handleOnClickSave = ({ item }) => {\n    setItems(items => {\n      const _items = [...items, item]\n      handleOnItemSave(_items)\n      return _items\n    })\n    setShowAdd()\n  }\n\n  const handleOnClickUpdate = ({ index, item }) => {\n    items[index] = item\n\n    setItems(items => {\n      let _items = items.map((_item, _index) => {\n        if (_index === index) _item = { ...item, show: false, showCell: false }\n        return _item\n      })\n      handleOnItemSave(_items)\n      return _items\n    })\n  }\n\n  const handleOnClose = () => {\n    setShowModal(false)\n    setItems(items => {\n      return items.map((item, _index) => {\n        item.show = false\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          item.showCell = false\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnItemSave = items => {\n    const _items = []\n\n    for (let i of items) {\n      _items.push({\n        date_created: i.date_created,\n        prepared_by: i.prepared_by,\n        date_encoded: i.date_encoded,\n        released_to: i.released_to,\n        date_released: i.date_released,\n        date_return: i.date_return,\n        remarks: i.remarks,\n        reasons: i.reasons\n      })\n    }\n\n    handleOnSave(_items)\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            Reimbursement Info\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes['basic-info']}>\n          <Typography variant='subtitle2' className={classes.label}>\n            Batch No.: {batch_number}\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.label}>\n            Member Name.: {member_last_name}, {member_first_name} {member_middle_name}\n          </Typography>\n        </div>\n        <Table\n          TableContainerProps={{\n            style: { height: '100%', overflow: 'auto', position: 'relative' },\n            ref: container\n          }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.id} id={`header-${headCell.id}`}>\n                  {headCell.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          pagination={false}\n          body={\n            <React.Fragment>\n              {items.map((item, index) => (\n                <React.Fragment key={index}>\n                  <TableRow onClick={() => handleOnItemClick({ index })}>\n                    <TableCell id={`batch-number-${index}`}>{DateFormatter(item.date_created)}</TableCell>\n                    <TableCell id={`prepared-by-${index}`}>{item.prepared_by}</TableCell>\n                    <TableCell id={`date-encoded-${index}`}>{DateFormatter(item.date_encoded)}</TableCell>\n                    <TableCell id={`released-to-${index}`}>{item.released_to}</TableCell>\n                  </TableRow>\n\n                  {item.show && (\n                    <ItemForm\n                      reasonDropdown={reasonDropdown}\n                      index={index}\n                      item={item}\n                      handleOnClickCancel={handleOnClickCancel}\n                      handleOnClickUpdate={handleOnClickUpdate}\n                      service={service}\n                      lookup={lookup}\n                      setReasonDropdown={setReasonDropdown}\n                    />\n                  )}\n                </React.Fragment>\n              ))}\n\n              {/* Add Form */}\n              {showAdd && (\n                <ItemForm\n                  index='add'\n                  reasonDropdown={reasonDropdown}\n                  item={{}}\n                  handleOnClickSave={handleOnClickSave}\n                  handleOnClickCancel={handleOnClickCancel}\n                  service={service}\n                  lookup={lookup}\n                  setReasonDropdown={setReasonDropdown}\n                />\n              )}\n              {/* Add Form */}\n            </React.Fragment>\n          }\n        />\n\n        <div className={classes.footer}>\n          <Button variant='contained' color='primary' id='cancel' className='button-negative' onClick={handleOnClose}>\n            Close\n          </Button>\n\n          {doReject && (\n            <Button\n              variant='contained'\n              color='primary'\n              id='reject'\n              className='button-neutral'\n              onClick={() => setRejectModal(true)}\n            >\n              Reject\n            </Button>\n          )}\n\n          <Button\n            variant='contained'\n            color='primary'\n            id='save-for-now'\n            className='button-positive'\n            onClick={handleOnClickAdd}\n            disabled={showAdd}\n          >\n            Add\n          </Button>\n          <Button\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            onClick={() => doViewClaimNotice({ goBack: false })}\n          >\n            Print Notice\n          </Button>\n        </div>\n      </DialogContent>\n\n      <Alert\n        open={rejectModal}\n        message='Are you sure you want to reject this claim?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setRejectModal(false)}\n        onOk={() => {\n          setRejectModal(false)\n          setShowModal(false)\n          doReject()\n        }}\n      />\n    </Dialog>\n  )\n}\n\nconst ItemForm = props => {\n  const defaultFunction = () => {}\n  const { index, item: _item, readOnly, reasonDropdown, service, lookup, setReasonDropdown } = props\n\n  // Events\n  const {\n    handleOnClickCancel = defaultFunction,\n    handleOnClickSave = defaultFunction,\n    handleOnClickUpdate = defaultFunction\n  } = props\n\n  const [item, setItem] = React.useState({})\n\n  React.useEffect(() => {\n    const today = new Date().toISOString()\n\n    setItem({\n      date_created: today,\n      prepared_by: '',\n      date_encoded: today,\n      released_to: '',\n      date_released: today,\n      date_return: today,\n      remarks: '',\n      reasons: [],\n      ..._item\n    })\n  }, [])\n\n  const handleOnChange = ({ field, value }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(p => ({ ...p, [field]: value }))\n  }\n\n  const handleOnClickAddReason = () => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: [...item.reasons, { value: '', other_details: '' }]\n    }))\n  }\n  const handleOnClickRemoveReason = __index => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.filter((item, _index) => __index !== _index)\n    }))\n  }\n\n  const handleOnChangeReason = ({ field, value, index }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.map((item, _index) => {\n        if (index === _index) {\n          item[field] = value\n          item.error = ''\n        }\n        return item\n      })\n    }))\n  }\n\n  const handleOnLookup = args => {\n    const { save = false, update = false } = args\n    service\n      .lookups({\n        on: 'dropdown',\n        params: { field: lookup }\n      })\n      .then(res => {\n        const { data } = res.data\n        setReasonDropdown(\n          data.map(item => ({\n            value: item.reason,\n            text: item.reason\n          }))\n        )\n        if (save || update) {\n          let hasError = false\n          const reasons = item.reasons\n          const tempReasons = []\n          reasons.map(reason => {\n            const existing = data.filter(i => i.reason === reason.value)\n            if (existing.length === 0) {\n              tempReasons.push({...reason, value: '', error: 'Please Input a Valid Reason'})\n              hasError = true\n            } else tempReasons.push(reason)\n          })\n          setItem({...item, reasons: tempReasons})\n          if (hasError) {\n            return false\n          }\n          if (save) handleOnClickSave({ index, item })\n          if (update) handleOnClickUpdate({ index, item })\n        }\n      })\n  }\n\n  const _handleOnClickUpdate = () => {\n    handleOnLookup({ update: true })\n  }\n\n  const _handleOnClickSave = () => {\n    handleOnLookup({ save: true })\n  }\n\n  return (\n    <TableRow key={`collapsible-${index}`}>\n      <TableCell colSpan={headCells.length} id={`collabsible-cell-${index}`} className={classes['collapsible-cell']}>\n        <div className={`${classes.container} ${!item.showCell || index === 'add' ? classes['show-cell'] : ''}`}>\n          <div className={classes.cell}>\n            <Typography variant='h6' className={classes.label}>\n              {index === 'add' ? 'Add Item' : 'Update Item'}\n            </Typography>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-created-${index}`}\n                  label='Date Created'\n                  value={item.date_created}\n                  onChange={event => handleOnChange({ field: 'date_created', value: event.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`prepared-by-${index}`}\n                  label='Prepared By'\n                  value={item.prepared_by || ''}\n                  onChange={event => handleOnChange({ field: 'prepared_by', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-encoded-${index}`}\n                  label='Date Encoded'\n                  value={item.date_encoded}\n                  onChange={event => handleOnChange({ field: 'date_encoded', value: event.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`released-to-${index}`}\n                  label='Released To'\n                  value={item.released_to || ''}\n                  onChange={event => handleOnChange({ field: 'released_to', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-released-${index}`}\n                  label='Date Released'\n                  value={item.date_released}\n                  onChange={event => handleOnChange({ field: 'date_released', value: event.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`return-date-${index}`}\n                  label='Return Date'\n                  value={item.date_return}\n                  disableComponents\n                  onChange={event => handleOnChange({ field: 'date_return', value: event.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']} style={{ width: '50%' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1 }}\n                  multiline\n                  rows={3}\n                  id='remarks'\n                  label='Remarks'\n                  value={item.remarks || ''}\n                  onChange={event => handleOnChange({ field: 'remarks', value: event.target.value })}\n                />\n              </div>\n            </div>\n\n            <div className={classes['reasons-container']}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Reasons\n                </Typography>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Other Details\n                </Typography>\n\n                <div className={classes.delete} />\n              </div>\n\n              {/* Reasons */}\n              {(item.reasons || []).map((item, _index) => (\n                <div className={classes.reasons} key={`reason-${_index}`}>\n                  <div className={classes['input']} style={{ width: '50%' }}>\n                    <DropDown\n                      items={reasonDropdown}\n                      id={`reason-text-${_index}`}\n                      value={item.value || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'value', value: event.target.value, index: _index })\n                      }\n                      error={item.error}\n                    />\n                  </div>\n\n                  <div className={classes['input']} style={{ width: '50%' }}>\n                    <TextField\n                      id={`reason-other-details-${_index}`}\n                      value={item.other_details || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'other_details', value: event.target.value, index: _index })\n                      }\n                    />\n                  </div>\n\n                  <div className={classes.delete}>\n                    <IconButton id='delete-reason'>\n                      <DeleteIcon fontSize='small' onClick={() => handleOnClickRemoveReason(_index)} />\n                    </IconButton>\n                  </div>\n                </div>\n              ))}\n\n              <Typography\n                variant='body2'\n                className={`${classes['add-link']} ${(item.reasons || []).length ? '' : classes['empty-reasons']}`}\n                onClick={() => handleOnClickAddReason()}\n              >\n                + Add a reason\n              </Typography>\n              {/* Reasons */}\n            </div>\n\n            <div className={classes.footer}>\n              <React.Fragment>\n                {!readOnly && (\n                  <React.Fragment>\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      id='cancel'\n                      className='button-negative'\n                      onClick={() => handleOnClickCancel(index)}\n                    >\n                      Cancel\n                    </Button>\n                    {index === 'add' && (\n                      <React.Fragment>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          id='save-for-now'\n                          className='button-positive'\n                          onClick={_handleOnClickSave}\n                        >\n                          Save\n                        </Button>\n                      </React.Fragment>\n                    )}\n                    {index !== 'add' && (\n                      <React.Fragment>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          id='save-for-now'\n                          className='button-positive'\n                          onClick={_handleOnClickUpdate}\n                        >\n                          Update\n                        </Button>\n                      </React.Fragment>\n                    )}\n                  </React.Fragment>\n                )}\n              </React.Fragment>\n            </div>\n          </div>\n        </div>\n      </TableCell>\n    </TableRow>\n  )\n}\n","const InPatient = ['date_to', 'room_type', 'room_rate', 'pro_id', 'pro_name']\nconst Dental = ['doctor_id', 'doctor_name', 'date_from', 'department']\nconst other_fields = ['doctor_id', 'doctor_name', 'department']\n\nconst AdditionalFields = type => {\n  if (type === undefined) return {}\n\n  const additional_fields = type === 'InPatient' ? InPatient : type === 'Dental' ? Dental : other_fields\n  let result = {}\n\n  for (let field of additional_fields) result[field] = ''\n\n  return result\n}\n\nAdditionalFields.exist = (fields, field) => fields[field] !== undefined\n\nexport default AdditionalFields\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ReimbursementInfo from './../../../../ReimbursementInfo/ReimbursementInfo'\nimport DentalProcedureForm from '../DentalProcedureForm/DentalProcedureForm'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\nimport AdditionalFields from './AdditionalFields'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setDentalProcedure,\n  setProfessionalFee,\n  setHospitalItem\n} = actions\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, onChangeDoctor, onChangePro, apiService, doViewClaimNotice = () => {} } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [initialAllowedFields, setInitialAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n  const [showReimbursementModal, setShowReimbursementModal] = React.useState(false)\n  const [type, setType] = React.useState('')\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      reimbursement_type: props.isAdd ? 'InPatient' : '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      medicine_category: '',\n      reimbursement_category: '',\n      official_receipt_number: '',\n      diagnosis: [],\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: [],\n      reimbursement_info: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields({ ..._allowedFields, ...AdditionalFields(props.isAdd ? 'InPatient' : undefined) })\n      setlineItemFields(_lineItemFields)\n      setInitialAllowedFields(_allowedFields)\n\n      const initial_values = { ..._allowedFields, ..._lineItemFields }\n\n      if (props.isAdd) initial_values['date_to'] = new Date().toISOString()\n\n      dispatch(setClaimFields(initial_values))\n\n      // if (result['date_to'] !== undefined)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        setType(data.reimbursement_details.type)\n        apiService\n          .lookups({\n            on: 'medical-partner',\n            params: { query: data.facility.id, by: 'id' }\n          })\n          .then(res => {\n            const { data } = res.data\n            const rooms = (data[0].rooms || []).map(room => ({\n              text: room.type,\n              value: room.type,\n              rate: room.rate\n            }))\n            dispatch(setDropDown({ rooms }))\n          })\n\n        let _claim = {\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          reimbursement_type: data.reimbursement_details.type,\n          member_account_number: data.member.account_number,\n          member_last_name: data.member.last_name,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          medicine_category: data.medicine_category,\n          reimbursement_category: data.reimbursement_details.category,\n          official_receipt_number: data.reimbursement_details.official_receipt_number,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          hospital_items: data.hospital_items || [],\n          reimbursement_info: data.reimbursement_info || [],\n          batch_number: data.batch_number,\n          claim_remarks: data.claim_remarks\n\n        }\n\n        if (data.reimbursement_details.type === 'InPatient') {\n          _claim = {\n            ..._claim,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate || 0,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name\n          }\n        } else {\n          _claim = {\n            ..._claim,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            department: data.department\n          }\n        }\n\n        dispatch(setClaimFields(_claim))\n        setAllowedFields({\n          ..._allowedFields,\n          ...AdditionalFields(\n            data.reimbursement_details.type === 'InPatient'\n              ? 'InPatient'\n              : data.reimbursement_details.type === 'Dental'\n                ? 'Dental'\n                : ''\n          )\n        })\n      })\n    }\n    setType(_allowedFields.reimbursement_type)\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({\n      ...data\n    })\n    return error\n  }\n\n  // const validateDiagnosis = () => {\n  //   if (type === 'Dental') {\n  //     return {}\n  //   }\n  //   return DiagnosisListValidator(claim.diagnosis)\n  // }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f] || ''\n\n    if (!data.date_to) {\n      data.date_to = new Date().toISOString()\n    }\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  const onChangeReimbursementType = ({ value, field }) => {\n    setAllowedFields({ ...initialAllowedFields, ...AdditionalFields(value) })\n    setType(value)\n\n    if (value === 'InPatient') {\n      dispatch(\n        setClaimFields({\n          ...claim,\n          date_to: new Date().toISOString()\n        })\n      )\n    } else if (value === 'Dental') {\n      dispatch(\n        setClaimFields({\n          ...claim,\n          reimbursement_type: 'Dental',\n          date_from: new Date().toISOString(),\n          doctor_id: '',\n          doctor_name: ''\n        })\n      )\n    }\n\n    dispatch(setClaimBaseDetails({ value, field }))\n  }\n\n  React.useEffect(() => {\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProcedure({ show: false }))\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }, [type])\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showReimbursement\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={onChangeReimbursementType}\n              // handleMemberAccountNumber={type === 'Dental'}\n              // isDental={type === 'Dental'}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              {AdditionalFields.exist(allowedFields, 'doctor_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='doctor-id'\n                    label='Medical Partner ID'\n                    value={claim.doctor_id}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor.id}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangeDoctor({\n                        field: 'doctor_id',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.doctor_id}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'doctor_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='doctor-name'\n                    label='Medical Partner (Doctor) Name'\n                    value={claim.doctor_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor.full_name}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangeDoctor({\n                        field: 'doctor_name',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.doctor_name}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_from') && AdditionalFields.exist(allowedFields, 'date_to') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(event.toISOString())\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={errors.date_from}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={errors.date_to}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              {AdditionalFields.exist(allowedFields, 'date_from') && !(type === 'InPatient') && (\n                <div className={classes['input']}>\n                  <DatePicker\n                    id='date-of-service'\n                    required\n                    label='Date of Service'\n                    value={claim.date_from}\n                    disabled={disableControls}\n                    onChange={event => {\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.toISOString(),\n                          field: 'date_from'\n                        })\n                      )\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.toISOString(),\n                          field: 'date_to'\n                        })\n                      )\n                    }}\n                    error={errors.date_from}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'department') && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='department'\n                    label='Department'\n                    value={claim.department}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'department'\n                        })\n                      )\n                    }\n                    error={errors.pro_id}\n                  />\n                </div>\n              )}\n\n              {!AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      error={errors.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      error={errors.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <div className={classes['input']}>\n                  <DropDown\n                    id='room-type'\n                    required\n                    label='Room Type'\n                    items={dropDown.rooms}\n                    value={claim.room_type}\n                    disabled={disableControls}\n                    onChange={handleOnChangeRoomType}\n                    error={errors.room_type}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <div className={classes['input']}>\n                  <TextFieldCurrency\n                    id='room-rate'\n                    required\n                    label='Room Rate'\n                    value={claim.room_rate}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'room_rate'\n                        })\n                      )\n                    }\n                    error={errors.room_rate}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-id'\n                    required\n                    label='PRO ID'\n                    value={claim.pro_id}\n                    suggestions={suggestions.pro.id}\n                    disabled={disableControls}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangePro({\n                        field: 'pro_id',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.pro_id}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-name'\n                    required\n                    label='PRO Name'\n                    value={claim.pro_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.pro.name}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangePro({\n                        field: 'pro_name',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.pro_name}\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      error={errors.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      error={errors.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              <div className={classes['input']}>\n                <TextField\n                  id='official-receipt-number'\n                  label='Official Receipt Number'\n                  value={claim.official_receipt_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'official_receipt_number'\n                      })\n                    )\n                  }\n                  error={errors.official_receipt_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} isDental={type === 'Dental'} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  {/* temporary dental proc  dental_procedure */}\n                  <DentalProcedureForm diagnosis={claim.diagnosis} />\n                  <ProcedureForm diagnosis={claim.diagnosis} />\n                  <HospitalItemForm diagnosis={claim.diagnosis} />\n                  <ProfessionalFeeForm diagnosis={claim.diagnosis} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            setShowReimbursementModal={setShowReimbursementModal}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <ReimbursementInfo\n            claim={claim}\n            doViewClaimNotice={doViewClaimNotice}\n            show={showReimbursementModal}\n            setShowModal={setShowReimbursementModal}\n            service={apiService}\n            handleOnSave={reimbursement_info =>\n              dispatch(\n                setClaimBaseDetails({\n                  value: reimbursement_info,\n                  field: 'reimbursement_info'\n                })\n              )\n            }\n            lookup={'return-reason'}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport ClaimInPatient from './Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from './Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from './Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimEmergency from './Components/ClaimEmergency/ClaimEmergency'\nimport ClaimDental from './Components/ClaimDental/ClaimDental'\nimport ClaimMedicineAllowance from './Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimAPE from './Components/ClaimAPE/ClaimAPE'\nimport ClaimECU from './Components/ClaimECU/ClaimECU'\nimport ClaimPPE from './Components/ClaimPPE/ClaimPPE'\nimport ClaimPharmacy from './Components/ClaimPharmacy/ClaimPharmacy'\nimport ClaimMedicalSupplies from './Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\nimport ClaimClinicManagement from './Components/ClaimClinicManagement/ClaimClinicManagement'\nimport ClaimReimbursement from './Components/ClaimReimbursement/ClaimReimbursement'\n\nimport ClaimTypes from '../../../Constant/ClaimTypes'\n\nexport default function GetClaimComponent (_props) {\n  const { _type, ...props } = _props\n\n  const SelectecClaimType = selected => {\n    const type = ClaimTypes[selected].other_name\n\n    switch (type) {\n      case 'InPatient':\n        return <ClaimInPatient {...props} />\n\n      case 'OutPatientProcedure':\n        return <ClaimOutPatientProcedure {...props} />\n\n      case 'OutPatientConsultation':\n        return <ClaimOutPatientConsultation {...props} />\n\n      case 'Emergency':\n        return <ClaimEmergency {...props} />\n\n      case 'Dental':\n        return <ClaimDental {...props} />\n\n      case 'MedicineAllowance':\n        return <ClaimMedicineAllowance {...props} />\n\n      case 'APE':\n        return <ClaimAPE {...props} />\n\n      case 'ECU':\n        return <ClaimECU {...props} />\n\n      case 'PPE':\n        return <ClaimPPE {...props} />\n\n      case 'Pharmacy':\n        return <ClaimPharmacy {...props} />\n\n      case 'MedicalSupplies':\n        return <ClaimMedicalSupplies {...props} />\n\n      case 'ClinicManagement':\n        return <ClaimClinicManagement {...props} />\n\n      case 'Reimbursement':\n        return <ClaimReimbursement {...props} />\n\n      default:\n        break\n    }\n  }\n\n  return <React.Fragment>{SelectecClaimType(_type)}</React.Fragment>\n}\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport GetClaimComponent from './GetClaimComponent'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\nconst {\n  resetClaim,\n  setGrandTotal,\n  setClaimType,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setClaimFacility,\n  setClaimDoctor,\n  addSuggestionToArray,\n  resetGrandTotal,\n  setClaimPro\n} = actions\n\nexport default function ClaimPage (props) {\n  const { apiService } = props\n  const dispatch = useDispatch()\n  const claim = useSelector(({ ClaimsEncoding: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsEncoding: state }) => state.claimType)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const getBatchDetails = ({ _batchNumber }) => {\n    apiService.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      dispatch(setClaimType(data.claim.type))\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    dispatch(resetClaim())\n    LoadingService.loading(true)\n    const { _batchNumber, _claimNumber } = props.match.params\n\n    let pageTitle = ''\n    let breadCrumbs = ['dashboard', 'batches', `specificBatch:${_batchNumber}`]\n    if (props.isAdd) {\n      pageTitle = 'Add new claim'\n      breadCrumbs = [...breadCrumbs, 'addClaim']\n    } else {\n      pageTitle = `Update Claim No. ${_claimNumber}`\n      breadCrumbs = [...breadCrumbs, 'updateClaim']\n    }\n\n    PageTitleService(pageTitle)\n    BreadcrumbsService.setSelectedItems(breadCrumbs)\n    getBatchDetails({ _batchNumber })\n\n    return () => {\n      dispatch(setClaimType(''))\n      dispatch(resetClaim())\n      dispatch(resetGrandTotal())\n    }\n  }, [props.match.params._batchNumber])\n\n  React.useEffect(() => {\n    const grand = Total.Grand(claim)\n    dispatch(setGrandTotal(grand))\n  }, [claim])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const getClaimDetails = callback => {\n    const { _batchNumber, _claimNumber } = props.match.params\n    apiService\n      .getClaim({\n        batch_number: _batchNumber,\n        claim_number: _claimNumber\n      })\n      .then(res => {\n        const { data } = res.data\n        // Set Diagnosis Suggestions\n        const { diagnosis = [] } = data\n        diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n\n        callback(data)\n      })\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimFacility({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.facility.data) {\n        if (value === i.id || value === i.name) {\n          dispatch(setClaimFacility({ facility_id: i.id, facility_name: i.name }))\n          dispatch(resetSuggestionObject({ field: 'facility' }))\n          return i.rooms\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'facility' }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'medical-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              let _items = []\n              for (let d of data) _items.push(d[by])\n              dispatch(\n                setSuggestionObject({\n                  field: 'facility',\n                  suggestion: { [by]: _items, data }\n                })\n              )\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.doctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ doctor_id: i.id, doctor_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'doctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'doctor-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              let _items = []\n              for (let d of data) _items.push(d[by])\n              dispatch(\n                setSuggestionObject({\n                  field: 'doctor',\n                  suggestion: { [by]: _items, data }\n                })\n              )\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // PRO\n  const handleOnChangePro = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimPro({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.pro.data) {\n        if (value === i.employee_id || value === i.name) {\n          dispatch(setClaimPro({ pro_name: i.name, pro_id: i.employee_id }))\n          dispatch(resetSuggestionObject({ field: 'pro' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    }\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // PRO User lookup\n          CustomerCareServices.proUsersLookup({ value, field }).then(res => {\n            // limit temporary - no limit in api seer\n            const limit = []\n            for (let i = 0; i < 10; i++) {\n              if (!res.data.data[i]) break\n              limit.push(res.data.data[i])\n            }\n\n            const data = limit.map(elem => {\n              let full_name = `${elem.first_name} ${elem.last_name}`\n              delete elem.first_name\n              delete elem.last_name\n              return { ...elem, name: full_name }\n            })\n\n            let _items = []\n\n            if (field === 'pro_id') {\n              for (let d of data) {\n                _items.push(d[`employee_${field.split('_')[1]}`])\n              }\n            } else {\n              for (let d of data) {\n                _items.push(d['name'])\n              }\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'pro',\n                suggestion: { [`${field.split('_')[1]}`]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.anesthesiologist.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ anesthesiologist_id: i.id, anesthesiologist_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by })\n    }\n  }\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'doctor-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              let _items = []\n              for (let d of data) _items.push(d[by])\n              dispatch(\n                setSuggestionObject({\n                  field: 'anesthesiologist',\n                  suggestion: { [by]: _items, data }\n                })\n              )\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Report: Claim Notice\n  const handleOnViewClaimNotice = mode => {\n    LoadingService.loading(true)\n    const { _claimNumber } = props.match.params\n    const pdf = {\n      name: 'Claims Notice',\n      fileName: 'claim_notice',\n      service: apiService.getLetterNotice({ claim_number: _claimNumber })\n    }\n    PdfViewer2Service({ ...pdf, open: true })\n    LoadingService.loading(false)\n  }\n\n  return (\n    <React.Fragment>\n      {claim_type && (\n        <GetClaimComponent\n          _type={claim_type}\n          {...props}\n          claim={claim}\n          onChangeFacility={handleOnChangeFacility}\n          getClaimDetails={getClaimDetails}\n          onChangePro={handleOnChangePro}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          doViewClaimNotice={handleOnViewClaimNotice}\n        />\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder\nimport Dashboard from './../Components/ClaimsDetailsEncoder/Dashboard/Dashboard'\nimport BatchesPage from './../Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage'\nimport BatchPage from './../Components/ClaimsDetailsEncoder/BatchPage/BatchPage'\nimport ClaimPage from './../Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Batches',\n    icon: 'box-open',\n    to: '/batches'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  batches: {\n    text: 'Batches',\n    to: '/batches'\n  },\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  addClaim: {\n    text: 'Add new claim',\n    to: ''\n  },\n  updateClaim: {\n    text: 'Update Claim',\n    to: ''\n  }\n}\n\nfunction ClaimsDetailsEncoderRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batches' exact component={BatchesPage} />\n      <Route\n        path='/batches/:_batchNumber'\n        exact\n        render={props => <BatchPage {...props} apiService={ClaimsEncodingServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/add'\n        exact\n        render={props => <ClaimPage {...props} isAdd apiService={ClaimsEncodingServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/:_claimNumber'\n        exact\n        render={props => <ClaimPage {...props} apiService={ClaimsEncodingServices} />}\n      />\n    </Switch>\n  )\n}\n\nexport default ClaimsDetailsEncoderRoutes\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\nconst columns = [\n  { id: 's-encoder-name', name: ' Encoder Name', sortField: 'username', match: 'start' },\n  { id: 's-total-batches', name: ' Total Batches', sortField: 'total_batches', match: 'any' },\n  { id: 's-total-rcs', name: ' Total No. of RCS', sortField: 'total_rcs', match: 'any' }\n]\nconst ClaimsEncoderTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'name',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    getEncoders('CLAIMS_DETAILS_ENCODER')\n  }, [])\n\n  const getEncoders = role => {\n    services\n      .getEncodersBatches({ role, param: { limit: 10, sort: 'name|asc' } })\n      .then(res => {\n        const { result } = res.data.data.data\n        const { count } = res.data.data\n        setBatches(state => ({ ...state, count, data: result }))\n      })\n      .catch(err => {\n        console.error(err)\n        setBatches(state => ({ ...state, count: 0, data: [] }))\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    setViewList({ ...initialValue, show: true, title: startCase(`${category} Batches`), category })\n    services\n      .getEncodersBatches({ role: 'CLAIMS_DETAILS_ENCODER', param: { limit: 10, sort: 'name|asc' } })\n      .then(({ data: res }) => {\n        const { result, count } = res.data.data\n        setViewList(state => ({ ...state, data: result, count }))\n        // setViewList(state => ({ ...state, page, limit }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n    services.getEncodersBatches({ role: 'CLAIMS_DETAILS_ENCODER', param: { ..._params } }).then(({ data: res }) => {\n      const { result, count } = res.data.data\n      const { limit, page } = res.data\n      setViewList(state => ({ ...state, data: result, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-encoder'\n        count={{ color: 3, value: batches.count, id: 'claims-encoder-count' }}\n        isFilterShown={false}\n        title='Claims Encoder'\n        sizes={sizes}\n        viewList={\n          <Typography\n            id='ob-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('claim-encoder')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={() => {}}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`ces-${item.id}`} id={`ces-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {batches.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`ces-encoder-name-${index}`}>{item.username}</TableCell>\n                <TableCell id={`ces-total-batches-${index}`}>{item.total_batches}</TableCell>\n                <TableCell id={`ces-total-rcs-${index}`}>{item.total_rcs}</TableCell>\n                <TableCell>\n                  <Link to={`/batches/assigned/${item.id}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-encoder-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for encoder name, total bundle or total batch'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.id}>\n              <TableCell id={`batch-number-${index}`}>{item.username}</TableCell>\n              <TableCell id={`date-received-${index}`}>{item.total_batches}</TableCell>\n              <TableCell id={`due-date-${index}`}>{item.total_rcs}</TableCell>\n              <TableCell id={`view-encoder-${index}`}>\n                <Link to={`/batches/assigned/${item.id}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-encoder-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsEncoderTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsEncoderTile\n","import instance from '../instance'\n// import ClaimsEncodingServices from '../ClaimsEncodingServices'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ces')\n\nexport default class ClaimsEncoderSupervisorServices {\n  static getEncodersBatches (params) {\n    return axios({\n      url: `/batches/encoders`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderBatches (params) {\n    return axios({\n      url: `/batches/encoders/assigned`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderBatch (params, batch_number) {\n    return axios({\n      url: `/batches/encoders/${batch_number}`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderClaims (params, batch_number) {\n    return axios({\n      url: `/batches/encoders/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassign (params) {\n    return axios({\n      url: `/batches/encoders/reassign`,\n      method: 'POST',\n      params\n    })\n  }\n\n  static getBatches (params) {\n    return axios({\n      url: `/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchCount (params) {\n    return axios({\n      url: `/batches/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static assignBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static submitBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getClaims ({ batch_number, params }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/count`,\n      method: 'GET'\n    })\n  }\n\n  static getClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static addClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static updateClaim ({ batch_number, claim_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static deleteClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport OpenBatchesTile from './../../../Components/Tiles/OpenBatchesTile'\nimport MyBatchesTile from './../../../Components/Tiles/MyBatchesTile'\nimport CompletedBatchesTile from './../../../Components/Tiles/CompletedBatchesTile'\nimport ClaimsEncoderTile from './../../../Components/Tiles/ClaimsEncoderTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={`${classes.tiles} ${classes.row}`} spacing={3} direction='column'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 8 }} title='Claims Encoding'>\n            <OpenBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <MyBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <CompletedBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n\n          <Grid item className={classes['task-tray-monitor']}>\n            <TaskTray sizes={{ xs: 8 }} title='Items to Monitor'>\n              <ClaimsEncoderTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            </TaskTray>\n          </Grid>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell id='cvs-ticket-no'>Ticket #</TableCell>\n                      <TableCell id='cvs-date'>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell id={`cvs-ticket-no-${index}`}>2334324343</TableCell>\n                        <TableCell id={`cvs-date-${index}`}>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nconst { setReassignAssignee, setReassignNotes } = actions\n\nexport default function AssignDialog (props) {\n  const { dialog, setDialog, dropDownUsers = [], handleOnSubmitReassign } = props\n  const dispatch = useDispatch()\n  const reassign = useSelector(({ ClaimsEncoding: state }) => state.reassign)\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    note: '',\n    assignee: ''\n  })\n\n  const validate = () => {\n    const { error } = ReassignValidator({\n      note: reassign.note,\n      assignee: reassign.assignee.id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (validate()) return\n    setDialog(state => ({ ...state, alert: true }))\n  }\n\n  const handleOnCancel = () => {\n    setReassignErrors({\n      note: '',\n      assignee: ''\n    })\n    setDialog(state => ({ ...state, assign: false }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='assign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                onChange={event => dispatch(setReassignNotes(event.target.value))}\n                // onChange={event => dispatch(setEscalationMessage(event.target.value))}\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassign.assignee.id}\n                  // onChange={event =>\n                  //   dispatch(\n                  //     setEscalationAssignee({\n                  //       id: event.target.value,\n                  //       name: event.target.value\n                  //     })\n                  //   )\n                  // }\n                  onChange={event => {\n                    dispatch(\n                      setReassignAssignee({\n                        id: event.target.value,\n                        name: event.target.value\n                      })\n                    )\n                  }}\n                  error={reassignErrors.assignee}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  onClick={() => handleOnCancel()}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  id='dialog-cancel'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => handleOnSubmit()}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  id='dialog-submit'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n          {/*\n          <DialogActions>\n            <Button\n              onClick={() => setDialog(false)}\n              variant='contained'\n              color='primary'\n              id='save-for-now'\n              className='button-negative'\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {}}\n              variant='contained'\n              color='primary'\n              id='save-for-now'\n              className='button-positive'\n            >\n              Submit\n            </Button>\n          </DialogActions> */}\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign SOA to Claim Encoder</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the SOA to the selected Claim Encoder?\n              </Typography>\n              <Typography variant='body1'>\n                This SOA will be sent to the assigned Claim Encoder for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                id='alert-btn-cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmitReassign()\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                }}\n                variant='contained'\n                color='primary'\n                id='alert-btn-submit'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ButtonFooter.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// lodash\nimport { sortBy } from 'lodash'\n\n// Component\nimport AssignDialog from '../AssignDialog/AssignDialog'\n\nconst { resetReassign, setReassignNotes } = actions\n\nexport default function ClaimFooter (props) {\n  const {\n    handleOnSubmitReassign = () => {},\n    handleOnCancel = () => {},\n    handleOnClose = () => {},\n    selectStatus,\n    UserManagementServices = () => {},\n    count,\n    _id = ''\n  } = props\n\n  const dispatch = useDispatch()\n  // const [count, setCount] = React.useState(0)\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  // const reassign = useSelector(({ClaimsEncoding: state}) =>  state.reassign)\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n\n  const initDropdownUsers = async ({ roles }) => {\n    UserManagementServices.getUsersByRole(roles).then(({ data = [] }) => {\n      let users = data\n        .map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n        .filter(i => i.value !== _id)\n\n      setDropDownUsers(sortBy(users, ['text']))\n    })\n  }\n\n  // const handleOnsubmitReassign = (batches, user_id) => {\n  //   console.log(batches)\n  //   console.log(user_id)\n  // }\n\n  const handleOnOpenDialog = () => {\n    if (count === 0) return\n    dispatch(resetReassign())\n    initDropdownUsers({ roles: 'CLAIMS_DETAILS_ENCODER' })\n    // setReassignErrors({ message: '', assignee: '' })\n    dispatch(setReassignNotes(''))\n    // setReassignModal(state => ({ ...state, dialog: true }))\n    setDialog(state => ({ ...state, assign: true }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['counter']}>\n        {selectStatus ? <Typography variant='subtitle2'>Total Batches Selected: {count} </Typography> : ''}\n      </div>\n      <div className={classes['buttons']}>\n        {!selectStatus ? (\n          <React.Fragment>\n            <Button\n              variant='contained'\n              color='primary'\n              id='btn-close'\n              className='button-negative'\n              onClick={() => handleOnClose()}\n            >\n              Close\n            </Button>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <div>\n              <Button\n                variant='contained'\n                disabled={count < 1}\n                color='primary'\n                id='btn-assign'\n                className='button-positive'\n                onClick={() => handleOnOpenDialog()}\n              >\n                Assign\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                id='btn-cancel'\n                className='button-negative'\n                onClick={() => handleOnCancel()}\n              >\n                Cancel\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n      <AssignDialog\n        handleOnSubmitReassign={handleOnSubmitReassign}\n        dropDownUsers={dropDownUsers}\n        dialog={dialog}\n        setDialog={setDialog}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Paper from '@material-ui/core/Paper'\n\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\n// Store\nimport { useSelector } from 'react-redux'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport ButtonFooter from './Components/ButtonFooter/ButtonFooter'\n\n// Styles\nimport classes from './CreatedBatchesPage.module.scss'\n\nexport default function CreatedBatchesPage (props) {\n  const [selectStatus, setSelectStatus] = React.useState(false)\n\n  const [headcell, setHeadCell] = React.useState([\n    { id: 's-batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'any' },\n    { id: 's-date-received', name: ' Date Received', sortField: 'date_received', match: 'date' },\n    { id: 's-due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n    { id: 's-total-rcs', name: ' Total No. of RCS', sortField: 'total_rcs', match: 'number' },\n    { id: 's-facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n  ])\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    // data: [],\n    filter: {},\n    orderBy: 'batch_number',\n    order: true,\n    rowsPerPageOptions: [10, 15, 20]\n  }\n\n  // const [viewList, setViewList] = React.useState(initialValue)\n\n  const [batch, setBatch] = React.useState({})\n  const [batches, setBatches] = React.useState(initialValue)\n  const [id, setId] = React.useState(null)\n  const [selected, setSelected] = React.useState({ batch_numbers: [] })\n  const reassign = useSelector(({ ClaimsEncoding: state }) => state.reassign)\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Created Batches')\n    BreadcrumbsService.setSelectedItems(['dashboard', `assigned:${props.match.params._id}`])\n    LoadingService.loading(true)\n\n    const _id = props.match.params._id\n    getBatches(batches)\n    setId(_id)\n  }, [props.match.params.id])\n\n  const getBatches = params => {\n    ClaimsEncoderSupervisorServices.getEncoderBatches({\n      id: props.match.params._id,\n      search: params.search,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      filter: params.filter,\n      limit: params.limit\n    })\n      .then(res => {\n        const { results = [], count, limit, page } = res.data.data\n        setBatches(state => ({ ...state, count, limit, page }))\n\n        const data = results.map(batch => ({ ...batch, checked: false }))\n\n        // if (data) setSelectStatus(false)\n        setSelected({ batch_numbers: [] })\n        setBatch({\n          data: data,\n          loading: false,\n          indeterminate: undefined,\n          checked: undefined\n        })\n        LoadingService.loading(false)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n  }\n\n  const handleSelectAll = event => {\n    let _batches = batch\n\n    if (_batches.data) {\n      _batches.data.map(i => {\n        i.checked = _batches.indeterminate ? true : !_batches.checked\n        return i\n      })\n    }\n\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const handleItemSelect = ({ batch, index }) => {\n    const _batches = {\n      ...batch,\n      data: batch.data.map((i, _index) => {\n        if (_index === index) i.checked = !i.checked\n        return i\n      })\n    }\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _batches = data || batches\n    let selected_count = 0\n    let batchNumbers = []\n    if (_batches.data) {\n      for (let b of _batches.data) {\n        if (b.checked) {\n          selected_count++\n          batchNumbers.push(b.batch_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batches.data.length : false\n    let checked = selected_count ? selected_count === _batches.data.length : false\n    _batches = { ..._batches, indeterminate, checked }\n    setBatch(_batches)\n\n    setSelected({ batch_numbers: batchNumbers })\n  }\n\n  const handleOnCancel = () => {\n    let _data = batch.data.map(i => ({ ...i, checked: false }))\n\n    setBatch(state => ({ ...state, data: _data, checked: false, indeterminate: undefined }))\n    setSelectStatus(false)\n    setSelected({ batch_numbers: [] })\n  }\n\n  const handleOnSubmitReassign = () => {\n    LoadingService.loading(true)\n    ClaimsEncoderSupervisorServices.reassign({\n      selected: selected.batch_numbers,\n      id: reassign.assignee.id,\n      notes: reassign.note,\n      prev_user: id\n    }).then(() => {\n      setSelected({ batch_numbers: [] })\n      getBatches(batches)\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnSearchAllChange = args => {\n    getBatches({ ...batches, ...args })\n  }\n\n  const handleOnSearch = args => {\n    const { field, value, match } = args\n    const params = {\n      ...batches,\n      filter: { [field]: { value, match } }\n    }\n    getBatches(params)\n  }\n\n  const handleOnPaginate = args => {\n    const params = {\n      ...batches,\n      ...args\n    }\n    setBatches(state => ({ ...state, ...args }))\n    getBatches(params)\n  }\n\n  const handleTableRenderer = type => {\n    if (type === 'headcell') {\n      return (\n        <TableRow>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox\n                color='default'\n                indeterminate={!!batch.indeterminate}\n                checked={!!batch.checked}\n                onClick={event => handleSelectAll()}\n              />\n            </TableCell>\n          ) : null}\n          {headcell.map(headCell => (\n            <TableCell key={headCell.sortField} id={headCell.id}>\n              <TableSortLabel\n                active={batches.orderBy === headCell.sortField}\n                direction={batches.order ? 'asc' : 'desc'}\n                onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !batches.order })}\n              >\n                {headCell.name}\n              </TableSortLabel>\n              <TextField\n                id={`column-filter-${headCell.id}`}\n                // className={`${classes.search}`}\n                TextFieldStyle={{ margin: 0 }}\n                fullWidth\n                onChange={event => {\n                  const search = event.target.value\n                  clearTimeout(debounce)\n                  setDebounce(\n                    setTimeout(() => {\n                      handleOnSearch({\n                        field: headCell.sortField,\n                        value: search,\n                        match: headCell.match\n                      })\n                    }, 500)\n                  )\n                }}\n              />\n            </TableCell>\n          ))}\n\n          <TableCell align='center' />\n        </TableRow>\n      )\n    } else if (type === 'body') {\n      return batch.data\n        ? batch.data.map((row, index) => (\n          <TableRow key={index}>\n            {selectStatus ? (\n              <TableCell padding='checkbox'>\n                <Checkbox\n                  checked={row.checked}\n                  color='default'\n                  onClick={event => handleItemSelect({ index, batch })}\n                />\n              </TableCell>\n            ) : null}\n            <TableCell id={`batch-number-${index}`}>{row.batch_number}</TableCell>\n            <TableCell id={`date-received-${index}`}>{DateFormatter(row.date_received)}</TableCell>\n            <TableCell id={`due-date-${index}`}>{DateFormatter(row.date_due)}</TableCell>\n            <TableCell align='center' id={`total-rcs-${index}`}>\n              {row.total_rcs}\n            </TableCell>\n            <TableCell id={`facility-name-${index}`}>{row.facility_name}</TableCell>\n            <TableCell id={`view-encoder-${index}`}>\n              <Typography\n                variant='caption'\n                className='text-link underline'\n                onClick={() => props.history.push(`/batches/assigned/${id}/${row.batch_number}`)}\n              >\n                  View\n              </Typography>\n            </TableCell>\n          </TableRow>\n        ))\n        : null\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <React.Fragment>\n          <div className={classes['search-container']}>\n            <div className={classes['reassign']}>\n              <Button\n                id='reassign-btn'\n                disabled={selectStatus}\n                // style={{ height: '48px', marginBottom: '17px' }}\n                variant='contained'\n                color='primary'\n                className='button-neutral'\n                onClick={() => {\n                  setSelectStatus(true)\n                }}\n              >\n                Reassign\n              </Button>\n            </div>\n            <div className={classes['search']}>\n              <SearchTextComponent\n                id='search'\n                onChange={e => {\n                  const search = e.target.value\n                  clearTimeout(debounce)\n                  setDebounce(\n                    setTimeout(() => {\n                      handleOnSearchAllChange({ search, page: 1 })\n                      setBatches(state => ({ ...state, search }))\n                    }, 500)\n                  )\n                }}\n                placeholder='Search for batch number, date or facility name'\n              />\n            </div>\n          </div>\n          <div className={classes['table-container']}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={handleTableRenderer('headcell')}\n              body={handleTableRenderer('body')}\n              count={batches.count}\n              page={batches.page}\n              limit={batches.limit}\n              pagination\n              rowsPerPageOptions={batches.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n              cesFooter\n            />\n          </div>\n\n          <ButtonFooter\n            selectStatus={selectStatus}\n            count={selected.batch_numbers.length ? selected.batch_numbers.length : 0}\n            handleOnSubmitReassign={handleOnSubmitReassign}\n            UserManagementServices={UserManagementServices}\n            handleOnCancel={() => handleOnCancel()}\n            handleOnClose={() => props.history.push(`/`)}\n            _id={id}\n          />\n        </React.Fragment>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\n// Components\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './BatchDetails.module.scss'\n\nexport default function BatchDetails (props) {\n  const { details = {} } = props\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-received' label='Date Received' readOnly value={DateFormatter(details.date.received)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='due-date' label='Due Date' readOnly value={DateFormatter(details.date.due)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-type' label='Claim Type' readOnly value={details.claim.type} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-source' label='Claim Source' readOnly value={details.claim.source} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-facility' label='Medical Partner ID' readOnly value={details.facility.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-facility'\n            label='Medical Partner Name (Facility)'\n            readOnly\n            value={details.facility.name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-doctor' label='Medical Partner ID' readOnly value={details.doctor.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-doctor'\n            label='Medical Partner Name (Doctor)'\n            readOnly\n            value={details.doctor.name}\n          />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-range-from' label='Date Range (From)' readOnly value={DateFormatter(details.date_from)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='date-range-to' label='Date Range (To)' readOnly value={DateFormatter(details.date_to)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='soa-number' label='SOA No.' readOnly value={details.soa.number} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Comments/Notes' readOnly value={details.notes} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextFieldCurrency id='batch-amount' label='Batch Amount' readOnly value={details.amount_billed} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='total-no-of-rcs' label='Total No. of RCS' readOnly value={details.total_rcs} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Reassign Notes' readOnly value={details.reassign_notes || ''} />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimListHeader.module.scss'\n\nexport default function ClaimListHeader (props) {\n  const { count, inputChange = null } = props\n  const handleChange = event => {\n    if (typeof inputChange === 'function') {\n      inputChange(event.target.value)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='subtitle2'>Claims ({count})</Typography>\n      </div>\n\n      <div className={classes.wrapper}>\n        <SearchTextComponent onChange={handleChange} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Services\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimList.module.scss'\n\nconst headCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'account-number', numeric: false, disablePadding: false, label: 'Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\n\nconst rows = []\n\nexport default function ClaimList ({ items, type, pagination, setPagination }) {\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [claims, setClaims] = React.useState([])\n\n  React.useEffect(() => {\n    setClaims({\n      data: items\n    })\n  }, [items])\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc'\n    setOrder(isDesc ? 'asc' : 'desc')\n    setOrderBy(property)\n  }\n\n  const handleItemClick = index => {}\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        handleRequestSort={handleRequestSort}\n        pagination={pagination}\n        rowsLength={rows.length}\n      >\n        <TableBody>\n          {claims.data &&\n            claims.data.map((row, index) => (\n              <TableRow tabIndex={-1} key={row.claim_number}>\n                <TableCell id={`claim-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.claim_number}\n                </TableCell>\n                <TableCell id={`loa-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.loa_number}\n                </TableCell>\n                <TableCell id={`approval-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.approval_code}\n                </TableCell>\n                <TableCell\n                  id={`member-name-${index}`}\n                  onClick={() => handleItemClick(index)}\n                >{`${row.member.first_name} ${row.member.last_name}`}</TableCell>\n                <TableCell id={`account-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.member.account_number}\n                </TableCell>\n\n                <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${DateFormatter(row.date.from)}`}\n                  {type === 'In Patient' && ` - ${DateFormatter(row.date.to)}`}\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from './Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from './Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from './Components/ClaimList/ClaimList'\n// import Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// import ProviderSchedule from '../../../ClaimsDetailsEncoder/Components/ProviderSchedule/ProviderSchedule'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n\n// Styles\nimport classes from './BatchPage.module.scss'\n\nexport default function BatchPage (props) {\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  const [details, setDetails] = React.useState()\n  const [claims, setClaims] = React.useState([])\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [debounce, setDebounce] = React.useState(null)\n  const [id, setId] = React.useState()\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        /*\n         * @returnData is the sanitized input string\n         * returned by the component ClaimsListHeader 's\n         * inputChange props\n         */\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  React.useEffect(() => {\n    getClaimsAndCount({ batch_number: props.match.params._batchNumber })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  const getClaimsAndCount = ({ batch_number }) => {\n    ClaimsEncoderSupervisorServices.getClaims({\n      batch_number,\n      params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n    }).then(res => {\n      const { results, count, page, limit } = res.data.data\n      setClaims(results)\n      setClaimCount(count)\n      setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n    })\n  }\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const batch_number = props.match.params._batchNumber\n    const _id = props.match.params._id\n    setId(_id)\n    setBatchNumber(batch_number)\n\n    ClaimsEncoderSupervisorServices.getEncoderBatch({ id: _id }, batch_number).then(res => {\n      const { data } = res.data\n\n      setDetails(data)\n      LoadingService.loading(false)\n\n      BreadcrumbsService.setSelectedItems(['dashboard', `assigned:${_id}`, `specificBatch:${batch_number}`])\n\n      PageTitleService(`Batch No. ${batch_number}`, {\n        text: 'In Progress',\n        color: 'blue'\n      })\n\n      getClaimsAndCount({ batch_number: batch_number })\n    })\n  }, [props.match.params._batchNumber, props.match.params._id])\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} />\n          <ClaimListHeader inputChange={handleSearchChange} count={claimCount} />\n          <ClaimList pagination={pagination} setPagination={setPagination} items={claims} type={details.claim.type} />\n\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={() => props.history.push(`/batches/assigned/${id}`)}\n              >\n                Close\n              </Button>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder Supervisor\nimport Dashboard from './../Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard'\nimport CreatedBatchesPage from './../Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage'\nimport BatchePage from './../Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage'\n\n// Pages of Claims Details Encoder\nimport BatchesPage from './../Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage'\nimport BatchPage from './../Components/ClaimsDetailsEncoder/BatchPage/BatchPage'\nimport ClaimPage from './../Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Batches',\n    icon: 'box-open',\n    to: '/batches'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  batches: {\n    text: 'Batches',\n    to: '/batches'\n  },\n  assigned: {\n    text: data => 'Created Batches',\n    to: data => `/batches/assigned/${data}`\n  },\n\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  addClaim: {\n    text: 'Add new claim',\n    to: ''\n  },\n  updateClaim: {\n    text: 'Update Claim',\n    to: ''\n  }\n}\n\nfunction ClaimsDetailsEncoderSupervisorRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batches' exact component={BatchesPage} />\n      <Route\n        path='/batches/:_batchNumber'\n        exact\n        render={props => <BatchPage {...props} apiService={ClaimsEncoderSupervisorServices} />}\n      />\n      <Route path='/batches/assigned/:_id' exact component={CreatedBatchesPage} />\n      <Route path='/batches/assigned/:_id/:_batchNumber' exact component={BatchePage} />\n      <Route\n        path='/batches/:_batchNumber/claims/add'\n        exact\n        render={props => <ClaimPage {...props} isAdd apiService={ClaimsEncoderSupervisorServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/:_claimNumber'\n        exact\n        render={props => <ClaimPage {...props} apiService={ClaimsEncoderSupervisorServices} />}\n      />\n    </Switch>\n  )\n}\n\nexport default ClaimsDetailsEncoderSupervisorRoutes\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport { Link } from 'react-router-dom'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList2 from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'latest.claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'latest.date.due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'latest.facility.name', match: 'any' }\n]\n\nconst ForAdjudicationTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [claims, setClaims] = React.useState({\n    open: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'open',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'open' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, open: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnAnalyze = claim_number => {\n    services.assignClaim({ claim_number }).then(({ data: res }) => {\n      props.history.push(`/claims/${claim_number}/analyze`)\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='for-adjudication'\n        count={{ color: 3, value: claims.open.count, id: 'for-adjudication-count' }}\n        sizes={sizes}\n        title='For Adjudication'\n        viewList={\n          <Typography\n            id='fa-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('open')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('open')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='fa-claim-no'>Claim No.</TableCell>\n              <TableCell id='fa-due-date'>Due Date</TableCell>\n              <TableCell id='fa-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.open.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  {/* { item.claim_number.startsWith('IP') && */}\n                  <Typography\n                    id={`analyze-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnAnalyze(item.claim_number)}\n                  >\n                    Analyze\n                  </Typography>\n                  {/* } */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList2\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`analyze-cell-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  id={`analyze-claim-${index}`}\n                  onClick={() => {\n                    handleOnAnalyze(item.claim_number)\n                  }}\n                >\n                  Analyze\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForAdjudicationTile.displayName = 'DashboardTileComponent'\n\nexport default ForAdjudicationTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList2 from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'latest.claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'latest.date.due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'latest.facility.name', match: 'any' }\n]\n\nconst MyClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    my: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'my',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'my' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, my: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='my-claims'\n        count={{ color: 3, value: claims.my.count, id: 'my-claims-count' }}\n        sizes={sizes}\n        title='My Claims'\n        viewList={\n          <Typography\n            id='mc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('my')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('my')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='mc-claim-no'>Claim No.</TableCell>\n              <TableCell id='mc-due-date'>Due Date</TableCell>\n              <TableCell id='mc-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.my.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`mc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`mc-facility-name${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  {/* { item.claim_number.startsWith('IP') && */}\n                  <Link to={`/claims/${item.claim_number}/analyze`}>\n                    <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                      Update\n                    </Typography>\n                  </Link>\n                  {/* } */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList2\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`update-cell-${index}`}>\n                <Link to={`/claims/${item.claim_number}/analyze`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-claim-${index}`}>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMyClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default MyClaimsTile\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\nimport PrintIcon from '@material-ui/icons/Print'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'latest.claim_number' },\n  { id: 'due-date', name: ' Due Date', sortField: 'latest.date.due' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ viewList, setViewList, onViewListChange, onItemClick }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map((row, index) => (\n            <TableRow key={row.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{row.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell\n                id={\n                  category === 'open'\n                    ? `analyze-claim-${index}`\n                    : category === 'my'\n                    ? `update-claim-${index}`\n                    : category === 'submitted'\n                    ? `print-${index}`\n                    : `update-esc-claim-${index}`\n                }\n              >\n                {category === 'submitted' && (\n                  <React.Fragment>\n                    <IconButton\n                      id={`print-${index}`}\n                      aria-label='more'\n                      aria-controls='long-menu'\n                      aria-haspopup='true'\n                      onClick={event =>\n                        onItemClick({ category, claim_number: row.claim_number, event: event, claim: row })\n                      }\n                    >\n                      <PrintIcon />\n                    </IconButton>\n                  </React.Fragment>\n                )}\n\n                {category !== 'submitted' && (\n                  <Typography\n                    variant='caption'\n                    className='text-link underline'\n                    onClick={() => onItemClick({ category, claim_number: row.claim_number })}\n                  >\n                    {category === 'open' && 'Analyze'}\n                    {category === 'my' && 'Update'}\n                    {category === 'escalated' && 'Update'}\n                  </Typography>\n                )}\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Print from '@material-ui/icons/Print'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst SubmittedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claimNumber, setClaimNumber] = React.useState(false)\n  const [claimType, setClaimType] = React.useState(null)\n  const [disableLoaButton, setDisableLoaButton] = React.useState(false)\n  const ITEM_HEIGHT = 48\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const open = Boolean(anchorEl)\n\n  function handleClickSubmitted (event, claim) {\n    setAnchorEl(event.currentTarget)\n    setClaimNumber(claim.claim_number)\n    setClaimType(claim._type)\n    setDisableLoaButton(!claim.has_amount_concerns)\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const [claims, setClaims] = React.useState({\n    submitted: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'submitted',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'submitted' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, submitted: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n    handleClickSubmitted(event, claim)\n  }\n\n  const handleOnShowPdf = ({ claim_number, type }) => {\n    setAnchorEl()\n\n    let pdf = {}\n\n    switch (type) {\n      case 'letter_of_advice':\n        pdf = {\n          name: 'Letter of Advice',\n          service: services.getLetterOfAdvice({ claimNo: claim_number })\n        }\n        break\n\n      case 'analysis_sheet':\n        pdf = {\n          name: 'Analysis Sheet',\n          service: services.getAnalysisSheet({ claimNo: claim_number })\n        }\n\n        break\n\n      case 'notice':\n        pdf = {\n          name: 'Claim Notice',\n          service: services.getLetterNotice({ claimNo: claim_number })\n        }\n        break\n    }\n\n    PdfViewer2Service({ ...pdf, open: true, fileName: type })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-claims'\n        count={{ color: 5, value: claims.submitted.count, id: 'submitted-claims-count' }}\n        sizes={sizes}\n        title='Submitted Claims'\n        viewList={\n          <Typography\n            id='sc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('submitted')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('submitted')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='sc-claim-no'>Claim No.</TableCell>\n              <TableCell id='sc-due-date'>Due Date</TableCell>\n              <TableCell id='sc-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.submitted.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`sc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`sc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`sc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <IconButton\n                    id={`print${index}`}\n                    aria-label='more'\n                    aria-controls='long-menu'\n                    aria-haspopup='true'\n                    onClick={e => handleClickSubmitted(e, item)}\n                  >\n                    <Print />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n            <Menu\n              id='long-menu'\n              anchorEl={anchorEl}\n              keepMounted\n              open={open}\n              onClose={handleClose}\n              style={{\n                zIndex: 1310\n              }}\n              PaperProps={{\n                style: {\n                  maxHeight: ITEM_HEIGHT * 4.5,\n                  width: claimType === 'Reimbursement' ? 280 : 200\n                }\n              }}\n            >\n              <MenuItem onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'analysis_sheet' })}>\n                {claimType === 'Reimbursement' ? 'Approved Reimbursement Letter' : 'Analysis Sheet'}\n              </MenuItem>\n              {/* {disableLoaButton ? ( */}\n              <MenuItem\n                disabled={disableLoaButton}\n                onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'letter_of_advice' })}\n              >\n                {claimType === 'Reimbursement' ? 'Rejected Reimbursement Letter' : 'Letter Of Advice'}\n              </MenuItem>\n            </Menu>\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedClaimsTile.displayName = 'DashboardTileComponent'\nexport default SubmittedClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst ReturnedEscalatedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    escalated: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'escalated',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'escalated' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, escalated: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'Returned Escalated Claims'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n    props.history.push(`/claims/${claim_number}/analyze`)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='returned-escalated'\n        count={{ color: 3, value: claims.escalated.count, id: 'returned-escalated-count' }}\n        sizes={sizes}\n        title='Returned Escalated Claims'\n        viewList={\n          <Typography\n            id='re-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('escalated')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('escalated')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='re-claim-no'>Claim No.</TableCell>\n              <TableCell id='re-due-date'>Due Date</TableCell>\n              <TableCell id='re-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.escalated.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`re-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`re-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`re-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`re-update-claim-${index}`}>\n                  <Link to={`/claims/${item.claim_number}/analyze`}>\n                    <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                      Update\n                    </Typography>\n                  </Link>\n                  {/* } */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nReturnedEscalatedClaimsTile.displayName = 'DashboardTileComponent'\nexport default ReturnedEscalatedClaimsTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from '../../Tiles/ForAdjudicationTile'\nimport MyClaimsTile from '../../Tiles/MyClaimsTile'\nimport SubmittedClaimsTile from '../../Tiles/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from '../../Tiles/ReturnedEscalatedClaimsTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForAdjudicationTile services={ClaimsAdjudicationServices} {...props} />\n            <MyClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <SubmittedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <ReturnedEscalatedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Analyst\nimport Dashboard from './../Components/ClaimsAnalyst/Dashboard/Dashboard'\n\n// Components\nimport ClaimsViewer from './../Components/ClaimsViewer'\nimport ClaimsUtilLedgerReport from './../Components/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  },\n  {\n    label: 'Reports',\n    icon: 'chart-bar',\n    type: 'popover',\n    child: [{ label: 'Generate Utilization Ledger', to: '/reports' }]\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  },\n  reports: {\n    text: 'Reports'\n  }\n}\n\nconst permissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  reimbursement_info: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 45000,\n          other_types: 5000\n        }\n      }\n    },\n    return_advice: { visible: true, enabled: true, options: {} },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nfunction ClaimsAnalystRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/reports' exact render={() => <ClaimsUtilLedgerReport />} />\n      <Route\n        path='/claims/:claim_number/analyze'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsAdjudicationServices}\n          />\n        )}\n      />\n    </Switch>\n  )\n}\n\nexport default ClaimsAnalystRoutes\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim.claim_number' },\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa_number' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name' }\n]\n\nconst ForPaymentRequestTile = props => {\n  const { services, sizes, mTitle } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'payment-request',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'payment-request' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const paymentRequestClaims = batchResponse.data.data.results\n      const paymentRequestClaimCount = batchCountResponse.data.data\n      setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'For Payment Request'\n    const category = 'payment-request'\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'payment-request'\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'payment-request',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='for-payment-request'\n        count={{ color: 3, value: claims.count, id: 'for-pr-count' }}\n        sizes={sizes}\n        title={!mTitle ? 'For Payment Request' : mTitle}\n        viewList={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList} id='for-pr-view-list'>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`for-pr-${item.id}`} id={`for-pr-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`for-pr-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`for-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n                <TableCell id={`for-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`for-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/payment-request/${item.bundle_number}`}>\n                    <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                      Request Payment\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`for-pr-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`for-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`for-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`for-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                    Request Payment\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForPaymentRequestTile.displayName = 'DashboardTileComponent'\n\nexport default ForPaymentRequestTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa_number' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name' }\n]\n\nconst SubmittedPaymentRequestTile = props => {\n  const { services, sizes, mTitle } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'submitted',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'submitted' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const paymentRequestClaims = batchResponse.data.data.results\n      const paymentRequestClaimCount = batchCountResponse.data.data\n      setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Submitted PR'\n    const category = 'submitted'\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'submitted'\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'submitted',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-pr'\n        count={{ color: 3, value: claims.count, id: 'submitted-pr-count' }}\n        sizes={sizes}\n        title={!mTitle ? 'Submitted PR' : mTitle}\n        viewList={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList} id='submitted-pr-view-list'>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`submitted-pr-${item.id}`} id={`submitted-pr-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`submitted-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n                <TableCell id={`submitted-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`submitted-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/payment-request/${item.bundle_number}/submitted`}>\n                    <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`submitted-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`submitted-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`submitted-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}/submitted`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedPaymentRequestTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedPaymentRequestTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim.claim_number' },\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa_number' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name' }\n]\n\nconst OverrideClaimTile = props => {\n  const { services, sizes } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'override',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'override' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const paymentRequestClaims = batchResponse.data.data.results\n      const paymentRequestClaimCount = batchCountResponse.data.data\n      setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Override Claim'\n    const category = 'override'\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'override'\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'override',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='override-claim'\n        count={{ color: 5, value: claims.count, id: 'override-claim-count' }}\n        sizes={sizes}\n        title='Override Claim'\n        viewAllLink={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList} id='for-pr-view-list'>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`oc-${item.id}`} id={`oc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell>{item.claim_number}</TableCell>\n                <TableCell>{item.soa.number || item.bundle_number}</TableCell>\n                <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/payment-request/${item.bundle_number}`}>\n                    <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                      Request Payment\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`oc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`oc-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`oc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`oc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                    Request Payment\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nOverrideClaimTile.displayName = 'DashboardTileComponent'\n\nexport default OverrideClaimTile\n","import instance from './instance'\nconst axios = instance('/c/pr')\n\nexport default class PaymentRequestServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getPaymentRequest ({ bundle_number }) {\n    return axios({\n      url: `/payment-request/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getPaymentRequestBatches ({ bundle_number, params }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static submit ({ bundle_number, data }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/submit`,\n      method: 'PUT',\n      data\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport SubmittedPaymentRequestTile from './../../../Components/Tiles/SubmittedPaymentRequestTile'\nimport OverrideClaimTile from './../../../Components/Tiles/OverrideClaimTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\n//\n// Styles\nimport classes from './Dashboard.module.scss'\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <OverrideClaimTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Button from '@material-ui/core/Button'\n\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// CSS\nimport classes from './PaymentRequestPage.module.scss'\n\nconst pendingHeadCells = [\n  { id: 'pending-batch-no', numeric: false, center: false, disablePadding: false, label: 'Batch No.' },\n  { id: 'pending-claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'pending-total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'pending-billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  {\n    id: 'pending-discount-amount',\n    numeric: true,\n    center: true,\n    disablePadding: false,\n    label: 'Hospital Discount Amount'\n  }\n]\nconst submittedHeadCells = [\n  { id: 'submitted-batch-no', numeric: false, center: false, disablePadding: false, label: 'Batch No.' },\n  { id: 'submitted-claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'submitted-total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'submitted-billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  {\n    id: 'submitted-discount-amount',\n    numeric: true,\n    center: true,\n    disablePadding: false,\n    label: 'Hospital Discount Amount'\n  }\n]\nexport default function PaymentRequestPage (props) {\n  const [bundle, setBundle] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n  const [dialog, setDialog] = React.useState({})\n\n  const [batches, setBatches] = React.useState({\n    pending: { data: [], header: {}, loading: true },\n    submitted: { data: [], header: {}, loading: true }\n  })\n\n  React.useEffect(() => {\n    const { bundle_number } = props.match.params\n\n    PageTitleService(`Request for Payment: ${bundle_number}`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'paymentRequest', `specificPaymentRequest:${bundle_number}`])\n\n    setBundleNumber(bundle_number)\n    PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBundle(data)\n      getBatches({ bundle_number, bundle: data })\n    })\n  }, [])\n\n  const getBatches = ({ bundle_number, bundle }) => {\n    // * Pending Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'pending' } }).then(\n      ({ data: res }) => resetBatches({ type: 'pending', data: res.data, bundle })\n    )\n\n    // * Submitted Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'submitted' } }).then(\n      ({ data: res }) => resetBatches({ type: 'submitted', data: res.data, bundle })\n    )\n  }\n\n  const resetBatches = ({ type, data, bundle }) => {\n    const total_batches = `${data.length} / ${bundle.total_batch}`\n    const total_rcs = `${data.reduce((acc, batch) => acc + batch.claims.length, 0)} / ${bundle.total_rcs}`\n\n    data = data.map(i => ({\n      ...i,\n      selected: false,\n      total_amount: i.claims.reduce((acc, claim) => acc + claim.utilization_amount, 0)\n    }))\n\n    const approved_amount = data.reduce((acc, batch) => acc + batch.total_amount, 0)\n\n    setBatches(state => ({\n      ...state,\n      [type]: {\n        ...state[type],\n        data,\n        header: {\n          total_batches,\n          total_rcs,\n          approved_amount,\n          pr_amount: 0\n        },\n        loading: false,\n        indeterminate: undefined,\n        checked: undefined\n      }\n    }))\n  }\n\n  const handleClick = ({ index, batches: selectedBatches }) => {\n    const _batch = {\n      ...batches[selectedBatches],\n      data: batches[selectedBatches].data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const handleSelectAllClick = ({ batches: selectedBatches }) => {\n    let _batch = batches[selectedBatches]\n\n    _batch.data.map(i => {\n      i.selected = _batch.indeterminate ? true : !_batch.checked\n      return i\n    })\n\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const changeSelectAllState = ({ batches: selectedBatches, data }) => {\n    let _batch = data || batches[selectedBatches]\n\n    let selected_count = 0\n    let pr_amount = 0\n    for (let b of _batch.data) {\n      if (b.selected) {\n        pr_amount += b.total_amount\n        selected_count++\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batch.data.length : false\n    let checked = selected_count ? selected_count === _batch.data.length : false\n\n    _batch = { ..._batch, indeterminate, checked, header: { ..._batch.header, pr_amount } }\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n  }\n\n  const handleOnSubmit = () => {\n    let selected = getSelectedPending(batches.pending.data)\n\n    if (!selected.length) {\n      return setDialog({\n        open: true,\n        // message: 'Please select a batch for submission to Treasury Department.',\n        message: 'User must select first a batch for submission.',\n        okLabel: 'Close',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    const onOk = () => {\n      LoadingService.loading(true)\n      setDialog(state => ({ ...state, open: false }))\n      const requestBatch = []\n\n      for (let select of selected) {\n        const claims = select.claims.map(claim => {\n          return claim.claim_number\n        })\n        requestBatch.push(PaymentRequestServices.submit({ bundle_number, data: { claims } }))\n      }\n\n      Promise.all(requestBatch).then(\n        ({ data: res }) => {\n          const data = batches.pending.data.filter((i, index) => {\n            let should_include = true\n            for (let s of selected) {\n              if (s.index === index) {\n                should_include = false\n                break\n              }\n            }\n            if (should_include) return i\n          })\n          resetBatches({ type: 'pending', data, bundle })\n          resetBatches({ type: 'submitted', data: [...selected, ...batches.submitted.data], bundle })\n          LoadingService.loading(false)\n        },\n        err => {\n          console.log(err)\n        }\n      )\n    }\n\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to submit?',\n      okLabel: 'Yes',\n      cancelLabel: 'No',\n      onCancel: () => setDialog(state => ({ ...state, open: false })),\n      onOk\n    })\n  }\n\n  const handleOnCancel = () => {\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to cancel?',\n      okLabel: 'Yes',\n      onOk: () => props.history.push(`/`),\n      cancelLabel: 'Close',\n      onCancel: () => setDialog(state => ({ ...state, open: false }))\n    })\n  }\n\n  const getSelectedPending = data => {\n    return data.filter((i, index) => {\n      if (i.selected) {\n        i.index = index\n        return i\n      }\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {bundle ? (\n        <React.Fragment>\n          <Paper className={classes['text-fields']}>\n            <Grid className={classes['sub-container']} container spacing={4}>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Bundle No.' id='bundle-number' value={bundle.bundle_number} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Total No. of RCS' id='total-rcs' value={bundle.total_rcs} />\n              </Grid>\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Date Received'\n                  id='date-received'\n                  value={DateFormatter(bundle.date.received)}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Due Date' id='date-due' value={DateFormatter(bundle.date.due)} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='SOA No.' id='soa-number' value={bundle.soa.number} />\n              </Grid>\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <TextFieldCurrency\n                  readOnly\n                  label='Total SOA Amount'\n                  id='total-soa'\n                  value={CurrencyFormatter(bundle.soa.amount)}\n                />\n              </Grid>\n\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='facility-id' value={bundle.facility.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Facility)'\n                  id='facility-name'\n                  value={bundle.facility.name}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='doctor-id' value={bundle.doctor.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Doctor)'\n                  id='doctor-name'\n                  value={bundle.doctor.name}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes.header}>Total Batches: {batches.pending.header.total_batches}</Typography>\n              <Typography className={classes.header}>Total RCS: {batches.pending.header.total_rcs}</Typography>\n              <Typography className={classes.header}>\n                Total Approved Amount: PHP{' '}\n                <span id='total-approved-amount'>{CurrencyFormatter(batches.pending.header.approved_amount)}</span>\n              </Typography>\n              <Typography className={classes.header}>\n                Total PR Amount: PHP{' '}\n                <span id='total-pr-amount'>{CurrencyFormatter(batches.pending.header.pr_amount)}</span>\n              </Typography>\n              <Typography className={classes.header}>\n                Total Discount Amount: PHP{' 0.00'}\n                {/* <span id='total-discount-amount'>{CurrencyFormatter(batches.pending.header.discount_amount)}</span> */}\n              </Typography>\n            </div>\n\n            <EnhancedTable\n              className={classes.table}\n              headCells={pendingHeadCells}\n              handleSelectAllClick={() => handleSelectAllClick({ batches: 'pending' })}\n              indeterminate={!!batches.pending.indeterminate}\n              checked={!!batches.pending.checked}\n              checkAll\n              checkboxColor='default'\n              selectStatus\n            >\n              <TableBody>\n                {batches.pending.data.map((batch, index) => {\n                  return (\n                    <TableRow\n                      onClick={event => handleClick({ index, batches: 'pending' })}\n                      role='checkbox'\n                      tabIndex={-1}\n                      key={`${batch.batch_number}-${index}`}\n                    >\n                      <TableCell padding='checkbox'>\n                        <Checkbox checked={batch.selected} color='default' />\n                      </TableCell>\n                      <TableCell align='left' id={`pending-batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`pending-claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell\n                        align='center'\n                        id={`pending-total-rcs-${index}`}\n                      >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                      <TableCell align='right' id={`pending-billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`pending-discount-amount-${index}`}>\n                        {/* {CurrencyFormatter(batch.discoun_amount)} */}\n                        0.00\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n                {!batches.pending.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n          <div className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              onClick={handleOnCancel}\n              id='cancel'\n            >\n              Cancel\n            </Button>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={handleOnSubmit}\n              id='submit'\n            >\n              Submit\n            </Button>\n          </div>\n\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes['submit-header']}>Submitted Batches</Typography>\n            </div>\n            <EnhancedTable className={classes.table} headCells={submittedHeadCells}>\n              <TableBody>\n                {batches.submitted.data.map((batch, index) => {\n                  return (\n                    <TableRow\n                      // hover\n                      tabIndex={-1}\n                      key={`${batch.batch_number}-${index}`}\n                    >\n                      <TableCell align='left' id={`submitted-batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`submitted-claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell\n                        align='center'\n                        id={`submitted-total-rcs-${index}`}\n                      >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                      <TableCell align='right' id={`submitted-billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`submitted-discount-amount-${index}`}>\n                        {/* {CurrencyFormatter(batch.discount_amount)} */}\n                        0.00\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n                {!batches.submitted.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom'\n\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\n\n// CSS\nimport classes from './SubmittedPaymentRequestPage.module.scss'\n\nconst headCells = [\n  { id: 'batch-no', numeric: false, center: true, disablePadding: false, label: 'Batch No.' },\n  { id: 'claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'billed-amount', numeric: false, center: true, disablePadding: false, label: 'Billed Amount' },\n  { id: 'discount-amount', numeric: false, center: true, disablePadding: false, label: 'Hospital Discount Amount' }\n]\n\nconst prManagerheadCells = [\n  { id: 'batch-no', numeric: false, center: true, disablePadding: false, label: 'Batch No.' },\n  { id: 'claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'billed-amount', numeric: false, center: true, disablePadding: false, label: 'Billed Amount' },\n  { id: 'discount-amount', numeric: false, center: true, disablePadding: false, label: 'Hospital Discount Amount' },\n  { id: 'view-link', numeric: false, disablePadding: false, label: '' }\n]\n\nexport default function PaymentRequestPage (props) {\n  const { supervisor, isManager } = props\n  const [bundle, setBundle] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n\n  const [batches, setBatches] = React.useState({\n    submitted: { data: [], header: {} }\n  })\n\n  React.useEffect(() => {\n    const { bundle_number } = props.match.params\n    PageTitleService(`Submmited PR: ${bundle_number}`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'paymentRequest', `specificPaymentRequest:${bundle_number}`])\n\n    setBundleNumber(bundle_number)\n    PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBundle(data)\n      getBatches({ bundle_number, bundle: data })\n    })\n  }, [])\n\n  const getBatches = ({ bundle_number, bundle }) => {\n    // * Submitted Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'submitted' } }).then(\n      ({ data: res }) => resetBatches({ type: 'submitted', data: res.data, bundle })\n    )\n  }\n\n  const resetBatches = ({ type, data, bundle }) => {\n    const total_batches = data.length\n    const total_rcs = data.reduce((acc, batch) => acc + batch.claims.length, 0)\n\n    data = data.map(i => ({\n      ...i,\n      total_amount: i.claims.reduce((acc, claim) => acc + claim.utilization_amount, 0)\n    }))\n\n    const approved_amount = data.reduce((acc, batch) => acc + batch.total_amount, 0)\n\n    setBatches(state => ({\n      ...state,\n      [type]: {\n        ...state[type],\n        data,\n        header: {\n          total_batches,\n          total_rcs,\n          pr_amount: approved_amount\n        }\n      }\n    }))\n  }\n  const approved_by_uid = bundle ? bundle.approved_by_uid : ''\n\n  return (\n    <div className={classes.root}>\n      {bundle && approved_by_uid ? (\n        <React.Fragment>\n          <Paper className={classes['text-fields']}>\n            <Grid className={classes['sub-container']} container spacing={4}>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Bundle No.' id='bundle-number' value={bundle.bundle_number} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Total No. of RCS' id='total-rcs' value={bundle.total_rcs} />\n              </Grid>\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Date Received'\n                  id='date-received'\n                  value={DateFormatter(bundle.date.received)}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Due Date' id='date-due' value={DateFormatter(bundle.date.due)} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='SOA No.' id='soa-number' value={bundle.soa.number} />\n              </Grid>\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <TextFieldCurrency\n                  readOnly\n                  label='Total SOA Amount'\n                  id='total-soa'\n                  value={CurrencyFormatter(bundle.soa.amount)}\n                />\n              </Grid>\n\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='facility-id' value={bundle.facility.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Facility)'\n                  id='facility-name'\n                  value={bundle.facility.name}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='doctor-id' value={bundle.doctor.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Doctor)'\n                  id='doctor-name'\n                  value={bundle.doctor.name}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes.header} align='center'>\n                Total Batches: {batches.submitted.header.total_batches}\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total RCS: {batches.submitted.header.total_rcs}\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total PR Amount: PHP{' '}\n                <span id='total-pr-amount'>{CurrencyFormatter(batches.submitted.header.pr_amount)}</span>\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total Discount Amount: PHP{' 0.00'}\n                {/* <span id='total-discount-amount'>{CurrencyFormatter(batches.submitted.header.discount_amount)}</span> */}\n              </Typography>\n            </div>\n\n            <EnhancedTable className={classes.table} headCells={!isManager ? headCells : prManagerheadCells}>\n              <TableBody>\n                {batches.submitted.data.map((batch, index) => {\n                  return (\n                    <TableRow>\n                      <TableCell align='center' id={`batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell align='center' id={`total-rcs-${index}`}>\n                        {batch.claims.length}\n                      </TableCell>\n                      <TableCell align='right' id={`billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`discount-amount-${index}`}>\n                        {/* {CurrencyFormatter(batch.discount_amount)} */}\n                        0.00\n                      </TableCell>\n                      {isManager && (\n                        <TableCell align='right' id={`discount-amount-${index}`}>\n                          <Link\n                            // to={`/payment-requests/${item.id}/list`}\n                            to={`/payment-request/${bundle_number}/submitted/${batch.batch_number}`}\n                          >\n                            <Typography\n                              variant='caption'\n                              className={`text-link underline`}\n                              id={`submmited-pr-${index}`}\n                            >\n                              View\n                            </Typography>\n                          </Link>\n                        </TableCell>\n                      )}\n                    </TableRow>\n                  )\n                })}\n                {!batches.submitted.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n          <div className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              onClick={() =>\n                supervisor || isManager\n                  ? props.history.push(`/payment-requests/${approved_by_uid}/list`)\n                  : props.history.push('/')\n\n              }\n              id='cancel'\n            >\n              Close\n            </Button>\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Payment Request Officer\nimport Dashboard from './../Components/PaymentRequest/Dashboard/Dashboard'\nimport PaymentRequestPage from './../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  }\n}\n\nfunction PaymentRequestRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n      <Route path='/payment-request/:bundle_number/submitted' exact component={SubmittedPaymentRequestPage} />\n    </Switch>\n  )\n}\n\nexport default PaymentRequestRoutes\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\nconst columns = [\n  { id: 'approved-by', name: 'PR Processor', sortField: 'approved_by', match: 'start' },\n  { id: 'total-bundles', name: 'Total Bundle/SOA', sortField: 'total_bundles', match: 'any' },\n  { id: 'total-batches', name: 'Total Batches', sortField: 'total_batches', match: 'any' }\n]\n\nconst SubmittedPrSupervisorTile = props => {\n  const { services, sizes } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([services.getSubmittedPaymentRequest({ limit: 10, sort: '' }), services.getBundleCount()]).then(\n      values => {\n        const bundleResponse = values\n        const submittedRequestClaims = bundleResponse[0].data.data.results\n        const submittedRequestClaimCount = bundleResponse[1].data.data\n        setClaims({ data: submittedRequestClaims, count: submittedRequestClaimCount })\n      }\n    )\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Submitted PR'\n    const category = 'submitted'\n    setViewList({ ...initialValue, show: true, title, category })\n\n    services.getSubmittedPaymentRequest({ limit: 10, sort: '' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page, category }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getSubmittedPaymentRequest(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page, category: 'submitted' }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-pr'\n        count={{ color: 3, value: claims.count, id: 'submitted-claim-count' }}\n        sizes={sizes}\n        title='Submitted PR'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-pr-view-list'\n          >\n            View List\n          </Typography>\n        }\n        isFilterShown={false}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell>PR Processor</TableCell>\n              <TableCell>Total Bundle/SOA</TableCell>\n              <TableCell>Total Batches</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`approved-by-${index}`}>{item.verifierName}</TableCell>\n                <TableCell id={`total-bundles-${index}`}>{item.total_bundles}</TableCell>\n                <TableCell id={`total-batches-${index}`}>{item.total_batches}</TableCell>\n                <TableCell>\n                  <Link to={`/payment-requests/${item.id}/list`}>\n                    <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for PR Processor'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`approved-by-${index}`}>{item.verifierName}</TableCell>\n              <TableCell id={`total-bundles-${index}`}>{item.total_bundles}</TableCell>\n              <TableCell id={`total-batches-${index}`}>{item.total_batches}</TableCell>\n              <TableCell>\n                <Link to={`/payment-requests/${item.id}/list`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedPrSupervisorTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedPrSupervisorTile\n","import instance from './instance'\nconst axios = instance('/c/prs')\n\nexport default class PaymentRequestServices {\n  static getBundleCount () {\n    return axios({\n      url: `/payment-requests/submitted/count`,\n      method: 'GET'\n    })\n  }\n\n  static getSubmittedPaymentRequest (params) {\n    return axios({\n      url: `/payment-requests/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getPaymentRequestBundles ({ processor_id }, params) {\n    return axios({\n      url: `/payment-requests/${processor_id}/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport SubmittedPrSupervisorTile from './../../../Components/Tiles/SubmittedPrSupervisorTile'\nimport OverrideClaimTile from './../../../Components/Tiles/OverrideClaimTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\nimport PaymentRequestSupervisorServices from 'Services/Api/PaymentRequestSupervisorServices'\n\n//\n// Styles\nimport classes from './Dashboard.module.scss'\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ sm: 12 }}>\n            <ForPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedPrSupervisorTile services={PaymentRequestSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <OverrideClaimTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={8} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestSupervisorServices from 'Services/Api/PaymentRequestSupervisorServices'\n\n// CSS\nimport classes from './SubmittedPaymentRequestList.module.scss'\n\n// UTIL\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'bundle-number', name: 'Bundle/SOA No.', sortField: 'bundle_number', match: 'any' },\n  { id: 'date-received', name: 'Date Recieved', sortField: 'date.received', match: 'date' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date.due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nexport default function PaymentRequestPage (props) {\n  const processor_id = props.match.params.pr_officer\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'date.due',\n    order: true,\n    sort: 'date.due|desc'\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Submitted PR')\n    BreadcrumbsService.setSelectedItems(['dashboard', 'submittedPaymentRequest'])\n\n    PaymentRequestSupervisorServices.getPaymentRequestBundles({ processor_id }, initialValue).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }, [])\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    handleOnViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    PaymentRequestSupervisorServices.getPaymentRequestBundles({ processor_id }, _params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        handleOnViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSearchColumn = args => {\n    const { field, value, match } = args\n    setViewList(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnViewListChange({ filter: { ...viewList.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <div className={classes.root}>\n      {viewList.data ? (\n        <React.Fragment>\n          <div className={classes.search}>\n            <SearchTextComponent\n              id='search'\n              onChange={handleSearchChange}\n              placeholder='Search for Bundle Number, Date or Facility Name'\n            />\n          </div>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCells.map(headCell => (\n                    <TableCell key={headCell.sortField} id={headCell.id}>\n                      <TableSortLabel\n                        active={viewList.orderBy === headCell.sortField}\n                        direction={viewList.order ? 'asc' : 'desc'}\n                        onClick={handleOnSort(headCell.sortField)}\n                      >\n                        {headCell.name}\n                      </TableSortLabel>\n                      <TextField\n                        id={`column-filter-${headCell.id}`}\n                        // className={`${classes.search}`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnSearchColumn({\n                                field: headCell.sortField,\n                                value: search,\n                                match: headCell.match\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </TableCell>\n                  ))}\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                <React.Fragment>\n                  {viewList.data.map((row, index) => (\n                    <TableRow key={`${row.claim_number}-${index}`}>\n                      <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n                      <TableCell id={`date-received-${index}`}>{DateFormatter(row.date.received)}</TableCell>\n                      <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n                      <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n                      <TableCell>\n                        <Link to={`/payment-request/${row.bundle_number}/submitted`}>\n                          <Typography variant='caption' className={`text-link underline`}>\n                            View\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </React.Fragment>\n              }\n              count={viewList.count}\n              page={viewList.page}\n              limit={viewList.limit}\n              rowsPerPageOptions={[10, 15, 20]}\n              onChange={handleOnViewListChange}\n            />\n          </div>\n          <div align='right' className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              id='cancel'\n              onClick={() => props.history.push(`/`)}\n            >\n              Close\n            </Button>\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Payment Request Officer\nimport PaymentRequestPage from '../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\n\n// Pages of Payment Request Officer Supervisor\nimport Dashboard from './../Components/PaymentRequestSupervisor/Dashboard/Dashboard'\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\nimport SubmittedPaymentRequestList from './../Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  }\n}\n\nfunction PaymentRequestRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n      <Route path='/payment-request/:bundle_number/submitted' exact render={props => (<SubmittedPaymentRequestPage supervisor {...props} />)} />\n      <Route path='/payment-requests/:pr_officer/list' exact component={SubmittedPaymentRequestList} />\n    </Switch>\n  )\n}\n\nexport default PaymentRequestRoutes\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { name: 'Claim Number', sortField: 'latest.claim_number' },\n  { name: 'Due Date', sortField: 'latest.date.due' },\n  { name: 'Medical Partner Name (Facility)', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ viewList, setViewList, onViewListChange }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map(row => (\n            <TableRow key={row.claim_number}>\n              <TableCell>{row.claim_number}</TableCell>\n              <TableCell>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell>{row.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/claims/review/${row.claim_number}`}>\n                  <Typography variant='caption' className={`text-link underline`}>\n                    Review\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport MedicalConsultantServices from 'Services/Api/MedicalConsultantServices'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [claims, setClaims] = React.useState({\n    for_review: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* For Claims\n    Promise.all([\n      MedicalConsultantServices.getClaims({\n        category: 'for-review',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      MedicalConsultantServices.getClaimCount({ category: 'for-review' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, for_review: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    MedicalConsultantServices.getClaims({\n      category,\n      range: value,\n      limit: 10,\n      sort: 'latest.due.date|desc'\n    }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/review/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'for_review') title = 'For Review'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    MedicalConsultantServices.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    MedicalConsultantServices.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'for_review') handleOnReview(claim_number)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              count={{ color: 3, value: claims.for_review.count }}\n              sizes={{ sm: 12 }}\n              title='Escalated Claims'\n              viewList={\n                <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList('for-review')}>\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('for_review')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Claim No.</TableCell>\n                    <TableCell>Due Date</TableCell>\n                    <TableCell>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {claims.for_review.data.map((item, index) => (\n                    <TableRow key={item.claim_number}>\n                      <TableCell>{item.claim_number}</TableCell>\n                      <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Typography\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => handleOnReview(item.claim_number)}\n                        >\n                          Review\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {claims.ticket.data.map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './../Components/MedicalConsultant/Dashboard/Dashboard'\n// Component\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport MedicalConsultantServices from 'Services/Api/MedicalConsultantServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  review: {\n    text: 'Review',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: true,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    communication: {\n      create: true,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nfunction MedicalConsultantRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'review']}\n            {...props}\n            permissions={permissions}\n            ApiService={MedicalConsultantServices}\n          />\n        )}\n      />\n    </Switch>\n  )\n}\n\nexport default MedicalConsultantRoutes\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForReconciliationClaimsTile services={ClaimsReconServices} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","/**\n * Graph Color Theme\n */\nconst theme = {\n  InPatient: '#EDEDED',\n  OutPatientProcedure: '#DEDEDE',\n  OutPatientConsultation: '#9EA3AC',\n  Reimbursement: '#0D5E40',\n  Emergency: '#FAB435',\n  Dental: '#8034AD',\n  MedicineAllowance: '#1AB1C4',\n  APE: '#3AB77D',\n  ECU: '#FD5451',\n  Pharmacy: '#62FFB7',\n  PPE: '#1E2071',\n  MedicalSupplies: '#E6A8E4',\n  ClinicManagement: '#66AFBE'\n}\nexport default theme\n","const mockData = [\n  { description: 'In Patient', type: 'InPatient' },\n  { description: 'Out Patient Procedure', type: 'OutPatientProcedure' },\n  { description: 'Out Patient Consultation', type: 'OutPatientConsultation' },\n  { description: 'Reimbursement', type: 'Reimbursement' },\n  { description: 'Emergency', type: 'Emergency' },\n  { description: 'Dental', type: 'Dental' },\n  { description: 'Medicine Allowance', type: 'MedicineAllowance' },\n  { description: 'APE', type: 'APE' },\n  { description: 'ECU', type: 'ECU' },\n  { description: 'Pharmacy', type: 'Pharmacy' },\n  { description: 'PPE', type: 'PPE' },\n  { description: 'Medical Supplies', type: 'MedicalSupplies' },\n  { description: 'Clinic Management', type: 'ClinicManagement' }\n]\n\nexport default mockData\n","const months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\n\nexport default months\n","import React from 'react'\n\nimport moment from 'moment'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Paper from '@material-ui/core/Paper'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Select from '@material-ui/core/Select'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// import ClaimsUtilLedgerReport from '../ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\nimport Utilization from '../ClaimsViewer/Components/Utilization/Utilization'\n\n// Services\nimport ArrayToCSV from 'Services/ArrayToCSV'\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\n\n// Utility\nimport { DateFormatter, LargeNumberFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './style/UtilizationReport.module.scss'\nimport theme from './style/theme'\n\n// Data\nimport legend from './data/legend'\n\n// Config\nimport months from './config/months'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\nconst clientColumns = [\n  { label: 'Type', data: 'type', search: true, match: 'any' },\n  { label: 'Total Amount', data: 'total_amount', search: true, match: 'number' },\n  { label: 'Number of Cases', data: 'cases', search: true, match: 'number' },\n  { label: 'Availed By Principals', data: 'availed_by_principals', search: true, match: 'number' },\n  { label: 'Availed By Dependents', data: 'availed_by_dependents', search: true, match: 'number' }\n]\n\n// const memberDataColumns = [\n//   'loa_number',\n//   'approval_code',\n//   'claim_number',\n//   'diagnosis',\n//   'procedures.description',\n//   'facility_id'\n// ]\nconst memberDataColumns = ['claim_no', 'diagnosis', 'procedures', 'provider']\n\nexport default function UtilizationReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'type',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n  const [reportType, setReportType] = React.useState('client')\n\n  /**\n   * initial -> initialized on generate report\n   * actual -> data displayed on the graph\n   * initial is retained as reference for filtering\n   *  graph data to refrain from making api calls\n   */\n  const [graphData, setGraphData] = React.useState({\n    initial: [],\n    actual: []\n  })\n\n  const [graph, setGraph] = React.useState({\n    utilized: 0,\n    ibnr: 0,\n    total: 0\n  })\n\n  const [graphFilter, setGraphFilter] = React.useState('all')\n  // const [refreshMemberReport, doRefreshMemberReport] = React.useState(0)\n  const [client, setClient] = React.useState({ name: '--', account_no: '' })\n  const [member, setMember] = React.useState({})\n  const [utilizationLoa, setUtilizationLoa] = React.useState({})\n  const [memberFetchStatus, setMemberFetchStatus] = React.useState('')\n\n  React.useEffect(() => {\n    PageTitleService('Utilization Report')\n    BreadcrumbsService.setSelectedItems(['utilization'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchTable()\n    // Watch filter items\n\n    // [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page]\n  }, [reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  React.useEffect(() => {\n    /**\n     * Handle Graph Filtering\n     * Also Handles Initial Data\n     */\n    let newData\n    if (graphFilter === 'all') {\n      // Returns all data after being processed for percentage count\n      newData = graphData.initial.map(data => {\n        const newChild = data.claims.map(child => ({ ...child, percentage: getPercentage(child.total_amount) }))\n        return { ...data, claims: newChild }\n      })\n    } else {\n      // Returns selected data after being processed for percentage count\n      newData = graphData.initial.map(data => {\n        let childContainer = []\n        data.claims.map(child => {\n          if (child.claim_type === graphFilter) {\n            childContainer.push({ ...child, percentage: getPercentage(child.total_amount) })\n          }\n        })\n        return { ...data, claims: childContainer }\n      })\n    }\n\n    setGraphData(p => ({ ...p, actual: newData }))\n  }, [graphFilter, graphData.initial])\n\n  const fetchCSV = () => {\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        /**\n         * Disabled: Change to dynamic mapping\n         *  if ever needed to print cvs\n         */\n        // return columns.map(col => {\n        //   if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n        //   return formatData({ type: col.type, source: report, field: col.data })\n        // })\n      })\n\n      // const header = columns.map(c => c.label)\n\n      // ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n    })\n  }\n\n  const fetchReport = () => {\n    if (reportType === 'member') {\n      getMember(reports.search)\n      // doRefreshMemberReport(refreshMemberReport + 1)\n      return\n    }\n\n    if (reports.search === '') return\n    LoadingService.loading(true)\n    Promise.all([\n      ClaimsServices.utilizationClient({\n        search: reports.search,\n        range: reports.range,\n        filter: reports.filter,\n        sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n        page: reports.page,\n        limit: reports.limit,\n        type: graphFilter\n      }),\n      ClaimsReconServices.getClientUtilization({ client_account_no: reports.search }),\n      CustomerCareServices.getClientUtilizationLoa({client_account_no: reports.search})]).then(res => {\n      const [graphClientRes, clientUtilRes, clientUtilLoaRes] = res\n      const { data: graph } = graphClientRes.data\n      const { data: utilAmount } = clientUtilRes.data\n      const { data: loaAmount } = clientUtilLoaRes.data\n\n      // Total limit is just a placeholder, waiting for the endpoint // dirty fix\n      setGraph(state => ({ ...state, total: graph.client.name !== 'Client Not found' ? 1000000 : 0, utilized: utilAmount.total_utilization_amount || 0, ibnr: loaAmount.total_ibnr_amount || 0 }))\n      setGraphData(p => ({ ...p, initial: graph.results }))\n      setClient(state => ({ ...state, name: graph.client.name, account_no: graph.client.account_number }))\n      fetchTable()\n    }).catch(err => console.error(`Error Fetching Data: ${err}`))\n  }\n\n  React.useEffect(() => {}, [graph])\n\n  // Fetching table\n  const fetchTable = () => {\n    ClaimsServices.utilizationClientTable({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { results = [], page, count, limit } = res.data.data\n\n      setReports(state => ({ ...state, data: results, count, page, limit }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n      }, 500)\n    )\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = event => {\n    // /*\n    //  * Debounce for searching through\n    //  * SearchTextComponent\n    //  */\n    const search = event.target.value\n    setReports(state => ({ ...state, search }))\n    // clearTimeout(debounce)\n    // setDebounce(\n    // setTimeout(() => {\n    //   }, 500)\n    // )\n  }\n\n  const handleReportType = args => {\n    setReportType(args.target.value)\n  }\n\n  const generateGraph = args => {\n    /**\n     * style={{ bottom: `${data.percentage === '100%' ? '80%' : data.percentage}` }}\n     * -Prevents tooltip/popover description to display above the chart\n     */\n    return (\n      <div className={classes['graph-container']}>\n        <div className={classes['bar-chart-wrapper']}>\n          {args.map((data, index) => (\n            <div className={classes['bar-chart']}>\n              <div\n                className={classes.graph}\n                style={{ height: `${data.percentage}`, background: theme[data.claim_type] }}\n              >\n                {''}\n              </div>\n              <div\n                className={classes.tooltip}\n                style={{ bottom: `${data.percentage === '100%' ? '80%' : data.percentage}` }}\n              >\n                {`${LargeNumberFormatter(data.total_amount / 1000).toString()}K`}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n\n  const getPercentage = (args = 0) => {\n    // Returns argument on percentage scale\n    const result = (args / 250000) * 100\n    // Set maximum percentage to 100%\n    return `${result > 100 ? 100 : result}%`\n  }\n\n  const handleGraphFilter = args => {\n    // Triggers the filter watch function\n    setGraphFilter(args)\n  }\n\n  const getMember = account_number => {\n    CustomerCareServices.getMemberUtilizationLoa({ account_number: account_number }).then(res => {\n      const { data } = res.data\n      setUtilizationLoa(data)\n    })\n    setMemberFetchStatus('fetching')\n    CustomerCareServices.getMember({ account_number: account_number })\n      .then(res => {\n        const { data } = res.data\n        setMemberFetchStatus('success')\n        setMember(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setMemberFetchStatus(`${data.status}`)\n      })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Report Type:</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <RadioGroup className={classes['radio-group']} value={reportType} onChange={handleReportType}>\n                <div className={classes['radio-container']}>\n                  <p>Corporate Client</p> <Radio color='primary' value='client' />\n                </div>\n                <div className={classes['radio-container']}>\n                  <p> Member </p> <Radio color='primary' value='member' />\n                </div>\n              </RadioGroup>\n            </div>\n          </div>\n        </div>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              value={reports.search}\n              onChange={handleSearchChange}\n              placeholder={reportType == 'client' ? `Search for Client ID or Client Name` : `Search for Member ID`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.header}>\n        <Typography variant='h6'>Utilization Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='ledger-filter-date-from'\n                value={reports.range.from}\n                onChange={event => {\n                  setReports(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: DateFormatter(event)\n                    }\n                  }))\n                }}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='ledger-filter-date-to'\n                value={reports.range.to}\n                onChange={event => {\n                  setReports(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: DateFormatter(event)\n                    }\n                  }))\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                fetchReport()\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Generate\n            </Button>\n          </div>\n        </div>\n      </div>\n      <hr />\n      {reportType && reportType === 'client' && (\n        // TODO\n        /**\n         * Header-report:\n         * -Waiting for data\n         */\n        <div className={classes.body}>\n          <Typography variant='h6'>{client.name}</Typography>\n          <div className={classes['header-report']}>\n            <div className={classes['report-primary']}>\n              <div className={classes.title}>Annual Benefit Limit</div>\n              <Typography variant='h6'>{`PHP ${CurrencyFormatter(graph.total)}`}</Typography>\n            </div>\n            <div className={classes['report-details']}>\n              {graph.total ? <div className={classes.graph}>\n                <div className={classes.item} style={{ background: '#00a896', width: `${(graph.utilized / graph.total) * 100}%` }}>\n                  {''}\n                </div>\n                <div className={classes.item} style={{ background: '#606c38', width: `${(graph.ibnr / graph.total) * 100}%` }}>\n                  {''}\n                </div>\n                <div className={classes.item} style={{ background: '#e63946',\n                  width: `${\n                    ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100 < 0\n                      ? 0\n                      : ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100\n                  }%` }}>\n                  {''}\n                </div>\n              </div> : null}\n              <div className={classes.legend}>\n                <div className={classes.item}>\n                  <div className={classes['header-data']}>\n                    <div className={classes.mark} style={{ background: '#00a896' }}>\n                      {''}\n                    </div>\n                    <div className={classes.text} style={{ color: '#00a896' }}>\n                      utilized\n                    </div>\n                  </div>\n                  <div className={classes.details}>{`PHP ${CurrencyFormatter(graph.utilized)}`}</div>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes['header-data']}>\n                    <div className={classes.mark} style={{ background: '#606c38' }}>\n                      {''}\n                    </div>\n                    <div className={classes.text} style={{ color: '#606c38' }}>\n                      ibnr\n                    </div>\n                  </div>\n                  <div className={classes.details}>{`PHP ${CurrencyFormatter(graph.ibnr)}`}</div>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes['header-data']}>\n                    <div className={classes.mark} style={{ background: '#e63946' }}>\n                      {''}\n                    </div>\n                    <div className={classes.text} style={{ color: 'e63946' }}>\n                      available\n                    </div>\n                  </div>\n                  <div className={classes.details}>{`PHP ${CurrencyFormatter(graph.total - graph.ibnr - graph.utilized)}`}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <Typography variant='h6'>Utilization Summary</Typography>\n          <div className={classes.filter} style={{ textAlign: 'right' }}>\n            <span>\n              <FormControl>\n                <Select\n                  className={classes['select']}\n                  value={graphFilter}\n                  onChange={e => handleGraphFilter(e.target.value)}\n                >\n                  <MenuItem value={'all'}>\n                    <Typography className={classes.input}>All Types</Typography>\n                  </MenuItem>\n                  {legend.map(data => (\n                    <MenuItem value={data.type}>\n                      <Typography className={classes.input}>{data.description}</Typography>\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </span>\n          </div>\n          <div className={classes['graph-legend']}>\n            <div className={classes['legend-wrapper']}>\n              {legend.map(data => (\n                <div className={classes['legend-group']}>\n                  <div className={classes['legend']} style={{ background: theme[data.type] }}>\n                    {''}\n                  </div>\n                  <div className={classes['description']}>{data.description}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className={classes['graph-reports']}>\n            <div className={classes['graph-plot']}>\n              <div className={classes['plot-items']}>250k</div>\n              <div className={classes['plot-items']}>150k</div>\n              <div className={classes['plot-items']}>100k</div>\n              <div className={classes['plot-items']}>50k</div>\n              <div className={classes['plot-items']}>0</div>\n            </div>\n            {graphData.actual.map(data => (\n              <div className={classes['graph-group']}>\n                {generateGraph(data.claims)}\n                <div className={classes['graph-category']}>\n                  {months[data.month]} {graphData.actual && graphData.actual.length >= 12 ? data.year : ''}\n                </div>\n              </div>\n            ))}\n          </div>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{\n                style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n              }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {clientColumns.map((headCell, index) => (\n                    <TableCell key={`table-header-${index}`}>\n                      <TableSortLabel\n                        active={reports.orderBy === headCell.data}\n                        direction={reports.order ? 'asc' : 'desc'}\n                        onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !reports.order })}\n                      >\n                        {headCell.label}\n                      </TableSortLabel>\n                      {headCell.search && (\n                        <div className={classes.input}>\n                          {headCell.type && headCell.type === 'date' ? (\n                            <DatePicker\n                              noMargin\n                              id={`${headCell.data}`}\n                              onChange={event =>\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: DateFormatter(event),\n                                  match: headCell.match\n                                })\n                              }\n                            />\n                          ) : (\n                            <TextField\n                              noMargin\n                              onChange={event =>\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: event.target.value,\n                                  match: headCell.match\n                                })\n                              }\n                            />\n                          )}\n                        </div>\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              }\n              body={\n                reports.data &&\n                reports.data.map((claim, index) => (\n                  <TableRow key={index}>\n                    <TableCell>{claim.type}</TableCell>\n                    <TableCell>{claim.total_amount.toFixed(2)}</TableCell>\n                    <TableCell>{claim.cases}</TableCell>\n                    <TableCell>{claim.availed_by_principals}</TableCell>\n                    <TableCell>{claim.availed_by_dependents}</TableCell>\n                  </TableRow>\n                ))\n              }\n              pagination\n              count={reports.count}\n              page={reports.page}\n              limit={reports.limit}\n              rowsPerPageOptions={reports.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* <ClaimsUtilLedgerReport\n        refresh={refreshMemberReport}\n        dateRange={{ from: reports.range.from, to: reports.range.to }}\n        dataColumns={memberDataColumns}\n        hideReport={reportType === 'client' ? 'true' : ''}\n        hideHeader='true'\n      /> */}\n\n      {reportType && reportType === 'member' && (\n        <div>\n          <div className={classes.header}>\n            <Typography variant='h6'>\n              {SafeAccess(member, ['info', 'first_name'], '') +\n                ' ' +\n                SafeAccess(member, ['info', 'middle_name'], '') +\n                ' ' +\n                SafeAccess(member, ['info', 'last_name'], '')}\n            </Typography>\n            <Typography variant='h6'>{SafeAccess(member, ['info', 'brand_name'], '')}</Typography>\n          </div>\n\n          <div className={classes.content}>\n            <table className={classes.memberinfo}>\n              <tbody>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>Type</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'member_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>Birthdate (Age)</td>\n                  <td className={classes.memberInfoValue}>\n                    {member &&\n                      member.info &&\n                      moment(SafeAccess(member, ['info', 'date_of_birth'], '')).format('MMMM DD, YYYY') +\n                        ' (' +\n                        moment().diff(SafeAccess(member, ['info', 'date_of_birth'], ''), 'years', false) +\n                        ')'}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Gender</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'gender'], '')}</td>\n                </tr>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>Plant Type</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'plan_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>\n                    {SafeAccess(member, ['benefit_limits', 1, 'type'], '')} Limit\n                  </td>\n                  <td className={classes.memberInfoValue}>\n                    {SafeAccess(member, ['benefit_limits', 1, 'limit_unit'], '') +\n                      ' ' +\n                      SafeAccess(member, ['benefit_limits', 1, 'limit'], '')}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Civil Status</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'civil_status'], '')}</td>\n                </tr>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>R&amp;B</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'plan_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>\n                    {SafeAccess(member, ['benefit_limits', 0, 'type'], '')} Limit\n                  </td>\n                  <td className={classes.memberInfoValue}>\n                    {SafeAccess(member, ['benefit_limits', 0, 'limit_unit'], '') +\n                      ' ' +\n                      SafeAccess(member, ['benefit_limits', 0, 'limit'], '')}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Effectivity Date</td>\n                  <td className={classes.memberInfoValue}>\n                    {moment(SafeAccess(member, ['info', 'effectivity_date'], '')).format('MMMM DD, YYYY')}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          {/* TODO: replace with filler */}\n          <br />\n\n          <Utilization\n            fetchService={ClaimsAdjudicationServices.getUtilizations}\n            utilizationLoa={utilizationLoa}\n            // isMember={isMember}\n            member={member}\n            // client={client}\n            diagnosis={[]}\n            dataColumns={memberDataColumns}\n            hideSearchBar\n            hideActionColumn\n          />\n        </div>\n      )}\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport ArrayToCSV from 'Services/ArrayToCSV'\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './PRCheckReport.module.scss'\n\nconst columns = [\n  { label: 'Payee Name', data: 'payee_name', search: true, match: 'any' },\n  { label: 'Check Voucher No.', data: 'check_voucher_no', search: true, match: 'any' },\n  { label: 'Check Voucher Date.', data: 'check_voucher_date', search: true, match: 'date' },\n  { label: 'Check No.', data: 'check_no', search: true, match: 'start' },\n  { label: 'Check Date', data: 'check_date', search: true, match: 'date' },\n  { label: 'Bank Name', data: 'bank_name', search: true, match: 'any' },\n  { label: 'Check Amount', data: 'check_amount', search: true, match: 'any' },\n  { label: 'Check Release Date', data: 'check_release_date', search: true, match: 'date' },\n  { label: 'FPAD Transmittal Date', data: 'fpad_transmittal_date', search: true, match: 'date' },\n  { label: 'Date Received (FPAD Delivery)', data: 'date_received_fpad_delivery', search: true, match: 'date' }\n]\n\nexport default function PRCheckReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'date_requested',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('PR and Check Report')\n    BreadcrumbsService.setSelectedItems(['pr'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchReport()\n    // Watch filter items\n  }, [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  const fetchCSV = () => {\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        return columns.map(col => {\n          if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n          return formatData({ type: col.type, source: report, field: col.data })\n        })\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n    })\n  }\n\n  const fetchReport = () => {\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n      setReports(state => ({ ...state, data: _reports, count }))\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = search => {\n    /*\n     * Debounce for searching through\n     * SearchTextComponent\n     */\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              onChange={e => handleSearchChange(e.target.value)}\n              placeholder={`Search for Payee Name`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{\n              style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n            }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !reports.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: DateFormatter(event),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              reports.data &&\n              reports.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={reports.count}\n            page={reports.page}\n            limit={reports.limit}\n            rowsPerPageOptions={reports.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport ArrayToCSV from 'Services/ArrayToCSV'\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './TreasuryTransmittalReport.module.scss'\n\nconst columns = [\n  { label: 'Date Requested', data: 'date_requested', search: true, match: 'date' },\n  { label: 'Transmittal No.', data: 'transimittal_no', search: true, match: 'any' },\n  { label: 'Payee Name', data: 'payee_name', search: true, match: 'any' },\n  { label: 'Check No.', data: 'check_no', search: true, match: 'start' },\n  { label: 'Check Date', data: 'check_date', search: true, match: 'date' },\n  { label: 'Bank Name', data: 'bank_name', search: true, match: 'any' },\n  { label: 'Check Amount', data: 'check_amount', search: true, match: 'any' },\n  { label: 'Delivery Status', data: 'delivery_status', search: true, match: 'any' },\n  { label: 'Received By', data: 'received_by', search: true, match: 'any' },\n  { label: 'Date Received', data: 'date_received', search: true, match: 'date' }\n]\n\nexport default function TreasuryTransmittalReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'date_requested',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Treasury Transmittal Reports')\n    BreadcrumbsService.setSelectedItems(['treasury'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchReport()\n    // Watch filter items\n  }, [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  const fetchCSV = () => {\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        return columns.map(col => {\n          if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n          return formatData({ type: col.type, source: report, field: col.data })\n        })\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n    })\n  }\n\n  const fetchReport = () => {\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n      setReports(state => ({ ...state, data: _reports, count }))\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = search => {\n    /*\n     * Debounce for searching through\n     * SearchTextComponent\n     */\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              onChange={e => handleSearchChange(e.target.value)}\n              placeholder={`Search for Payee Name`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{\n              style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n            }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !reports.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: DateFormatter(event),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              reports.data &&\n              reports.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={reports.count}\n            page={reports.page}\n            limit={reports.limit}\n            rowsPerPageOptions={reports.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './../Components/ClaimsReconciliation/Dashboard/Dashboard'\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Components\nimport UtilizationReport from './../Components/UtilizationReport/UtilizationReport'\nimport PRCheckReport from './../Components/PRCheckReport/PRCheckReport'\nimport TreasuryTransmittalReport from './../Components/TreasuryTransmittalReport/TreasuryTransmittalReport'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  },\n  {\n    label: 'Reports',\n    icon: 'chart-bar',\n    type: 'popover',\n    child: [\n      { label: 'View PR and Check Details', to: '/pr-reports' },\n      { label: 'View Treasury Transmittal', to: '/treasury-reports' },\n      { label: 'View Account & Member Utilization', to: '/utilization' }\n    ]\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  },\n  treasury: {\n    text: 'Treasury Transmittal Reports'\n  },\n  pr: {\n    text: 'PR and Check Report'\n  },\n  utilization: {\n    text: 'Utilization Report'\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'] }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    remove: { visible: true }\n  }\n}\n\nfunction ClaimsReconcilationRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/pr-reports' exact render={() => <PRCheckReport />} />\n      <Route path='/treasury-reports' exact render={() => <TreasuryTransmittalReport />} />\n      <Route path='/utilization' exact render={() => <UtilizationReport />} />\n      <Route\n        path='/claims/recon/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n    </Switch>\n  )\n}\n\nexport default ClaimsReconcilationRoutes\n","import Button from '@material-ui/core/Button'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport IconButton from '@material-ui/core/IconButton'\nimport React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Services\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\nexport default function AssignDialog (props) {\n  const { dialog, handleOnSubmit = () => {}, setDialog } = props\n\n  const [reassignData, setReassignData] = React.useState({\n    user_id: '',\n    message: ''\n  })\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  React.useEffect(() => {\n    UserManagementServices.getClaimsAnalyst()\n      .then(res => {\n        const _data = res.data\n        const data = _data.map(user => {\n          return { value: user._id, text: `${user.first_name} ${user.last_name}` }\n        })\n        setDropDownUsers(prevState => [...prevState, ...data])\n      })\n      .catch(err => console.error('Failed fetching Claims Verifiers: ', err))\n  }, [])\n\n  const onDropDownChanged = params => {\n    setReassignData(prevState => ({ ...prevState, user_id: params }))\n  }\n\n  const onTextFieldChanged = params => {\n    setReassignData(prevState => ({ ...prevState, message: params }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='reassign-notes'\n                value={reassignData.message}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Message'\n                onChange={e => onTextFieldChanged(e.target.value)}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassignData.user_id}\n                  onChange={e => onDropDownChanged(e.target.value)}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  onClick={() => setDialog(state => ({ ...state, assign: false }))}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => setDialog(state => ({ ...state, alert: true }))}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Claim to Claim Verifier</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Claim to the selected Claim Analyst?\n              </Typography>\n              <Typography variant='body1'>\n                This Claim will be sent to the assigned Claim Analyst for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmit(reassignData)\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                }}\n                variant='contained'\n                color='primary'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ButtonFooter.module.scss'\n\n// Component\nimport AssignDialog from './../AssignDialog/AssignDialog'\n\nexport default function ClaimFooter (props) {\n  const {\n    handleOnSubmit = () => {},\n    handleOnCancel = () => {},\n    handleOnClose = () => {},\n    selectStatus,\n    claimsCount = 0\n  } = props\n\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['counter']}>\n        {selectStatus ? <Typography>Total Claims Selected: {claimsCount} </Typography> : ''}\n      </div>\n      <div className={classes['buttons']}>\n        {!selectStatus ? (\n          <React.Fragment>\n            <Button\n              variant='contained'\n              color='primary'\n              id='btn-close'\n              className='button-negative'\n              onClick={() => handleOnClose()}\n            >\n              Close\n            </Button>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <div>\n              <Button\n                variant='contained'\n                color='primary'\n                id='save-for-now'\n                className='button-positive'\n                onClick={() => setDialog(state => ({ ...state, assign: true }))}\n              >\n                Assign\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                id='save-for-now'\n                className='button-negative'\n                onClick={() => handleOnCancel()}\n              >\n                Cancel\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n      <AssignDialog dialog={dialog} setDialog={setDialog} handleOnSubmit={handleOnSubmit} />\n    </div>\n  )\n}\n","import instance from './../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cvs')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/analysis-sheet`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getLetterNotice ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims/adjudication',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/adjudication/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/adjudication/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/adjudication/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getDropdown (params) {\n    return axios({\n      url: '/lookups/dropdown',\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n}\n","import ClaimsAdjudicationServices from '../ClaimsAdjudicationServices'\nimport instance from '../instance'\nconst axios = instance('/c/cvs')\n\nexport default class ClaimsReimbursementServices extends ClaimsAdjudicationServices {\n  static getItems (params) {\n    return axios({\n      url: `/claims/medical-collectibles/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/medical-collectibles/count`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import instance from './../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nimport ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport MedicalCollectiblesServices from './MedicalCollectiblesServices'\nconst axios = instance('/c/cvs')\n\nclass index extends ClaimsAdjudicationServices {\n  // MOCK ENDPOINT\n  static getClaims (params) {\n    return axios({\n      url: '/claims/all',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/all/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItems (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getClaimsBySubbordinateCount (params) {\n    return axios({\n      url: '/subordinate/claims/count',\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassign ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getSubordinatesCount (params) {\n    return axios({\n      url: '/claims/subordinates/count',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getSubordinates (params) {\n    return axios({\n      url: '/claims/subordinates',\n      method: 'GET',\n      params\n    })\n  }\n}\n\nindex.ClaimsAdjudicationServices = ClaimsAdjudicationServices\nindex.MedicalCollectiblesServices = MedicalCollectiblesServices\nexport default index\n","import Button from '@material-ui/core/Button'\nimport ButtonFooter from './Components/ButtonFooter/ButtonFooter'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimsList.module.scss'\n\nexport default function ClaimsPage (props) {\n  const userId = props.match.params.user_id\n  const [selectStatus, setSelectStatus] = React.useState(false)\n\n  const headcell = [\n    { id: 's-claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'any' },\n    { id: 's-date-received', name: ' Date Received', sortField: 'date_received', match: 'date' },\n    { id: 's-due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n    { id: 's-facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n  ]\n  const [claims, setClaims] = React.useState({\n    category: 'my',\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    filter: {},\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [claimsCount, setClaimsCount] = React.useState(0)\n\n  React.useEffect(() => {\n    PageTitleService('For Adjudication')\n    BreadcrumbsService.setSelectedItems(['assigned'])\n    LoadingService.loading(true)\n    getClaims()\n    LoadingService.loading(false)\n  }, [])\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    getClaims()\n    LoadingService.loading(false)\n  }, [claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  const getClaims = () => {\n    ClaimsVerifierSupervisorServices.getItems({\n      category: claims.category,\n      search: claims.search,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit,\n      user_id: userId,\n      filter: claims.filter\n    })\n      .then(res => {\n        const { results, count, limit, page } = res.data.data\n        results.map(claim => (claim.checked = false))\n        setClaims(prevState => ({ ...prevState, data: results, count, limit, page }))\n      })\n      .catch(err => console.error('Error fetching records: ', err))\n  }\n\n  const handleItemSelect = (event, index) => {\n    let data = [...claims.data]\n    const count = event.target.checked ? 1 : -1\n    data[index] = { ...data[index], checked: event.target.checked }\n    setClaims(prevState => ({ ...prevState, data }))\n    setClaimsCount(prevState => prevState + count)\n  }\n\n  const handleOnSearch = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnSearchAll = (args = '') => {\n    setClaims(prevState => ({ ...prevState, search: args }))\n  }\n\n  const handleOnSubmit = params => {\n    LoadingService.loading(true)\n    const { user_id, message } = params\n    const reassign = async () => {\n      return Promise.all(\n        claims.data.map(async claim => {\n          if (claim.checked === true) {\n            await ClaimsVerifierSupervisorServices.reassign({\n              claim_number: claim.claim_number,\n              data: { receiver_id: user_id, message: message }\n            }).catch(err => console.error(err))\n          }\n        })\n      )\n    }\n    reassign()\n      .then(() => {\n        handleUnselectAll()\n        LoadingService.loading(false)\n        getClaims()\n      })\n      .catch(err => console.error(('Error Assigning Claims: ', err)))\n  }\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleSelectAll = event => {\n    let data = [...claims.data]\n    const count = event.target.checked ? 1 : 0\n    data.map(claim => {\n      claim.checked = event.target.checked\n    })\n    setClaims(prevState => ({ ...prevState, data }))\n    setClaimsCount(count > 0 ? data.length : 0)\n  }\n\n  const handleUnselectAll = () => {\n    let data = [...claims.data]\n    data.map(claim => {\n      claim.checked = false\n    })\n    setClaims(prevState => ({ ...prevState, data }))\n    setSelectStatus(false)\n    setClaimsCount(0)\n  }\n\n  const handleTableRenderer = type => {\n    if (type === 'headcell') {\n      return (\n        <TableRow>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox color='default' onClick={event => handleSelectAll(event)} />\n            </TableCell>\n          ) : null}\n          {headcell.map(headCell => (\n            <TableCell key={headCell.sortField} id={headCell.id}>\n              <TableSortLabel\n                active={claims.orderBy === headCell.sortField}\n                direction={claims.order ? 'asc' : 'desc'}\n                onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n              >\n                {headCell.name}\n              </TableSortLabel>\n              <TextField\n                // className={`${classes.search}`}\n                id={`column-filter-${headCell.id}`}\n                TextFieldStyle={{ margin: 0 }}\n                fullWidth\n                onChange={event =>\n                  handleOnSearch({\n                    field: headCell.sortField,\n                    value: event.target.value,\n                    match: headCell.match\n                  })\n                }\n              />\n            </TableCell>\n          ))}\n\n          <TableCell align='center' />\n        </TableRow>\n      )\n    } else if (type === 'body') {\n      return claims.data.map((row, index) => (\n        <TableRow key={index}>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox checked={row.checked} color='default' onClick={event => handleItemSelect(event, index)} />\n            </TableCell>\n          ) : null}\n          <TableCell id={`claim-number-${index}`}>{row.claim_number}</TableCell>\n          <TableCell id={`date-received-${index}`}>{DateFormatter(row.date.received)}</TableCell>\n          <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n          <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n          <TableCell id={`view-claim-${index}`}>\n            <Link to={`/claims/view/${row.claim_number}`}>\n              <Typography id={`analyze-claim-${index}`} variant='caption' className='text-link underline'>\n                View\n              </Typography>\n            </Link>\n          </TableCell>\n        </TableRow>\n      ))\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <React.Fragment>\n          <div className={classes['search-container']}>\n            <div className={classes['reassign']}>\n              <Button\n                disabled={selectStatus}\n                // style={{ height: '48px', marginBottom: '17px' }}\n                variant='contained'\n                color='primary'\n                className='button-neutral'\n                onClick={() => {\n                  setSelectStatus(true)\n                }}\n              >\n                Reassign\n              </Button>\n            </div>\n            <div className={classes['search']}>\n              <SearchTextComponent\n                id='search'\n                onChange={e => handleOnSearchAll(e.target.value)}\n                placeholder='Search for claim number or facility name'\n              />\n            </div>\n          </div>\n          <div className={classes['table-container']}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={handleTableRenderer('headcell')}\n              body={handleTableRenderer('body')}\n              count={claims.count}\n              page={claims.page}\n              limit={claims.limit}\n              rowsPerPageOptions={claims.rowsPerPageOptions}\n              pagination\n              onChange={args => handleOnPaginate(args)}\n              cesFooter\n            />\n          </div>\n\n          <ButtonFooter\n            selectStatus={selectStatus}\n            handleOnCancel={() => handleUnselectAll()}\n            handleOnClose={() => props.history.push(`/`)}\n            handleOnSubmit={handleOnSubmit}\n            claimsCount={claimsCount}\n          />\n        </React.Fragment>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst RejectedClaimsTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    category: 'rejected',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'REJECTED' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'rejected'\n\n    services\n      .getItems({\n        category,\n        filter: viewList.filter,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/rejected/${claim_number}`)\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'rejected'\n    let title = `Rejected Claims`\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    services\n      .getItems({ category, limit: 10, sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    // TO BE EDITED, WAITING FOR CLAIMS SUPERVISOR API SERVICES TO BE UP\n    // mock datas from med consultant\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='rejected-claim'\n        count={{ color: 3, value: claims.recon['count'], id: 'rejected-claim-count' }}\n        sizes={{ sm: 12 }}\n        title='Rejected Claims'\n        viewList={\n          <Typography id='rc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`rc-${item.id}`} id={`rc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.recon.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`rc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`rc-view-claim-${index}`}>\n                  <Typography\n                    id={`view-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnReview(item.claim_number)}\n                  >\n                    View\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`rc-claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`rc-view-claim-${index}`}>\n                <Typography\n                  id={`view-claim-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={() => handleOnReview(item.claim_number)}\n                >\n                  View\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nRejectedClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default RejectedClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\nconst columns = [\n  { id: 'verifier-name', name: 'Verifier Name', sortField: 'verifier_name', match: 'any' },\n  { id: 'total-batches', name: 'Total Batches', sortField: 'total_batches', match: 'any' },\n  { id: 'total-claims', name: 'Total Claims', sortField: 'total_claims', match: 'any' }\n]\n\nconst ClaimsVerifierTile = props => {\n  const { services } = props\n\n  const [viewList, setViewList] = React.useState({\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  })\n  const [verifiers, setVerifiers] = React.useState({ data: [], count: 0 })\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getSubordinatesCount(),\n      services.getClaimsBySubbordinateCount(),\n      services.getSubordinates({ page: 1, limit: 10, search: null })\n    ])\n      .then(res => {\n        const [usersCount, claimsCount, verifiers] = res\n        const { data } = verifiers.data.data\n        setViewList(prev => ({ ...prev, count: usersCount.data.data }))\n        setVerifiers(p => ({ ...p, data, count: claimsCount.data.data }))\n      })\n      .catch(err => console.error(err.message))\n  }, [])\n\n  const getSubordinates = params => {\n    const { page = 1, limit = 10, search = '', filter = null } = params\n    services\n      .getSubordinates({ page, limit, search, filter })\n      .then(res => {\n        const { data, limit, page } = res.data.data\n        setViewList(prev => ({\n          ...prev,\n          data,\n          limit,\n          page\n        }))\n      })\n      .catch(err => console.error('Error fetching subordinates: ', err))\n  }\n\n  const handleOnReviewUser = (params = null) => () => {\n    if (!params) return false\n    props.history.push(`/list/${params}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'Claims Verifier List'\n\n    setViewList(prev => ({ ...prev, show: true, title, data: [] }))\n    getSubordinates({})\n  }\n\n  const handleOnViewListChange = params => {\n    setViewList(prev => ({ ...prev, data: [], ...params }))\n    getSubordinates({ ...params })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-verifier'\n        count={{ color: 3, value: verifiers.count, id: 'claims-verifier-count' }}\n        sizes={{ sm: 12 }}\n        title='Claims Verifier'\n        isFilterShown={false}\n        viewList={\n          <Typography id='cv-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList()}>\n            View List\n          </Typography>\n        }\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`cv-${item.id}`} id={`cv-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {verifiers.data &&\n              verifiers.data.map((item, index) => (\n                <TableRow key={`verifier-list-item-${index}`}>\n                  <TableCell id={`cv-verifier-name-${index}`}>{item.verifierName}</TableCell>\n                  <TableCell id={`cv-total-batches-${index}`}>{item.totalBatches}</TableCell>\n                  <TableCell id={`cv-total-claims-${index}`}>{item.totalClaims}</TableCell>\n                  <TableCell id={`cv-view-user-${index}`}>\n                    <Typography\n                      id={`view-user-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={handleOnReviewUser(item.id)}\n                    >\n                      View\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for Claims Analyst'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`verifier-list-item-${index}`}>\n              <TableCell id={`cv-verifier-name-${index}`}>{item.verifierName}</TableCell>\n              <TableCell id={`cv-total-batches-${index}`}>{item.totalBatches}</TableCell>\n              <TableCell id={`cv-total-claims-${index}`}>{item.totalClaims}</TableCell>\n              <TableCell id={`cv-view-user-${index}`}>\n                <Typography\n                  id={`view-user-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={handleOnReviewUser(item.id)}\n                >\n                  View\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsVerifierTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsVerifierTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst ReconTIle = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    category: 'recon',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  // url: ,\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'RECONCILED' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/reconciled/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'recon') title = 'Reconciled Claims'\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='reconciled-claim'\n        count={{ color: 3, value: claims.recon['count'], id: 'reconciled-claim-count' }}\n        sizes={{ sm: 12 }}\n        title='Reconciled Claims'\n        viewList={\n          <Typography\n            id='rc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('recon')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('recon')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`rc-${item.id}`} id={`rc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.recon.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`rc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`rc-view-claim-${index}`}>\n                  <Typography\n                    id={`view-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnReview(item.claim_number)}\n                  >\n                    Analyze\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`rc-claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`rc-view-claim-${index}`}>\n                <Typography\n                  id={`view-claim-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={() => handleOnReview(item.claim_number)}\n                >\n                  Analyze\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReconTIle.displayName = 'DashboardTileComponent'\n\nexport default ReconTIle\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst ClaimsForApprovalTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    category: 'for-approval',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'FOR APPROVAL' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const claims = claimResponse.data.data.results\n      const claimsCount = claimCountResponse.data.data\n      setClaims({ data: claims, count: claimsCount })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'for-approval'\n\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'for-approval'\n    let title = 'Claims For Approval'\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'for-approval',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-for-approval'\n        count={{ color: 3, value: claims['count'], id: 'claims-for-approval-count' }}\n        sizes={{ sm: 12 }}\n        title='Claims For Approval'\n        isFilterShown={false}\n        viewList={\n          <Typography id='fa-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={item.id} id={`fa-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`fa-view-claim-${index}`}>\n                  <Link to={`/claims/for-approval/${item.claim_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`view-claim-${index}`}>\n                <Link to={`/claims/for-approval/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsForApprovalTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsForApprovalTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter, NameFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim No.', sortField: 'latest.claim_number', match: 'start' },\n  { id: 'account-number', name: 'Account No.', sortField: 'latest.client.account_number', match: 'any' },\n  { id: 'account-name', name: 'Account Name', sortField: 'latest.client.account_name', match: 'any' },\n  { id: 'member-name', name: 'Member Name', sortField: 'member_name', match: 'any' }\n]\n\nconst MedicalCollectiblesTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    filter: {},\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'all'\n      }),\n      services.getItemCount()\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, data: allClaims, count: allClaimsCount }))\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    let title = 'Medical Collectibles'\n\n    setViewList({ ...initialValue, show: true, title })\n    services\n      .getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'all'\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='medical-collectibles'\n        count={{ color: 3, value: claims.count, id: 'medical-collectibles-count' }}\n        sizes={{ sm: 12 }}\n        title='Medical Collectibles'\n        isFilterShown={false}\n        viewList={\n          <Typography id='mc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={item.id} id={`mc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                {/* added cond on client to support old data */}\n                <TableCell id={`mc-account-no-${index}`}>{item.client ? item.client.account_number : ''}</TableCell>\n                <TableCell id={`mc-account-name-${index}`}>{item.client ? item.client.account_name : ''}</TableCell>\n                <TableCell id={`mc-member-name-${index}`}>{item.member_name}</TableCell>\n                <TableCell id={`mc-view-claim-${index}`}>\n                  <Link to={`/claims/review/${item.claim_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              {/* added cond on client to support old data */}\n              <TableCell id={`mc-account-no-${index}`}>{item.client ? item.client.account_number : ''}</TableCell>\n              <TableCell id={`mc-account-name-${index}`}>{item.client ? item.client.account_name : ''}</TableCell>\n              <TableCell id={`mc-member-name-${index}`}>{item.member_name}</TableCell>\n              <TableCell id={`mc-view-claim-${index}`}>\n                <Link to={`/claims/review/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMedicalCollectiblesTile.displayName = 'DashboardTileComponent'\n\nexport default MedicalCollectiblesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim No.', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date ', sortField: 'date_due', match: 'date' },\n  { id: 'account-name', name: 'Account No.', sortField: 'account_number', match: 'any' },\n  { id: 'member-name', name: 'Member Name', sortField: 'member_name', match: 'any' }\n]\n\nconst ReimbursementClaimTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    category: 'reimbursement',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ claim_type: 'Reimbursement' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const { results } = claimResponse.data.data\n      setClaims(prevState => ({\n        ...prevState,\n        data: results,\n        count: claimCountResponse.data.data\n      }))\n    })\n  }, [])\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    let title = 'Reimbursement Claim'\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n\n    setViewList({ ...initialValue, show: true, title })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='reimbursement-claims'\n        count={{ color: 3, value: claims.count, id: 'reimbursement-claims-count' }}\n        sizes={{ sm: 12 }}\n        title='Reimbursement Claim'\n        isFilterShown={false}\n        viewList={\n          <Typography id='rmc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={item.id} id={`rmc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={`rmc-claim-list-${index}`}>\n                <TableCell id={`rmc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`rmc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`rmc-account-no-${index}`}>{item.member.account_number}</TableCell>\n                <TableCell id={`rmc-member-name-${index}`}>{`${item.member.first_name} ${item.member.middle_name |\n                  ''} ${item.member.last_name}`}</TableCell>\n                <TableCell id={`rmc-view-claim-${index}`}>\n                  <Link to={`/claims/reimbursement/${item.claim_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`rmc-claim-list-${index}`}>\n              <TableCell id={`rmc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rmc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`rmc-account-no-${index}`}>{item.member.account_number}</TableCell>\n              <TableCell id={`rmc-member-name-${index}`}>{`${item.member.first_name} ${item.member.middle_name | ''} ${\n                item.member.last_name\n              }`}</TableCell>\n              <TableCell id={`rmc-view-claim-${index}`}>\n                <Link to={`/claims/reimbursement/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReimbursementClaimTile.displayName = 'DashboardTileComponent'\n\nexport default ReimbursementClaimTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from './../../../Components/Tiles/ForAdjudicationTile'\nimport MyClaimsTile from './../../../Components/Tiles/MyClaimsTile'\nimport SubmittedClaimsTile from './../../../Components/Tiles/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from './../../../Components/Tiles/ReturnedEscalatedClaimsTile'\nimport RejectedClaimsTile from './../../../Components/Tiles/RejectedClaimsTile'\nimport ClaimsVerifierTile from './../../../Components/Tiles/ClaimsVerifierTile'\nimport ReconciledClaimsTile from './../../../Components/Tiles/ReconciledClaimsTile'\nimport ClaimsForApprovalTile from './../../../Components/Tiles/ClaimsForApprovalTile'\nimport MedicalCollectiblesTile from './../../../Components/Tiles/MedicalCollectiblesTile'\nimport ReimbursementClaimTile from './../../../Components/Tiles/ReimbursementClaimTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Claims Adjudication'>\n            <ForAdjudicationTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n            <MyClaimsTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n            <SubmittedClaimsTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <ClaimsVerifierTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ClaimsForApprovalTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <ReturnedEscalatedClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n\n            <RejectedClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n\n            <ReconciledClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n\n            <MedicalCollectiblesTile\n              services={ClaimsVerifierSupervisorServices.MedicalCollectiblesServices}\n              {...props}\n            />\n\n            <ReimbursementClaimTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n        </Grid>\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Verifier Supervisor\nimport ClaimsList from './../Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList'\nimport Dashboard from './../Components/ClaimsVerifierSupervisor/Dashboard/Dashboard'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// To be edit\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\n\n// Component\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  },\n  reconciled: {\n    text: 'Reconciled',\n    to: ''\n  },\n  forApproval: {\n    text: 'For Approval',\n    to: ''\n  },\n  assigned: {\n    text: 'For Adjudication'\n  },\n  view: {\n    text: 'View'\n  },\n  reimbursement: {\n    text: 'Reimbursement'\n  }\n}\n\nconst forAdjudicationPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    communication: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 45000,\n          other_types: 5000\n        }\n      }\n    },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forApprovalPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    return: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: { checkThreshold: true } },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forReconciledPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {}\n    },\n    save: { visible: true, enabled: true, options: {} },\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_ANALYST'] },\n      message:\n        'Are you sure you want to submit the Claim to the selected Claim Analyst? This Claim will be sent to the assigned Claim Analyst for processing.'\n    }\n  }\n}\n\nconst viewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nconst reviewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: {\n      visible: true,\n      enabled: true\n    },\n    letter_of_advice: {\n      visible: true,\n      enabled: true\n    }\n  }\n}\n\nconst rejectedPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    close: true\n  }\n}\n\nfunction ClaimsSupervisorRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/:claim_number/analyze'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n            {...props}\n            permissions={forAdjudicationPermissions}\n            ApiService={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n          />\n        )}\n      />\n\n      <Route path='/list/:user_id' exact component={ClaimsList} />\n\n      <Route\n        path='/claims/reconciled/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reconciled']}\n            {...props}\n            permissions={forReconciledPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/for-approval/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'forApproval']}\n            {...props}\n            permissions={forApprovalPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/view/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={viewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={reviewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/rejected/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/reimbursement/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reimbursement']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n    </Switch>\n  )\n}\n\nexport default ClaimsSupervisorRoutes\n","import instance from './../instance'\nconst axios = instance('/c/cm')\n\nexport default class ClaimsManagerServices {\n  static getBundleCount () {\n    return axios({\n      url: `/payment-requests/submitted/count`,\n      method: 'GET'\n    })\n  }\n\n  static getSubmittedPaymentRequest (params) {\n    return axios({\n      url: `/payment-requests/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch (params) {\n    const { bundle_number, batch_number } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getApprovedClaims (params) {\n    const { bundle_number, batch_number } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}/claims`,\n      method: 'GET'\n    })\n  }\n\n  static overrideClaims (params) {\n    const { bundle_number, batch_number, ...others } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}/claims/override`,\n      method: 'POST',\n      params: { others }\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ClaimsForApprovalTile from './../../../Components/Tiles/ClaimsForApprovalTile'\nimport BatchAndEncoderTile from './../../../Components/Tiles/BatchAndEncoderTile'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\nimport MedicalCollectiblesTile from '../../../Components/Tiles/MedicalCollectiblesTile'\nimport ReimbursementClaimTile from '../../../Components/Tiles/ReimbursementClaimTile'\nimport SubmittedPrSupervisorTile from './../../../Components/Tiles/SubmittedPrSupervisorTile'\nimport ClaimsEncoderTile from './../../../Components/Tiles/ClaimsEncoderTile'\nimport ClaimsVerifierTile from './../../../Components/Tiles/ClaimsVerifierTile'\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingSupervisoryServices from 'Services/Api/BatchEncodingSupervisoryServices'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\nimport ClaimsManagerServices from 'Services/Api/ClaimsManagerServices/ClaimsManagerServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 8 }} title='Items to Monitor'>\n            <ClaimsForApprovalTile services={ClaimsVerifierSupervisorServices} sizes={{ sm: 6 }} {...props} />\n            <ForPaymentRequestTile\n              services={PaymentRequestServices}\n              mTitle='Payment Request for Approval'\n              sizes={{ sm: 6 }}\n              {...props}\n            />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticket #</TableCell>\n                  <TableCell>Date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {[].map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell>2334324343</TableCell>\n                    <TableCell>08/12/2019</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TicketList>\n        </Grid>\n      </Grid>\n\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }} showTitle={false}>\n            <MedicalCollectiblesTile\n              services={ClaimsVerifierSupervisorServices.MedicalCollectiblesServices}\n              sizes={{ sm: 6 }}\n              {...props}\n            />\n            <ForReconciliationClaimsTile services={ClaimsReconServices} sizes={{ sm: 6 }} {...props} />\n          </TaskTray>\n        </Grid>\n      </Grid>\n\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }} showTitle={false}>\n            <ReimbursementClaimTile services={ClaimsVerifierSupervisorServices} sizes={{ sm: 6 }} {...props} />\n            <SubmittedPrSupervisorTile services={ClaimsManagerServices} sizes={{ sm: 6 }} {...props} />\n          </TaskTray>\n        </Grid>\n      </Grid>\n\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }} title='Claims Processor'>\n            <BatchAndEncoderTile services={BatchEncodingSupervisoryServices} sizes={{ sm: 6 }} {...props} />\n            <ClaimsEncoderTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 6 }} {...props} />\n            <ClaimsVerifierTile services={ClaimsVerifierSupervisorServices} sizes={{ sm: 6 }} {...props} />\n          </TaskTray>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nexport default function AssignDialog (props) {\n  const { dialog, setDialog, dropDownUsers = [], handleOnSubmitReassign } = props\n\n  const [reassign, setReassign] = React.useState({\n    user_id: '',\n    note: ''\n  })\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    note: '',\n    assignee: ''\n  })\n\n  const validate = () => {\n    const { error } = ReassignValidator({\n      note: reassign.note,\n      assignee: reassign.user_id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (validate()) return\n    setDialog(state => ({ ...state, alert: true }))\n  }\n\n  const handleOnCancel = () => {\n    setReassignErrors({\n      note: '',\n      assignee: ''\n    })\n\n    setReassign({\n      note: '',\n      user_id: ''\n    })\n    setDialog(state => ({ ...state, assign: false }))\n  }\n\n  const handleOnChange = event => {\n    const value = event.target.value\n    setReassign(state => ({ ...state, note: value }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='assign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                onChange={event => handleOnChange(event)}\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassign.user_id}\n                  onChange={event => {\n                    setReassign(state => ({ ...state, user_id: event.target.value }))\n                  }}\n                  error={reassignErrors.assignee}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  onClick={() => handleOnCancel()}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  id='dialog-cancel'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => handleOnSubmit()}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  id='dialog-submit'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Claim to Claims Analyst/Verifier Supervisor:</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Claim to the selected Claims Analyst/Verifier Supervisor?\n              </Typography>\n              <Typography variant='body1'>\n                This Claim will be sent to the assigned Claims Analyst/Verifier Supervisor for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                id='alert-btn-cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmitReassign(reassign)\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                  setReassign({\n                    note: '',\n                    user_id: ''\n                  })\n                }}\n                variant='contained'\n                color='primary'\n                id='alert-btn-submit'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from '../../ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from '../../ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from '../../ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList'\n// import AssignDialiog from './../'\nimport AssignDialog from './Components/AssignDialog/AssignDialog'\n// import ProviderSchedule from './Components/ProviderSchedule/ProviderSchedule'\n\n// import Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Styles\nimport classes from './BatchDetailsPage.module.scss'\n\nexport default function BatchDetailsPage (props) {\n  const { ApiService, UserManagementApi } = props\n  const [details, setDetails] = React.useState()\n  const [batch_number, setBatchNumber] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [claims, setClaim] = React.useState([])\n  const [forOverride, setForOverride] = React.useState({ claim_numbers: [] })\n  const [selected, setSelected] = React.useState([])\n  const [selectStatus, setSelectStatus] = React.useState(false)\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const { batch_number, bundle_number } = props.match.params\n    setBatchNumber(batch_number)\n    setBundleNumber(bundle_number)\n\n    PageTitleService(`Batch No. ${batch_number}`)\n    BreadcrumbsService.setSelectedItems([\n      'dashboard',\n      'submittedPaymentRequest',\n      `submittedSpecificPaymentRequest:${bundle_number}`,\n      `specificBatch:${batch_number}`\n    ])\n    getBatchAndClaims({ batch_number, bundle_number })\n  }, [props.match.params.batch_number, props.match.params.bundle_number])\n\n  const getBatchAndClaims = args => {\n    const { batch_number, bundle_number } = args\n    Promise.all([\n      ApiService.getBatch({ bundle_number, batch_number }),\n      ApiService.getApprovedClaims({ bundle_number, batch_number })\n    ]).then(res => {\n      const [batchRes, claimsRes] = res\n\n      const { data: batch } = batchRes.data\n      const { result: claims } = claimsRes.data.data\n\n      setClaimCount(claims.length)\n      setClaim(claims)\n      setDetails(batch)\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleClickOverride = () => {\n    initDropdownUsers()\n    setDialog(state => ({ ...state, assign: true }))\n  }\n\n  const initDropdownUsers = () => {\n    Promise.all([UserManagementApi.getClaimsAnalyst(), UserManagementApi.getClaimsVerifierSupervisors()]).then(res => {\n      const [analystRes, supervisorRes] = res\n      const data = [...analystRes.data, ...supervisorRes.data]\n      let users = data.map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n\n      setDropDownUsers(users)\n    })\n  }\n\n  const handleOnSubmitOverride = args => {\n    LoadingService.loading(true)\n    const { user_id, note } = args\n    ApiService.overrideClaims({\n      bundle_number,\n      batch_number,\n      claims: forOverride.claim_numbers,\n      _id: user_id,\n      note\n    }).then(res => {\n      getBatchAndClaims({ batch_number, bundle_number })\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} reassign_notes={false} />\n          <ClaimListHeader isManager count={claimCount} />\n          <ClaimList\n            isManager\n            items={claims}\n            onItemClick={args => {}}\n            actionItems={forOverride}\n            setActionItems={setForOverride}\n            setSelected={setSelected}\n            selectStatus={selectStatus}\n          />\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              {!selectStatus ? (\n                <React.Fragment>\n                  <Button\n                    id='override-claim'\n                    variant='contained'\n                    color='primary'\n                    className='button-neutral'\n                    onClick={() => setSelectStatus(true)}\n                  >\n                    Override Claim\n                  </Button>\n                  <Button\n                    id='close'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() => props.history.push(`/payment-request/${bundle_number}/submitted`)}\n                  >\n                    Close\n                  </Button>\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  <Button\n                    id='override-claim'\n                    variant='contained'\n                    color='primary'\n                    className='button-neutral'\n                    onClick={() => handleClickOverride()}\n                    disabled={forOverride.claim_numbers.length < 1}\n                  >\n                    Override\n                  </Button>\n                  <Button\n                    id='cancel'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() => {\n                      setSelectStatus(false)\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                </React.Fragment>\n              )}\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n      <AssignDialog\n        handleOnSubmitReassign={handleOnSubmitOverride}\n        dropDownUsers={dropDownUsers}\n        dialog={dialog}\n        setDialog={setDialog}\n      />\n    </div>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cm')\n\nexport default class ClaimsEncodingServices {\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static storeLookups ({ on, data, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'post',\n      data,\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static updateLookups ({ on, data, code, params }) {\n    return axios({\n      url: `/lookups/${code}/${on}`,\n      method: 'put',\n      data,\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Radio from '@material-ui/core/Radio'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Services\nimport ClaimsMaintainerServices from 'Services/Api/ClaimsMaintainerServices'\n\n// Styles\nimport classes from './MaintenancePage.module.scss'\n\n// Constants\nconst lookups = {\n  hospital_items: { on: 'hospital-item-list', field: 'hospital-item-list' },\n  reason_covered: { on: 'maintenance', field: 'covered-reason' },\n  reason_charging: { on: 'maintenance', field: 'charging-reason' },\n  reason_return: { on: 'maintenance', field: 'return-reason' },\n  reason_reject: { on: 'maintenance', field: 'reject-reason' },\n  claims_source: { on: 'maintenance', field: 'claims-source' },\n  claim_sub_type: { on: 'maintenance', field: 'claims-sub-type' },\n  claim_sub_sub_type: { on: 'maintenance', field: 'claims-sub-sub-type' }\n}\nconst initialValue = {\n  show: false,\n  title: '',\n  count: 0,\n  search: '',\n  limit: 10,\n  page: 1,\n  data: [],\n  orderBy: '',\n  order: true,\n  header: 'Hospital Item List',\n  filter: {description: {value: ''}, status: {value: ''}}\n}\nconst initialItem = {\n  description: '',\n  status: 'Active',\n  code: '',\n  active: true,\n  deactivate: false\n}\nlet columns = [\n  { name: 'Description', sortField: 'description', id: 'description', match: 'any' },\n  { name: 'Status', sortField: 'status', id: 'status', match: 'start' }\n]\nexport default function MaintenancePage (props) {\n  const [data, setData] = React.useState(initialValue)\n  const [lookup, setLookup] = React.useState(lookups.hospital_items)\n  const [debounce, setDebounce] = React.useState(null)\n  const [item, setItem] = React.useState(initialItem)\n  const [showAddItem, setShowAddItem] = React.useState({\n    show: false,\n    mode: 'add'\n  })\n  const [showAlert, setShowAlert] = React.useState({\n    open: false,\n    message: '',\n    onOk: '',\n    okLabel: 'Okay',\n    cancelLabel: ''\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Claims Maintenance')\n    BreadcrumbsService.setSelectedItems(['maintenance'])\n  }, [])\n\n  React.useEffect(() => {\n    ClaimsMaintainerServices.lookups({ on: lookup.on, params: {...data, field: lookup.field} }).then(({ data: res }) => {\n      const { results, count } = res.data\n      setData(state => ({...state, data: results, count}))\n    })\n  }, [lookup])\n\n  const handleOnChange = params => {\n    const _params = {\n      limit: data.limit,\n      page: data.page,\n      search: data.search,\n      sort: `${data.orderBy}|${data.order ? 'desc' : 'asc'}`,\n      filter: data.filter,\n      field: lookup.field,\n      ...params\n    }\n\n    ClaimsMaintainerServices.lookups({ on: lookup.on, params: _params }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setData(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const isActive = args => {\n    return (lookup && lookup.field && args === lookup.field ? 'active' : '')\n  }\n\n  const onClickHospitalItem = () => {\n    setLookup(lookups.hospital_items)\n    setData({...data, header: 'Hospital Item List', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n  const onClickNotCoveredReason = () => {\n    setLookup(lookups.reason_covered)\n    setData({...data, header: 'Not Covered Reasons', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickChargingReason = () => {\n    setLookup(lookups.reason_charging)\n    setData({...data, header: 'Reasons For Charging Member', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickClaimSource = () => {\n    setLookup(lookups.claims_source)\n    setData({...data, header: 'Claim Source', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickReturnReason = () => {\n    setLookup(lookups.reason_return)\n    setData({...data, header: 'Reimbursement Return Reasons', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickRejectReason = () => {\n    setLookup(lookups.reason_reject)\n    setData({...data, header: 'Reimbursement Reject Reasons', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickClaimSubType = () => {\n    setLookup(lookups.claim_sub_type)\n    setData({...data, header: 'Claim Sub-Type', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickClaimSubSubType = () => {\n    setLookup(lookups.claim_sub_sub_type)\n    setData({...data, header: 'Claim Sub Sub-Type', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const handleOnSort = orderBy => e => {\n    setData(p => ({ ...p, orderBy, order: !data.order }))\n    handleOnChange({ sort: `${orderBy}|${data.order ? 'asc' : 'desc'}` })\n  }\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    setData(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnChange({ filter: { ...data.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  const handleOnSaveItem = () => {\n    LoadingService.loading(true)\n    const initialLookup = lookup\n    const _params = {\n      limit: 1,\n      page: 1,\n      search: {\n        description: item.description,\n        code: item.code\n      },\n      field: lookup.field\n    }\n    const handleOnOk = () => {\n      setShowAlert(state => ({ ...state, open: false }))\n    }\n\n    if (!item.description.trim()) {\n      setShowAlert(state =>\n        ({\n          ...state,\n          open: true,\n          message: 'Description details is empty. Please input the description details.',\n          onOk: handleOnOk,\n          okLabel: 'Okay',\n          cancelLabel: ''\n        }))\n      LoadingService.loading(false)\n    } else {\n      ClaimsMaintainerServices.lookups({ on: lookup.on, params: _params }).then(({ data: res }) => {\n        const { results } = res.data\n        if (results.length > 0) {\n          setShowAlert(state =>\n            ({\n              ...state,\n              open: true,\n              message: 'Description details already exists. Please change the description details encoded.',\n              onOk: handleOnOk,\n              okLabel: 'Okay',\n              cancelLabel: ''\n            }))\n        } else {\n          if (showAddItem.mode === 'add') {\n            ClaimsMaintainerServices.storeLookups({ on: lookup.on, data: item, params: { field: lookup.field } }).then(res => {\n              setItem(initialItem)\n              setLookup(false)\n              setLookup(initialLookup)\n              setShowAddItem({...showAddItem, show: false})\n              LoadingService.loading(false)\n            })\n          } else if (showAddItem.mode === 'edit') {\n            ClaimsMaintainerServices.updateLookups({ on: lookup.on, data: item, code: item.code, params: { field: lookup.field } }).then(res => {\n              setItem(initialItem)\n              setLookup(false)\n              setLookup(initialLookup)\n              setShowAddItem({...showAddItem, show: false})\n              LoadingService.loading(false)\n            })\n          }\n        }\n        LoadingService.loading(false)\n      })\n    }\n  }\n\n  const handleOnEditItem = item => {\n    setShowAddItem({...showAddItem, show: true, mode: 'edit'})\n    setItem({\n      description: item.description,\n      code: item.code,\n      status: item.status,\n      active: item.status === 'Active',\n      deactivate: item.status === 'Inactive'\n    })\n  }\n\n  const handleOnCancelItem = () => {\n    if (item.description) {\n      setShowAlert(state =>\n        ({\n          ...state,\n          open: true,\n          message: 'Are you sure you want to discard your changes?',\n          onOk: () => {\n            setShowAlert(alert => ({...alert, open: false}))\n            setShowAddItem(show => ({...show, show: false}))\n            setItem(item => ({...item, description: ''}))\n          },\n          okLabel: 'Yes',\n          cancelLabel: 'No'\n        }))\n    } else {\n      setShowAddItem({...showAddItem, show: false})\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['button-parent']}>\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='hospital-item-list' className={`button-positive ${classes[isActive('hospital-item-list')]}`} onClick={onClickHospitalItem} >\n          Hospital Item List\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='not-covered-reason' className={`button-positive ${classes[isActive('covered-reason')]}`} onClick={onClickNotCoveredReason} >\n          Not Covered Reason\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='reason-for-charging' className={`button-positive ${classes[isActive('charging-reason')]}`} onClick={onClickChargingReason} >\n          Reason for Charging Member\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='claim-source' className={`button-positive ${classes[isActive('claims-source')]}`} onClick={onClickClaimSource} >\n          Claim Source\n        </Button>\n      </div>\n\n      <div className={classes['button-parent']}>\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='reimbursement-return-reason' className={`button-positive ${classes[isActive('return-reason')]}`} onClick={onClickReturnReason} >\n          Reimbursement Return Reason\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='reimbursement-reject-reason' className={`button-positive ${classes[isActive('reject-reason')]}`} onClick={onClickRejectReason} >\n          Reimbursement Reject Reason\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='claim-sub-type' className={`button-positive ${classes[isActive('claims-sub-type')]}`} onClick={onClickClaimSubType} >\n          Claim Sub-Type\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='claim-sub-sub-type' className={`button-positive ${classes[isActive('claims-sub-sub-type')]}`} onClick={onClickClaimSubSubType} >\n          Claim Sub Sub-Type\n        </Button>\n      </div>\n\n      <div className={classes.header}>\n        <div className={classes['header-wrapper']}>\n          <span className={classes['header-text']}> {data.header} </span>\n          <Button disabled={showAddItem.show} variant='contained' color='primary' id='add-item' className='button-positive' onClick={() => setShowAddItem({...showAddItem, show: true, mode: 'add'})} >\n           + Add\n          </Button>\n        </div>\n      </div>\n\n      {showAddItem.show && <div className={classes['add-item-root']}>\n        <div className={classes.wrapper}>\n          <span className={classes['header-text']}>\n            Description:\n          </span>\n          <div className={classes['text-wrapper']}>\n            <TextField\n              id={'description-field'}\n              value={item.description}\n              onChange={event => { setItem({...item, description: event.target.value}) }}\n            />\n          </div>\n          <div className={classes['radio-buttons']}>\n            <div className={classes.activate}>\n              Active:\n              <Radio\n                color='primary'\n                id={'activate'}\n                checked={item.active}\n                onClick={() =>\n                  setItem(\n                    {...item,\n                      status: 'Active',\n                      active: true,\n                      deactivate: false})} />\n            </div>\n            <div className={classes.deactivate}>\n              Deactivate:\n              <Radio\n                color='primary'\n                id={'deactivate'}\n                checked={item.deactivate}\n                onClick={() =>\n                  setItem(\n                    {...item,\n                      status: 'Inactive',\n                      active: false,\n                      deactivate: true})} />\n            </div>\n          </div>\n          <div className={classes['button-wrapper']}>\n            <Button variant='contained' color='primary' id='add-item' className='button-positive' onClick={handleOnSaveItem} >\n              Save\n            </Button>\n            <Button variant='contained' color='primary' id='add-item' className='button-negative' onClick={handleOnCancelItem} >\n              Cancel\n            </Button>\n          </div>\n        </div>\n      </div>}\n\n      {!showAddItem.show && <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <React.Fragment>\n              <TableRow>\n                {columns.map(headCell => (\n                  <TableCell key={headCell.sortField} id={`sort-${headCell.id}`}>\n                    <TableSortLabel\n                      active={data.orderBy === headCell.sortField}\n                      direction={data.order ? 'asc' : 'desc'}\n                      onClick={handleOnSort(headCell.sortField)}\n                    >\n                      {headCell.name}\n                    </TableSortLabel>\n                    <TextField\n                      value={data.filter[headCell.sortField].value || ''}\n                      onChange={event => {\n                        const search = event.target.value\n                        setData(p => ({ ...p, filter: { ...p.filter, [headCell.sortField]: { value: search, match: headCell.match } } }))\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: headCell.sortField,\n                              value: search,\n                              match: headCell.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                    />\n                  </TableCell>\n                ))}\n                <TableCell key={'action'} id={`sort-action`} />\n              </TableRow>\n            </React.Fragment>\n\n          }\n          body={data && data.data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`item-description-${index}`}>{item.description}</TableCell>\n              <TableCell id={`item-status-${index}`}>{item.status}</TableCell>\n              <TableCell align={'center'}>\n                <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`} onClick={() => handleOnEditItem(item)} >\n                  Edit\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={data && data.count}\n          page={data && data.page}\n          limit={data && data.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={handleOnChange}\n        />\n      </div>}\n      <Alert\n        open={showAlert.open}\n        message={showAlert.message}\n        okLabel={showAlert.okLabel}\n        cancelLabel={showAlert.cancelLabel}\n        onCancel={() => setShowAlert(alert => ({...alert, open: false}))}\n        onOk={showAlert.onOk}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\n\n// Pages of Batch Encoder Supervisor\nimport CreatedBundlesPage from './../Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage'\n\n// Pages of Recon User\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Pages of Claims Details Encoder Supervisor\nimport CreatedBatchesPage from './../Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage'\nimport BatchePage from './../Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage'\n\n// Pages of Claims Verifier Supervisor\nimport ClaimsList from '../Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList'\n\n// Pages of PR Supervisor\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\nimport SubmittedPaymentRequestList from './../Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList'\n\n// Pages of Claim Manager\nimport Dashboard from '../Components/ClaimsManager/Dashboard/Dashboard'\n\n// Pages of Payment Request Officer\nimport PaymentRequestPage from '../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\n\n// ClaimsManager\nimport BatchDetailsPage from '../Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage'\n\n// Maintenance Page\nimport MaintenancePage from '../Components/ClaimsManager/MaintenancePage/MaintenancePage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport ClaimsManagerServices from 'Services/Api/ClaimsManagerServices/ClaimsManagerServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Reports',\n    icon: 'chart-bar',\n    to: '/reports'\n  },\n  {\n    label: 'Maintenance',\n    icon: 'tools',\n    to: '/claims/maintenance'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  createdBundles: {\n    text: data => `Created Bundles by Batch Encoder ${data}`,\n    to: data => `/batch-encoder-work/${data}`\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  },\n  forApproval: {\n    text: 'For Approval',\n    to: ''\n  },\n  reimbursement: {\n    text: 'Reimbursement'\n  },\n  assigned: {\n    text: data => 'Created Batches',\n    to: data => `/batches/assigned/${data}`\n  },\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  },\n  maintenance: {\n    text: 'Claims Maintenance',\n    to: '/claims/maintenance'\n  },\n  submittedSpecificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}/submitted`\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'] }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst prManagerPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    close: true\n  }\n}\n\nconst forApprovalPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    return: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: { checkThreshold: true } }\n  }\n}\n\nconst rejectedPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    close: true\n  }\n}\n\nfunction ClaimsManagerRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batch-encoder-work/:user_id' exact component={CreatedBundlesPage} />\n      <Route path='/batch-encoder-work/:user_id/bundles/:bundle_number' exact component={BundlePage} />\n      <Route path='/batches/assigned/:_id' exact component={CreatedBatchesPage} />\n      <Route path='/batches/assigned/:_id/:_batchNumber' exact component={BatchePage} />\n      <Route path='/list/:user_id' exact component={ClaimsList} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n\n      {/* PR Supervisor Pages */}\n      <Route\n        path='/payment-request/:bundle_number/submitted'\n        exact\n        render={props => <SubmittedPaymentRequestPage isManager {...props} />}\n      />\n      <Route\n        path='/payment-request/:bundle_number/submitted/:batch_number'\n        exact\n        render={props => (\n          <BatchDetailsPage ApiService={ClaimsManagerServices} UserManagementApi={UserManagementServices} {...props} />\n        )}\n      />\n      <Route path='/payment-requests/:pr_officer/list' exact component={SubmittedPaymentRequestList} />\n\n      <Route\n        path='/payment-request/:bundle_number/submitted/:batch_number/claim/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={[\n              'dashboard',\n              'submittedPaymentRequest',\n              `submittedSpecificPaymentRequest:${props.match.params.bundle_number}`,\n              `specificBatch:${props.match.params.batch_number}`,\n              'claims',\n              `specificClaim:${props.match.params.claim_number}`\n            ]}\n            {...props}\n            isManager\n            permissions={prManagerPermissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      {/* PR Supervisor Pages */}\n\n      <Route\n        path='/claims/for-approval/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'forApproval']}\n            {...props}\n            permissions={forApprovalPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/reimbursement/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reimbursement']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/recon/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      <Route path='/claims/maintenance' exact component={MaintenancePage} />\n    </Switch>\n  )\n}\n\nexport default ClaimsManagerRoutes\n","import constants from './../../contants'\n\nconst initialState = {\n  items: [],\n  selected: null\n}\nconst bundlesReducer = (state = initialState, action) => {\n  if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_BUNDLE_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'ADD_BUNDLE':\n      return {\n        ...state,\n        items: [action.payload, ...state.items]\n      }\n\n    case 'SET_SELECTED_BUNDLE':\n      return {\n        ...state,\n        selected: action.payload\n      }\n\n    case 'SET_BUNDLE_BATCHES':\n      return {\n        ...state,\n        selected: { ...state.selected, batches: action.payload }\n      }\n\n    case 'ADD_BATCH':\n      const { batches } = state.selected\n      const { items } = batches\n\n      return {\n        ...state,\n        selected: { ...state.selected, batches: { ...batches, items: [action.payload, ...items] } }\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default bundlesReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  items: [],\n  selected: {},\n  batchNumber: '',\n  show: false,\n  action: '',\n  saveControl: false\n}\nconst batchReducer = (state = initialState, action) => {\n  if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_BATCH_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'SET_BATCH_ACTION':\n      return {\n        ...state,\n        action: action.payload\n      }\n\n    case 'SET_SELECTED_BATCH':\n      return {\n        ...state,\n        selected: { ...state.selected, ...action.payload }\n      }\n\n    case 'SET_SHOW_BATCH_FORM':\n      return {\n        ...state,\n        show: action.payload\n      }\n\n    case 'SET_SAVE_BATCH_CONTROL':\n      return {\n        ...state,\n        saveControl: action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default batchReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  doctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  client: {\n    registered_name: [],\n    corporate_account_no: [],\n    data: []\n  }\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  // value of suggestion first render without calling action (temp) reason: action.for is undefined on first render if there's a selector on component\n  // tried to solved by useEffect but failed since useEffect will render after component's rendered\n  if (!action.for) return initialState\n  // value of suggestion calling action (temp) if not equal to BATCH_ENCODING (when calling an action)\n  else if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import { combineReducers } from 'redux'\n\nimport bundlesReducer from './bundlesReducer'\nimport batchReducer from './batchReducer'\nimport suggestionsReducer from './suggestionsReducer'\n\nexport default combineReducers({\n  bundles: bundlesReducer,\n  batch: batchReducer,\n  suggestions: suggestionsReducer\n})\n","import constants from './../../contants'\n\nconst claimReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_ClAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_ClAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'SET_ClAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => index !== _index)\n        }\n      })()\n\n    case 'ADD_ClAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","import constants from './../../contants'\n\nconst claimTypeReducer = (state = '', action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  pro: {\n    id: [],\n    name: [],\n    data: []\n  },\n  facility: {\n    id: [],\n    name: [],\n    data: []\n  },\n  doctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  anesthesiologist: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  pfDoctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  hospitalItem: {\n    id: [],\n    name: [],\n    data: []\n  },\n  icd10: [],\n  cpt: {\n    description: [],\n    code: [],\n    data: []\n  },\n  contract: {\n    years: []\n  }\n}\n\nconst icd10 = {\n  description: [],\n  code: [],\n  data: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'SET_SUGGESTION_ON_ARRAY':\n      return (() => {\n        let { field, index, by, suggestion, data } = action.payload\n\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              i = { ...i, [by]: suggestion, data }\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_SUGGESTION_TO_ARRAY':\n      return (() => {\n        const { field } = action.payload\n        return {\n          ...state,\n          [field]: [...state[field], { ...icd10 }]\n        }\n      })()\n\n    case 'REMOVE_SUGGESTION_TO_ARRAY':\n      return (() => {\n        const { index, field } = action.payload\n        return {\n          ...state,\n          [field]: state[field].filter((i, _index) => index !== _index)\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    case 'RESET_SUGGESTION_ARRAY':\n      return (() => {\n        const { field, index } = action.payload\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              for (let f in icd10) i[f] = icd10[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import constants from './../../contants'\n\nconst dropDownReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","import constants from './../../contants'\n\nconst grandTotalReducer = (state = 0, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_GRAND_TOTAL':\n      return 0\n\n    case 'SET_GRAND_TOTAL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default grandTotalReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    description: '',\n    code: '',\n    tooth_number: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0\n  }\n}\n\nconst dentalProcedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_DENTAL_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default dentalProcedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  notes: [],\n  assignee: { id: '', name: '' },\n  note: ''\n}\n\nconst reassignReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_REASSIGN_NOTES':\n      return initialValue\n\n    case 'SET_REASSIGN_NOTES':\n      return (() => {\n        return {\n          ...state,\n          note: action.payload\n        }\n      })()\n\n    case 'SET_REASSIGN_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reassignReducer\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport grandTotalReducer from './grandTotalReducer'\nimport dentalProcedureReducer from './dentalProcedureReducer'\nimport reassignReducer from './reassignReducer'\n\nexport default combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  grandTotal: grandTotalReducer,\n  dentalProcedure: dentalProcedureReducer,\n  reassign: reassignReducer\n})\n","import constants from './../../contants'\n\nconst claimReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_CLAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_CLAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","import constants from './../../contants'\n\nconst claimTypeReducer = (state = '', action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  pro: {\n    id: [],\n    name: [],\n    data: []\n  },\n  facility: {\n    id: [],\n    name: [],\n    data: []\n  },\n  doctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  anesthesiologist: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  pfDoctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  hospitalItem: {\n    id: [],\n    name: [],\n    data: []\n  },\n  icd10: [],\n  cpt: {\n    description: [],\n    code: [],\n    data: []\n  },\n  contract: {\n    years: []\n  }\n}\n\nconst icd10 = {\n  description: [],\n  code: [],\n  data: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'SET_SUGGESTION_ON_ARRAY':\n      return (() => {\n        let { field, index, by, suggestion, data } = action.payload\n\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              i = { ...i, [by]: suggestion, data }\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_SUGGESTION_TO_ARRAY':\n      return (() => {\n        const { field } = action.payload\n        return {\n          ...state,\n          [field]: [...state[field], { ...icd10 }]\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    case 'RESET_SUGGESTION_ARRAY':\n      return (() => {\n        const { field, index } = action.payload\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              for (let f in icd10) i[f] = icd10[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import constants from './../../contants'\n\nconst dropDownReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst discrepancyReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_DISCREPANCY':\n      return initialValue\n\n    case 'SET_DISCREPANCY':\n      return { ...initialValue, ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default discrepancyReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst errorReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_ERROR':\n      return initialValue\n\n    case 'SET_ERROR':\n      return (() => {\n        return {\n          ...initialValue,\n          ...state,\n          ...action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default errorReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst escalationReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_ESCALATION_MESSAGES':\n      return initialValue\n\n    case 'ADD_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_ESCALATION_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default escalationReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst inquiryReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_INQUIRY_MESSAGES':\n      return initialValue\n\n    case 'ADD_INQUIRY_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_INQUIRY_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_INQUIRY_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_INQUIRY_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default inquiryReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst reassignReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_REASSIGN_MESSAGES':\n      return initialValue\n\n    case 'ADD_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_REASSIGN_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reassignReducer\n","import constants from './../../contants'\n\nconst initialValue = true\n\nconst rejectReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_REJECT_CONTROL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default rejectReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: []\n}\n\nconst reconReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_RECON_NOTES':\n      return initialValue\n\n    case 'SET_RECON_NOTES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reconReducer\n","import constants from './../../contants'\n\nconst initialValue = '--'\n\nconst utilizationReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_LIMIT_TYPE':\n      return (state = action.payload)\n\n    case 'RESET_LIMIT_TYPE':\n      return initialValue\n\n    default:\n      return state\n  }\n}\n\nexport default utilizationReducer\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport discrepancyReducer from './discrepancyReducer'\nimport errorReducer from './errorReducer'\nimport escalationReducer from './escalationReducer'\nimport inquiryReducer from './inquiryReducer'\nimport reassignReducer from './reassignReducer'\nimport rejectReducer from './rejectReducer'\nimport reconReducer from './reconReducer'\nimport utilizationReducer from './utilizationReducer'\n\nconst reducers = combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  discrepancy: discrepancyReducer,\n  error: errorReducer,\n  inquiries: inquiryReducer,\n  escalations: escalationReducer,\n  reassign: reassignReducer,\n  rejectStatus: rejectReducer,\n  recon: reconReducer,\n  title: utilizationReducer\n})\n\nexport default reducers\n","import { createStore } from 'redux'\nimport reducers from './reducers'\n\nconst args = [reducers]\n\nif (process.env.REACT_APP_SELECTED_STORE === 'CLAIMS') {\n  args.push(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nexport default createStore(...args)\n","import { combineReducers } from 'redux'\nimport BatchEncoding from './BatchEncoding'\nimport ClaimsEncoding from './ClaimsEncoding'\nimport ClaimsAnalysis from './ClaimsAnalysis'\n\nconst reducers = combineReducers({\n  BatchEncoding,\n  ClaimsEncoding,\n  ClaimsAnalysis\n})\n\nexport default reducers\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Routes by role\nimport BatchEncoderRoutes from './Routes/BatchEncoder'\nimport BatchEncoderSupervisorRoutes from './Routes/BatchEncoderSupervisor'\nimport ClaimsDetailsEncoderRoutes from './Routes/ClaimsDetailsEncoder'\nimport ClaimsDetailsEncoderSupervisorRoutes from './Routes/ClaimsDetailsEncoderSupervisor'\nimport ClaimsAnalystRoutes from './Routes/ClaimsAnalyst'\nimport PaymentRequestRoutes from './Routes/PaymentRequest'\nimport PaymentRequestSupervisorRoutes from './Routes/PaymentRequestSupervisor'\nimport MedicalConsultantRoutes from './Routes/MedicalConsultant'\nimport ClaimsReconRoutes from './Routes/ClaimsRecon'\nimport ClaimsVerifierSupervisorRoutes from './Routes/ClaimsVerifierSupervisor'\nimport ClaimsManagerRoutes from './Routes/ClaimsManager'\n\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Store\nimport { Provider } from 'react-redux'\nimport Store from './Store'\n\nexport default function ClaimsModule ({ history }) {\n  const [userRole, setUserRole] = React.useState('')\n  const [isLoading, setIsLoading] = React.useState(true)\n\n  React.useEffect(() => {\n    document.title = 'HIMS - Claims'\n    const role = localStorage.getItem('role')\n    setUserRole(role)\n    setIsLoading(false)\n  }, [])\n\n  const batchEncoderLogic = () => {\n    if (localStorage.getItem('from_login')) {\n      BatchEncodingServices.createBundle().then(res => {\n        const { data } = res.data\n        localStorage.removeItem('from_login')\n        history.push(`/bundles/${data}/create`)\n      })\n    } else return <Route path='/' component={BatchEncoderRoutes} />\n  }\n\n  return (\n    <Provider store={Store}>\n      {!isLoading && (\n        <Switch>\n          {userRole === 'BATCH_ENCODER' && batchEncoderLogic()}\n          {userRole === 'BATCH_ENCODER_SUPERVISOR' && <Route path='/' component={BatchEncoderSupervisorRoutes} />}\n\n          {userRole === 'CLAIMS_ENCODER' && <Route path='/' component={ClaimsDetailsEncoderRoutes} />}\n          {userRole === 'CLAIMS_DETAILS_ENCODER' && <Route path='/' component={ClaimsDetailsEncoderRoutes} />}\n          {userRole === 'CLAIMS_DETAILS_ENCODER_SUPERVISOR' && (\n            <Route path='/' component={ClaimsDetailsEncoderSupervisorRoutes} />\n          )}\n\n          {userRole === 'CLAIMS_VERIFIER' && <Route path='/' component={ClaimsAnalystRoutes} />}\n          {userRole === 'CLAIMS_ANALYST' && <Route path='/' component={ClaimsAnalystRoutes} />}\n\n          {userRole === 'PR_OFFICER' && <Route path='/' component={PaymentRequestRoutes} />}\n          {userRole === 'PR_OFFICER_SUPERVISOR' && <Route path='/' component={PaymentRequestSupervisorRoutes} />}\n\n          {userRole === 'MEDICAL_CONSULTANT' && <Route path='/' component={MedicalConsultantRoutes} />}\n\n          {userRole === 'CLAIMS_RECON' && <Route path='/' component={ClaimsReconRoutes} />}\n\n          {userRole === 'CLAIMS_VERIFIER_SUPERVISOR' && <Route path='/' component={ClaimsVerifierSupervisorRoutes} />}\n          {userRole === 'CLAIMS_SUPERVISOR' && <Route path='/' component={ClaimsVerifierSupervisorRoutes} />}\n\n          {userRole === 'CLAIMS_MANAGER' && <Route path='/' component={ClaimsManagerRoutes} />}\n        </Switch>\n      )}\n    </Provider>\n  )\n}\n","import numeral from 'numeral'\nimport moment from 'moment'\n\nconst CurrencyFormatter = value => {\n  return numeral(value).format('0,0.00')\n}\n\nconst UpperWord = sentence => {\n  return sentence.charAt(0).toUpperCase() + sentence.slice(1)\n}\n\nconst DigitFormatter = value => {\n  return numeral(value).format('0,0')\n}\n\nconst DateFormatter = (value, format = 'MM/DD/YYYY') => {\n  const _value = moment(value)\n  return _value.isValid() ? moment(value).format(format) : ''\n}\n\nconst DateFormatterByAbbreviation = (value, format = 'MMM DD, YYYY') => {\n  return moment(value).format(format)\n}\n\nconst DateFormatterFromNow = value => {\n  return moment(value).fromNow()\n}\n\nconst LargeNumberFormatter = value => {\n  return parseFloat(numeral(value).format('0,0.00'))\n}\n\nconst NameFormatter = args => {\n  const { initial, abr } = args\n  const { lastName, firstName, middleName } = args\n  const { last_name, first_name, middle_name } = args\n\n  return {\n    format1: [lastName || last_name, ',', firstName || first_name, middleName || middle_name, initial, abr]\n      .filter(Boolean)\n      .join(' '),\n    format2: [abr, firstName || first_name, middleName || middle_name, lastName || last_name, initial]\n      .filter(Boolean)\n      .join(' ')\n  }\n}\n\nexport {\n  CurrencyFormatter,\n  DigitFormatter,\n  UpperWord,\n  DateFormatter,\n  DateFormatterByAbbreviation,\n  DateFormatterFromNow,\n  LargeNumberFormatter,\n  NameFormatter\n}\n","import 'date-fns'\nimport React from 'react'\nimport MomentUtils from '@date-io/moment'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nimport classes from './DatePicker.module.scss'\n\n/**\n * Props\n * id\n * label\n * required\n * value - should be date type\n * format\n * onChange\n *\n * other props\n * https://material-ui-pickers.dev/api/KeyboardDatePicker\n */\nexport default function DatePicker (props) {\n  const {\n    id,\n    label,\n    required,\n    value,\n    format,\n    disableComponents = false,\n    readOnly,\n    onChange,\n    error,\n    tabindex,\n    noMargin = false,\n    ...other\n  } = props\n  const [open, setOpen] = React.useState(false)\n  const [selectedDate, setSelectedDate] = React.useState()\n\n  const InputRef = React.useRef()\n  const [focus, setFocus] = React.useState()\n\n  React.useEffect(() => {\n    setSelectedDate(new Date(value))\n  }, [value])\n\n  const handleOnClose = () => {\n    setOpen(false)\n    handleOnFocus()\n  }\n  const handleDateChange = date => {\n    setOpen(false)\n    setSelectedDate(date)\n    if (typeof onChange === 'function') onChange(date)\n\n    handleOnFocus()\n  }\n\n  const handleOnFocus = () => {\n    setFocus(true)\n    setTimeout(() => InputRef.current.focus(), 1)\n  }\n\n  const handleOnBlur = e => {\n    if (e.currentTarget.contains(e.relatedTarget)) return\n    setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {DateFormatter(props.value)}\n          </Typography>\n        ) : (\n          <MuiPickersUtilsProvider utils={MomentUtils}>\n            <KeyboardDatePicker\n              TextFieldComponent={p => (\n                <React.Fragment>\n                  <Paper\n                    className={`${classes['text-field']} ${noMargin ? classes['no-margin'] : ''}  ${\n                      error ? classes['has-error'] : focus && classes.focus\n                    } box-shadow-field ${disableComponents && classes.disabled}`}\n                    onBlur={handleOnBlur}\n                  >\n                    <InputBase\n                      id={id}\n                      inputProps={{ ref: InputRef }}\n                      className={classes.input}\n                      value={p.value}\n                      onFocus={handleOnFocus}\n                      disabled={disableComponents}\n                    />\n\n                    <div className={classes['date-button']}>\n                      <IconButton\n                        id={`${id}-date-button`}\n                        className={classes.button}\n                        disabled={disableComponents}\n                        size='small'\n                        onClick={() => setOpen(true)}\n                      >\n                        <FontAwesomeIcon icon='calendar-day' className={classes.icon} />\n                      </IconButton>\n                    </div>\n                  </Paper>\n                  {error && <span className={classes.error}>{error}</span>}\n                </React.Fragment>\n              )}\n              value={selectedDate}\n              format={'MM/DD/YYYY' || format}\n              open={open}\n              onClose={handleOnClose}\n              onChange={handleDateChange}\n              {...other}\n            />\n          </MuiPickersUtilsProvider>\n        )}\n      </div>\n    </div>\n  )\n}\n","const extract = args => {\n  let { value, error = {} } = args\n\n  let _errors\n\n  error = error || {}\n\n  if (error.details) {\n    _errors = {}\n    for (let e of error.details) {\n      const [field] = e.path\n      const message = e.message\n      _errors[field] = message\n    }\n  }\n\n  return { value, error: _errors }\n}\n\nexport default extract\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nexport default function Alert (props) {\n  const defaultFunction = () => {}\n  const {\n    message,\n    open = false,\n    cancelLabel,\n    okLabel,\n    onOk = defaultFunction,\n    onCancel = defaultFunction,\n    onClose = defaultFunction\n  } = props\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>{message}</DialogTitle>\n        <DialogActions>\n          {cancelLabel && (\n            <Button\n              id='alert-dialog-cancel'\n              onClick={onCancel}\n              variant='contained'\n              color='primary'\n              className='button-negative'\n            >\n              {cancelLabel}\n            </Button>\n          )}\n\n          {okLabel && (\n            <Button\n              id='alert-dialog-ok'\n              onClick={onOk}\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              autoFocus\n            >\n              {okLabel}\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\n// import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport LastPageIcon from '@material-ui/icons/LastPage'\n\n// Styles\nimport classes from './Table.module.scss'\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}))\n\nfunction TablePaginationActions (props) {\n  const classes = useStyles1()\n  const theme = useTheme()\n  const { count, page, rowsPerPage, onChangePage } = props\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0)\n  }\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1)\n  }\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1)\n  }\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label='first page'>\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label='previous page'>\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='last page'\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  )\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n}\n\nexport default function CustomTable ({\n  TableContainerProps,\n  TableProps,\n  head,\n  body,\n  pagination = true,\n  count = 0,\n  page = 1,\n  limit = 10,\n  rowsPerPageOptions = [5, 10, 25],\n  onChange\n}) {\n  // const emptyRows = limit - Math.min(limit, count - (page - 1) * limit)\n\n  const handleChangePage = (event, newPage) => {\n    onChange({ page: newPage + 1 })\n  }\n\n  const handleChangeRowsPerPage = event => {\n    const value = parseInt(event.target.value)\n    onChange({ limit: value, page: 1 })\n  }\n\n  return (\n    <React.Fragment>\n      <TableContainer component={Paper} className={classes.root} {...TableContainerProps}>\n        <Table className={classes.table} aria-label='custom pagination table' {...TableProps}>\n          <TableHead>{head}</TableHead>\n          <TableBody>\n            {body}\n            {/* {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows, backgroundColor: 'white' }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Table className={classes.footer}>\n        <TableBody>\n          <TableRow>\n            {pagination && (\n              <TablePagination\n                rowsPerPageOptions={rowsPerPageOptions}\n                count={count}\n                rowsPerPage={limit}\n                page={page - 1}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            )}\n          </TableRow>\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    minWidth: 400,\n    border: '1px solid transparent'\n  },\n  focus: {\n    borderColor: 'green'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n})\n\nexport default function SearchTextComponent ({ value, onChange, placeholder = '', id }) {\n  const classes = useStyles()\n\n  const [focus, setFocus] = React.useState()\n\n  return (\n    <Paper className={`${classes.root} ${focus && classes.focus} box-shadow-field`} onBlur={() => setFocus(false)}>\n      <IconButton className={classes.iconButton} aria-label='search'>\n        <SearchIcon />\n      </IconButton>\n      <InputBase\n        id={id}\n        className={classes.input}\n        placeholder={placeholder}\n        value={value || null}\n        onChange={e => onChange && onChange(e)}\n        autoComplete='off'\n        onFocus={() => setFocus(true)}\n      />\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\nimport classes from './TextFieldCurrency.module.scss'\nexport default function TextFieldCurrency (props) {\n  const { label = '', required, currency = true, readOnly, error, onChange, ...other } = props\n\n  const [focus, setFocus] = React.useState()\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {CurrencyFormatter(other.value)}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n            >\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                thousandSeparator\n                decimalScale={2}\n                fixedDecimalScale\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { floatValue } = values\n                  return floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n                onBlur={() => setFocus(false)}\n                // {...other}\n              />\n              {currency && (\n                <div className={classes.currency}>\n                  <Typography variant='subtitle2' className={classes.label}>\n                    PHP\n                  </Typography>\n                </div>\n              )}\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\n// CSS Classes\nimport classes from './TaskTrayComponent.module.scss'\n\nexport default function TaskTrayComponent ({ children, sizes, title = 'TASK TRAY', showTitle = true }) {\n  let items = React.Children.toArray(children)\n\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'DashboardTileComponent') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n\n  const _sizes = sizes || {\n    xs: 12,\n    sm: 6,\n    lg: 4\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container className={classes.root}>\n        {showTitle && (\n          <Typography variant='subtitle1' className={classes.title}>\n            {title}\n          </Typography>\n        )}\n        <Grid container className={classes.wrapper} spacing={3}>\n          {items.map((item, index) => {\n            let itemSize = item.props.sizes || {}\n            let s = { ..._sizes, ...itemSize }\n            return (\n              <Grid item {...s} key={index}>\n                {item}\n              </Grid>\n            )\n          })}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__2LrBe\",\"teeth\":\"style_teeth__2oVTW\",\"flip-x\":\"style_flip-x__1PGnc\",\"flip-y\":\"style_flip-y__33IP9\",\"crown\":\"style_crown__1599k\",\"gums\":\"style_gums__11FhV\",\"extracted\":\"style_extracted__3PnGn\",\"filled\":\"style_filled__1lsjD\",\"other-details\":\"style_other-details__NUZKH\",\"circle\":\"style_circle__15989\"};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n      }\n      : {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.secondary.dark\n      },\n  spacer: {\n    flex: '1 1 100%'\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: '0 0 auto'\n  }\n}))\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles()\n  const { numSelected } = props\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color='inherit' variant='subtitle1'>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant='h6' id='tableTitle'>\n            Nutrition\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title='Delete'>\n            <IconButton aria-label='delete'>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title='Filter list'>\n            <IconButton aria-label='filter list'>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  analystTable: {\n    minWidth: 650\n  },\n  tableWrapper: {\n    overflowX: 'hidden'\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}))\n\nexport default function EnhancedTable (props) {\n  const {\n    headCells,\n    children,\n    handleRequestSort,\n    handleSelectAllClick,\n    order,\n    orderBy,\n    pagination,\n    checkAll,\n    sorter,\n    size,\n    indeterminate,\n    checked,\n    checkboxColor,\n    analyst,\n    allowCheck = true,\n    allowCheckDisabled = false,\n    selectStatus = false\n  } = props\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\n        <div className={classes.tableWrapper}>\n          <Table\n            className={`${analyst ? classes.analystTable : classes.table}`}\n            aria-labelledby='tableTitle'\n            size={size}\n          >\n            <TableHead>\n              <TableRow>\n                {selectStatus\n                  ? checkAll && (\n                    <TableCell padding='checkbox'>\n                      {allowCheck ? (\n                        <Checkbox\n                          disabled={allowCheckDisabled}\n                          indeterminate={indeterminate}\n                          checked={checked}\n                          onChange={handleSelectAllClick}\n                          color={checkboxColor}\n                        />\n                      ) : null}\n                    </TableCell>\n                  )\n                  : null}\n\n                {headCells.map(headCell => (\n                  <TableCell\n                    key={headCell.id}\n                    align={headCell.center ? 'center' : headCell.numeric ? 'right' : 'left'}\n                    padding={headCell.disablePadding ? 'none' : 'default'}\n                    sortDirection={orderBy === headCell.id ? order : false}\n                    width={headCell.width}\n                    id={headCell.id}\n                  >\n                    {sorter ? (\n                      <TableSortLabel\n                        active={orderBy === headCell.id}\n                        direction={order}\n                        onClick={event => handleRequestSort(event, headCell.id)}\n                      >\n                        {headCell.label}\n                        {orderBy === headCell.id ? (\n                          <span className={classes.visuallyHidden}>\n                            {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                          </span>\n                        ) : null}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            {children}\n          </Table>\n        </div>\n        {pagination && <TablePagination component='div' {...pagination} />}\n      </Paper>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Table_root__1yDG4\",\"loader\":\"Table_loader__jTLoL\",\"footer\":\"Table_footer__3Si1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TaskTrayComponent_root__31ufL\",\"title\":\"TaskTrayComponent_title__2hrpU\",\"wrapper\":\"TaskTrayComponent_wrapper__1iTYD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePicker_root__MX4vO\",\"label\":\"DatePicker_label__2BW98\",\"wrapper\":\"DatePicker_wrapper__3veK8\",\"read-only-value\":\"DatePicker_read-only-value__2RKjx\",\"text-field\":\"DatePicker_text-field__2A671\",\"no-margin\":\"DatePicker_no-margin__2gW7n\",\"input\":\"DatePicker_input__2NmuO\",\"date-button\":\"DatePicker_date-button__NIXXn\",\"focus\":\"DatePicker_focus__QzQPi\",\"has-error\":\"DatePicker_has-error__dQMqm\",\"disabled\":\"DatePicker_disabled__1dIUt\",\"error\":\"DatePicker_error__3kYtU\",\"date\":\"DatePicker_date__3vBBF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldCurrency_root__fkWBS\",\"label\":\"TextFieldCurrency_label__3VB-Y\",\"wrapper\":\"TextFieldCurrency_wrapper__2DwLz\",\"read-only-value\":\"TextFieldCurrency_read-only-value__3klW0\",\"text-field\":\"TextFieldCurrency_text-field__2ZFkS\",\"input\":\"TextFieldCurrency_input__3v0Q_\",\"currency\":\"TextFieldCurrency_currency__20Xbk\",\"focus\":\"TextFieldCurrency_focus__3OqZJ\",\"has-error\":\"TextFieldCurrency_has-error__fUhVi\",\"error\":\"TextFieldCurrency_error__3bHzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DashboardTileComponent_root__3ZFup\",\"wrapper\":\"DashboardTileComponent_wrapper__1hVRB\",\"header\":\"DashboardTileComponent_header__2_IQZ\",\"input\":\"DashboardTileComponent_input__sFY_A\",\"first-row\":\"DashboardTileComponent_first-row__KbzvW\",\"count\":\"DashboardTileComponent_count__NJO1q\",\"filter\":\"DashboardTileComponent_filter__3FsXI\",\"second-row\":\"DashboardTileComponent_second-row__1xXpk\",\"title\":\"DashboardTileComponent_title__1vnM-\",\"list\":\"DashboardTileComponent_list__38Z1j\",\"action\":\"DashboardTileComponent_action__2L_x5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__8Tg0R\",\"header-container\":\"ViewList_header-container__2ebNU\",\"header\":\"ViewList_header__1yXdi\",\"title\":\"ViewList_title__2CYeW\",\"content\":\"ViewList_content__boknL\",\"search\":\"ViewList_search__2dgTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TicketListComponent_root__aFbrR\",\"title\":\"TicketListComponent_title__1ySxt\",\"wrapper\":\"TicketListComponent_wrapper__19DvO\",\"content\":\"TicketListComponent_content__2qWWX\",\"header\":\"TicketListComponent_header__1OiZt\",\"input\":\"TicketListComponent_input__1VLul\",\"count\":\"TicketListComponent_count__3DIoE\",\"filter\":\"TicketListComponent_filter__1CeKK\",\"list\":\"TicketListComponent_list__314I6\",\"action\":\"TicketListComponent_action__Ufizk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__oAI_u\",\"tiles\":\"Dashboard_tiles__2syUb\",\"task-tray\":\"Dashboard_task-tray__XT4CQ\",\"list-item\":\"Dashboard_list-item__12cH_\",\"details\":\"Dashboard_details__KoE3I\",\"detail-item\":\"Dashboard_detail-item__1IcO1\",\"label\":\"Dashboard_label__27GN_\",\"content\":\"Dashboard_content__1bf_x\",\"action\":\"Dashboard_action__3rzPy\",\"ticket-list\":\"Dashboard_ticket-list__2n3Wk\",\"completed_task\":\"Dashboard_completed_task__1hbob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoComplete_root__2814h\",\"label\":\"AutoComplete_label__3-iRy\",\"wrapper\":\"AutoComplete_wrapper__2kjw3\",\"read-only-value\":\"AutoComplete_read-only-value__6V5Rg\",\"autocomplete-field\":\"AutoComplete_autocomplete-field__DKxfc\",\"form-control\":\"AutoComplete_form-control__izw0T\",\"input\":\"AutoComplete_input__1okbY\",\"suggestions\":\"AutoComplete_suggestions__3l5Zj\",\"focus\":\"AutoComplete_focus__2WKYu\",\"has-error\":\"AutoComplete_has-error__1GzeK\",\"error\":\"AutoComplete_error__QM8Cw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldNumber_root__ZJK7b\",\"label\":\"TextFieldNumber_label__3x30X\",\"wrapper\":\"TextFieldNumber_wrapper__26xqZ\",\"read-only-value\":\"TextFieldNumber_read-only-value__37dIc\",\"text-field\":\"TextFieldNumber_text-field__2-te1\",\"input\":\"TextFieldNumber_input__2aj-i\",\"focus\":\"TextFieldNumber_focus__1VUVD\",\"has-error\":\"TextFieldNumber_has-error__2Z7EW\",\"error\":\"TextFieldNumber_error__1YPiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BundleDetails_root__1kDZ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchList_root__1b5fa\",\"buttonWrapper\":\"BatchList_buttonWrapper__NCrl5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DropDown_root__1k5bx\",\"label\":\"DropDown_label__nY7ih\",\"wrapper\":\"DropDown_wrapper__3QKA8\",\"read-only-value\":\"DropDown_read-only-value__kiJtQ\",\"select-container\":\"DropDown_select-container__cdS_q\",\"select\":\"DropDown_select__3X8Jg\",\"input\":\"DropDown_input__2BzGr\",\"focus\":\"DropDown_focus__9njFf\",\"has-error\":\"DropDown_has-error__1knu_\",\"disabled\":\"DropDown_disabled__NMExl\",\"error\":\"DropDown_error__21XnZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchForm_root__1Rotq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"BundlePage_header__14ooW\",\"title\":\"BundlePage_title__1Lc1W\",\"root\":\"BundlePage_root__a3kNL\",\"list-header\":\"BundlePage_list-header__1bSSF\",\"actions\":\"BundlePage_actions__3D_Z5\",\"bundle-details\":\"BundlePage_bundle-details__2awUE\",\"batch-list\":\"BundlePage_batch-list__3fbdk\",\"table-container\":\"BundlePage_table-container__4YbDV\",\"buttonWrapper\":\"BundlePage_buttonWrapper__y7DXv\",\"delete-button\":\"BundlePage_delete-button__2Bc0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NewBundlePage_root__30-wL\",\"upload-container\":\"NewBundlePage_upload-container__1tAyb\",\"label\":\"NewBundlePage_label__tShUk\",\"form\":\"NewBundlePage_form__2WWBk\",\"inputs\":\"NewBundlePage_inputs__1PsuR\",\"input\":\"NewBundlePage_input__l22M7\",\"actions\":\"NewBundlePage_actions__1XH58\",\"save\":\"NewBundlePage_save__I7VG0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadSpace_root__3I1-s\",\"dragged\":\"UploadSpace_dragged__1DiLS\",\"container\":\"UploadSpace_container__38f8b\",\"clickable\":\"UploadSpace_clickable__20X37\",\"icon\":\"UploadSpace_icon__13iY0\",\"label\":\"UploadSpace_label__bx5xk\",\"warning\":\"UploadSpace_warning__2UISF\",\"progress-container\":\"UploadSpace_progress-container__2XgEq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DynamicTable_root__3YBZd\",\"file-name-container\":\"DynamicTable_file-name-container__l4skU\",\"file-name\":\"DynamicTable_file-name__I3JZH\",\"icon\":\"DynamicTable_icon__384D9\",\"table\":\"DynamicTable_table__IETmG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DataPairs_root__3KG2O\",\"header\":\"DataPairs_header__Bkti-\",\"child\":\"DataPairs_child__3_ngq\",\"source\":\"DataPairs_source__HI-Vj\",\"target\":\"DataPairs_target__Eu-V-\",\"action\":\"DataPairs_action__2HV-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FieldMapper_root__3_tUQ\",\"section\":\"FieldMapper_section__3oEw5\",\"groups\":\"FieldMapper_groups__2HNYq\",\"input\":\"FieldMapper_input__2Mszl\",\"field\":\"FieldMapper_field__2nwpO\",\"label\":\"FieldMapper_label__1skyK\",\"table\":\"FieldMapper_table__2XzRc\",\"dialog\":\"FieldMapper_dialog__3aDtJ\",\"header-container\":\"FieldMapper_header-container__2JtIE\",\"header\":\"FieldMapper_header__QCFUW\",\"title\":\"FieldMapper_title__3E3Bf\",\"content\":\"FieldMapper_content__b3Uqj\",\"footer\":\"FieldMapper_footer__3NYKX\",\"action\":\"FieldMapper_action__2Ci4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3S9k1\",\"total\":\"Footer_total__J2brc\",\"total-row\":\"Footer_total-row__1-a_2\",\"total-cell\":\"Footer_total-cell__1mHdx\",\"all-signatories\":\"Footer_all-signatories__D7Jtv\",\"signatories\":\"Footer_signatories__5ifAW\",\"username\":\"Footer_username__XtPqM\",\"line-note\":\"Footer_line-note__3Yc0m\",\"line-received\":\"Footer_line-received__hTOdG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TransmittalReport_root__2Zv5z\",\"header\":\"TransmittalReport_header__3HLGH\",\"typo\":\"TransmittalReport_typo__fEzQn\",\"disabled\":\"TransmittalReport_disabled__c3RPY\",\"content\":\"TransmittalReport_content__3gJmG\",\"filter\":\"TransmittalReport_filter__yA5bA\",\"input\":\"TransmittalReport_input__3LyoB\",\"submit\":\"TransmittalReport_submit__1KdcG\",\"search-header\":\"TransmittalReport_search-header__1szum\",\"search-header-child\":\"TransmittalReport_search-header-child__2rNI2\",\"column\":\"TransmittalReport_column__1Ym0x\",\"body\":\"TransmittalReport_body__Jwdpc\",\"table\":\"TransmittalReport_table__1dZl9\",\"right\":\"TransmittalReport_right__aUA6x\",\"h_amount\":\"TransmittalReport_h_amount__1vDfc\",\"h_ar\":\"TransmittalReport_h_ar__3mcku\",\"h_member\":\"TransmittalReport_h_member__34GFq\",\"h_date\":\"TransmittalReport_h_date__3mIHa\",\"handling\":\"TransmittalReport_handling__3U64z\",\"table-row\":\"TransmittalReport_table-row__1AHwB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsUtilLedgerReport_root__i6NTZ\",\"header\":\"ClaimsUtilLedgerReport_header__6XGzc\",\"content\":\"ClaimsUtilLedgerReport_content__l8uG4\",\"filter\":\"ClaimsUtilLedgerReport_filter__JCkmp\",\"input\":\"ClaimsUtilLedgerReport_input__3Z3xr\",\"submit\":\"ClaimsUtilLedgerReport_submit__1QcUA\",\"body\":\"ClaimsUtilLedgerReport_body__M0UX_\",\"table\":\"ClaimsUtilLedgerReport_table__25ckM\",\"table-row\":\"ClaimsUtilLedgerReport_table-row__279cy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1q5aB\",\"tiles\":\"Dashboard_tiles__2EVcx\",\"row\":\"Dashboard_row__1-jaR\",\"task-tray\":\"Dashboard_task-tray__1GVCA\",\"list-item\":\"Dashboard_list-item__3bt0O\",\"details\":\"Dashboard_details__vEx2z\",\"detail-item\":\"Dashboard_detail-item__2vLSc\",\"label\":\"Dashboard_label__1wDfJ\",\"content\":\"Dashboard_content__3ngEB\",\"action\":\"Dashboard_action__1YK0T\",\"ticket-list\":\"Dashboard_ticket-list__2qkpP\",\"wrapper\":\"Dashboard_wrapper__30OUo\",\"float\":\"Dashboard_float__vdcOu\",\"completed_task\":\"Dashboard_completed_task__2zPQO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__23Ujl\",\"header-container\":\"AssignDialog_header-container__yl2nA\",\"header\":\"AssignDialog_header__3VGqX\",\"title\":\"AssignDialog_title__3z9IT\",\"content\":\"AssignDialog_content__ibboc\",\"input\":\"AssignDialog_input__2xDp_\",\"footer\":\"AssignDialog_footer__26ROV\",\"assign\":\"AssignDialog_assign__b5j_4\",\"to\":\"AssignDialog_to__4uznN\",\"action\":\"AssignDialog_action__3Hmu9\",\"message-content\":\"AssignDialog_message-content__3scNs\",\"message\":\"AssignDialog_message__WFHxL\",\"message-child\":\"AssignDialog_message-child__1-8nz\",\"alert-title\":\"AssignDialog_alert-title__2Werr\",\"footer-action\":\"AssignDialog_footer-action__1CV67\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CreatedBundlesPage_root__3yhzm\",\"content\":\"CreatedBundlesPage_content__38yCp\",\"first-container\":\"CreatedBundlesPage_first-container__22tad\",\"action\":\"CreatedBundlesPage_action__16R81\",\"search\":\"CreatedBundlesPage_search__1ZBFS\",\"table\":\"CreatedBundlesPage_table__295G-\",\"footer\":\"CreatedBundlesPage_footer__2xe-r\",\"actions\":\"CreatedBundlesPage_actions__3feoS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DiscrepancyBase_root__3KSsR\",\"input-wrapper\":\"DiscrepancyBase_input-wrapper__1DMc_\",\"max-width\":\"DiscrepancyBase_max-width__AgMfs\",\"auto-width\":\"DiscrepancyBase_auto-width__3hZoL\",\"discrepancy\":\"DiscrepancyBase_discrepancy__EFJsJ\",\"discrepancy-icon\":\"DiscrepancyBase_discrepancy-icon__278mF\",\"with-margin\":\"DiscrepancyBase_with-margin__3UThX\",\"icon\":\"DiscrepancyBase_icon__3BUJ7\",\"display-hidden\":\"DiscrepancyBase_display-hidden__2uBK6\",\"display-none\":\"DiscrepancyBase_display-none__3au4S\",\"message\":\"DiscrepancyBase_message__10P-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClientMemberLookup_root__3O8kK\",\"search\":\"ClientMemberLookup_search__2Crg2\",\"table\":\"ClientMemberLookup_table__vUzoY\",\"input\":\"ClientMemberLookup_input__1zsR_\",\"selected\":\"ClientMemberLookup_selected__25J7P\",\"default-override\":\"ClientMemberLookup_default-override__2M4nX\",\"footer\":\"ClientMemberLookup_footer__1TxMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClientMemberModal_root__nf2t4\",\"header-container\":\"ClientMemberModal_header-container__2TpBd\",\"header\":\"ClientMemberModal_header__3jFfv\",\"title\":\"ClientMemberModal_title__aQLcu\",\"content\":\"ClientMemberModal_content__1ZzDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"BaseDetails_groups__3iH6M\",\"input\":\"BaseDetails_input__33wlu\",\"wrapper\":\"BaseDetails_wrapper__36CBG\",\"no-pad\":\"BaseDetails_no-pad__hmdGm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__2UDqG\",\"header\":\"ICDTextField_header___QvWL\",\"delete\":\"ICDTextField_delete__1QGhl\",\"description\":\"ICDTextField_description__3nYcX\",\"code\":\"ICDTextField_code__3U5AV\",\"primary\":\"ICDTextField_primary__1iHwC\",\"discrepancy\":\"ICDTextField_discrepancy__S1yCX\",\"wrapper\":\"ICDTextField_wrapper__2CKYW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__1e8te\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__PsY8D\",\"has-error\":\"DiagnosisList_has-error__2xPng\",\"title\":\"DiagnosisList_title__1qdNr\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__2ON5n\",\"error\":\"DiagnosisList_error__1Vbz5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expandable\":\"CustomTable_expandable__1imJS\",\"container\":\"CustomTable_container__3quUk\",\"content\":\"CustomTable_content__258N4\",\"open\":\"CustomTable_open__2q7AF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__32M3A\",\"groups\":\"ProcedureForm_groups__dcIQZ\",\"input\":\"ProcedureForm_input__38bS_\",\"description\":\"ProcedureForm_description__2Hdy7\",\"code\":\"ProcedureForm_code__i2i2k\",\"buttons\":\"ProcedureForm_buttons__2CdpF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__3AdZk\",\"table\":\"ProcedureList_table__10YsE\",\"table-header\":\"ProcedureList_table-header__17a3B\",\"table-description\":\"ProcedureList_table-description__22Tav\",\"add-link\":\"ProcedureList_add-link__Jk8bg\",\"row\":\"ProcedureList_row__1SUZy\",\"align\":\"ProcedureList_align__3E32S\",\"center\":\"ProcedureList_center__3umXK\",\"right\":\"ProcedureList_right__yYRNE\",\"discrepancy\":\"ProcedureList_discrepancy__3nlct\",\"icon-container\":\"ProcedureList_icon-container__-1hA_\",\"table-total\":\"ProcedureList_table-total__a6mY3\",\"caption\":\"ProcedureList_caption__aqG17\",\"amount\":\"ProcedureList_amount__3Wz7S\",\"groups\":\"ProcedureList_groups__3j6lu\",\"input\":\"ProcedureList_input__nZI-i\",\"buttons\":\"ProcedureList_buttons__1cLC0\",\"table-grid\":\"ProcedureList_table-grid__20Uo9\",\"message\":\"ProcedureList_message__2P1i6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__1FWwW\",\"groups\":\"HospitalItemForm_groups__2XyW6\",\"input\":\"HospitalItemForm_input__1y2VP\",\"description\":\"HospitalItemForm_description__1tsvR\",\"code\":\"HospitalItemForm_code__3bAga\",\"buttons\":\"HospitalItemForm_buttons__3Rewh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__3P8XU\",\"table\":\"HospitalItemList_table__1_Iw2\",\"table-header\":\"HospitalItemList_table-header__1nWDu\",\"table-description\":\"HospitalItemList_table-description__2RsHb\",\"add-link\":\"HospitalItemList_add-link__Ap2Fd\",\"row\":\"HospitalItemList_row__3Y9w1\",\"align\":\"HospitalItemList_align__3Cquk\",\"center\":\"HospitalItemList_center__2uJ8Q\",\"right\":\"HospitalItemList_right__1YzKx\",\"discrepancy\":\"HospitalItemList_discrepancy__2rt0u\",\"icon-container\":\"HospitalItemList_icon-container__37b7k\",\"table-total\":\"HospitalItemList_table-total__35dxK\",\"caption\":\"HospitalItemList_caption__-jFT8\",\"amount\":\"HospitalItemList_amount__jgs1I\",\"groups\":\"HospitalItemList_groups__1Jxjv\",\"input\":\"HospitalItemList_input__3ysJe\",\"buttons\":\"HospitalItemList_buttons__3zaDd\",\"table-grid\":\"HospitalItemList_table-grid__wBYBH\",\"message\":\"HospitalItemList_message__3E-4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__3B4jc\",\"groups\":\"ProfessionalFeeForm_groups__dlWbX\",\"input\":\"ProfessionalFeeForm_input__333On\",\"buttons\":\"ProfessionalFeeForm_buttons__2lZlR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__2Og-R\",\"table\":\"ProfessionalFeeList_table__2NcVa\",\"specialization\":\"ProfessionalFeeList_specialization__11Av7\",\"table-header\":\"ProfessionalFeeList_table-header__2PK3t\",\"table-description\":\"ProfessionalFeeList_table-description__30ZVR\",\"add-link\":\"ProfessionalFeeList_add-link__2AlqJ\",\"row\":\"ProfessionalFeeList_row__1uiD-\",\"align\":\"ProfessionalFeeList_align__3XDND\",\"center\":\"ProfessionalFeeList_center__3xzMO\",\"right\":\"ProfessionalFeeList_right__1_oyw\",\"discrepancy\":\"ProfessionalFeeList_discrepancy__1DP02\",\"icon-container\":\"ProfessionalFeeList_icon-container__1sopO\",\"table-total\":\"ProfessionalFeeList_table-total__bFKvI\",\"caption\":\"ProfessionalFeeList_caption__2uJsv\",\"amount\":\"ProfessionalFeeList_amount__Bwl5O\",\"groups\":\"ProfessionalFeeList_groups__3OH3g\",\"input\":\"ProfessionalFeeList_input__LBwVv\",\"buttons\":\"ProfessionalFeeList_buttons__V3_MP\",\"table-grid\":\"ProfessionalFeeList_table-grid__148wo\",\"message\":\"ProfessionalFeeList_message__2GTKU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__3TUHv\",\"left\":\"ClaimFooter_left__2BPxB\",\"center\":\"ClaimFooter_center__2tYE7\",\"right\":\"ClaimFooter_right__31DOI\",\"escalate\":\"ClaimFooter_escalate__2Wg_9\",\"header-container\":\"ClaimFooter_header-container__3MyMe\",\"header\":\"ClaimFooter_header__2h2N5\",\"title\":\"ClaimFooter_title__2HClu\",\"content\":\"ClaimFooter_content__2ZAYv\",\"input\":\"ClaimFooter_input__1T6qD\",\"footer\":\"ClaimFooter_footer__aACcA\",\"assign\":\"ClaimFooter_assign__2fguI\",\"to\":\"ClaimFooter_to__iojTq\",\"action\":\"ClaimFooter_action__3rpDz\",\"reassign\":\"ClaimFooter_reassign__32y-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DisapprovedLabel_root__2fuHC\",\"input-wrapper\":\"DisapprovedLabel_input-wrapper__3Mg-w\",\"disapproved\":\"DisapprovedLabel_disapproved__2jHnW\",\"icon-container\":\"DisapprovedLabel_icon-container__2AwzY\",\"message\":\"DisapprovedLabel_message__mRFZw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldSubmit_root__31Odd\",\"label\":\"TextFieldSubmit_label__1hK2p\",\"wrapper\":\"TextFieldSubmit_wrapper__1VXm5\",\"read-only-value\":\"TextFieldSubmit_read-only-value__3vlhq\",\"text-field\":\"TextFieldSubmit_text-field__M9IqT\",\"submit\":\"TextFieldSubmit_submit__3gRq6\",\"has-error\":\"TextFieldSubmit_has-error__2RVyG\",\"error\":\"TextFieldSubmit_error__1IF87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChatBox_root__CJdTJ\",\"wrapper\":\"ChatBox_wrapper__Udbg_\",\"header\":\"ChatBox_header__1cGwF\",\"title\":\"ChatBox_title__2zeRL\",\"body\":\"ChatBox_body__3cDDA\",\"messages\":\"ChatBox_messages__1p2Ci\",\"split\":\"ChatBox_split__3YuFW\",\"balloon\":\"ChatBox_balloon__2wMJO\",\"mheader\":\"ChatBox_mheader___jqXV\",\"sender\":\"ChatBox_sender__1OlBm\",\"time\":\"ChatBox_time__20VAg\",\"mbody\":\"ChatBox_mbody__34g_9\",\"content\":\"ChatBox_content__2ekaM\",\"receive\":\"ChatBox_receive__1SB9q\",\"me\":\"ChatBox_me__3g5h1\",\"placeholder\":\"ChatBox_placeholder__2r0o4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomTabs_root__2VH--\",\"header\":\"CustomTabs_header__3jmhR\",\"item\":\"CustomTabs_item__rKqcK\",\"active\":\"CustomTabs_active__3MzuP\",\"panels\":\"CustomTabs_panels__MhL8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SideBar_root__BfHb8\",\"contract-id\":\"SideBar_contract-id__1i7cP\",\"id\":\"SideBar_id__hD-Fx\",\"plan-types\":\"SideBar_plan-types__22aGd\",\"node\":\"SideBar_node__12eOL\",\"benefit-label\":\"SideBar_benefit-label__355P0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ValueField_root__3IGn7\",\"value\":\"ValueField_value__2tKyn\",\"center\":\"ValueField_center__3Ytb8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FloatingFields_root__24bnx\",\"wrapper\":\"FloatingFields_wrapper__2Pcva\",\"w-30\":\"FloatingFields_w-30__3n_pJ\",\"w-50\":\"FloatingFields_w-50__1n6EK\",\"w-100\":\"FloatingFields_w-100__3NIZO\",\"center\":\"FloatingFields_center__123ob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Benefits_root__bhUTi\",\"wrapper\":\"Benefits_wrapper__3FSOt\",\"left-side\":\"Benefits_left-side__1RHLZ\",\"title\":\"Benefits_title__2Y66j\",\"right-side\":\"Benefits_right-side__2K0vf\",\"header\":\"Benefits_header__3Cy59\",\"table-header\":\"Benefits_table-header__1UT8m\",\"search\":\"Benefits_search__OOfZa\",\"contract\":\"Benefits_contract__3j7Fa\",\"table\":\"Benefits_table__38mZl\",\"hidden\":\"Benefits_hidden__2oBEr\",\"cell\":\"Benefits_cell__12KcA\",\"footer\":\"Benefits_footer__2PXlW\",\"center\":\"Benefits_center__1s61P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Exclusions_root__aIVf_\",\"header\":\"Exclusions_header__2PP5C\",\"body\":\"Exclusions_body__10OEr\",\"search\":\"Exclusions_search__2ex94\",\"plan-types\":\"Exclusions_plan-types__rtSrd\",\"type\":\"Exclusions_type__AJdcD\",\"table\":\"Exclusions_table__3GuIp\",\"hidden\":\"Exclusions_hidden__1fYuW\",\"cell\":\"Exclusions_cell__3huMq\",\"handling\":\"Exclusions_handling__3_HIN\",\"center\":\"Exclusions_center__36WKE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PartnerNetwork_root__3pngF\",\"header\":\"PartnerNetwork_header__2joMW\",\"search\":\"PartnerNetwork_search__QRWSW\",\"table\":\"PartnerNetwork_table__id1kf\",\"hidden\":\"PartnerNetwork_hidden__1Wg_f\",\"cell\":\"PartnerNetwork_cell__24Zde\",\"doctors\":\"PartnerNetwork_doctors__3qxwm\",\"header-container\":\"PartnerNetwork_header-container__uNSDQ\",\"title\":\"PartnerNetwork_title__2pC_E\",\"content\":\"PartnerNetwork_content__OC-z4\",\"center\":\"PartnerNetwork_center__VSY8j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Utilization_root__h-zoM\",\"header\":\"Utilization_header__1ivJ-\",\"graph\":\"Utilization_graph__3ZLe9\",\"anual-benefit\":\"Utilization_anual-benefit__1VWqy\",\"line-graph\":\"Utilization_line-graph__1p8lX\",\"container\":\"Utilization_container__4lgbS\",\"line-container\":\"Utilization_line-container__2OYMe\",\"item\":\"Utilization_item__2yhM3\",\"line-details\":\"Utilization_line-details__10WCH\",\"label\":\"Utilization_label__3Mdsb\",\"color\":\"Utilization_color__1LPa-\",\"search\":\"Utilization_search__3pjGe\",\"table\":\"Utilization_table__1yiXM\",\"cell\":\"Utilization_cell__18zs3\",\"icon\":\"Utilization_icon__3oS4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Contract_root__2TV5c\",\"wrapper\":\"Contract_wrapper__7hk_4\",\"pdf\":\"Contract_pdf__14ff5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"RightPanelTabs_center__2F79-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsRemarks_root__1AD2B\",\"header\":\"ClaimsRemarks_header__2JuzE\",\"header-text\":\"ClaimsRemarks_header-text__2hE-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__1S7ZM\",\"first-container\":\"ClaimInPatient_first-container__1hi-9\",\"groups\":\"ClaimInPatient_groups__3GlMb\",\"input\":\"ClaimInPatient_input__D_kUM\",\"child-container\":\"ClaimInPatient_child-container__LtiUL\",\"left-side\":\"ClaimInPatient_left-side__3BSE_\",\"right-side\":\"ClaimInPatient_right-side__7yeR8\",\"tables-container\":\"ClaimInPatient_tables-container__1FSgK\",\"wrapper\":\"ClaimInPatient_wrapper__2Ll5k\",\"table\":\"ClaimInPatient_table__33jlK\",\"table-header\":\"ClaimInPatient_table-header__32cAA\",\"table-description\":\"ClaimInPatient_table-description__LHg-Q\",\"add-link\":\"ClaimInPatient_add-link__2HgjW\",\"row\":\"ClaimInPatient_row__19SQp\",\"align\":\"ClaimInPatient_align__3EmF1\",\"center\":\"ClaimInPatient_center__mwmUx\",\"right\":\"ClaimInPatient_right__2NOPD\",\"table-total\":\"ClaimInPatient_table-total__ADdpw\",\"caption\":\"ClaimInPatient_caption__3GWNc\",\"amount\":\"ClaimInPatient_amount__14BmU\",\"sticky\":\"ClaimInPatient_sticky__1p4_i\",\"grand-total\":\"ClaimInPatient_grand-total__5xeWX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__32DbM\",\"first-container\":\"ClaimOutPatientProcedure_first-container__7XqrM\",\"groups\":\"ClaimOutPatientProcedure_groups__2khSB\",\"input\":\"ClaimOutPatientProcedure_input__2wGBp\",\"child-container\":\"ClaimOutPatientProcedure_child-container__3Qm-6\",\"left-side\":\"ClaimOutPatientProcedure_left-side__aiMMr\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2qNzx\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__24TXm\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__1oOih\",\"table\":\"ClaimOutPatientProcedure_table__3gy4g\",\"table-header\":\"ClaimOutPatientProcedure_table-header__1vFDA\",\"table-description\":\"ClaimOutPatientProcedure_table-description__2sVgC\",\"add-link\":\"ClaimOutPatientProcedure_add-link__20WGP\",\"row\":\"ClaimOutPatientProcedure_row__1154i\",\"align\":\"ClaimOutPatientProcedure_align__1-JcK\",\"center\":\"ClaimOutPatientProcedure_center__2LEg6\",\"right\":\"ClaimOutPatientProcedure_right__1b2OO\",\"table-total\":\"ClaimOutPatientProcedure_table-total__25Yuw\",\"caption\":\"ClaimOutPatientProcedure_caption__1-1aH\",\"amount\":\"ClaimOutPatientProcedure_amount__1pVET\",\"sticky\":\"ClaimOutPatientProcedure_sticky__2J6YA\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__2-FT5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__1OYw5\",\"first-container\":\"ClaimOutPatientConsultation_first-container__36dTh\",\"groups\":\"ClaimOutPatientConsultation_groups__2FduB\",\"input\":\"ClaimOutPatientConsultation_input__qhYZ3\",\"child-container\":\"ClaimOutPatientConsultation_child-container__1yLGC\",\"left-side\":\"ClaimOutPatientConsultation_left-side__1Q-9R\",\"right-side\":\"ClaimOutPatientConsultation_right-side__ZE8bC\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__1BJ87\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__1zN1p\",\"table\":\"ClaimOutPatientConsultation_table__11vlA\",\"table-header\":\"ClaimOutPatientConsultation_table-header__2v7ad\",\"table-description\":\"ClaimOutPatientConsultation_table-description__1oqaA\",\"add-link\":\"ClaimOutPatientConsultation_add-link__3akmi\",\"row\":\"ClaimOutPatientConsultation_row__28nQM\",\"align\":\"ClaimOutPatientConsultation_align__1dHEU\",\"center\":\"ClaimOutPatientConsultation_center__1_QYZ\",\"right\":\"ClaimOutPatientConsultation_right__ZGur7\",\"table-total\":\"ClaimOutPatientConsultation_table-total__po07J\",\"caption\":\"ClaimOutPatientConsultation_caption__3vMTQ\",\"amount\":\"ClaimOutPatientConsultation_amount__1Ev9r\",\"sticky\":\"ClaimOutPatientConsultation_sticky__JCmg6\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__9crdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__3Dhsx\",\"first-container\":\"ClaimEmergency_first-container__o2WbL\",\"groups\":\"ClaimEmergency_groups__1udG1\",\"input\":\"ClaimEmergency_input__2anfv\",\"child-container\":\"ClaimEmergency_child-container__1p4eO\",\"left-side\":\"ClaimEmergency_left-side__36vix\",\"right-side\":\"ClaimEmergency_right-side__3uIlK\",\"tables-container\":\"ClaimEmergency_tables-container__1qiki\",\"wrapper\":\"ClaimEmergency_wrapper__3WqYc\",\"table\":\"ClaimEmergency_table__Jj0aB\",\"table-header\":\"ClaimEmergency_table-header__1i-JE\",\"table-description\":\"ClaimEmergency_table-description__Xz_Ya\",\"add-link\":\"ClaimEmergency_add-link__3k7IP\",\"row\":\"ClaimEmergency_row__1Esd0\",\"align\":\"ClaimEmergency_align__1S8uR\",\"center\":\"ClaimEmergency_center__2CsIC\",\"right\":\"ClaimEmergency_right__2vx76\",\"table-total\":\"ClaimEmergency_table-total__2oM7S\",\"caption\":\"ClaimEmergency_caption__25QSW\",\"amount\":\"ClaimEmergency_amount__tTDY5\",\"sticky\":\"ClaimEmergency_sticky__3o2tq\",\"grand-total\":\"ClaimEmergency_grand-total__2QhZ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__1epVL\",\"first-container\":\"ClaimMedicineAllowance_first-container__2ZF-j\",\"groups\":\"ClaimMedicineAllowance_groups__2H4ww\",\"input\":\"ClaimMedicineAllowance_input__8xyct\",\"child-container\":\"ClaimMedicineAllowance_child-container__28G1C\",\"left-side\":\"ClaimMedicineAllowance_left-side__1WUXX\",\"right-side\":\"ClaimMedicineAllowance_right-side__1igyg\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__3dELc\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__9Um0n\",\"table\":\"ClaimMedicineAllowance_table__3EybV\",\"table-header\":\"ClaimMedicineAllowance_table-header__2pBup\",\"table-description\":\"ClaimMedicineAllowance_table-description__1PmDt\",\"add-link\":\"ClaimMedicineAllowance_add-link__1AbYf\",\"row\":\"ClaimMedicineAllowance_row__2WWWY\",\"align\":\"ClaimMedicineAllowance_align__39ocu\",\"center\":\"ClaimMedicineAllowance_center__3EtXe\",\"right\":\"ClaimMedicineAllowance_right__27Jp2\",\"table-total\":\"ClaimMedicineAllowance_table-total__1IsI8\",\"caption\":\"ClaimMedicineAllowance_caption__DMDzf\",\"amount\":\"ClaimMedicineAllowance_amount__1LRtQ\",\"sticky\":\"ClaimMedicineAllowance_sticky__EUuY7\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__1JKZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContractRange_root__3nD_-\",\"container\":\"ContractRange_container__1yYoI\",\"focus\":\"ContractRange_focus__209RV\",\"has-error\":\"ContractRange_has-error__26k8I\",\"label\":\"ContractRange_label__16qj0\",\"values\":\"ContractRange_values__1s186\",\"suggestions\":\"ContractRange_suggestions__3mNVu\",\"add-margin\":\"ContractRange_add-margin__36OMI\",\"header\":\"ContractRange_header__2vYoG\",\"values-container\":\"ContractRange_values-container__2mlE7\",\"message\":\"ContractRange_message__1DGJU\",\"list\":\"ContractRange_list__12tdX\",\"item\":\"ContractRange_item__WiBsw\",\"error\":\"ContractRange_error__19pL-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DentalChart_root__2NsEP\",\"title\":\"DentalChart_title__2XddS\",\"container\":\"DentalChart_container__iRz9F\",\"chart\":\"DentalChart_chart__3tLNQ\",\"upper\":\"DentalChart_upper__3L8HX\",\"lower\":\"DentalChart_lower__2M2mJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__256b4\",\"first-container\":\"ClaimDental_first-container__38T7E\",\"groups\":\"ClaimDental_groups__3jvsJ\",\"input\":\"ClaimDental_input__haCWE\",\"contract-range\":\"ClaimDental_contract-range__37ykS\",\"chart\":\"ClaimDental_chart__3-xWm\",\"child-container\":\"ClaimDental_child-container__3mow6\",\"left-side\":\"ClaimDental_left-side__3jave\",\"right-side\":\"ClaimDental_right-side__1FQqB\",\"tables-container\":\"ClaimDental_tables-container__1C3Pu\",\"wrapper\":\"ClaimDental_wrapper__1RMw-\",\"table\":\"ClaimDental_table__1LS70\",\"table-header\":\"ClaimDental_table-header__1b5ix\",\"table-description\":\"ClaimDental_table-description__3_nXw\",\"add-link\":\"ClaimDental_add-link__2HTRl\",\"row\":\"ClaimDental_row__1X_Fq\",\"align\":\"ClaimDental_align__1TfeR\",\"center\":\"ClaimDental_center__2wbY9\",\"right\":\"ClaimDental_right__3UJIj\",\"table-total\":\"ClaimDental_table-total__209ol\",\"caption\":\"ClaimDental_caption__TjFQ_\",\"amount\":\"ClaimDental_amount__2qE7s\",\"sticky\":\"ClaimDental_sticky__1m1JQ\",\"grand-total\":\"ClaimDental_grand-total__3-zy6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__3iC6V\",\"first-container\":\"ClaimAPE_first-container__rfLOL\",\"groups\":\"ClaimAPE_groups___LUKZ\",\"input\":\"ClaimAPE_input__3KeOV\",\"contract-range\":\"ClaimAPE_contract-range__3lIhD\",\"child-container\":\"ClaimAPE_child-container__1cNVx\",\"left-side\":\"ClaimAPE_left-side__3k7Fu\",\"right-side\":\"ClaimAPE_right-side__2yzN-\",\"tables-container\":\"ClaimAPE_tables-container__Q8Qw-\",\"wrapper\":\"ClaimAPE_wrapper__2G6uN\",\"table\":\"ClaimAPE_table__3HkNw\",\"table-header\":\"ClaimAPE_table-header__15MOT\",\"table-description\":\"ClaimAPE_table-description__1mF2U\",\"add-link\":\"ClaimAPE_add-link__1xoUx\",\"row\":\"ClaimAPE_row__3kl-i\",\"align\":\"ClaimAPE_align__3dAFu\",\"center\":\"ClaimAPE_center__3dtFL\",\"right\":\"ClaimAPE_right__15WMJ\",\"table-total\":\"ClaimAPE_table-total__30NF6\",\"caption\":\"ClaimAPE_caption__-xHuO\",\"amount\":\"ClaimAPE_amount__2j9QR\",\"sticky\":\"ClaimAPE_sticky__1awLT\",\"grand-total\":\"ClaimAPE_grand-total__3M-am\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimECU_root__rZ8IS\",\"first-container\":\"ClaimECU_first-container__2FNj4\",\"groups\":\"ClaimECU_groups__2RmkW\",\"input\":\"ClaimECU_input__1Tnla\",\"contract-range\":\"ClaimECU_contract-range__21rJC\",\"child-container\":\"ClaimECU_child-container__26HT3\",\"left-side\":\"ClaimECU_left-side__3-TzS\",\"right-side\":\"ClaimECU_right-side__11s0l\",\"tables-container\":\"ClaimECU_tables-container__3eYaA\",\"wrapper\":\"ClaimECU_wrapper__h-NDN\",\"table\":\"ClaimECU_table__UgdcY\",\"table-header\":\"ClaimECU_table-header__2u8yv\",\"table-description\":\"ClaimECU_table-description__B5h1x\",\"add-link\":\"ClaimECU_add-link__xzFPx\",\"row\":\"ClaimECU_row__2xFZY\",\"align\":\"ClaimECU_align__3ToIF\",\"center\":\"ClaimECU_center__3XEtE\",\"right\":\"ClaimECU_right__1u8Su\",\"table-total\":\"ClaimECU_table-total__1N-8u\",\"caption\":\"ClaimECU_caption__3WoBZ\",\"amount\":\"ClaimECU_amount__UXVTQ\",\"sticky\":\"ClaimECU_sticky__HXgU3\",\"grand-total\":\"ClaimECU_grand-total__x5-d8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPharmacy_root__3o6nU\",\"first-container\":\"ClaimPharmacy_first-container__24DOY\",\"groups\":\"ClaimPharmacy_groups__gN0O5\",\"input\":\"ClaimPharmacy_input__2zV0D\",\"child-container\":\"ClaimPharmacy_child-container__3bxBF\",\"left-side\":\"ClaimPharmacy_left-side__36Ydb\",\"right-side\":\"ClaimPharmacy_right-side__3b9ZU\",\"tables-container\":\"ClaimPharmacy_tables-container__29er7\",\"wrapper\":\"ClaimPharmacy_wrapper__1tYX9\",\"table\":\"ClaimPharmacy_table__sOxO5\",\"table-header\":\"ClaimPharmacy_table-header__vbfpz\",\"table-description\":\"ClaimPharmacy_table-description__1rTw7\",\"add-link\":\"ClaimPharmacy_add-link__1oaJN\",\"row\":\"ClaimPharmacy_row__3U2ex\",\"align\":\"ClaimPharmacy_align__1qqZT\",\"center\":\"ClaimPharmacy_center__KJIk6\",\"right\":\"ClaimPharmacy_right__K6eAn\",\"table-total\":\"ClaimPharmacy_table-total__3IDSI\",\"caption\":\"ClaimPharmacy_caption__2JNG1\",\"amount\":\"ClaimPharmacy_amount__1wFSr\",\"sticky\":\"ClaimPharmacy_sticky__2QcKU\",\"grand-total\":\"ClaimPharmacy_grand-total__28Qkd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPPE_root__It_Uf\",\"first-container\":\"ClaimPPE_first-container__2PDwy\",\"groups\":\"ClaimPPE_groups__3F8T-\",\"input\":\"ClaimPPE_input__3KbyV\",\"contract-range\":\"ClaimPPE_contract-range__21-LF\",\"child-container\":\"ClaimPPE_child-container__19svW\",\"left-side\":\"ClaimPPE_left-side__3EWSi\",\"right-side\":\"ClaimPPE_right-side__Mcre2\",\"tables-container\":\"ClaimPPE_tables-container__3vLX8\",\"wrapper\":\"ClaimPPE_wrapper__2lDkk\",\"table\":\"ClaimPPE_table__1d9ZQ\",\"table-header\":\"ClaimPPE_table-header__2jfWY\",\"table-description\":\"ClaimPPE_table-description__B0pV4\",\"add-link\":\"ClaimPPE_add-link__2TK1j\",\"row\":\"ClaimPPE_row__hPaGI\",\"align\":\"ClaimPPE_align__EakZn\",\"center\":\"ClaimPPE_center__2DSBO\",\"right\":\"ClaimPPE_right__1jInO\",\"table-total\":\"ClaimPPE_table-total__1-SlE\",\"caption\":\"ClaimPPE_caption__RtH_1\",\"amount\":\"ClaimPPE_amount__3GEJt\",\"sticky\":\"ClaimPPE_sticky__3IMMC\",\"grand-total\":\"ClaimPPE_grand-total__2O3kt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicalSupplies_root__3aZUF\",\"first-container\":\"ClaimMedicalSupplies_first-container__3n5WF\",\"groups\":\"ClaimMedicalSupplies_groups__1kAYn\",\"input\":\"ClaimMedicalSupplies_input__3w3Na\",\"child-container\":\"ClaimMedicalSupplies_child-container__1qpYg\",\"left-side\":\"ClaimMedicalSupplies_left-side__3fj2z\",\"right-side\":\"ClaimMedicalSupplies_right-side__3Jxo1\",\"tables-container\":\"ClaimMedicalSupplies_tables-container__2g1bZ\",\"wrapper\":\"ClaimMedicalSupplies_wrapper__1YB7S\",\"table\":\"ClaimMedicalSupplies_table__39sXK\",\"table-header\":\"ClaimMedicalSupplies_table-header__3dEXc\",\"table-description\":\"ClaimMedicalSupplies_table-description__TGhRl\",\"add-link\":\"ClaimMedicalSupplies_add-link__17TK6\",\"row\":\"ClaimMedicalSupplies_row__2vdFX\",\"align\":\"ClaimMedicalSupplies_align__yK5co\",\"center\":\"ClaimMedicalSupplies_center__12JQw\",\"right\":\"ClaimMedicalSupplies_right__XJJUu\",\"table-total\":\"ClaimMedicalSupplies_table-total__3NnUJ\",\"caption\":\"ClaimMedicalSupplies_caption__2811S\",\"amount\":\"ClaimMedicalSupplies_amount__puMje\",\"sticky\":\"ClaimMedicalSupplies_sticky__2SQjJ\",\"grand-total\":\"ClaimMedicalSupplies_grand-total__Dtrsg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimClinicManagement_root__cFi4C\",\"first-container\":\"ClaimClinicManagement_first-container__z1jWC\",\"groups\":\"ClaimClinicManagement_groups__1Y38E\",\"input\":\"ClaimClinicManagement_input__1xBc_\",\"child-container\":\"ClaimClinicManagement_child-container__kVMQD\",\"left-side\":\"ClaimClinicManagement_left-side__2dy65\",\"right-side\":\"ClaimClinicManagement_right-side__FXm_-\",\"tables-container\":\"ClaimClinicManagement_tables-container__2fZlC\",\"wrapper\":\"ClaimClinicManagement_wrapper__CK0dL\",\"table\":\"ClaimClinicManagement_table__9y78F\",\"table-header\":\"ClaimClinicManagement_table-header__CvQ9s\",\"table-description\":\"ClaimClinicManagement_table-description__1K-ma\",\"add-link\":\"ClaimClinicManagement_add-link__E0inx\",\"row\":\"ClaimClinicManagement_row__1ZByz\",\"align\":\"ClaimClinicManagement_align__3Bsjj\",\"center\":\"ClaimClinicManagement_center__1agdC\",\"right\":\"ClaimClinicManagement_right__1n2Y8\",\"table-total\":\"ClaimClinicManagement_table-total__1ka1r\",\"caption\":\"ClaimClinicManagement_caption__1rGus\",\"amount\":\"ClaimClinicManagement_amount__3GbWj\",\"sticky\":\"ClaimClinicManagement_sticky__VwhGL\",\"grand-total\":\"ClaimClinicManagement_grand-total__223ab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementInfo_root__2ZhBR\",\"header-container\":\"ReimbursementInfo_header-container__2Be7O\",\"header\":\"ReimbursementInfo_header__3zAnI\",\"title\":\"ReimbursementInfo_title__1ZCQA\",\"content\":\"ReimbursementInfo_content__1LKaM\",\"basic-info\":\"ReimbursementInfo_basic-info__1pQO5\",\"label\":\"ReimbursementInfo_label__1eWwR\",\"collapsible-cell\":\"ReimbursementInfo_collapsible-cell__2LS9L\",\"container\":\"ReimbursementInfo_container__3j2Tx\",\"show-cell\":\"ReimbursementInfo_show-cell__V330m\",\"cell\":\"ReimbursementInfo_cell__3e4E4\",\"groups\":\"ReimbursementInfo_groups__2b0kL\",\"input\":\"ReimbursementInfo_input__1-9pI\",\"reasons-container\":\"ReimbursementInfo_reasons-container__O8h98\",\"delete\":\"ReimbursementInfo_delete__2NG1u\",\"reasons\":\"ReimbursementInfo_reasons__1Bpgw\",\"add-link\":\"ReimbursementInfo_add-link__3IClX\",\"empty-reasons\":\"ReimbursementInfo_empty-reasons__265UY\",\"footer\":\"ReimbursementInfo_footer__2HTae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__3hhrG\",\"first-container\":\"ClaimReimbursement_first-container__38NDs\",\"groups\":\"ClaimReimbursement_groups__2NvFs\",\"input\":\"ClaimReimbursement_input__36yRs\",\"child-container\":\"ClaimReimbursement_child-container__1VY-Q\",\"left-side\":\"ClaimReimbursement_left-side__343Le\",\"right-side\":\"ClaimReimbursement_right-side__2CbJR\",\"tables-container\":\"ClaimReimbursement_tables-container__2WwnX\",\"wrapper\":\"ClaimReimbursement_wrapper__1Jn5F\",\"table\":\"ClaimReimbursement_table__ksGL1\",\"table-header\":\"ClaimReimbursement_table-header__1BJ7k\",\"table-description\":\"ClaimReimbursement_table-description__30ZTt\",\"add-link\":\"ClaimReimbursement_add-link__iKc2O\",\"row\":\"ClaimReimbursement_row__1vEel\",\"align\":\"ClaimReimbursement_align__27QCo\",\"center\":\"ClaimReimbursement_center__28QGF\",\"right\":\"ClaimReimbursement_right__RESK7\",\"table-total\":\"ClaimReimbursement_table-total__3V1AF\",\"caption\":\"ClaimReimbursement_caption__38fKN\",\"amount\":\"ClaimReimbursement_amount__1w8eC\",\"sticky\":\"ClaimReimbursement_sticky__2pMEc\",\"grand-total\":\"ClaimReimbursement_grand-total__26LC2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Error_root__3MOwq\",\"title\":\"Error_title__2zyaE\",\"message\":\"Error_message__3Qoxb\",\"action-messages\":\"Error_action-messages__1Y6y3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2CKVA\",\"tiles\":\"Dashboard_tiles__1zqWv\",\"task-tray\":\"Dashboard_task-tray__1JXKE\",\"list-item\":\"Dashboard_list-item__330ar\",\"details\":\"Dashboard_details__2yOoR\",\"detail-item\":\"Dashboard_detail-item__222xC\",\"label\":\"Dashboard_label__1pqEl\",\"content\":\"Dashboard_content__2u9m1\",\"action\":\"Dashboard_action__Epa7q\",\"ticket-list\":\"Dashboard_ticket-list__2hY-r\",\"wrapper\":\"Dashboard_wrapper__2R19Z\",\"float\":\"Dashboard_float__1wkpM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetails_root__QvxEj\",\"groups\":\"BatchDetails_groups__287zx\",\"input\":\"BatchDetails_input__tzzPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimListHeader_root__1wK71\",\"title\":\"ClaimListHeader_title__3VPI4\",\"wrapper\":\"ClaimListHeader_wrapper__2or4f\",\"button\":\"ClaimListHeader_button__3Hs-x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"ClaimList_selected__dqWZg\",\"default-override\":\"ClaimList_default-override__1mOrj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProviderSchedule_root__3Hb8e\",\"header-container\":\"ProviderSchedule_header-container__1JwiJ\",\"header1\":\"ProviderSchedule_header1__3gDQw\",\"title\":\"ProviderSchedule_title__3sbdz\",\"body\":\"ProviderSchedule_body__1mUiH\",\"content\":\"ProviderSchedule_content__2z-Wg\",\"table\":\"ProviderSchedule_table__1IJDe\",\"groups\":\"ProviderSchedule_groups__2QLV6\",\"partition\":\"ProviderSchedule_partition__1QDjs\",\"action\":\"ProviderSchedule_action__3vB_V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchPage_root__26Wrc\",\"claims-container\":\"BatchPage_claims-container__2G2QW\",\"footer\":\"BatchPage_footer__3Fysl\",\"actions\":\"BatchPage_actions___M6eN\",\"delete-button\":\"BatchPage_delete-button__1fPqe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"BaseDetails_groups__sN0KI\",\"input\":\"BaseDetails_input__3fzd_\",\"wrapper\":\"BaseDetails_wrapper__2Z43S\",\"no-pad\":\"BaseDetails_no-pad__2S67i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__hOE-z\",\"header\":\"ICDTextField_header__3AzkP\",\"description\":\"ICDTextField_description__fLJtE\",\"code\":\"ICDTextField_code__snQp0\",\"primary\":\"ICDTextField_primary__1rF7r\",\"actions\":\"ICDTextField_actions__ROI6c\",\"wrapper\":\"ICDTextField_wrapper__2Tl6S\",\"sub-wrapper\":\"ICDTextField_sub-wrapper__3GWEF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__1dpY2\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__1iY52\",\"has-error\":\"DiagnosisList_has-error__3hfPU\",\"title\":\"DiagnosisList_title__qjkfp\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__3tk0Y\",\"error\":\"DiagnosisList_error__2Q9Ah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CptTextField_root__16Cl9\",\"header\":\"CptTextField_header__18VEF\",\"description\":\"CptTextField_description__38J8w\",\"code\":\"CptTextField_code__3zwiV\",\"wrapper\":\"CptTextField_wrapper__14kEU\",\"sub-wrapper\":\"CptTextField_sub-wrapper__3kUzW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__3MFfj\",\"groups\":\"ProcedureForm_groups__33Ssh\",\"input\":\"ProcedureForm_input__1I42d\",\"buttons\":\"ProcedureForm_buttons__3gBiF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemTextField_root__3kCkJ\",\"header\":\"HospitalItemTextField_header__1p8vm\",\"description\":\"HospitalItemTextField_description__3dt50\",\"code\":\"HospitalItemTextField_code__37pF3\",\"wrapper\":\"HospitalItemTextField_wrapper__2ejzj\",\"sub-wrapper\":\"HospitalItemTextField_sub-wrapper__1TcFw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__2OG0L\",\"groups\":\"HospitalItemForm_groups__3_yeP\",\"first-item\":\"HospitalItemForm_first-item__AJ09l\",\"input\":\"HospitalItemForm_input__1ZqXE\",\"buttons\":\"HospitalItemForm_buttons__1C7f4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__2ptS9\",\"groups\":\"ProfessionalFeeForm_groups__K8Zz9\",\"first-item\":\"ProfessionalFeeForm_first-item__1_l_l\",\"input\":\"ProfessionalFeeForm_input__20gH-\",\"buttons\":\"ProfessionalFeeForm_buttons__2JE2y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__3v4P_\",\"table\":\"ProcedureList_table__1lDzW\",\"table-header\":\"ProcedureList_table-header__OUZ2f\",\"table-description\":\"ProcedureList_table-description__1woO4\",\"add-link\":\"ProcedureList_add-link__3Y3oZ\",\"row\":\"ProcedureList_row__2-dja\",\"align\":\"ProcedureList_align__qvO_Y\",\"center\":\"ProcedureList_center__3o-L0\",\"right\":\"ProcedureList_right__3krqZ\",\"table-total\":\"ProcedureList_table-total__1VNZY\",\"caption\":\"ProcedureList_caption__164Op\",\"amount\":\"ProcedureList_amount__E-XjE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__3MjT2\",\"table\":\"HospitalItemList_table__dG_Tf\",\"table-header\":\"HospitalItemList_table-header__2MLsx\",\"table-description\":\"HospitalItemList_table-description__B2u7N\",\"add-link\":\"HospitalItemList_add-link__3rajh\",\"row\":\"HospitalItemList_row__2dICf\",\"align\":\"HospitalItemList_align__1olVn\",\"center\":\"HospitalItemList_center__aS130\",\"right\":\"HospitalItemList_right__2ZVKU\",\"table-total\":\"HospitalItemList_table-total__2NfAE\",\"caption\":\"HospitalItemList_caption__2asKo\",\"amount\":\"HospitalItemList_amount__t79nf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__2w3dt\",\"table\":\"ProfessionalFeeList_table__10Ygk\",\"table-header\":\"ProfessionalFeeList_table-header__14PMs\",\"table-description\":\"ProfessionalFeeList_table-description__1zGjK\",\"add-link\":\"ProfessionalFeeList_add-link__3_ArR\",\"row\":\"ProfessionalFeeList_row__99ivp\",\"align\":\"ProfessionalFeeList_align__10CgV\",\"center\":\"ProfessionalFeeList_center__5efkN\",\"right\":\"ProfessionalFeeList_right__2qbRI\",\"table-total\":\"ProfessionalFeeList_table-total__3stF4\",\"caption\":\"ProfessionalFeeList_caption__119dY\",\"amount\":\"ProfessionalFeeList_amount__2aSsi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsRemarks_root__2Ee-X\",\"header\":\"ClaimsRemarks_header__3yH1H\",\"header-text\":\"ClaimsRemarks_header-text__3BhQD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__9kPKZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__3osD9\",\"first-container\":\"ClaimInPatient_first-container__3t49M\",\"groups\":\"ClaimInPatient_groups__3oIox\",\"input\":\"ClaimInPatient_input__hVAF4\",\"child-container\":\"ClaimInPatient_child-container__2Cq2R\",\"tables-container\":\"ClaimInPatient_tables-container__2oIYc\",\"left-side\":\"ClaimInPatient_left-side__3DTmU\",\"wrapper\":\"ClaimInPatient_wrapper__35AeS\",\"table\":\"ClaimInPatient_table__18wS_\",\"table-header\":\"ClaimInPatient_table-header__EDm4F\",\"table-description\":\"ClaimInPatient_table-description__2dbX9\",\"add-link\":\"ClaimInPatient_add-link__2PqWJ\",\"row\":\"ClaimInPatient_row__2S-um\",\"align\":\"ClaimInPatient_align__-0kRI\",\"center\":\"ClaimInPatient_center__SCdjg\",\"right\":\"ClaimInPatient_right__SWljZ\",\"table-total\":\"ClaimInPatient_table-total__1FFT6\",\"caption\":\"ClaimInPatient_caption__12ndJ\",\"amount\":\"ClaimInPatient_amount__1BJYs\",\"right-side\":\"ClaimInPatient_right-side__16K8Y\",\"sticky\":\"ClaimInPatient_sticky__3RBSE\",\"grand-total\":\"ClaimInPatient_grand-total__27yFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__3Ga7K\",\"first-container\":\"ClaimOutPatientProcedure_first-container__3Bo1i\",\"groups\":\"ClaimOutPatientProcedure_groups__1_PgN\",\"input\":\"ClaimOutPatientProcedure_input__2yb91\",\"child-container\":\"ClaimOutPatientProcedure_child-container__2IJug\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__koGml\",\"left-side\":\"ClaimOutPatientProcedure_left-side__2oLag\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__3yj4V\",\"table\":\"ClaimOutPatientProcedure_table__39AFH\",\"table-header\":\"ClaimOutPatientProcedure_table-header__2_DFL\",\"table-description\":\"ClaimOutPatientProcedure_table-description__22jzE\",\"add-link\":\"ClaimOutPatientProcedure_add-link__2zVd0\",\"row\":\"ClaimOutPatientProcedure_row__3tr7i\",\"align\":\"ClaimOutPatientProcedure_align__3aSS8\",\"center\":\"ClaimOutPatientProcedure_center__26F-I\",\"right\":\"ClaimOutPatientProcedure_right__2TzV6\",\"table-total\":\"ClaimOutPatientProcedure_table-total__2SbHo\",\"caption\":\"ClaimOutPatientProcedure_caption__37F57\",\"amount\":\"ClaimOutPatientProcedure_amount__1nHfc\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2kHXN\",\"sticky\":\"ClaimOutPatientProcedure_sticky__YQpzp\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__3r0fZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__1iLTK\",\"first-container\":\"ClaimOutPatientConsultation_first-container__1-5nU\",\"groups\":\"ClaimOutPatientConsultation_groups__2oMDd\",\"input\":\"ClaimOutPatientConsultation_input__19UZR\",\"child-container\":\"ClaimOutPatientConsultation_child-container__aUMUP\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__2mF2h\",\"left-side\":\"ClaimOutPatientConsultation_left-side__19GSs\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__1t8lb\",\"table\":\"ClaimOutPatientConsultation_table__37ymv\",\"table-header\":\"ClaimOutPatientConsultation_table-header__1mDNN\",\"table-description\":\"ClaimOutPatientConsultation_table-description__1K6LA\",\"add-link\":\"ClaimOutPatientConsultation_add-link__1kLWg\",\"row\":\"ClaimOutPatientConsultation_row__1QVq1\",\"align\":\"ClaimOutPatientConsultation_align__JzFHT\",\"center\":\"ClaimOutPatientConsultation_center__Kj125\",\"right\":\"ClaimOutPatientConsultation_right__2UzFx\",\"table-total\":\"ClaimOutPatientConsultation_table-total__3Y5uM\",\"caption\":\"ClaimOutPatientConsultation_caption__1fpt6\",\"amount\":\"ClaimOutPatientConsultation_amount__2NcEC\",\"right-side\":\"ClaimOutPatientConsultation_right-side__2G55v\",\"sticky\":\"ClaimOutPatientConsultation_sticky__1p7r8\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__3hH8O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__oSnYx\",\"first-container\":\"ClaimEmergency_first-container__3b0DZ\",\"groups\":\"ClaimEmergency_groups__fVn6k\",\"input\":\"ClaimEmergency_input__20Z4V\",\"child-container\":\"ClaimEmergency_child-container__2B7dx\",\"tables-container\":\"ClaimEmergency_tables-container__1SqZm\",\"left-side\":\"ClaimEmergency_left-side__2XQXV\",\"wrapper\":\"ClaimEmergency_wrapper__2dRHq\",\"table\":\"ClaimEmergency_table__2Ye6U\",\"table-header\":\"ClaimEmergency_table-header__XQM6o\",\"table-description\":\"ClaimEmergency_table-description__eEvjz\",\"add-link\":\"ClaimEmergency_add-link__3f1pP\",\"row\":\"ClaimEmergency_row__9kBGW\",\"align\":\"ClaimEmergency_align__2pcQ2\",\"center\":\"ClaimEmergency_center__2EBE3\",\"right\":\"ClaimEmergency_right__3yT5b\",\"table-total\":\"ClaimEmergency_table-total__1Sfid\",\"caption\":\"ClaimEmergency_caption__3PPFO\",\"amount\":\"ClaimEmergency_amount__22h7o\",\"right-side\":\"ClaimEmergency_right-side__1VzuD\",\"sticky\":\"ClaimEmergency_sticky__2nEt5\",\"grand-total\":\"ClaimEmergency_grand-total__1rCNH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ToothNumber_root__2xwxL\",\"label\":\"ToothNumber_label__3a7e8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DentalProcedureForm_root__2Acnv\",\"groups\":\"DentalProcedureForm_groups__2VwcV\",\"input\":\"DentalProcedureForm_input__3fOJ9\",\"buttons\":\"DentalProcedureForm_buttons__1zf4D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__2JDL2\",\"first-container\":\"ClaimDental_first-container__1bgJH\",\"groups\":\"ClaimDental_groups__1-ERD\",\"chart\":\"ClaimDental_chart__3Dc9C\",\"input\":\"ClaimDental_input__25h7r\",\"contract-range\":\"ClaimDental_contract-range__3m5nq\",\"child-container\":\"ClaimDental_child-container__3e0an\",\"tables-container\":\"ClaimDental_tables-container__cMXte\",\"left-side\":\"ClaimDental_left-side__1TcV5\",\"wrapper\":\"ClaimDental_wrapper__3ThOl\",\"table\":\"ClaimDental_table__2F5f1\",\"table-header\":\"ClaimDental_table-header__2akCh\",\"table-description\":\"ClaimDental_table-description__216ml\",\"add-link\":\"ClaimDental_add-link__lzfHs\",\"row\":\"ClaimDental_row__3LXFH\",\"align\":\"ClaimDental_align__mJMlm\",\"center\":\"ClaimDental_center__3s7zR\",\"right\":\"ClaimDental_right__1k-F1\",\"table-total\":\"ClaimDental_table-total__3QDdT\",\"caption\":\"ClaimDental_caption__3mlFq\",\"amount\":\"ClaimDental_amount__2ltb-\",\"right-side\":\"ClaimDental_right-side__1TuoJ\",\"sticky\":\"ClaimDental_sticky__2jLb5\",\"grand-total\":\"ClaimDental_grand-total__gc69p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__3tnOB\",\"first-container\":\"ClaimMedicineAllowance_first-container__AHNJn\",\"groups\":\"ClaimMedicineAllowance_groups__2iRok\",\"input\":\"ClaimMedicineAllowance_input__1XM4n\",\"child-container\":\"ClaimMedicineAllowance_child-container__eGvyY\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__9NdEv\",\"left-side\":\"ClaimMedicineAllowance_left-side__3ULwO\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__2a9dZ\",\"table\":\"ClaimMedicineAllowance_table__tRJMn\",\"table-header\":\"ClaimMedicineAllowance_table-header__1Ynyj\",\"table-description\":\"ClaimMedicineAllowance_table-description__3P7Fc\",\"add-link\":\"ClaimMedicineAllowance_add-link__bcTPs\",\"row\":\"ClaimMedicineAllowance_row__X0O5w\",\"align\":\"ClaimMedicineAllowance_align__BxZLW\",\"center\":\"ClaimMedicineAllowance_center__bUmmq\",\"right\":\"ClaimMedicineAllowance_right__1oGzD\",\"table-total\":\"ClaimMedicineAllowance_table-total__1IQEl\",\"caption\":\"ClaimMedicineAllowance_caption__15HJx\",\"amount\":\"ClaimMedicineAllowance_amount__1OeW6\",\"right-side\":\"ClaimMedicineAllowance_right-side__2LJsC\",\"sticky\":\"ClaimMedicineAllowance_sticky__1tKev\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__1HUo0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__10qUm\",\"first-container\":\"ClaimAPE_first-container__3VIQz\",\"groups\":\"ClaimAPE_groups__1H7zB\",\"input\":\"ClaimAPE_input__2Wllf\",\"contract-range\":\"ClaimAPE_contract-range__1xKUx\",\"child-container\":\"ClaimAPE_child-container__2-Cqb\",\"tables-container\":\"ClaimAPE_tables-container__2c44w\",\"left-side\":\"ClaimAPE_left-side__3Grb8\",\"wrapper\":\"ClaimAPE_wrapper__3kVSF\",\"table\":\"ClaimAPE_table__omI3l\",\"table-header\":\"ClaimAPE_table-header__2bLUm\",\"table-description\":\"ClaimAPE_table-description__1imB1\",\"add-link\":\"ClaimAPE_add-link__2hydA\",\"row\":\"ClaimAPE_row__2LLeH\",\"align\":\"ClaimAPE_align__2aoEU\",\"center\":\"ClaimAPE_center__DIEY_\",\"right\":\"ClaimAPE_right__3JBKi\",\"table-total\":\"ClaimAPE_table-total__1hqGE\",\"caption\":\"ClaimAPE_caption__2uqYE\",\"amount\":\"ClaimAPE_amount__1I4D8\",\"right-side\":\"ClaimAPE_right-side__3R0S8\",\"sticky\":\"ClaimAPE_sticky__3qv6w\",\"grand-total\":\"ClaimAPE_grand-total__1i42h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimECU_root__Y8G80\",\"first-container\":\"ClaimECU_first-container__1rhnH\",\"groups\":\"ClaimECU_groups__3Ibk_\",\"input\":\"ClaimECU_input__26EJ2\",\"child-container\":\"ClaimECU_child-container__1MXFG\",\"tables-container\":\"ClaimECU_tables-container__1eXUa\",\"left-side\":\"ClaimECU_left-side__2cvFC\",\"wrapper\":\"ClaimECU_wrapper__gZOgU\",\"table\":\"ClaimECU_table__1Bicl\",\"table-header\":\"ClaimECU_table-header__1vKl3\",\"table-description\":\"ClaimECU_table-description__qUDPT\",\"add-link\":\"ClaimECU_add-link__wl7KO\",\"row\":\"ClaimECU_row__20V6A\",\"align\":\"ClaimECU_align__4hqDF\",\"center\":\"ClaimECU_center__1bRln\",\"right\":\"ClaimECU_right__3VP8v\",\"table-total\":\"ClaimECU_table-total__GSoyb\",\"caption\":\"ClaimECU_caption__156Qz\",\"amount\":\"ClaimECU_amount__3anBs\",\"right-side\":\"ClaimECU_right-side__3rxLw\",\"sticky\":\"ClaimECU_sticky__1sJqT\",\"grand-total\":\"ClaimECU_grand-total__3ggCY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPPE_root__3RVRM\",\"first-container\":\"ClaimPPE_first-container__21sPt\",\"groups\":\"ClaimPPE_groups__u8awx\",\"input\":\"ClaimPPE_input__2H_V4\",\"packages\":\"ClaimPPE_packages__3-Fqt\",\"child-container\":\"ClaimPPE_child-container__4CbFv\",\"tables-container\":\"ClaimPPE_tables-container__1P7tK\",\"left-side\":\"ClaimPPE_left-side__1Wl6h\",\"wrapper\":\"ClaimPPE_wrapper__EWklO\",\"table\":\"ClaimPPE_table__ECnsY\",\"table-header\":\"ClaimPPE_table-header__1MiEt\",\"table-description\":\"ClaimPPE_table-description__23Chj\",\"add-link\":\"ClaimPPE_add-link__2jmjj\",\"row\":\"ClaimPPE_row__3D1tu\",\"align\":\"ClaimPPE_align__12mQb\",\"center\":\"ClaimPPE_center__3ZjbJ\",\"right\":\"ClaimPPE_right__3uBxk\",\"table-total\":\"ClaimPPE_table-total__vFP-x\",\"caption\":\"ClaimPPE_caption__3SGWC\",\"amount\":\"ClaimPPE_amount__3eFhL\",\"right-side\":\"ClaimPPE_right-side__MiTxO\",\"sticky\":\"ClaimPPE_sticky__1TIh3\",\"grand-total\":\"ClaimPPE_grand-total__IdBsM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPharmacy_root__2OUHv\",\"first-container\":\"ClaimPharmacy_first-container__3CTh5\",\"groups\":\"ClaimPharmacy_groups__1dXFx\",\"input\":\"ClaimPharmacy_input__1fnDP\",\"child-container\":\"ClaimPharmacy_child-container__2DXAY\",\"tables-container\":\"ClaimPharmacy_tables-container__OVhpf\",\"left-side\":\"ClaimPharmacy_left-side__2knv5\",\"wrapper\":\"ClaimPharmacy_wrapper__uDOW8\",\"table\":\"ClaimPharmacy_table__2ttlx\",\"table-header\":\"ClaimPharmacy_table-header__2DPRY\",\"table-description\":\"ClaimPharmacy_table-description__anC6p\",\"add-link\":\"ClaimPharmacy_add-link__3-l-Y\",\"row\":\"ClaimPharmacy_row__1EBvJ\",\"align\":\"ClaimPharmacy_align__3dWWS\",\"center\":\"ClaimPharmacy_center__2Lg3i\",\"right\":\"ClaimPharmacy_right__3Irs7\",\"table-total\":\"ClaimPharmacy_table-total__sPYMH\",\"caption\":\"ClaimPharmacy_caption__2a4nY\",\"amount\":\"ClaimPharmacy_amount__AYkmn\",\"right-side\":\"ClaimPharmacy_right-side__1ss74\",\"sticky\":\"ClaimPharmacy_sticky__RRGLs\",\"grand-total\":\"ClaimPharmacy_grand-total__3QkK5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicalSupplies_root__3NBGF\",\"first-container\":\"ClaimMedicalSupplies_first-container__3-YoF\",\"groups\":\"ClaimMedicalSupplies_groups__3hkzB\",\"input\":\"ClaimMedicalSupplies_input__22TfW\",\"child-container\":\"ClaimMedicalSupplies_child-container__eULTM\",\"tables-container\":\"ClaimMedicalSupplies_tables-container__2zfdH\",\"left-side\":\"ClaimMedicalSupplies_left-side__2MoH7\",\"wrapper\":\"ClaimMedicalSupplies_wrapper__2hL_L\",\"table\":\"ClaimMedicalSupplies_table__2JI1-\",\"table-header\":\"ClaimMedicalSupplies_table-header__CX7uX\",\"table-description\":\"ClaimMedicalSupplies_table-description__14O2d\",\"add-link\":\"ClaimMedicalSupplies_add-link__1nCh7\",\"row\":\"ClaimMedicalSupplies_row__g6Y-_\",\"align\":\"ClaimMedicalSupplies_align__1_hYI\",\"center\":\"ClaimMedicalSupplies_center__eJ3xR\",\"right\":\"ClaimMedicalSupplies_right__1Rf4R\",\"table-total\":\"ClaimMedicalSupplies_table-total__XHhz_\",\"caption\":\"ClaimMedicalSupplies_caption__1slE2\",\"amount\":\"ClaimMedicalSupplies_amount__3oFZd\",\"right-side\":\"ClaimMedicalSupplies_right-side__gNovx\",\"sticky\":\"ClaimMedicalSupplies_sticky__3bxBP\",\"grand-total\":\"ClaimMedicalSupplies_grand-total__1G-Tg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimClinicManagement_root__1r___\",\"first-container\":\"ClaimClinicManagement_first-container__2skqe\",\"groups\":\"ClaimClinicManagement_groups__3FbWr\",\"input\":\"ClaimClinicManagement_input__2Keb1\",\"child-container\":\"ClaimClinicManagement_child-container__n7uq4\",\"tables-container\":\"ClaimClinicManagement_tables-container__3NmAQ\",\"left-side\":\"ClaimClinicManagement_left-side__D4Ima\",\"wrapper\":\"ClaimClinicManagement_wrapper__3yNmB\",\"table\":\"ClaimClinicManagement_table__1OvWr\",\"table-header\":\"ClaimClinicManagement_table-header__2avVb\",\"table-description\":\"ClaimClinicManagement_table-description__2hA0s\",\"add-link\":\"ClaimClinicManagement_add-link__2GJYD\",\"row\":\"ClaimClinicManagement_row__1YHad\",\"align\":\"ClaimClinicManagement_align__3VKHt\",\"center\":\"ClaimClinicManagement_center__2ugQN\",\"right\":\"ClaimClinicManagement_right__2YJdE\",\"table-total\":\"ClaimClinicManagement_table-total__12gwG\",\"caption\":\"ClaimClinicManagement_caption__1ufF7\",\"amount\":\"ClaimClinicManagement_amount__38Qbv\",\"right-side\":\"ClaimClinicManagement_right-side__33DHV\",\"sticky\":\"ClaimClinicManagement_sticky__jEfao\",\"grand-total\":\"ClaimClinicManagement_grand-total__1xe5F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementInfo_root__A48Ge\",\"header-container\":\"ReimbursementInfo_header-container__7Rc0y\",\"header\":\"ReimbursementInfo_header__2Fspq\",\"title\":\"ReimbursementInfo_title__1JbPt\",\"content\":\"ReimbursementInfo_content__1O8ol\",\"basic-info\":\"ReimbursementInfo_basic-info__1oPax\",\"label\":\"ReimbursementInfo_label__LDCyS\",\"collapsible-cell\":\"ReimbursementInfo_collapsible-cell__1PlUR\",\"container\":\"ReimbursementInfo_container__M1ZXd\",\"show-cell\":\"ReimbursementInfo_show-cell__1q80V\",\"cell\":\"ReimbursementInfo_cell__2ZIqz\",\"groups\":\"ReimbursementInfo_groups__na5mh\",\"input\":\"ReimbursementInfo_input__2qSpD\",\"reasons-container\":\"ReimbursementInfo_reasons-container__3vqkq\",\"delete\":\"ReimbursementInfo_delete__2aKoN\",\"reasons\":\"ReimbursementInfo_reasons__1twVx\",\"add-link\":\"ReimbursementInfo_add-link__3leZg\",\"empty-reasons\":\"ReimbursementInfo_empty-reasons__2hpfm\",\"footer\":\"ReimbursementInfo_footer__3FzeE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__2-8KB\",\"first-container\":\"ClaimReimbursement_first-container__18fTD\",\"groups\":\"ClaimReimbursement_groups__38k8I\",\"input\":\"ClaimReimbursement_input__3la5w\",\"child-container\":\"ClaimReimbursement_child-container__1kWRr\",\"tables-container\":\"ClaimReimbursement_tables-container__PR9B_\",\"left-side\":\"ClaimReimbursement_left-side__1m7FN\",\"wrapper\":\"ClaimReimbursement_wrapper__246w6\",\"table\":\"ClaimReimbursement_table__2S73N\",\"table-header\":\"ClaimReimbursement_table-header__1zQ8j\",\"table-description\":\"ClaimReimbursement_table-description__2tmiu\",\"add-link\":\"ClaimReimbursement_add-link__2JH4c\",\"row\":\"ClaimReimbursement_row__1OSjx\",\"align\":\"ClaimReimbursement_align__3OEDi\",\"center\":\"ClaimReimbursement_center__13TIn\",\"right\":\"ClaimReimbursement_right__3fu2G\",\"table-total\":\"ClaimReimbursement_table-total__3dvpa\",\"caption\":\"ClaimReimbursement_caption__2HDFA\",\"amount\":\"ClaimReimbursement_amount__3l1fZ\",\"right-side\":\"ClaimReimbursement_right-side__14Gxn\",\"sticky\":\"ClaimReimbursement_sticky__26GxQ\",\"grand-total\":\"ClaimReimbursement_grand-total__7vHa3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2d4M4\",\"tiles\":\"Dashboard_tiles__16_MG\",\"row\":\"Dashboard_row__2TDbS\",\"task-tray\":\"Dashboard_task-tray__1YmzT\",\"task-tray-monitor\":\"Dashboard_task-tray-monitor__1FeES\",\"ticket-list\":\"Dashboard_ticket-list__1Q0kW\",\"wrapper\":\"Dashboard_wrapper__1T3tt\",\"float\":\"Dashboard_float__1Xub9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ButtonFooter_root__2xUj2\",\"buttons\":\"ButtonFooter_buttons__3v_r7\",\"counter\":\"ButtonFooter_counter__1pqmU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__1B1lo\",\"header-container\":\"AssignDialog_header-container__2q19w\",\"header\":\"AssignDialog_header__4mmtH\",\"title\":\"AssignDialog_title__1t8cw\",\"content\":\"AssignDialog_content__Y7uRW\",\"input\":\"AssignDialog_input__2npYe\",\"footer\":\"AssignDialog_footer__3QHDI\",\"assign\":\"AssignDialog_assign__1aP36\",\"to\":\"AssignDialog_to__2eLiV\",\"action\":\"AssignDialog_action__2H051\",\"message-content\":\"AssignDialog_message-content__1NrdY\",\"message\":\"AssignDialog_message__27R73\",\"message-child\":\"AssignDialog_message-child__2eYo7\",\"alert-title\":\"AssignDialog_alert-title__ZMO3M\",\"footer-action\":\"AssignDialog_footer-action__27lzi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CreatedBatchesPage_root__1b7-1\",\"table-container\":\"CreatedBatchesPage_table-container__1gFsH\",\"search-container\":\"CreatedBatchesPage_search-container__2wgNb\",\"reassign\":\"CreatedBatchesPage_reassign__14Y6T\",\"search\":\"CreatedBatchesPage_search__2mhtd\",\"action-container\":\"CreatedBatchesPage_action-container__Pa7R0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetails_root__1PwO3\",\"groups\":\"BatchDetails_groups__3A2VN\",\"input\":\"BatchDetails_input__3hwk1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimListHeader_root__2YvdB\",\"title\":\"ClaimListHeader_title__2tIMg\",\"wrapper\":\"ClaimListHeader_wrapper__1gVaD\",\"button\":\"ClaimListHeader_button__2wf-z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"ClaimList_selected__27Pnu\",\"default-override\":\"ClaimList_default-override__2T421\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchPage_root__3iS6_\",\"claims-container\":\"BatchPage_claims-container__FFC4C\",\"footer\":\"BatchPage_footer__6IBOB\",\"actions\":\"BatchPage_actions__BbrLm\",\"delete-button\":\"BatchPage_delete-button__1-tPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__311ud\",\"header-container\":\"ViewList_header-container__1eor8\",\"header\":\"ViewList_header__15HTz\",\"title\":\"ViewList_title__d_bSk\",\"content\":\"ViewList_content__2LOiZ\",\"search\":\"ViewList_search__2hJ0S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2It_d\",\"tiles\":\"Dashboard_tiles__2DX72\",\"task-tray\":\"Dashboard_task-tray__2MeJZ\",\"list-item\":\"Dashboard_list-item__1ixUY\",\"details\":\"Dashboard_details__39R6g\",\"detail-item\":\"Dashboard_detail-item__1qIsO\",\"label\":\"Dashboard_label__2wpxb\",\"content\":\"Dashboard_content__2vmkp\",\"action\":\"Dashboard_action__10xYG\",\"ticket-list\":\"Dashboard_ticket-list__1iTbF\",\"wrapper\":\"Dashboard_wrapper__3z4j1\",\"float\":\"Dashboard_float__1Hiew\",\"completed_task\":\"Dashboard_completed_task__RN1as\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1WSgv\",\"tiles\":\"Dashboard_tiles__URUGc\",\"task-tray\":\"Dashboard_task-tray__3PFmp\",\"list-item\":\"Dashboard_list-item__1dXth\",\"details\":\"Dashboard_details__1uD2x\",\"detail-item\":\"Dashboard_detail-item__2Xq4I\",\"label\":\"Dashboard_label__2Y7DU\",\"content\":\"Dashboard_content__12k-O\",\"action\":\"Dashboard_action__3-klY\",\"ticket-list\":\"Dashboard_ticket-list__3SSgK\",\"wrapper\":\"Dashboard_wrapper__3sukD\",\"float\":\"Dashboard_float__3_xKh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PaymentRequestPage_root__2gGvt\",\"text-fields\":\"PaymentRequestPage_text-fields__3gFF0\",\"sub-container\":\"PaymentRequestPage_sub-container__a_dOn\",\"input-container\":\"PaymentRequestPage_input-container__2GjiG\",\"ellipsis-container\":\"PaymentRequestPage_ellipsis-container__1Efns\",\"table-container\":\"PaymentRequestPage_table-container__2yAdZ\",\"headers\":\"PaymentRequestPage_headers__1XNVW\",\"header\":\"PaymentRequestPage_header__3MXgw\",\"submit-header\":\"PaymentRequestPage_submit-header__19DA-\",\"dialog-container\":\"PaymentRequestPage_dialog-container__1a70q\",\"buttonWrapper\":\"PaymentRequestPage_buttonWrapper__1W80E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SubmittedPaymentRequestPage_root__3CH1o\",\"text-fields\":\"SubmittedPaymentRequestPage_text-fields__1EAYV\",\"sub-container\":\"SubmittedPaymentRequestPage_sub-container__39S8A\",\"input-container\":\"SubmittedPaymentRequestPage_input-container__1e-Ty\",\"ellipsis-container\":\"SubmittedPaymentRequestPage_ellipsis-container__1UrAU\",\"table-container\":\"SubmittedPaymentRequestPage_table-container__3oIBa\",\"headers\":\"SubmittedPaymentRequestPage_headers__IUsth\",\"header\":\"SubmittedPaymentRequestPage_header__1W3nu\",\"dialog-container\":\"SubmittedPaymentRequestPage_dialog-container__2sZln\",\"buttonWrapper\":\"SubmittedPaymentRequestPage_buttonWrapper__3s1pG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__3PeJc\",\"tiles\":\"Dashboard_tiles__OVU2I\",\"task-tray\":\"Dashboard_task-tray__1krbX\",\"list-item\":\"Dashboard_list-item__3vY_C\",\"details\":\"Dashboard_details__3NoCG\",\"detail-item\":\"Dashboard_detail-item__JLMfd\",\"label\":\"Dashboard_label__3AA6w\",\"content\":\"Dashboard_content__16txH\",\"action\":\"Dashboard_action__Apy9_\",\"ticket-list\":\"Dashboard_ticket-list__2Kmdx\",\"wrapper\":\"Dashboard_wrapper__1-oZ4\",\"float\":\"Dashboard_float__3w1H_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SubmittedPaymentRequestList_root__dXrnn\",\"header-container\":\"SubmittedPaymentRequestList_header-container__33jMu\",\"header\":\"SubmittedPaymentRequestList_header__1UkBI\",\"title\":\"SubmittedPaymentRequestList_title__31KGj\",\"search\":\"SubmittedPaymentRequestList_search__1SQIf\",\"table\":\"SubmittedPaymentRequestList_table__1sht8\",\"buttonWrapper\":\"SubmittedPaymentRequestList_buttonWrapper__2ZvKl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__2ue5H\",\"header-container\":\"ViewList_header-container__q77ZU\",\"header\":\"ViewList_header__2lKSa\",\"title\":\"ViewList_title__AuuEZ\",\"content\":\"ViewList_content__3GRUr\",\"search\":\"ViewList_search__cofXm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__28Vtl\",\"tiles\":\"Dashboard_tiles__1wpMD\",\"task-tray\":\"Dashboard_task-tray__1IvyN\",\"list-item\":\"Dashboard_list-item__12jAd\",\"details\":\"Dashboard_details__2H0bw\",\"detail-item\":\"Dashboard_detail-item__3Fwan\",\"label\":\"Dashboard_label__3wCdh\",\"content\":\"Dashboard_content__39XQQ\",\"action\":\"Dashboard_action__1O7UY\",\"ticket-list\":\"Dashboard_ticket-list__kcd4U\",\"wrapper\":\"Dashboard_wrapper__2FBsH\",\"float\":\"Dashboard_float__WBsaU\",\"completed_task\":\"Dashboard_completed_task__y2ijY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2pt7a\",\"tiles\":\"Dashboard_tiles__2zhqD\",\"task-tray\":\"Dashboard_task-tray__2N8YZ\",\"list-item\":\"Dashboard_list-item__JD2zf\",\"details\":\"Dashboard_details__1uEl7\",\"detail-item\":\"Dashboard_detail-item__2ijgN\",\"label\":\"Dashboard_label__34lgV\",\"content\":\"Dashboard_content__3COhO\",\"action\":\"Dashboard_action__36U9f\",\"ticket-list\":\"Dashboard_ticket-list__2OwTr\",\"completed_task\":\"Dashboard_completed_task__3VhqT\",\"wrapper\":\"Dashboard_wrapper__Q93wn\",\"float\":\"Dashboard_float__2hGqR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UtilizationReport_root__2q08r\",\"header\":\"UtilizationReport_header__UaA2l\",\"content\":\"UtilizationReport_content__2ANkB\",\"filter\":\"UtilizationReport_filter__2oHyd\",\"input\":\"UtilizationReport_input__uAqv6\",\"submit\":\"UtilizationReport_submit__3Xxzg\",\"radio-group\":\"UtilizationReport_radio-group__2GQwc\",\"radio-container\":\"UtilizationReport_radio-container__gsXJO\",\"body\":\"UtilizationReport_body__3hQcQ\",\"table\":\"UtilizationReport_table__2vPmC\",\"graph-reports\":\"UtilizationReport_graph-reports__1tQvo\",\"graph-legend\":\"UtilizationReport_graph-legend__N4sdg\",\"legend-wrapper\":\"UtilizationReport_legend-wrapper__tyRHZ\",\"legend-group\":\"UtilizationReport_legend-group__2B7no\",\"legend\":\"UtilizationReport_legend__DGO3_\",\"header-report\":\"UtilizationReport_header-report__3kOEH\",\"report-primary\":\"UtilizationReport_report-primary__3OJS6\",\"title\":\"UtilizationReport_title__2XpUx\",\"report-details\":\"UtilizationReport_report-details__2Gwsz\",\"graph\":\"UtilizationReport_graph__4pr7a\",\"item\":\"UtilizationReport_item__IARh3\",\"header-data\":\"UtilizationReport_header-data__1AGxt\",\"mark\":\"UtilizationReport_mark__1kk59\",\"text\":\"UtilizationReport_text__1Df4L\",\"graph-plot\":\"UtilizationReport_graph-plot__3r_fS\",\"plot-items\":\"UtilizationReport_plot-items__Zxv2v\",\"graph-group\":\"UtilizationReport_graph-group__3MVIL\",\"graph-container\":\"UtilizationReport_graph-container__1eAun\",\"bar-chart-wrapper\":\"UtilizationReport_bar-chart-wrapper__3x3sF\",\"bar-chart\":\"UtilizationReport_bar-chart__ujAbZ\",\"tooltip\":\"UtilizationReport_tooltip__dfeeV\",\"graph-category\":\"UtilizationReport_graph-category__2lqgG\",\"table-row\":\"UtilizationReport_table-row__1DH5e\",\"memberinfo\":\"UtilizationReport_memberinfo__TuCw6\",\"memberInfoLabel\":\"UtilizationReport_memberInfoLabel__2UcnQ\",\"memberInfoValue\":\"UtilizationReport_memberInfoValue__kPN-c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PRCheckReport_root__1_Jek\",\"header\":\"PRCheckReport_header__CwPU0\",\"content\":\"PRCheckReport_content__1p50d\",\"filter\":\"PRCheckReport_filter__3YKV6\",\"input\":\"PRCheckReport_input__1ZGg4\",\"submit\":\"PRCheckReport_submit__32n3T\",\"body\":\"PRCheckReport_body__25wTW\",\"table\":\"PRCheckReport_table__2MB3o\",\"table-row\":\"PRCheckReport_table-row__3-j4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TreasuryTransmittalReport_root__1w4kc\",\"header\":\"TreasuryTransmittalReport_header__IrqK3\",\"content\":\"TreasuryTransmittalReport_content__3UWdu\",\"filter\":\"TreasuryTransmittalReport_filter__tF8dp\",\"input\":\"TreasuryTransmittalReport_input__3DQ6Z\",\"submit\":\"TreasuryTransmittalReport_submit__3pRqC\",\"body\":\"TreasuryTransmittalReport_body__FQUBf\",\"table\":\"TreasuryTransmittalReport_table__2rtjS\",\"table-row\":\"TreasuryTransmittalReport_table-row__1OR-N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ButtonFooter_root__2X5k5\",\"buttons\":\"ButtonFooter_buttons__2aw08\",\"counter\":\"ButtonFooter_counter__20NW7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__RJlxK\",\"header-container\":\"AssignDialog_header-container__1o5Gi\",\"header\":\"AssignDialog_header__3ISr0\",\"title\":\"AssignDialog_title__2y4cT\",\"content\":\"AssignDialog_content__24eRW\",\"input\":\"AssignDialog_input__NW5vD\",\"footer\":\"AssignDialog_footer__2rmZz\",\"assign\":\"AssignDialog_assign__2WmDm\",\"to\":\"AssignDialog_to__1Lcwa\",\"action\":\"AssignDialog_action__2z0LV\",\"message-content\":\"AssignDialog_message-content__WGOqe\",\"message\":\"AssignDialog_message__3BYCA\",\"message-child\":\"AssignDialog_message-child__2BQeL\",\"alert-title\":\"AssignDialog_alert-title__gx1Vh\",\"footer-action\":\"AssignDialog_footer-action__rMIKB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsList_root__32NKA\",\"table-container\":\"ClaimsList_table-container__2xz0B\",\"search-container\":\"ClaimsList_search-container__1JKTH\",\"reassign\":\"ClaimsList_reassign__177eW\",\"search\":\"ClaimsList_search__2869S\",\"action-container\":\"ClaimsList_action-container__3VFV3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1zt4e\",\"tiles\":\"Dashboard_tiles__N_XeU\",\"row\":\"Dashboard_row__3-lCS\",\"task-tray\":\"Dashboard_task-tray__L-btV\",\"list-item\":\"Dashboard_list-item__2Z2uy\",\"details\":\"Dashboard_details__-wyqw\",\"detail-item\":\"Dashboard_detail-item__jAHga\",\"label\":\"Dashboard_label__KNpiW\",\"content\":\"Dashboard_content__17Lfg\",\"action\":\"Dashboard_action__38kLX\",\"ticket-list\":\"Dashboard_ticket-list__3bes0\",\"wrapper\":\"Dashboard_wrapper__38JoV\",\"float\":\"Dashboard_float__1YyQM\",\"completed_task\":\"Dashboard_completed_task__1dK9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__28tvA\",\"tiles\":\"Dashboard_tiles__1xRNf\",\"row\":\"Dashboard_row__1lZjx\",\"task-tray\":\"Dashboard_task-tray__m0Mne\",\"list-item\":\"Dashboard_list-item__1W9Rx\",\"details\":\"Dashboard_details__3v-9d\",\"detail-item\":\"Dashboard_detail-item__SBoHO\",\"label\":\"Dashboard_label__2lH5b\",\"content\":\"Dashboard_content__3NMtD\",\"action\":\"Dashboard_action__nDNUz\",\"ticket-list\":\"Dashboard_ticket-list__3Y9ji\",\"completed_task\":\"Dashboard_completed_task__2-BCo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__vQHL2\",\"header-container\":\"AssignDialog_header-container__1qQN2\",\"header\":\"AssignDialog_header__3PltF\",\"title\":\"AssignDialog_title__e_cZ1\",\"content\":\"AssignDialog_content__3wFoW\",\"input\":\"AssignDialog_input__AeSdQ\",\"footer\":\"AssignDialog_footer__3dKcT\",\"assign\":\"AssignDialog_assign__X3IaA\",\"to\":\"AssignDialog_to__2FSjd\",\"action\":\"AssignDialog_action__HdROx\",\"message-content\":\"AssignDialog_message-content__3s8j-\",\"message\":\"AssignDialog_message__1o7jm\",\"message-child\":\"AssignDialog_message-child__l94pI\",\"alert-title\":\"AssignDialog_alert-title__3GyBp\",\"footer-action\":\"AssignDialog_footer-action__2CQoT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetailsPage_root__1WnVw\",\"footer\":\"BatchDetailsPage_footer__2mXHQ\",\"actions\":\"BatchDetailsPage_actions__qSR-l\",\"delete-button\":\"BatchDetailsPage_delete-button__17y_B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MaintenancePage_root__18jNl\",\"button-parent\":\"MaintenancePage_button-parent__1YFg4\",\"active\":\"MaintenancePage_active__3Ltsc\",\"header\":\"MaintenancePage_header__3ou_p\",\"header-wrapper\":\"MaintenancePage_header-wrapper__14ljZ\",\"header-text\":\"MaintenancePage_header-text__LYsHh\",\"table\":\"MaintenancePage_table__2RLkb\",\"add-item-root\":\"MaintenancePage_add-item-root__iVNF-\",\"wrapper\":\"MaintenancePage_wrapper__3LPhK\",\"text-wrapper\":\"MaintenancePage_text-wrapper__27CjW\",\"radio-buttons\":\"MaintenancePage_radio-buttons__1E3wP\",\"button-wrapper\":\"MaintenancePage_button-wrapper__DTWi8\"};"],"sourceRoot":""}