{"version":3,"sources":["Pages/ApproveProposal/Summary/index.tsx","Pages/ApproveProposal/ApproveProposalActions.ts","Pages/ApproveProposal/ApproveProposalModals/index.tsx","Pages/ApproveProposal/ApproveProposalSelector.ts","Pages/ApproveProposal/ApproveProposalPage.tsx"],"names":["Summary","props","classes","summaryPackages","summaryBenefits","selectedSummaryCategory","SetSelectedSummaryPackage","SetSelectedSummaryCategory","useEffect","length","first","tree_path","code","Grid","container","className","gridContainer","item","xs","Typography","sectionTitle","Tabs","value","tabs","map","i","Tab","key","label","name","tab","onClick","Table","table","TableHead","TableRow","TableCell","columnCategory","columnBenefit","TableBody","planType","row","x","tableRowEven","tableRowOdd","component","scope","rowSpan","ApproveProposalActions","payload","type","ActionConsts","ApproveProposal","SetBenefitNodes","SetClientData","SetSelectedPlanType","SetSelectedPlanPackage","SetSelectedBenefitCategory","useStyles","makeStyles","theme","root","flexWrap","dialog","align","justify","width","fontFamily","dialogContent","paddingTop","dialogContentText","fontSize","paddingRight","paddingLeft","dialogTitle","marginTop","spacing","marginBottom","color","fontWeight","dialogContentContainer","dialogAction","justifyContent","closeButton","position","right","top","palette","grey","ProposalApprovalModal","isModalOpen","id","Dialog","open","aria-labelledby","style","zIndex","alignItems","direction","DialogTitle","disableTypography","title","IconButton","aria-label","onClose","DialogContent","padding","DialogContentText","message","allowRevision","FormGroup","FormControlLabel","control","Checkbox","checked","allowedRevise","onChange","e","stopPropagation","console","log","target","setAllowedRevise","DialogActions","buttons","defaultProps","getBenefitNodes","state","pages","approveProposal","benefitNodes","getSelectedSummaryPackage","selectedSummaryPackage","getSelectedSummaryCategory","getSelectedPlanType","selectedPlanType","getSelectedPlanPackage","selectedPlanPackage","getSelectedBenefitCategory","selectedBenefitCategory","getClientData","clientData","selectBusinessData","createSelector","businessData","selectNatureData","natureData","selectContactDetailsData","contactDetailsData","selectHMOData","HMOData","selectPrincipalData","principalData","selectContractNodes","getFilteredNodes","selectPlanTypeNodes","selectPlanPackageNodes","selectBenefitCategoryNodes","selectBenefitTypeNodes","selectMainBenefitNodes","selectContractNode","contractNodes","getContractNode","selectCategoryNode","planPackageNodes","benefitCategoryNodes","getCategoryNode","selectSummaryPackages","mainBenefitNodes","nodes","filter","category","benefits","benefit","included","baseNode","find","baseItem","undefined","includes","node","index","findIndex","selectSummaryBenefits","planTypeNodes","reduce","result","newPlanItem","Object","assign","push","Array","selectPlanTypeList","benefitTypeNodes","getPlanTypeList","selectRows","getRows","selectRoomAndBoardList","getSidebarList","selectCoverageList","selectRiderList","API_URL","process","buttonStyles","approveBtn","approveWithConditionsBtn","minWidth","borderWidth","borderColor","backgroundColor","disapproveBtn","cancelBtn","marginRight","border","okayBtn","checkboxSize","main","boxShadow","columnLimit","subSectionTitle","fieldGroupTitle","listItemTextRoot","flex","listItemTextPrimarySelected","cursor","listItemTextPrimaryNotSelected","dropzone","height","borderRadius","display","flexDirection","inputLabel","keyboardDatePicker","checkbox","radio","appBar","bottom","breakpoints","up","grow","flexGrow","button","margin","minHeight","buttonTitle","buttonSubTitle","ApproveProposalPage","contractNode","btnclasses","useState","currentStep","setCurrentStep","loading","setLoading","isApprovalModalOpen","setIsApprovalModalOpen","approvalModalTitle","setApprovalModalTitle","approvalModalMessage","setApprovalModalMessage","approvalModalButtons","setApprovalModalButtons","setallowRevision","redirectToDashboard","setRedirectToDashboard","clientLoaded","setClientLoaded","nodesLoaded","setNodesLoaded","contractLoaded","setContractLoaded","invalidFields","user_role","accessToken","successRedirectToDashboard","showHideApprovalModal","handleLoadClientFromAPI","GET_URL","match","params","client_id","fetch","method","headers","then","response","json","client","data","branchAddresses","branches","address","floor","unit","buildingNumber","bldg_no","buildingName","bldg_name","street","barangay","brgy","city","region","zipCode","zip_code","contactPersons","contact_persons","person","number","contact_no","email","email_address","designation","telephoneNumbers","contact_numbers","telno","no","inputBusinessData","registeredCorporateName","registered_name","tradeBrandName","brand_name","corporateAccountNo","corporate_account_no","secRegistrationNo","sec_reg_no","corporateTin","tin_no","vatType","vat_type","eVatNo","evat_no","nameDisplayedInCard","name_on_card","subCompany","headCompany","headCompanyName","head_company_name","inputNatureData","industry","ownership","yearsOfExistence","years_of_existence","sourcesOfFunds","sources_of_funds","inputContactDetailsData","main_office_address","authorizedSignatoryName","authorized_signatory","authorizedSignatoryNumber","authorized_signatory_contact_no","authorizedSignatoryEmail","authorized_signatory_email_address","authorizedSignatoryDesignation","authorized_signatory_designation","telephoneNumber","contactPerson","branchAddress","inputHMOData","previousHMOProvider","prev_hmo_provider","effectivityDate","expiryDate","sales_channel","agent_name","company_name","contact_person","convertClientData","catch","error","handleLoadBenefitNodesFromAPI","baseNodes","proposal_id","convertNodeData","combineBaseBenefitNodes","showFailedModal","Button","variant","handleDisapproveProposal","Processmaker","put","ticket_id","response2","response3","showSuccessModal","handleApproveProposal","withconditions","body","response4","handleLoadBaseNodesFromAPI","numOfPrincipals","principals_count","malePrincipals","male_principals_count","femalePrincipals","female_principals_count","numOfDependents","dependents_count","maleDependents","male_dependents_count","femaleDependents","female_dependents_count","to","pathname","step","Details","submitMode","StandardBenefitPlan","renderStep","Fragment","flag","mapStateToProps","categoryNode","planTypeList","roomAndBoardList","coverageList","riderList","rows","mapDispatchToProps","dispatch","bindActionCreators"],"mappings":"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","file":"static/js/15.3f273a94.chunk.js","sourcesContent":["import React from 'react';\n\nimport { useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { IApproveProposal } from 'Pages/ApproveProposal/IApproveProposal';\n\nimport {\n\tGrid,\n} from '@material-ui/core';\n\ninterface BenefitsTableProps {\n\tclasses: any;\n}\n\nexport const Summary:React.FC<IApproveProposal.IProps & BenefitsTableProps> = (props: IApproveProposal.IProps & BenefitsTableProps) => {\n\tconst { classes, \n\t\t\tsummaryPackages, \n\t\t\tsummaryBenefits, \n\t\t\tselectedSummaryCategory,\n\t\t\tSetSelectedSummaryPackage, \n\t\t\tSetSelectedSummaryCategory \n\t\t} = props;\n\n\n\tuseEffect(() => {\n\t\tif (summaryPackages.length > 0) {\n\t\t\tconst first = summaryPackages[0];\n\t\t\tSetSelectedSummaryPackage(`${first.tree_path[3]}`);\n\t\t\tSetSelectedSummaryCategory(`${first.code}`);\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t\t<Grid container className={classes.gridContainer}>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<Typography className={classes.sectionTitle}>\n\t\t\t\t\t\tSummary Per Plan Type\n\t\t\t\t\t</Typography>\n\t\t\t        <Tabs value={selectedSummaryCategory} className={classes.tabs}>\n\t\t\t         {\n\t\t\t         \tsummaryPackages.length > 0 ? \n\t\t\t         \t\tsummaryPackages.map((item: any, i: number) => \n\t\t\t         \t\t\t <Tab \n\t\t\t         \t\t\t \tkey={i}\n\t\t\t         \t\t\t \tvalue={item.code}\n\t\t\t         \t\t\t \tlabel={item.name}\n\t\t\t         \t\t\t \tclassName={classes.tab}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tSetSelectedSummaryPackage(`${item.tree_path[3]}`);\n\t\t\t\t\t\t\t\t\t\tSetSelectedSummaryCategory(`${item.code}`);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t         \t\t\t />\n\t\t\t\t\t\t\t) : null\n\t\t\t         }\n\t\t\t        </Tabs>\n\n\t\t\t\t    <Table className={classes.table}>\n\t\t\t\t        <TableHead>\n\t\t\t\t          \t<TableRow>\n\t\t\t\t\t            <TableCell className={classes.columnCategory}></TableCell>\n\t\t\t\t\t            <TableCell className={classes.columnBenefit}>Benefit</TableCell>\n\t\t\t\t\t    {/*       <TableCell className={classes.columnLimit}>Limit</TableCell>\n\t\t\t\t\t            <TableCell>Eligibility</TableCell>\n\t\t\t\t\t            <TableCell>Effectivity</TableCell>\n\t\t\t\t\t            <TableCell>Reimbursement</TableCell>*/}\n\t\t\t\t          \t</TableRow>\n\t\t\t\t        </TableHead>\n\t\t\t\t        <TableBody>\n\t\t\t\t        \t{\n\t\t\t\t        \t\tsummaryBenefits.length > 0 ? \n\t\t\t\t        \t\t\tsummaryBenefits.map((planType, i) => \n\t\t\t\t        \t\t\t\tplanType['child_nodes'] && planType['child_nodes'].length > 0 ? \n\t\t\t\t        \t\t\t\t\tplanType['child_nodes'].map ((row, x) => \n\t\t\t\t\t\t\t\t\t            <TableRow className={i % 2 ? classes.tableRowEven : classes.tableRowOdd} key={x}>\n\t\t\t\t\t\t\t\t\t              { \n\t\t\t\t\t\t\t\t\t              \tx === 0 ? \n\t\t\t\t\t\t\t\t\t              \t\t<TableCell component=\"th\" scope=\"row\" rowSpan={planType['child_nodes'].length}>\n\t\t\t\t\t\t\t\t\t\t\t            \t{planType.name}\n\t\t\t\t\t\t\t\t\t\t\t            </TableCell> : null\n\n\t\t\t\t\t\t\t\t\t              }    \n\t\t\t\t\t\t\t\t\t              <TableCell>\n\t\t\t\t\t\t\t\t\t              \t{row.name}\n\t\t\t\t\t\t\t\t\t              </TableCell>\n\t\t\t\t\t\t\t\t\t            </TableRow>\n\t\t\t\t        \t\t\t\t\t) : null\n\t\t\t\t        \t\t\t) : null\n\t\t\t\t        \t}\n\t\t\t\t        </TableBody>\n\t\t\t\t     </Table>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t);\n};","import { ActionConsts } from './ActionConsts';\n\nexport const ApproveProposalActions = {\n\tMap: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.ApproveProposal.SetReducer,\n\t}),\n\n\tReset: () => ({\n\t\ttype: ActionConsts.ApproveProposal.ResetReducer,\n\t}),\n\n\tSetBenefitNodes: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.ApproveProposal.SetBenefitNodes,\n\t}),\n\n\tSetClientData: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.ApproveProposal.SetClientData,\n\t}),\n\n\tSetSelectedSummaryPackage: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.ApproveProposal.SetSelectedSummaryPackage,\n\t}),\n\n\tSetSelectedSummaryCategory: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.ApproveProposal.SetSelectedSummaryCategory,\n\t}),\n\t\n\tSetSelectedPlanType: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.ApproveProposal.SetSelectedPlanType,\n\t}),\n\n\tSetSelectedPlanPackage: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.ApproveProposal.SetSelectedPlanPackage,\n\t}),\n\n\tSetSelectedBenefitCategory: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.ApproveProposal.SetSelectedBenefitCategory,\n\t}),\n};\n","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dialog, DialogTitle, DialogContent,\n    DialogContentText, DialogActions, Grid,\n    IconButton, FormControlLabel, Checkbox,\n    FormGroup} from '@material-ui/core/';\nimport CloseIcon from '@material-ui/icons/Close';\n\ninterface ProposalApprovalModalProps {\n    isModalOpen: boolean;\n    id: string;\n    message: string;\n    title: string;\n    buttons?: any | null;\n    allowRevision?: any | null;\n    onClose: (flag: boolean) => void;\n    allowedRevise: boolean;\n    setAllowedRevise: (flag: boolean) => void;\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexWrap:'wrap'\n    },\n    dialog:{\n        align:'center',\n        justify:'center',\n        width:'100%',\n        fontFamily: 'usual',\n    },\n    dialogContent :{\n        paddingTop : '0px',\n    },\n    dialogContentText :{\n        fontSize: '0.875rem'\n    },\n    container: {\n        paddingRight:'15px',\n        paddingLeft:'15px',\n        width: '450px'\n    },\n    dialogTitle: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        fontSize: '16px',\n        color: '#272E4C',\n        fontWeight: 700\n    },\n    dialogContentContainer: {\n        width: '100%'\n    },\n    dialogAction: {\n        marginBottom: theme.spacing(3),\n        marginTop: theme.spacing(2),\n        justifyContent:'center'\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    }\n}));\n  \n\nexport const ProposalApprovalModal: React.FC<ProposalApprovalModalProps> = (\n\tprops: ProposalApprovalModalProps,\n): JSX.Element => {\n    const {\n        isModalOpen,\n        id\n    } = props;\n    const classes = useStyles();\n    \n    const onClose = () =>{\n        if(props.onClose){\n            props.onClose(false);\n        }\n    }\n\n    return (\n        <Dialog\n            id={id}\n            open={isModalOpen}\n            aria-labelledby=\"modal-title\"\n            className={classes.dialog}\n            style={{zIndex: 9999}}\n        >\n            <div>\n                <Grid container className={classes.container} justify=\"flex-start\" alignItems=\"flex-start\" direction=\"column\">\n                    <Grid item xs={12}>\n                        <DialogTitle className={classes.dialogTitle} disableTypography={true} id=\"modal-title\" >\n                            {props.title}\n                            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </DialogTitle>\n                    </Grid>\n                    <Grid item xs={12} className={classes.dialogContentContainer}>\n                        <DialogContent className={classes.dialogContent} style={{padding: '0px 20px 10px 20px'}}>\n                            <DialogContentText className={classes.dialogContentText}>\n                                {props.message}\n                                {props.allowRevision === true ?\n                                    <div>\n                                        <FormGroup>\n                                            <FormControlLabel\n                                                style={{paddingTop: '15px'}}\n                                                className={\"allowed_revision\"}\n                                                control={<Checkbox\n                                                    checked={props.allowedRevise}\n                                                    color=\"primary\"\n                                                    onChange={e => {\n                                                        e.stopPropagation();\n                                                        console.log(\" e.target.checked >>>\", e.target.checked)\n                                                        props.setAllowedRevise(e.target.checked)\n                                                    }}\n                                                />}\n                                                label=\"Allow the BDO to revise\"\n                                            />\n                                        </FormGroup>\n                                    </div>: null\n                                }\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions className={classes.dialogAction}>\n                            {props.buttons}\n                        </DialogActions>\n                    </Grid>\n                </Grid>\n            </div>\n        </Dialog>\n    )\n}\n\nProposalApprovalModal.defaultProps = {\n    isModalOpen: false,\n    id: 'proposal_approval_modal',\n    message: \"This is a sample modal.\",\n    title: \"Sample Modal\",\n    allowRevision: false\n};\n","/**\n * The global state selectors\n */\n\nimport { createSelector } from 'reselect';\nimport { getFilteredNodes, getSidebarList, getRows, getPlanTypeList, getContractNode, getCategoryNode } from '../CreateProposal/CreateProposalSelector';\n\nconst getBenefitNodes = (state: any) => {\n  return state.pages.approveProposal.benefitNodes;\n};\n\nconst getSelectedSummaryPackage = (state: any) => {\n  return state.pages.approveProposal.selectedSummaryPackage;\n};\n\nconst getSelectedSummaryCategory = (state: any) => {\n  return state.pages.approveProposal.selectedSummaryCategory;\n};\n\nconst getSelectedPlanType = (state: any) => {\n  return state.pages.approveProposal.selectedPlanType;\n};\n\nconst getSelectedPlanPackage = (state: any) => {\n  return state.pages.approveProposal.selectedPlanPackage;\n};\n\nconst getSelectedBenefitCategory = (state: any) => {\n  return state.pages.approveProposal.selectedBenefitCategory;\n};\n\nconst getClientData = (state: any) => {\n  return state.pages.approveProposal.clientData;\n};\n\nconst selectBusinessData = createSelector(getClientData, (clientData) => {\n  return clientData.businessData;\n});\n\nconst selectNatureData = createSelector(getClientData, (clientData) => {\n  return clientData.natureData;\n});\n\nconst selectContactDetailsData = createSelector(getClientData, (clientData) => {\n  return clientData.contactDetailsData;\n});\n\nconst selectHMOData = createSelector(getClientData, (clientData) => {\n  return clientData.HMOData;\n});\n\nconst selectPrincipalData = createSelector(getClientData, (clientData) => {\n  return clientData.principalData;\n});\n\nconst selectContractNodes = createSelector(getBenefitNodes, (benefitNodes) => {\n  return getFilteredNodes (benefitNodes, 2);\n});\n\nconst selectPlanTypeNodes = createSelector(getBenefitNodes, (benefitNodes) => {\n  return getFilteredNodes (benefitNodes, 3);\n});\n\nconst selectPlanPackageNodes = createSelector(getBenefitNodes, (benefitNodes) => {\n  return getFilteredNodes (benefitNodes, 4);\n});\n\nconst selectBenefitCategoryNodes = createSelector(getBenefitNodes, (benefitNodes) => {\n  return getFilteredNodes (benefitNodes, 5);\n});\n\nconst selectBenefitTypeNodes = createSelector(getBenefitNodes, (benefitNodes) => {\n  return getFilteredNodes (benefitNodes, 6);\n});\n\nconst selectMainBenefitNodes = createSelector(getBenefitNodes, (benefitNodes) => {\n  return getFilteredNodes (benefitNodes, 7);\n});\n\nconst selectContractNode = createSelector(selectContractNodes, (contractNodes) => {\n  return getContractNode(contractNodes);\n});\n\nconst selectCategoryNode = createSelector(selectPlanPackageNodes, selectBenefitCategoryNodes, getSelectedPlanType, getSelectedPlanPackage, getSelectedBenefitCategory, (planPackageNodes, benefitCategoryNodes, selectedPlanType, selectedPlanPackage, selectedBenefitCategory) => {\n  return getCategoryNode(planPackageNodes, benefitCategoryNodes, selectedPlanType, selectedPlanPackage, selectedBenefitCategory);\n});\n\nconst selectSummaryPackages = createSelector(selectBenefitCategoryNodes, selectMainBenefitNodes, (benefitCategoryNodes, mainBenefitNodes) => {\n\tlet nodes = benefitCategoryNodes.filter((category: any) => {\n\t\tlet benefits = mainBenefitNodes.filter((benefit) => {\n\t\t\treturn \tbenefit.tree_path[2] === category.tree_path[2] &&\n\t\t\t\t\tbenefit.tree_path[3] === category.tree_path[3] &&\n\t\t\t\t\tbenefit.tree_path[4] === category.tree_path[4] &&\n\t\t\t\t\tbenefit.included === true\n\t\t});\n\n\t\tbenefits = benefits.filter((benefit) => {\n\t\t\tconst baseNode = mainBenefitNodes.find ((baseItem) => {\n\t            return (\n\t              baseItem.name === benefit.name &&\n\t              baseItem.code === benefit.code &&\n\t              baseItem.tree_path[2] === 'BASE' &&\n\t              baseItem.tree_path[3] === benefit.tree_path[3] &&\n\t              baseItem.tree_path[4] === benefit.tree_path[4] &&\n\t              baseItem.tree_path[5] === benefit.tree_path[5] &&\n\t              baseItem.tree_path[6] === benefit.tree_path[6]\n\t            )\n\t          });\n\n\t\t\tif (baseNode && !baseNode.included) {\n\t\t\t\treturn true;\n\t\t\t} else if (baseNode === undefined) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\treturn (\n\t\t\tcategory.tree_path[2] !== \"BASE\" &&\n\t\t\t[\"CV\", \"RI\"].includes(category.tree_path[3]) &&\n\t\t\tbenefits.length > 0\n\t\t);\n\t});\n\n\t// filter duplicates\n\tnodes = nodes.filter ((node: any, i: number)  => {\n\t\tconst index = nodes.findIndex(category => \n\t\t    category.name === node.name && \n\t\t    category.code === node.code\n\t\t);\n\n\t\tif (index !== undefined && index !== i) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t});\n\n\treturn nodes;\n});\n\nconst selectSummaryBenefits = createSelector(selectPlanTypeNodes, selectMainBenefitNodes, getSelectedSummaryPackage, getSelectedSummaryCategory, (planTypeNodes, mainBenefitNodes, selectedSummaryPackage, selectedSummaryCategory) => {\n\tlet nodes = planTypeNodes.reduce ((result, item) => {\n\t\tif (item.code !== \"BASE\") {\n\t\t\tlet newPlanItem = Object.assign({}, item);\n\t\t\tconst code = newPlanItem.code;\n\n\t\t\tlet benefits = mainBenefitNodes.filter((item) => {\n\t\t\t\treturn \titem.tree_path[2] === code &&\n\t\t\t\t\t\titem.tree_path[3] === selectedSummaryPackage &&\n\t\t\t\t\t\titem.tree_path[4] === selectedSummaryCategory &&\n\t\t\t\t\t\titem.included === true\n\t\t\t});\n\n\t\t\tbenefits = benefits.filter((benefit) => {\n\t\t\t\tconst baseNode = mainBenefitNodes.find ((baseItem) => {\n\t\t            return (\n\t\t              baseItem.name === benefit.name &&\n\t\t              baseItem.code === benefit.code &&\n\t\t              baseItem.tree_path[2] === 'BASE' &&\n\t\t              baseItem.tree_path[3] === benefit.tree_path[3] &&\n\t\t              baseItem.tree_path[4] === benefit.tree_path[4] &&\n\t\t              baseItem.tree_path[5] === benefit.tree_path[5] &&\n\t\t              baseItem.tree_path[6] === benefit.tree_path[6]\n\t\t            )\n\t\t          });\n\n\t\t\t\tif (baseNode && !baseNode.included) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else if (baseNode === undefined) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\tnewPlanItem['child_nodes'] = benefits;\n\n\t\t\tif (newPlanItem['child_nodes'].length > 0) {\n\t\t\t\tresult.push(newPlanItem);\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t}, new Array());\n\n\treturn nodes;\n});\n\n\nconst selectPlanTypeList = createSelector(selectPlanTypeNodes, selectMainBenefitNodes, selectBenefitTypeNodes, (planTypeNodes, mainBenefitNodes, benefitTypeNodes) => {\n  return getPlanTypeList(planTypeNodes, mainBenefitNodes, benefitTypeNodes);\n});\n\nconst selectRows = createSelector(selectBenefitCategoryNodes, selectBenefitTypeNodes, selectMainBenefitNodes, getSelectedPlanType, getSelectedPlanPackage, getSelectedBenefitCategory, (benefitCategoryNodes, benefitTypeNodes, mainBenefitNodes, selectedPlanType, selectedPlanPackage, selectedBenefitCategory) => {\n  return getRows(benefitCategoryNodes, benefitTypeNodes, mainBenefitNodes, selectedPlanType, selectedPlanPackage, selectedBenefitCategory);\n});\n\nconst selectRoomAndBoardList = createSelector(selectBenefitCategoryNodes, getSelectedPlanType, (benefitCategoryNodes, selectedPlanType) => {\n  return getSidebarList (benefitCategoryNodes, selectedPlanType, 'RB');\n});\n\nconst selectCoverageList = createSelector(selectBenefitCategoryNodes, getSelectedPlanType, (benefitCategoryNodes, selectedPlanType) => {\n  return getSidebarList (benefitCategoryNodes, selectedPlanType, 'CV');\n});\n\nconst selectRiderList = createSelector(selectBenefitCategoryNodes, getSelectedPlanType, (benefitCategoryNodes, selectedPlanType) => {\n  return getSidebarList (benefitCategoryNodes, selectedPlanType, 'RI');\n});\n\nexport { \n\tgetBenefitNodes,\n\tgetClientData,\n\tselectPlanTypeNodes,\n\tselectSummaryPackages,\n\tselectSummaryBenefits,\n\tgetSelectedPlanType,\n\tgetSelectedPlanPackage,\n\tgetSelectedBenefitCategory,\n\tselectPlanTypeList,\n\tselectRoomAndBoardList,\n\tselectCoverageList,\n\tselectRiderList,\n\tselectRows,\n\tselectBusinessData,\n\tselectNatureData,\n\tselectContactDetailsData,\n\tselectHMOData,\n\tselectPrincipalData,\n\tselectContractNode,\n\tselectCategoryNode,\n\tgetSelectedSummaryPackage,\n\tgetSelectedSummaryCategory,\n};\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { convertNodeData, combineBaseBenefitNodes } from '../CreateProposal/CreateProposalPage';\nimport { Details } from '../CreateProposal/Details';\nimport { StandardBenefitPlan } from '../CreateProposal/Benefits/StandardBenefitPlan';\nimport { Summary } from './Summary';\n\nimport { Store } from 'Components/Stores/IStore';\nimport { IApproveProposal } from 'Pages/ApproveProposal/IApproveProposal';\nimport { ApproveProposalActions } from './ApproveProposalActions';\n\nimport { ProposalApprovalModal } from './ApproveProposalModals';\n\nimport {\n\tgetBenefitNodes, \n\tselectSummaryPackages,\n\tselectSummaryBenefits,\n\tgetSelectedPlanType,\n\tgetSelectedPlanPackage,\n\tgetSelectedBenefitCategory,\n\tgetSelectedSummaryPackage,\n\tgetSelectedSummaryCategory,\n\tselectPlanTypeList,\n\tselectRoomAndBoardList,\n\tselectCoverageList,\n\tselectRiderList,\n\tselectRows,\n\tgetClientData,\n\tselectBusinessData,\n\tselectNatureData,\n\tselectContactDetailsData,\n\tselectHMOData,\n\tselectPrincipalData,\n\tselectContractNode,\n\tselectCategoryNode,\n} from './ApproveProposalSelector';\nimport {\n\tFloatingFooter,\n\tLoadingIndicator\n} from 'Components/UI/';\n\n// import { Components } from '@hims/core';\n\nimport { Processmaker } from '../Processmaker';\n\nlet\tAPI_URL = process.env.REACT_APP_BASE_URL;\n\nconst buttonStyles = makeStyles({\n\tapproveBtn:{\n\t\twidth:115,\n\t},\n\tapproveWithConditionsBtn:{\n\t\tminWidth:115,\n\t\tcolor: '#0F808E',\n\t\tborderWidth: '2px',\n\t\tborderColor: '#E6F5F6',\n\t\tbackgroundColor: \"#E6F5F6\",\n\t\t'&:hover': {\n\t\t\tcolor: '#FFFFFF',\n\t\t},\n\t},\n\tdisapproveBtn:{\n\t\twidth:115,\n\t\tcolor: '#FD5451',\n\t\tborderWidth: '2px',\n\t\tborderColor: '#DDDFE3',\n\t\tbackgroundColor: \"#DDDFE3\",\n\t\t'&:hover': {\n\t\t\tcolor: '#FFFFFF',\n\t\t},\n\t},\n\tcancelBtn:{\n\t\twidth:115,\n        marginRight:25,\n        border: '1px solid #3AB77D',\n        color: '#3AB77D',\n        backgroundColor: \"#FFFFFF\"\n\t},\n\tokayBtn:{\n\t\twidth:115,\n        border: '1px solid #3AB77D',\n        color: '#3AB77D',\n        backgroundColor: \"#FFFFFF\"\n\t},\n\tcheckboxSize: {\n\t\tfontSize: '0.85rem',\n\t\t'& > .MuiTypography-body':{\n\t\t\tfontSize: '0.85rem',\n\t\t}\n\t}\n\n})\n\nconst useStyles = makeStyles(theme => ({\n\tmain:{\n\t\tbackgroundColor: '#F5F7FB',\n\t\tpadding: '32px 24px'\n\t},\n\tgridContainer: {\n\t\tpadding: theme.spacing(1),\n\t},\n\tsectionTitle: {\n\t\tfontSize: 24,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\ttable: {\n\t\tmarginTop: 10,\n\t\tboxShadow: '0px 3px 6px #00000029'\n\t},\n\ttabs: {\n\t\tmarginTop: 10,\n\t},\n\ttab: {\n        fontWeight: 'normal'\n\t},\n\tcolumnCategory: {\n\t\twidth: 150\n\t},\n\tcolumnBenefit: {\n\t\twidth: 150\n\t},\n\tcolumnLimit: {\n\t\twidth: 150\n\t},\n\ttableRowEven: {\n\t\tbackgroundColor: '#F6F7FA !important'\n\t},\n\ttableRowOdd: {\n\t\tbackgroundColor: '#FFFFFF !important'\n\t},\n\tsubSectionTitle: {\n\t\tfontSize: 16,\n\t\tfontWeight: 400,\n\t\tcolor: '#272e4c',\n\t},\n\tfieldGroupTitle: {\n\t\tfontSize: 13,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\tlistItemTextRoot: {\n\t\tflex: 'none',\n\t},\n\tlistItemTextPrimarySelected: {\n\t\tfontSize: 14,\n\t\tfontWeight: 700,\n\t\tcolor: 'rgba(39, 46, 76, 1)',\n\t\tcursor: 'pointer',\n\t},\n\tlistItemTextPrimaryNotSelected: {\n\t\tfontSize: 14,\n\t\tfontWeight: 700,\n\t\tcolor: 'rgba(39, 46, 76, 0.3)',\n\t\tcursor: 'pointer',\n\t},\n\tdropzone: {\n\t\twidth: '460px',\n\t\theight: '88px',\n\t\tmarginTop: '10px',\n\t\tmarginBottom: '20px',\n\t\tborder: '2px dashed rgba(30, 32, 113, 0.3)',\n\t\tborderRadius: '5px',\n\t\tbackgroundColor: '#e6e8ee',\n\t\tcolor: '#7b8094',\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tflexDirection: 'column',\n\t},\n\tinputLabel: {\n\t\tcolor: '#272e4c',\n\t},\n\tkeyboardDatePicker: {\n\t\tmarginTop: '10px',\n\t\tmarginBottom: '20px',\n\t\twidth: '212px',\n\t},\n\tcheckbox: {\n\t\t'&.Mui-checked': {\n\t\t\tcolor: '#1e2071',\n\t\t},\n\t},\n\tradio: {\n\t\t'&.Mui-checked': {\n\t\t\tcolor: '#1e2071',\n\t\t},\n\t},\n\tappBar: {\n\t\ttop: 'auto',\n\t\tbottom: 0,\n\t\tborder: '1px solid #707070',\n\t\tbackgroundColor: 'rgba(54, 54, 54, 0.64)',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: 'calc(100% - 72px)',\n\t\t},\n\t},\n\tgrow: {\n\t\tflexGrow: 1,\n\t},\n\tbutton: {\n\t\tmargin: '0 10px',\n\t\tminHeight: '42px',\n\t\tminWidth: '150px',\n\t},\n\tbuttonTitle: {\n\t\tfontWeight: 700,\n\t\tfontSize: 13,\n\t},\n\tbuttonSubTitle: {\n\t\tfontWeight: 400,\n\t\tfontSize: 7,\n\t},\n}));\n\nexport const ApproveProposalPage: React.FC<IApproveProposal.IProps> = (\n\t\tprops: IApproveProposal.IProps\n\t): JSX.Element => {\n\tconst { contractNode, clientData, SetBenefitNodes, SetClientData } = props;\n\n\tconst classes = useStyles();\n\tconst btnclasses = buttonStyles();\n\tconst [currentStep, setCurrentStep] = useState(0);\n\tconst [loading, setLoading] = useState(false);\n\tconst [isApprovalModalOpen, setIsApprovalModalOpen] = useState(false);\n\tconst [approvalModalTitle, setApprovalModalTitle] = useState(\"\");\n\tconst [approvalModalMessage, setApprovalModalMessage] = useState(\"\");\n\tconst [approvalModalButtons, setApprovalModalButtons] = useState<any>(null);\n\tconst [allowRevision, setallowRevision] = useState(false);\n\tconst [allowedRevise, setAllowedRevise] = useState(false);\n\tconst [redirectToDashboard, setRedirectToDashboard] = useState(false);\n\tconst [clientLoaded, setClientLoaded] = useState(false);\n\tconst [nodesLoaded, setNodesLoaded] = useState(false);\n\tconst [contractLoaded, setContractLoaded] = useState(false);\n\tconst [invalidFields] = useState<string[]>([]);\n\tconst [user_role] = useState(\"Underwriting Manager\");\n\tconst [accessToken] = useState('');\n\t// const [client_id] = useState(\"5db7fc70a251bafd2ee7c96d\");\n\n\t// const renderTitle = (step) => {\n\t// \tswitch(step) {\n\t// \t    case 0:\n\t// \t    \treturn \"Details\";\n\t// \t    case 1:\n\t// \t    \treturn \"Modify Benefits\";\n\t// \t    case 2: \n\t// \t    \treturn \"Review\";\n\t// \t   \tdefault:\n\t// \t      return '';\n\t// \t}\n\t// }\n\n\n\tconst renderStep = (step) => {\n\t\tswitch(step) {\n\t\t    case 0:\n\t\t    \treturn <Details submitMode invalidFields={invalidFields} classes={classes} {...props} />;\n\t\t    case 1:\n\t\t    \treturn <StandardBenefitPlan submitMode classes={classes} {...props} />;\n\t\t    case 2: \n\t\t    \treturn <Summary classes={classes} {...props} />;\n\t\t   \tdefault:\n\t\t      return null;\n\t\t}\n\t}\n\n\n\tconst setStepBack = () => {\n\t\tif (currentStep > 0) {\n\t\t\tsetCurrentStep(currentStep - 1);\n\t\t}\n\t}\n\n\tconst setStepForward = () => {\n\t\tif (currentStep < 2) {\n\t\t\tsetCurrentStep(currentStep + 1);\n\t\t}\n\t}\n\n\tconst successRedirectToDashboard = () => {\n\t\tsetRedirectToDashboard(true);\n\t}\n\n\tconst showHideApprovalModal = (open: boolean) => {\n\t\tsetIsApprovalModalOpen(open);\n\t}\n\n\tconst updateAllowedRevise = (flag: boolean) => {\n\t\tsetAllowedRevise(flag)\n\t}\n\n \tconst convertClientData = (data: any) => {\t\n\t\tconst branchAddresses = data.branches.reduce ((result, item) => {\n\t\t\tconst address = {\n\t\t\t\tfloor: item.floor ? item.floor : '',\n\t\t\t\tunit: item.unit ? item.unit : '',\n\t\t\t\tbuildingNumber: item.bldg_no ? item.bldg_no : '',\n\t\t\t\tbuildingName: item.bldg_name ? item.bldg_name : '',\n\t\t\t\tstreet: item.street ? item.street : '',\n\t\t\t\tbarangay: item.brgy ? item.brgy : '',\n\t\t\t\tcity: item.city ? item.city : '',\n\t\t\t\tregion: item.region ? item.region : '',\n\t\t\t\tzipCode: item.zip_code ? item.zip_code : '',\n\t\t\t};\n\n\t\t\tresult.push (address);\n\t\t\t\n\t\t\treturn result;\n\t\t}, new Array());\n\n\t\tconst contactPersons = data.contact_persons.reduce ((result, item) => {\n\t\t\tconst person = {\n\t\t\t\tname: item.name ? item.name : '',\n\t\t\t\tnumber: item.contact_no ? item.contact_no : '',\n\t\t\t\temail: item.email_address ? item.email_address : '',\n\t\t\t\tdesignation: item.designation ? item.designation : '',\n\t\t\t};\n\n\t\t\tresult.push (person);\n\t\t\t\n\t\t\treturn result;\n\t\t}, new Array());\n\n\t\tconst telephoneNumbers = data.contact_numbers.reduce ((result, item) => {\n\t\t\tconst number = {\n\t\t\t\ttelno: item.no ? item.no : '',\n\t\t\t};\n\n\t\t\tresult.push (number);\n\t\t\t\n\t\t\treturn result;\n\t\t}, new Array());\n\n\t\tconst inputBusinessData = {\n\t\t\tregisteredCorporateName: data.registered_name ? data.registered_name : '',\n\t\t\ttradeBrandName: data.brand_name ? data.brand_name : '',\n\t\t\tcorporateAccountNo: data.corporate_account_no ? data.corporate_account_no : '',\n\t\t\tsecRegistrationNo: data.sec_reg_no ? data.sec_reg_no : '',\n\t\t\tcorporateTin: data.tin_no ? data.tin_no : '',\n\t\t\tvatType: data.vat_type ? data.vat_type : '',\n\t\t\teVatNo: data.evat_no ? data.evat_no : '',\n\t\t\tnameDisplayedInCard: data.name_on_card ? data.name_on_card : '',\n\t\t\tsubCompany: false,\n\t\t\theadCompany: '',\n\t\t\theadCompanyName: data.head_company_name ? data.head_company_name : '',\n\t\t};\n\n\t\tconst inputNatureData = {\n\t\t\tindustry: data.industry ? data.industry : '',\n\t\t\townership: data.ownership ? data.ownership : '',\n\t\t\tyearsOfExistence: data.years_of_existence ? data.years_of_existence : 0,\n\t\t\tsourcesOfFunds: data.sources_of_funds ? data.sources_of_funds : '',\n\t\t};\n\n\t\tconst inputContactDetailsData = {\n\t\t\tfloor: data.main_office_address.floor ? data.main_office_address.floor : '',\n\t\t\tunit: data.main_office_address.unit ? data.main_office_address.unit : '',\n\t\t\tbuildingNumber: data.main_office_address.bldg_no ? data.main_office_address.bldg_no : '',\n\t\t\tbuildingName: data.main_office_address.bldg_name ? data.main_office_address.bldg_name : '',\n\t\t\tstreet: data.main_office_address.street ? data.main_office_address.street : '',\n\t\t\tbarangay: data.main_office_address.brgy ? data.main_office_address.brgy : '',\n\t\t\tcity: data.main_office_address.city ? data.main_office_address.city : '',\n\t\t\tregion: data.main_office_address.region ? data.main_office_address.region : '',\n\t\t\tzipCode: data.main_office_address.zip_code ? data.main_office_address.zip_code : '',\n\t\t\tauthorizedSignatoryName: data.authorized_signatory ? data.authorized_signatory : '',\n\t\t\tauthorizedSignatoryNumber: data.authorized_signatory_contact_no ? data.authorized_signatory_contact_no : '',\n\t\t\tauthorizedSignatoryEmail: data.authorized_signatory_email_address ? data.authorized_signatory_email_address : '',\n\t\t\tauthorizedSignatoryDesignation: data.authorized_signatory_designation ? data.authorized_signatory_designation : '',\n\n\t\t\ttelephoneNumber: telephoneNumbers,\n\t\t\tcontactPerson: contactPersons,\n\t\t\tbranchAddress: branchAddresses,\n\t\t};\n\n\t\tconst inputHMOData = {\n\t\t\tpreviousHMOProvider: data.prev_hmo_provider ? data.prev_hmo_provider : '',\n\t\t\teffectivityDate: null,\n\t\t\texpiryDate: null\n\t\t};\n\n\t\tif (data.sales_channel) {\n\t\t\tinputHMOData['salesChannel'] = data.sales_channel.type ? data.sales_channel.type : '';\n\n\t\t\tinputHMOData['agentName'] = data.sales_channel.agent_name ? data.sales_channel.agent_name : '';\n\t\t\tinputHMOData['brokerCompanyName'] = data.sales_channel.company_name ? data.sales_channel.company_name : '';\n\t\t\tinputHMOData['brokerContactPerson'] = data.sales_channel.contact_person ? data.sales_channel.contact_person : ''; \n\t\t\tinputHMOData['brokerPosition'] = data.sales_channel.position ? data.sales_channel.position : '';\n\t\t\tinputHMOData['brokerContactNumber'] = data.sales_channel.contact_no ? data.sales_channel.contact_no : '';\n\t\t\tinputHMOData['brokerEmailAddress'] = data.sales_channel.email_address ? data.sales_channel.email_address : '';\n\t\t}\n\n\t\tlet client = {};\n\n\t\tclient['businessData'] = inputBusinessData;\n\t\tclient['natureData'] = inputNatureData;\n\t\tclient['contactDetailsData'] = inputContactDetailsData;\n\t\tclient['HMOData'] = inputHMOData;\n\n\t\treturn client;\n \t}\n\n\tconst handleLoadClientFromAPI = () => {\n\t\tconst GET_URL = API_URL + \"clients/\" + props.match.params.client_id;\n\n\t\treturn fetch(GET_URL, {\n\t\t   \tmethod: 'get',\n\t\t   \theaders: {'Content-Type':'application/json'}\n\t\t}).then(response => response.json()\n\t\t).then((response: any) => {\n\t\t\tconst data: any = Object.assign({}, response);\n\n\t\t\tconst client = convertClientData(data);\n\n\t\t\tSetClientData(Object.assign({}, clientData, client));\n\t\t\tsetClientLoaded(true);\n\t\t}).catch(error => {\n\t\t\tsetClientLoaded(true);\n\t\t\tconsole.log('getbenefitlist api error: ', error);\n\t\t});\n\t}\n\n\tconst handleLoadBaseNodesFromAPI = () => {\n\t\tsetLoading(true);\n\n\t\tconst GET_URL = API_URL + \"base-benefit-plans/\";\n\n\t\treturn fetch(GET_URL, {\n\t\t   \tmethod: 'get',\n\t\t   \theaders: {'Content-Type':'application/json'}\n\t\t}).then(response => response.json()\n\t\t).then((response: any) => {\n\t\t\tconst data: any[] = [...response];\n\n\t\t\tconst nodes = convertNodeData(data);\n\t\t\t\t\n\t\t\thandleLoadBenefitNodesFromAPI(nodes);\n\t\t}).catch(error => {\n\t\t\tsetLoading(false);\n\t\t\tconsole.log('getbenefitlist api error: ', error);\n\t\t});\n\t}\n\n\tconst handleLoadBenefitNodesFromAPI = (baseNodes: any[]) => {\n\t\tconst GET_URL = API_URL + \"benefit-plans/tree/\" + props.match.params.proposal_id;\n\n\t\treturn fetch(GET_URL, {\n\t\t   \tmethod: 'get',\n\t\t   \theaders: {'Content-Type':'application/json'}\n\t\t}).then(response => response.json()\n\t\t).then((response: any) => {\n\t\t\tconst data: any[] = [...response];\n\n\t\t\tconst benefitNodes = convertNodeData(data, true);\n\t\t\t\t\n\t\t\tlet nodes: any[] = combineBaseBenefitNodes(baseNodes, benefitNodes);\n\n\t\t\tsetNodesLoaded(true);\n\t\t\tSetBenefitNodes (nodes);\n\t\t}).catch(error => {\n\t\t\tsetNodesLoaded(true);\n\t\t\tconsole.log('getbenefitlist api error: ', error);\n\t\t});\n\t}\n\n\tconst showSuccessModal = (message: string, title: string) => {\n\t\tsetLoading(false);\n\t\tsetApprovalModalTitle(title);\n\t\tsetallowRevision(false);\n\t\tsetAllowedRevise(false);\n\t\tsetApprovalModalMessage(message);\n\t\tshowHideApprovalModal(true);\n\t\tsetApprovalModalButtons(\n\t\t\t<div>\n\t\t\t\t<Button\n\t\t\t\t\tclassName={btnclasses.okayBtn}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tonClick={successRedirectToDashboard}>\n\t\t\t\t\tOkay\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst showFailedModal = (message: string, title: string) => {\n\t\tsetLoading(false);\n\t\tsetApprovalModalTitle(title);\n\t\tsetallowRevision(false);\n\t\tsetAllowedRevise(false);\n\t\tsetApprovalModalMessage(message);\n\t\tshowHideApprovalModal(true);\n\t\tsetApprovalModalButtons(\n\t\t\t<div>\n\t\t\t\t<Button\n\t\t\t\t\tclassName={btnclasses.okayBtn}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tonClick={()=>showHideApprovalModal(false)}\n\t\t\t\t>\n\t\t\t\t\tOkay\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst handleDisapproveProposal = () => {\n\t\tsetLoading(true);\n\t\tshowHideApprovalModal(false);\n\t\tconst body = {\n\t\t\t\"proposal_approved\": false\n\t\t}\n\t\tProcessmaker.put('cases/'+props.match.params.ticket_id+'/variable', accessToken, body)\n\t\t.then(response => {\n\t\t\tif(response && response.error !== undefined){\n\t\t\t\tconst message: string = \"Failed to disapprove proposal.\";\n\t\t\t\tshowFailedModal(message, \"Disapprove Proposal\")\n\t\t\t}else{\n\t\t\t\tProcessmaker.put('cases/'+props.match.params.ticket_id+'/route-case',accessToken,{}).then(response2 => {\n\t\t\t\t\tconsole.log(response2);\n\t\t\t\t\tProcessmaker.put('cases/'+props.match.params.ticket_id+'/route-case',accessToken,{}).then(response3 => {\n\t\t\t\t\t\tif(response3 && response3.error !== undefined){\n\t\t\t\t\t\t\tconst message: string = \"Failed to disapprove proposal.\";\n\t\t\t\t\t\t\tshowFailedModal(message, \"Disapprove Proposal\")\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tlet message: string;\n\t\t\t\t\t\t\t\tmessage = \"BDO was notified that the proposal \"\n\t\t\t\t\t\t\t\t\t+ \"is disapproved and can no longer be revised\"\n\t\t\t\t\t\t\t\t\t+ \" for further use.\";\n\t\t\t\t\t\t\t\t\tshowSuccessModal(message, \"Proposal Disapproved\")\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}  \n        });\n\t}\n\n\tconst disapproveProposal = () => {\n\t\tconst message = \"Your comments will be sent back to the BDO agent.\"\n\t\t\t+ \" You can choose to have the BDO revise this or reject\"\n\t\t\t+ \" the proposal altogether.\";\n\t\tsetApprovalModalTitle(\"Disapprove\")\n\t\tsetApprovalModalMessage(message)\n\t\tshowHideApprovalModal(true);\n\t\tsetallowRevision(true);\n\t\tsetApprovalModalButtons(\n\t\t\t<div>\n\t\t\t\t <Button\n\t\t\t\t \tclassName={btnclasses.cancelBtn}\n\t\t\t\t\t variant=\"contained\"\n\t\t\t\t\t color=\"secondary\"\n\t\t\t\t\t onClick={()=>showHideApprovalModal(false)}>\n                        Cancel\n                </Button>\n                <Button\n\t\t\t\t\tclassName={btnclasses.disapproveBtn}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\" onClick={handleDisapproveProposal}>\n                    Disapprove\n                </Button>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst handleApproveProposal = (withconditions: boolean) => {\n\t\tsetLoading(true);\n\t\tshowHideApprovalModal(false);\n\t\tconst body = {\n\t\t\t\"proposal_approved\": true,\n\t\t\t\"revisions\": withconditions\n\t\t}\n\t\tProcessmaker.put('cases/'+props.match.params.ticket_id+'/variable',accessToken, body)\n\t\t.then(response => {\n\t\t\tconsole.log(\"variable >>>>\", response);\n\t\t\tif(response && response.error !== undefined){\n\t\t\t\tconst message: string = \"Failed to approve proposal.\";\n\t\t\t\tif(withconditions === true){\n\t\t\t\t\tshowFailedModal(message, \"Approve Proposal with conditions\");\n\t\t\t\t}else{\n\t\t\t\t\tshowFailedModal(message, \"Approve Proposal\");\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tProcessmaker.put('cases/'+props.match.params.ticket_id+'/route-case',accessToken,{}).then(response2 => {\n\t\t\t\t\tconsole.log(response2);\n\t\t\t\t\tProcessmaker.put('cases/'+props.match.params.ticket_id+'/route-case',accessToken,{}).then(response3 => {\n\t\t\t\t\t\tif(withconditions === true){\n\t\t\t\t\t\t\tProcessmaker.put('cases/'+props.match.params.ticket_id+'/route-case',accessToken,{}).then(response4 => {\n\t\t\t\t\t\t\t\tif(response4 && response4.error !== undefined){\n\t\t\t\t\t\t\t\t\tconst message: string = \"Failed to approve proposal.\";\n\t\t\t\t\t\t\t\t\tif(withconditions === true){\n\t\t\t\t\t\t\t\t\t\tshowFailedModal(message, \"Approve Proposal with conditions\");\n\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\tshowFailedModal(message, \"Approve Proposal\");\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tlet message: string;\n\t\t\t\t\t\t\t\t\tmessage = \"Proposal was successfully approved.\";\n\t\t\t\t\t\t\t\t\tsetApprovalModalTitle(\"Approve Proposal with conditions\");\n\t\t\t\t\t\t\t\t\tsetApprovalModalMessage(message)\n\t\t\t\t\t\t\t\t\tshowHideApprovalModal(true);\n\t\t\t\t\t\t\t\t\tsetApprovalModalButtons(\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={btnclasses.okayBtn}\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={successRedirectToDashboard}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tOkay\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tif(response3 && response3.error !== undefined){\n\t\t\t\t\t\t\t\tconst message: string = \"Failed to approve proposal.\";\n\t\t\t\t\t\t\t\tshowFailedModal(message, \"Approve Proposal\");\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tlet message: string;\n\t\t\t\t\t\t\t\t\tmessage = \"Proposal was successfully approved.\";\n\t\t\t\t\t\t\t\tsetApprovalModalTitle(\"Approve Proposal\");\n\t\t\t\t\t\t\t\tsetApprovalModalMessage(message)\n\t\t\t\t\t\t\t\tshowHideApprovalModal(true);\n\t\t\t\t\t\t\t\tsetApprovalModalButtons(\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tclassName={btnclasses.okayBtn}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={successRedirectToDashboard}>\n\t\t\t\t\t\t\t\t\t\t\t\tOkay\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}    \n        });\n\t}\n\n\tconst approveProposalWithConditions = () => {\n\t\tconst message = \"Your comments will be sent back to the BDO\"\n\t\t\t+ \" agent for revisions. Are you sure you want to \"\n\t\t\t+ \"approve this with conditions?\";\n\t\tsetApprovalModalTitle(\"Approve Proposal with conditions\")\n\t\tsetApprovalModalMessage(message)\n\t\tshowHideApprovalModal(true);\n\t\tsetApprovalModalButtons(\n\t\t\t<div>\n\t\t\t\t <Button\n\t\t\t\t \tclassName={btnclasses.cancelBtn}\n\t\t\t\t\t variant=\"contained\"\n\t\t\t\t\t color=\"secondary\"\n\t\t\t\t\t onClick={()=>showHideApprovalModal(false)}>\n                        Cancel\n                </Button>\n                <Button\n\t\t\t\t\tclassName={btnclasses.approveWithConditionsBtn}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\" onClick={()=>handleApproveProposal(true)}>\n                    Approve with conditions\n                </Button>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst approveProposal = () => {\n\t\tlet message:string = \"\";\n\t\tif(user_role === \"Underwriting Manager\"){\n\t\t\tmessage = \"The BDO will be notified of your approval and\"\n\t\t\t\t+ \" the changes you added in this proposal. Are you\"\n\t\t\t\t+ \" sure you want to approve this?\";\n\t\t}else{\n\t\t\tmessage = \"You included several comments for this proposal. \"\n\t\t\t\t+ \"Are you sure you want to approve this and send it to\"\n\t\t\t\t+ \" the Underwriting Department?\";\n\t\t}\n\t\tsetApprovalModalTitle(\"Approve Proposal\")\n\t\tsetApprovalModalMessage(message)\n\t\tshowHideApprovalModal(true);\n\t\tsetApprovalModalButtons(\n\t\t\t<div>\n\t\t\t\t <Button\n\t\t\t\t \tclassName={btnclasses.cancelBtn}\n\t\t\t\t\t variant=\"contained\"\n\t\t\t\t\t color=\"secondary\"\n\t\t\t\t\t onClick={()=>showHideApprovalModal(false)}>\n                        Cancel\n                </Button>\n                <Button\n\t\t\t\t\tclassName={btnclasses.approveBtn}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\" onClick={()=>handleApproveProposal(false)}>\n                    Approve\n                </Button>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tuseEffect(() => {\n\t\tsetLoading(true);\n\t\thandleLoadClientFromAPI();\n\t\thandleLoadBaseNodesFromAPI();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (clientLoaded && nodesLoaded) {\n\t\t\tsetLoading(false);\n\t\t}\n\t}, [clientLoaded, nodesLoaded]);\n\n\tuseEffect(() => {\n\t\tif (!contractLoaded && contractNode) {\n\t\t\tconst client = {\n\t\t\t\tprincipalData: {\n\t\t\t\t\tnumOfPrincipals: contractNode.principals_count ? contractNode.principals_count : 0,\n\t\t\t\t\tmalePrincipals: contractNode.male_principals_count ? contractNode.male_principals_count : 0,\n\t\t\t\t\tfemalePrincipals: contractNode.female_principals_count ? contractNode.female_principals_count : 0,\n\t\t\t\t\tnumOfDependents: contractNode.dependents_count ? contractNode.dependents_count : 0,\n\t\t\t\t\tmaleDependents: contractNode.male_dependents_count ? contractNode.male_dependents_count : 0,\n\t\t\t\t\tfemaleDependents: contractNode.female_dependents_count ? contractNode.female_dependents_count : 0,\n\t\t\t\t}\n\t\t\t};\n\t\t\tSetClientData(Object.assign({}, clientData, client));\n\t\t\tsetContractLoaded(true);\n\t\t}\n\t}, [contractNode]);\n\n\tif(redirectToDashboard === true){\n\t\treturn <Redirect to={{pathname: '/underwriting'}}/>\n\t}else{\n\t\treturn (\n\t\t\t<div className={classes.main}>\n\t\t\t\t{ loading ?\n\t\t\t\t\t(<LoadingIndicator/>) : null\n\n\t\t\t\t}\n\t\t\t\t{renderStep(currentStep)}\n\t\t\t\t<FloatingFooter>\n\n\t\t\t\t\t{currentStep !== 0 ?\n\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tonClick={setStepBack}\n\t\t\t\t\t\t\tid=\"proposal_previous\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tclassName='button back'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t</Button> : null\n\t\t\t\t\t}\n\t\t\t\t\t<div style={{flexGrow: 1}}></div>\n\n\t\t\t\t\t{currentStep !== 2 ? \n\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\tvariant=\"contained\" \n\t\t\t\t\t\t\tonClick={setStepForward} \n\t\t\t\t\t\t\tid=\"proposal_next\" \n\t\t\t\t\t\t\tcolor=\"primary\" \n\t\t\t\t\t\t\tclassName='button'>\n\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t</Button> :\n\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tid=\"proposal_approve_btn\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName='button'\n\t\t\t\t\t\t\t\tonClick={approveProposal}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tApprove\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tid=\"proposal_approve_btn\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName={\"button withcomment\"}\n\t\t\t\t\t\t\t\tonClick={approveProposalWithConditions}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tApprove with conditions\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tid=\"proposal_approve_btn\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName={\"button disapprove\"}\n\t\t\t\t\t\t\t\tonClick={disapproveProposal}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tDisapprove\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</React.Fragment>\n\n\t\t\t\t\t}\n\t\t\t\t</FloatingFooter>\n\t\t\t\t<ProposalApprovalModal\n\t\t\t\t\tid=\"proposal_approval_modal\"\n\t\t\t\t\tisModalOpen={isApprovalModalOpen}\n\t\t\t\t\ttitle={approvalModalTitle}\n\t\t\t\t\tmessage={approvalModalMessage}\n\t\t\t\t\tonClose={showHideApprovalModal}\n\t\t\t\t\tbuttons={approvalModalButtons}\n\t\t\t\t\tallowRevision={allowRevision}\n\t\t\t\t\tsetAllowedRevise={updateAllowedRevise}\n\t\t\t\t\tallowedRevise={allowedRevise}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nconst mapStateToProps = (state: Store) => {\n\treturn {\n\t\tbenefitNodes: getBenefitNodes(state),\n\t\tclientData: getClientData(state),\n\t\tcontractNode: selectContractNode(state),\n\t\tcategoryNode: selectCategoryNode(state),\n\t\tsummaryPackages: selectSummaryPackages(state),\n\t\tsummaryBenefits: selectSummaryBenefits(state),\n\t\tselectedSummaryPackage: getSelectedSummaryPackage(state),\n\t\tselectedSummaryCategory: getSelectedSummaryCategory(state),\n\t\tplanTypeList: selectPlanTypeList(state),\n\t\troomAndBoardList: selectRoomAndBoardList(state),\n\t\tcoverageList: selectCoverageList(state),\n\t\triderList: selectRiderList(state),\n\t\trows: selectRows(state),\n\t\tselectedPlanType: getSelectedPlanType(state),\n\t\tselectedPlanPackage: getSelectedPlanPackage(state),\n\t\tselectedBenefitCategory: getSelectedBenefitCategory(state),\n\t\tbusinessData: selectBusinessData (state),\n\t\tnatureData: selectNatureData (state),\n\t\tcontactDetailsData: selectContactDetailsData (state),\n\t\tHMOData: selectHMOData (state),\n\t\tprincipalData: selectPrincipalData(state),\n\t}\n};\n\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tSetBenefitNodes: bindActionCreators(ApproveProposalActions.SetBenefitNodes, dispatch),\n\tSetClientData: bindActionCreators(ApproveProposalActions.SetClientData, dispatch),\n\tSetSelectedSummaryPackage: bindActionCreators(ApproveProposalActions.SetSelectedSummaryPackage, dispatch),\n\tSetSelectedSummaryCategory: bindActionCreators(ApproveProposalActions.SetSelectedSummaryCategory, dispatch),\n\tSetSelectedPlanType: bindActionCreators(ApproveProposalActions.SetSelectedPlanType, dispatch),\n\tSetSelectedPlanPackage: bindActionCreators(ApproveProposalActions.SetSelectedPlanPackage, dispatch),\n\tSetSelectedBenefitCategory: bindActionCreators(ApproveProposalActions.SetSelectedBenefitCategory, dispatch),\n});\n\nexport { mapStateToProps, mapDispatchToProps };"],"sourceRoot":""}