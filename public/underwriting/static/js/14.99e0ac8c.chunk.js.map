{"version":3,"sources":["../node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","Pages/Dashboard/ActionConsts.ts","Pages/Dashboard/Actions.ts","Pages/Dashboard/Dashboard.tsx","Pages/Processmaker/index.tsx"],"names":["forwardRef","props","ref","classes","className","other","createElement","root","muiName","withStyles","position","right","top","transform","name","ActionConsts","ResetReducer","SetReducer","DashboardActions","payload","type","ticket_options","value","top_facilities_options","renewals_for_revision","proposals_for_revision","link","tickets_waiting_response","CREATE_PROPOSAL_WORKFLOW","APPROVE_PROPOSAL_WORKFLOW","ONBOARD_CLIENT_WORKFLOW","FINALIZED_PROPOSAL_WORKFLOW","DISAPPROVE_WORKFLOW","Dashboard","reset","setState","role","loading","ticket_type","top_facility_sort","handleTicketTypeSelect","event","target","handleTopFacilitySortSelect","handleClickOpenTicketsRow","ticket","console","log","openTickets","Object","assign","state","ticket_details","app_tas_title","redirect","redirect_info","pathname","client_id","mother_contract_id","app_uid","gotoFinalizeProposalPage","history","push","window","location","reload","queryStringToJSON","queryString","trim","length","pairs","slice","split","result","forEach","pair","decodeURIComponent","JSON","parse","stringify","componentDidMount","propsJson","queryValues","search","localStorage","setItem","proposalsCreated","proposalsForApproval","contractsToSignOff","unassigned_tickets","case_id","this","Processmaker","postClaim","then","response","undefined","status","toLowerCase","getOpenTickets","getUnassignedTicket","getWithToken","temp_unassigned","filtered_response","filter","item","app_status","index","due_date","moment","del_task_due_date","format","modified_date","app_update_date","temp_opens_ticket","ticket_id","app_number","due","Date","client_name","proposal_id","app_index","del_index","last_updated","priority","del_priority","temp","toString","corporate_account","is_urgent","current_task","sortOpenTicket","col","sortedtickets","sortbool","sort","a","b","sortUnassignedTicket","sortedOpenTicket","sortedUnassignedTicket","to","clsx","Grid","container","spacing","justify","alignItems","CircularProgress","xs","Typography","md","Paper","Box","display","flexDirection","justifyContent","style","color","onClick","Table","size","TableHead","TableRow","TableCell","icon","faSort","TableBody","map","row","key","cursor","e","component","scope","toLocaleDateString","year","month","day","textDecoration","handleClaim","visibility","src","alt","List","dense","ListItem","ListItemText","id","primary","React","mapStateToProps","dashboard","mapDispatchToProps","dispatch","Map","bindActionCreators","API_URL","process","url","token","URL","fetch","method","headers","getItem","json","catch","error","body"],"mappings":"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","file":"static/js/14.99e0ac8c.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","export const ActionConsts = {\n    Dashboard : {\n        ResetReducer: 'Dashboard_ResetReducer',\n        SetReducer: 'Dashboard_SetReducer'\n    },\n};","import { ActionConsts } from \"./ActionConsts\";\n\n/**\n * ACTIONS\n*/\nexport const DashboardActions = {\n\tMap: (payload: any) => (\n\t\t{\n\t\t\tpayload,\n\t\t\ttype: ActionConsts.Dashboard.SetReducer\n\t\t}\n\t),\n\n\tReset: () => ({\n\t\ttype: ActionConsts.Dashboard.ResetReducer\n\t})\n}","//#region Global Imports\nimport * as React from 'react';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\n// import * as MaterialUI from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n// import { makeStyles } from '@material-ui/styles';\nimport moment from 'moment';\nimport clsx from 'clsx';\nimport { Redirect } from 'react-router-dom';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { AuthenticatedLayout } from 'Components/UI';\n\n//#endregion Global Imports\n\n//#region Local Imports\nimport './style.scss';\n//#endregion Local Imports\n\n//#region Interface Imports\nimport { Store } from 'Components/Stores/IStore';\nimport { IDashboard } from './IDashboard';\nimport { DashboardActions } from './Actions';\nimport { Processmaker } from '../Processmaker';\n\n// import { APIService } from 'Services/APIService';\n//#endregion Interface Imports\n\nimport '@hims/core/dist/index.css';\n\n// /** select customize style to set background as transparent */\n// const cellSelectStyles = makeStyles({\n// \tselect: {\n// \t\tbackgroundColor: 'transparent',\n// \t},\n// });\n\n// /** customization of material ui select for the page */\n// const Select = ({ id, value, items, onChange }: any) => {\n// \tconst cellSelectClasses = cellSelectStyles();\n// \treturn (\n// \t\t<MaterialUI.Select\n// \t\t\tid={id}\n// \t\t\tclasses={cellSelectClasses}\n// \t\t\tvalue={value}\n// \t\t\tonChange={onChange}\n// \t\t\tstyle={{ backgroundColor: 'transparent', color: '#242C2E', fontSize: '0.875em' }}\n// \t\t\trenderValue={(selected: any) => {\n// \t\t\t\tif (selected != null) {\n// \t\t\t\t\tconst value: any = items.find((item: any) => {\n// \t\t\t\t\t\treturn item.value == selected;\n// \t\t\t\t\t});\n// \t\t\t\t\tif (value) {\n// \t\t\t\t\t\treturn value.name;\n// \t\t\t\t\t} else {\n// \t\t\t\t\t\treturn '—';\n// \t\t\t\t\t}\n// \t\t\t\t}\n// \t\t\t\treturn '—';\n// \t\t\t}}\n// \t\t>\n// \t\t\t{items.map((item: any) => (\n// \t\t\t\t<MaterialUI.MenuItem key={item.value} value={item.value}>\n// \t\t\t\t\t{item.name}\n// \t\t\t\t</MaterialUI.MenuItem>\n// \t\t\t))}\n// \t\t</MaterialUI.Select>\n// \t);\n// };\n\nconst ticket_options = [\n  {\n    name: 'Created by Me',\n    value: 'created_by_me',\n  },\n  {\n    name: 'Created Tickets',\n    value: 'created_tickets',\n  },\n];\n\nconst top_facilities_options = [\n  {\n    name: 'By Amount',\n    value: 'amount',\n  },\n  {\n    name: 'By Availees',\n    value: 'availees',\n  },\n  {\n    name: 'By Cases',\n    value: 'cases',\n  },\n];\n\nconst renewals_for_revision = [];\n\nconst proposals_for_revision = [\n  {\n    name: 'NCG A.',\n    link: '#',\n  },\n  {\n    name: 'Nestle',\n    link: '#',\n  },\n  {\n    name: 'Ritz Corp.',\n    link: '#',\n  },\n  {\n    name: 'Innovative Tech.',\n    link: '#',\n  },\n];\n\nconst tickets_waiting_response = [];\n/** end of data */\n\n// const CREATE_PROPOSAL_TITLE = process.env.REACT_APP_CREATE_PROPOSAL_WORKFLOW;\n// const APPROVE_PROPOSAL_TITLE = process.env.REACT_APP_APPROVE_PROPOSAL_WORKFLOW;\n// const PROPOSAL_CREATION_TITLE = process.env.REACT_APP_PROPOSAL_CREATION_WORKFLOW;\n// const ONBOARD_CLIENT_TITLE = process.env.REACT_APP_ONBOARD_CLIENT_WORKFLOW;\n\nconst CREATE_PROPOSAL_WORKFLOW = 'Create Proposal';\nconst APPROVE_PROPOSAL_WORKFLOW = 'Approve Proposal';\nconst ONBOARD_CLIENT_WORKFLOW = 'Upload Signed Proposal';\nconst FINALIZED_PROPOSAL_WORKFLOW = 'Activate Account';\nconst DISAPPROVE_WORKFLOW = 'Revise Proposal';\n\nexport class Dashboard extends React.Component<\n  IDashboard.IProps,\n  IDashboard.IState\n> {\n  constructor(props: IDashboard.IProps) {\n    super(props);\n\n    this.state = {\n      role: 'underwriting_staff',\n      loading: false,\n      ticket_type: ticket_options[0].value,\n      top_facility_sort: top_facilities_options[0].value,\n      openTickets: [],\n      proposalsCreated: [],\n      proposalsForApproval: [],\n      contractsToSignOff: [],\n      redirect: false,\n      redirect_info: {},\n      unassigned_tickets: [],\n    };\n  }\n\n  reset = () => {\n    this.setState({\n      role: 'underwriting_staff',\n      loading: false,\n      ticket_type: ticket_options[0].value,\n      top_facility_sort: top_facilities_options[0].value,\n    });\n  };\n\n  handleTicketTypeSelect = (\n    event: React.ChangeEvent<{ name?: string | undefined; value: any }>,\n  ) => {\n    this.setState({\n      ticket_type: event.target.value,\n    });\n  };\n\n  handleTopFacilitySortSelect = (\n    event: React.ChangeEvent<{ name?: string | undefined; value: any }>,\n  ) => {\n    this.setState({\n      top_facility_sort: event.target.value,\n    });\n  };\n\n  handleClickOpenTicketsRow = (ticket: any) => {\n    console.log('handleClickOpenTicketsRow', ticket);\n    let openTickets = Object.assign([], this.state.openTickets);\n    console.log('openTickets: ', openTickets);\n    switch (ticket.ticket_details.app_tas_title) {\n      case APPROVE_PROPOSAL_WORKFLOW:\n        this.setState({\n          redirect: true,\n          redirect_info: {\n            pathname:\n              '/underwriting/approve-proposal/' +\n              ticket.client_id +\n              '/' +\n              ticket.mother_contract_id +\n              '/' +\n              ticket.ticket_details.app_uid,\n          },\n        });\n        break;\n      case ONBOARD_CLIENT_WORKFLOW:\n        if (ticket.ticket_details.app_tas_title === 'Upload Signed Proposal') {\n          console.log('open finalize page 1');\n          this.setState({\n            redirect: true,\n            redirect_info: {\n              pathname:\n                '/underwriting/finalize-proposal/' +\n                ticket.client_id +\n                '/' +\n                ticket.mother_contract_id +\n                '/uploader/' +\n                ticket.ticket_details.app_uid,\n            },\n          });\n        } else {\n          this.setState({\n            redirect: true,\n            redirect_info: {\n              pathname:\n                '/underwriting/finalize-proposal/' +\n                ticket.client_id +\n                '/' +\n                ticket.mother_contract_id +\n                '/approver/' +\n                ticket.ticket_details.app_uid,\n            },\n          });\n          console.log('open finalize page 2');\n        }\n        break;\n      case FINALIZED_PROPOSAL_WORKFLOW:\n        this.setState({\n          redirect: true,\n          redirect_info: {\n            pathname:\n              '/underwriting/finalize-proposal/' +\n              ticket.client_id +\n              '/' +\n              ticket.mother_contract_id +\n              '/approver/' +\n              ticket.ticket_details.app_uid,\n          },\n        });\n        break;\n      case CREATE_PROPOSAL_WORKFLOW:\n      case DISAPPROVE_WORKFLOW:\n        this.setState({\n          redirect: true,\n          redirect_info: {\n            pathname:\n              '/underwriting/create-proposal/' + ticket.ticket_details.app_uid,\n          },\n        });\n        break;\n    }\n  };\n\n  handleClaim(ticket: any) {\n    if (ticket.case_id) {\n      this.setState(\n        {\n          loading: true,\n        },\n        () => {\n          Processmaker.postClaim(\n            'light/case/' + ticket.case_id + '/claim',\n          ).then(response => {\n            if (\n              response !== undefined &&\n              response.status !== undefined &&\n              response.status.toLowerCase() === 'ok'\n            ) {\n              this.setState(\n                {\n                  loading: false,\n                },\n                () => {\n                  this.getOpenTickets();\n                  this.getUnassignedTicket();\n                },\n              );\n            } else {\n              this.setState({\n                loading: false,\n              });\n            }\n          });\n        },\n      );\n    }\n  }\n\n  getUnassignedTicket() {\n    Processmaker.getWithToken('cases/unassigned', '').then(response => {\n      const temp_unassigned: any = [];\n      const filtered_response = response.filter(item => {\n        return (\n          item.app_status === 'TO_DO' &&\n          (item.app_tas_title === CREATE_PROPOSAL_WORKFLOW ||\n            item.app_tas_title === DISAPPROVE_WORKFLOW ||\n            item.app_tas_title === ONBOARD_CLIENT_WORKFLOW ||\n            item.app_tas_title === APPROVE_PROPOSAL_WORKFLOW ||\n            item.app_tas_title === FINALIZED_PROPOSAL_WORKFLOW)\n        );\n      });\n      if (filtered_response.length > 0) {\n        filtered_response.forEach((item: any, index: number) => {\n          const due_date = moment(item.del_task_due_date).format('MMM D, YYYY');\n          const modified_date = moment(item.app_update_date).format(\n            'MMM D, YYYY hh:mm:ss',\n          );\n          const temp_opens_ticket: any = {\n            ticket_id: item.app_number,\n            due: new Date(due_date),\n            ticket_type: item.app_tas_title,\n            client_name: '',\n            client_id: '',\n            ticket_details: item,\n            case_id: item.app_uid,\n            proposal_id: '',\n            app_index: item.del_index,\n            last_updated: new Date(modified_date),\n          };\n          temp_unassigned.push(temp_opens_ticket);\n          if (index === filtered_response.length - 1) {\n            this.setState({\n              unassigned_tickets: temp_unassigned,\n            });\n          }\n        });\n      } else {\n        this.setState({\n          unassigned_tickets: [],\n        });\n      }\n    });\n  }\n\n  getOpenTickets() {\n    let openTickets: any[] = [];\n    let proposalsCreated: any[] = [];\n    let proposalsForApproval: any[] = [];\n    let contractsToSignOff: any[] = [];\n    let app_uid: string = '';\n    let app_index: string = '';\n\n    Processmaker.getWithToken(\n      'cases?sort=APP_CACHE_VIEW.APP_UPDATE_DATE',\n      '',\n    ).then(response => {\n      console.log('pm getWithToken response', response);\n      if (response !== undefined) {\n        response.forEach(item => {\n          console.log('item.app_tas_title', item.app_tas_title);\n          if (\n            item.app_tas_title === CREATE_PROPOSAL_WORKFLOW ||\n            item.app_tas_title === ONBOARD_CLIENT_WORKFLOW ||\n            item.app_tas_title === APPROVE_PROPOSAL_WORKFLOW ||\n            item.app_tas_title === FINALIZED_PROPOSAL_WORKFLOW ||\n            item.app_tas_title === DISAPPROVE_WORKFLOW\n          ) {\n            console.log('Proposal Creation and Customization yes!!', item);\n            let priority = item.del_priority;\n            let due_date = moment(item.del_task_due_date).format('MMM D, YYYY');\n            let modified_date = moment(item.app_update_date).format(\n              'MMM D, YYYY hh:mm:ss',\n            );\n            console.log('due_date: ', due_date);\n            let temp = {\n              ticket_id: item.app_number,\n              due: new Date(due_date),\n              ticket_type: item.app_tas_title.toString(),\n              corporate_account: '-',\n              is_urgent: priority === 'NORMAL' ? false : true,\n              ticket_details: item,\n              mother_contract_id: '',\n              client_id: '',\n              last_updated: new Date(modified_date),\n            };\n\n            app_uid = item.app_uid;\n            console.log('app_uid: ', item.app_uid);\n            console.log('app_uid2: ', app_uid);\n\n            Processmaker.getWithToken('cases/' + item.app_uid, '').then(\n              response => {\n                if (\n                  response !== undefined &&\n                  response.current_task !== undefined\n                ) {\n                  app_index = response.current_task[0].del_index;\n\n                  Processmaker.getWithToken(\n                    'cases/' +\n                      item.app_uid +\n                      '/variables?app_index=' +\n                      app_index,\n                    '',\n                  ).then(response => {\n                    if (\n                      response !== undefined &&\n                      response.client_name !== undefined\n                    ) {\n                      temp.corporate_account = response.client_name;\n                    }\n                    if (\n                      response !== undefined &&\n                      response.mother_contract_id !== undefined\n                    ) {\n                      temp.mother_contract_id = response.mother_contract_id;\n                    }\n                    if (\n                      response !== undefined &&\n                      response.client_id !== undefined\n                    ) {\n                      temp.client_id = response.client_id;\n                    }\n                    openTickets.push(temp);\n                    if (\n                      temp.ticket_details.app_tas_title ===\n                        CREATE_PROPOSAL_WORKFLOW \n                        //|| temp.ticket_details.app_tas_title === DISAPPROVE_WORKFLOW\n                    ) {\n                      proposalsCreated.push(temp);\n                    } else if (\n                      temp.ticket_details.app_tas_title ===\n                      APPROVE_PROPOSAL_WORKFLOW\n                    ) {\n                      proposalsForApproval.push(temp);\n                    } else if (\n                      temp.ticket_details.app_tas_title ===\n                      FINALIZED_PROPOSAL_WORKFLOW\n                    ) {\n                      contractsToSignOff.push(temp);\n                    }\n                    this.setState({\n                      openTickets: openTickets,\n                      proposalsCreated: proposalsCreated,\n                      proposalsForApproval: proposalsForApproval,\n                      contractsToSignOff: contractsToSignOff,\n                    });\n                  });\n                }\n              },\n            );\n          }\n        });\n      }\n      console.log('Open Tickets: ', openTickets);\n    });\n  }\n\n  componentWillMount() {\n    //localStorage.setItem('pm_token', 'a451a6b21843562bc7bbefc07c31981d00fcd17f');//admin\n    //localStorage.setItem('pm_token', '38c75c36c67eae360b5e1d6c5b1a57beb6cf5dea'); //BDO\n    //localStorage.setItem('pm_token', '9a7b897fcaaa749c5854e4039dfd51717b20e2bf'); //Manager\n    console.log('dashboard componentWillMount');\n    console.log(\n      'due_date: ',\n      moment('2019-10-28 17:00:00').format('MMM D, YYYY'),\n    );\n    this.getOpenTickets();\n    this.getUnassignedTicket();\n  }\n\n  gotoFinalizeProposalPage = () => {\n    this.props.history.push('#/underwriting/finalize-proposal/approver/1');\n    window.location.reload();\n  };\n\n  queryStringToJSON = queryString => {\n    if (queryString.trim().length < 1) {\n      return {};\n    }\n\n    var pairs = queryString.slice(1).split('&');\n\n    var result = {};\n    pairs.forEach(function(pair) {\n      pair = (pair as string).split('=');\n      result[pair[0]] = decodeURIComponent(pair[1] || '');\n    });\n\n    return JSON.parse(JSON.stringify(result));\n  };\n\n  componentDidMount = () => {\n    let propsJson = JSON.parse(JSON.stringify(this.props));\n    let queryValues = this.queryStringToJSON(propsJson.location.search);\n\n    console.log('url query: ', queryValues);\n\n    this.setState({\n      role:\n        queryValues && queryValues.role\n          ? queryValues.role\n          : 'underwriting_staff',\n    });\n\n    localStorage.setItem('sidebar', 'dashboard');\n  };\n\n  public render(): JSX.Element {\n    const {\n      loading,\n      openTickets,\n      role,\n      proposalsCreated,\n      proposalsForApproval,\n      contractsToSignOff,\n      redirect,\n      redirect_info,\n      unassigned_tickets,\n    } = this.state;\n\n    const sortOpenTicket = (col: string) => {\n      console.log(`Sort Open Ticket: ${col}`);\n      const sortedtickets = openTickets;\n      let sortbool: boolean = true;\n      if (col !== 'due') {\n        sortedtickets.length > 1\n          ? (sortbool =\n              sortedtickets[0][col].toString().toLowerCase() >=\n              sortedtickets[sortedtickets.length - 1][col]\n                .toString()\n                .toLowerCase())\n          : (sortbool = true);\n        if (sortbool) {\n          sortedtickets.sort((a, b) =>\n            a[col] &&\n            b[col] &&\n            a[col]\n              .toString()\n              .toLowerCase()\n              .trim() >=\n              b[col]\n                .toString()\n                .toLowerCase()\n                .trim()\n              ? 1\n              : -1,\n          );\n        } else {\n          sortedtickets.sort((a, b) =>\n            a[col] &&\n            b[col] &&\n            a[col]\n              .toString()\n              .toLowerCase()\n              .trim() >=\n              b[col]\n                .toString()\n                .toLowerCase()\n                .trim()\n              ? -1\n              : 1,\n          );\n        }\n      } else {\n        sortedtickets.length > 1\n          ? (sortbool =\n              new Date(sortedtickets[0][col]) > new Date(sortedtickets[1][col]))\n          : (sortbool = true);\n\n        sortedtickets.sort((a, b) =>\n          a[col] && b[col] && new Date(a[col]) > new Date(b[col]) && sortbool\n            ? 1\n            : -1,\n        );\n      }\n      console.log(sortedtickets);\n      this.setState({\n        openTickets: sortedtickets,\n      });\n    };\n\n    const sortUnassignedTicket = (col: string) => {\n      console.log(col);\n      let sortedtickets = unassigned_tickets;\n      let sortbool: boolean = true;\n      if (col !== 'due') {\n        sortedtickets.length > 1\n          ? (sortbool =\n              sortedtickets[0][col].toString().toLowerCase() >=\n              sortedtickets[sortedtickets.length - 1][col]\n                .toString()\n                .toLowerCase())\n          : (sortbool = true);\n        if (sortbool) {\n          sortedtickets.sort((a, b) =>\n            a[col] &&\n            b[col] &&\n            a[col]\n              .toString()\n              .toLowerCase()\n              .trim() >=\n              b[col]\n                .toString()\n                .toLowerCase()\n                .trim()\n              ? //&& sortbool\n                1\n              : -1,\n          );\n        } else {\n          sortedtickets.sort((a, b) =>\n            a[col] &&\n            b[col] &&\n            a[col]\n              .toString()\n              .toLowerCase()\n              .trim() >=\n              b[col]\n                .toString()\n                .toLowerCase()\n                .trim()\n              ? //&& sortbool\n                -1\n              : 1,\n          );\n        }\n      } else {\n        sortedtickets.length > 1\n          ? (sortbool =\n              new Date(sortedtickets[0][col]) > new Date(sortedtickets[1][col]))\n          : (sortbool = true);\n\n        sortedtickets.sort((a, b) =>\n          a[col] && b[col] && new Date(a[col]) > new Date(b[col]) && sortbool\n            ? 1\n            : -1,\n        );\n      }\n      console.log(sortedtickets);\n      this.setState({ unassigned_tickets: sortedtickets });\n    };\n\n    const sortedOpenTicket = openTickets.sort((a: any, b: any) =>\n      a['last_updated'] &&\n      b['last_updated'] &&\n      new Date(a['last_updated']) > new Date(b['last_updated'])\n        ? -1\n        : 1,\n    );\n\n    const sortedUnassignedTicket = unassigned_tickets.sort((a: any, b: any) =>\n      a['last_updated'] &&\n      b['last_updated'] &&\n      new Date(a['last_updated']) > new Date(b['last_updated'])\n        ? -1\n        : 1,\n    );\n    console.log('sorted unassigned tickets', sortedUnassignedTicket);\n    console.log('role: ', role, ' ==== ', redirect_info);\n    if (redirect === true) {\n      return <Redirect to={redirect_info} />;\n    } else {\n      return (\n        <div className={clsx('Dashboard')}>\n          <Grid\n            container\n            spacing={2}\n            justify=\"space-between\"\n            alignItems=\"flex-start\"\n          >\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Grid item>\n                {loading && (\n                  <CircularProgress className={clsx('loading-indicator')} />\n                )}\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <Grid container justify=\"flex-start\" alignItems=\"flex-start\">\n                <Grid item xs={12}>\n                  <Typography className={clsx('title')}>Dashboard</Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={12} md={12}>\n              <Grid\n                container\n                justify=\"space-between\"\n                spacing={4}\n                alignItems=\"flex-start\"\n              >\n                <Grid item xs={12} md={8}>\n                  <Typography className={clsx('sub-title')}>\n                    Your Ticket List\n                  </Typography>\n                  <Paper className={clsx('content')}>\n                    <Box\n                      className={clsx('card-header')}\n                      display=\"flex\"\n                      flexDirection=\"row\"\n                      justifyContent=\"space-between\"\n                    >\n                      <Box>\n                        <Typography\n                          className={clsx('dashboard-count')}\n                          style={{ color: '#FD5451' }}\n                        >\n                          {openTickets.length}\n                        </Typography>\n                        <Typography\n                          className={clsx('dashboard-count-description')}\n                          onClick={this.gotoFinalizeProposalPage}\n                        >\n                          Open Tickets\n                        </Typography>\n                      </Box>\n                      {/* <Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select items={ticket_options} value={this.state.ticket_type} onChange={this.handleTicketTypeSelect} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                    </Box>\n                    <Box className={clsx('card-content')}>\n                      <Table size=\"small\" className={clsx('dashboard-table')}>\n                        <TableHead>\n                          <TableRow>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              ID&nbsp;&nbsp;\n                              <div\n                                style={{ display: 'none' }}\n                                onClick={() => {\n                                  sortOpenTicket('ticket_id');\n                                }}\n                              >\n                                <FontAwesomeIcon icon={faSort} />\n                              </div>\n                            </TableCell>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              Date&nbsp;&nbsp;\n                              <div\n                                style={{ display: 'none' }}\n                                onClick={() => {\n                                  sortOpenTicket('due');\n                                }}\n                              >\n                                <FontAwesomeIcon icon={faSort} />\n                              </div>\n                            </TableCell>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              Ticket Type&nbsp;&nbsp;\n                              <div\n                                style={{ display: 'none' }}\n                                onClick={() => {\n                                  sortOpenTicket('ticket_type');\n                                }}\n                              >\n                                <FontAwesomeIcon icon={faSort} />\n                              </div>\n                            </TableCell>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              Corporate Account&nbsp;&nbsp;\n                              <div\n                                style={{ display: 'none' }}\n                                onClick={() => {\n                                  sortOpenTicket('corporate_account');\n                                }}\n                              >\n                                <FontAwesomeIcon icon={faSort} />\n                              </div>\n                            </TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {sortedOpenTicket.map((row, index) => (\n                            <TableRow\n                              key={index}\n                              style={{ cursor: 'pointer' }}\n                              className={clsx(\n                                index % 2 == 0\n                                  ? row.is_urgent\n                                    ? 'dashboard-table-hg-even-row'\n                                    : 'dashboard-table-even-row'\n                                  : row.is_urgent\n                                  ? 'dashboard-table-hg-odd-row'\n                                  : 'dashboard-table-odd-row',\n                              )}\n                              onClick={e => {\n                                this.handleClickOpenTicketsRow(row);\n                                console.log(\n                                  'handleClickOpenTicketsRow target: ',\n                                  e,\n                                );\n                              }}\n                            >\n                              <TableCell\n                                className={clsx('dashboard-table-data-cell')}\n                                component=\"th\"\n                                scope=\"row\"\n                              >\n                                {row.ticket_id}\n                              </TableCell>\n                              <TableCell\n                                className={clsx('dashboard-table-data-cell')}\n                              >\n                                {row.last_updated.toLocaleDateString('en-US', {\n                                  year: 'numeric',\n                                  month: 'short',\n                                  day: 'numeric',\n                                })}\n                              </TableCell>\n                              <TableCell\n                                className={clsx('dashboard-table-data-cell')}\n                              >\n                                {row.ticket_type}\n                              </TableCell>\n                              <TableCell\n                                className={clsx('dashboard-table-data-cell')}\n                              >\n                                {row.corporate_account}\n                              </TableCell>\n                            </TableRow>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    </Box>\n                    {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                  </Paper>\n                  <Paper className={clsx('content')}>\n                    <Box\n                      className={clsx('card-header')}\n                      display=\"flex\"\n                      flexDirection=\"row\"\n                      justifyContent=\"space-between\"\n                    >\n                      <Box>\n                        <Typography\n                          className={clsx('dashboard-count')}\n                          style={{ color: '#FD5451' }}\n                        >\n                          {unassigned_tickets.length}\n                        </Typography>\n                        <Typography\n                          className={clsx('dashboard-count-description')}\n                          onClick={this.gotoFinalizeProposalPage}\n                        >\n                          Unassigned Tickets\n                        </Typography>\n                      </Box>\n                    </Box>\n                    <Box className={clsx('card-content')}>\n                      <Table size=\"small\" className={clsx('dashboard-table')}>\n                        <TableHead>\n                          <TableRow>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              ID&nbsp;&nbsp;\n                              <div\n                                style={{ display: 'none' }}\n                                onClick={() => {\n                                  sortUnassignedTicket('ticket_id');\n                                }}\n                              >\n                                <FontAwesomeIcon icon={faSort} />\n                              </div>\n                            </TableCell>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              Date&nbsp;&nbsp;\n                              <div\n                                style={{ display: 'none' }}\n                                onClick={() => {\n                                  sortUnassignedTicket('due');\n                                }}\n                              >\n                                <FontAwesomeIcon icon={faSort} />\n                              </div>\n                            </TableCell>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              Ticket Type&nbsp;&nbsp;\n                              <div\n                                style={{ display: 'none' }}\n                                onClick={() => {\n                                  sortUnassignedTicket('ticket_type');\n                                }}\n                              >\n                                <FontAwesomeIcon icon={faSort} />\n                              </div>\n                            </TableCell>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              Action\n                            </TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {sortedUnassignedTicket.map((row, index) => (\n                            <TableRow\n                              key={index}\n                              className={clsx(\n                                index % 2 == 0\n                                  ? row.is_urgent\n                                    ? 'dashboard-table-hg-even-row'\n                                    : 'dashboard-table-even-row'\n                                  : row.is_urgent\n                                  ? 'dashboard-table-hg-odd-row'\n                                  : 'dashboard-table-odd-row',\n                              )}\n                              onClick={e => {\n                                // this.handleClickOpenTicketsRow(row);\n                                console.log(\n                                  'handleClickOpenTicketsRow target: ',\n                                  e,\n                                );\n                              }}\n                            >\n                              <TableCell\n                                className={clsx('dashboard-table-data-cell')}\n                                component=\"th\"\n                                scope=\"row\"\n                              >\n                                {row.ticket_id}\n                              </TableCell>\n                              <TableCell\n                                className={clsx('dashboard-table-data-cell')}\n                              >\n                                {row.last_updated.toLocaleDateString('en-US', {\n                                  year: 'numeric',\n                                  month: 'short',\n                                  day: 'numeric',\n                                })}\n                              </TableCell>\n                              <TableCell\n                                className={clsx('dashboard-table-data-cell')}\n                              >\n                                {row.ticket_type}\n                              </TableCell>\n                              <TableCell\n                                className={clsx('dashboard-table-data-cell')}\n                              >\n                                <span\n                                  style={{ textDecoration: 'underline' }}\n                                  className={clsx('dashboard-list-item-link')}\n                                  onClick={e => {\n                                    this.handleClaim(row);\n                                    console.log('e >>>>', e);\n                                  }}\n                                >\n                                  Claim\n                                </span>\n                              </TableCell>\n                            </TableRow>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    </Box>\n                    {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                  </Paper>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <Typography className={clsx('sub-title')}>\n                    Your Task Tray\n                  </Typography>\n                  {role == 'underwriting_head' ? (\n                    <Paper\n                      className={clsx('content')}\n                      style={{ visibility: 'hidden' }}\n                    >\n                      <Box className={clsx('card-header')}>\n                        <Typography\n                          className={clsx('dashboard-count')}\n                          style={{ color: '#3AB77D' }}\n                        >\n                          {proposalsCreated.length}\n                        </Typography>\n                        <Typography\n                          className={clsx('dashboard-count-description')}\n                        >\n                          Proposals To Be Created\n                        </Typography>\n                      </Box>\n                      <Box className={clsx('card-content')}>\n                        <img\n                          src={'temp_dashboard_graph_01.png'}\n                          className={clsx('dashboard-temp-graph-img')}\n                          alt=\"Proposals To Be Created\"\n                        />\n                      </Box>\n                      {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View List</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                    </Paper>\n                  ) : (\n                    <Paper className={clsx('content')}>\n                      <Box className={clsx('card-header')}>\n                        <Typography\n                          className={clsx('dashboard-count')}\n                          style={{ color: '#3AB77D' }}\n                        >\n                          {proposalsCreated.length}\n                        </Typography>\n                        <Typography\n                          className={clsx('dashboard-count-description')}\n                        >\n                          Proposals To Be Created\n                        </Typography>\n                      </Box>\n                      <Box\n                        className={clsx('card-content')}\n                        alignItems=\"flex-start\"\n                      >\n                        <List dense>\n                          {proposalsCreated.map((item, index) => {\n                            return (\n                              <ListItem key={index}>\n                                <ListItemText\n                                  id={'proposals_to_be_created_' + index}\n                                  className={clsx('dashboard-list-item-text')}\n                                  primary={item.corporate_account}\n                                />\n                                <ListItemSecondaryAction>\n                                  <Link\n                                    className={clsx('dashboard-list-item-link')}\n                                    to={'create-proposal/' + item.app_uid}\n                                  >\n                                    Create\n                                  </Link>\n                                </ListItemSecondaryAction>\n                              </ListItem>\n                            );\n                          })}\n                        </List>\n                      </Box>\n                      {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View List</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                    </Paper>\n                  )}\n\n                  {role == 'underwriting_head' ||\n                  role == 'underwriting_staff' ? (\n                    <Paper className={clsx('content')}>\n                      <Box className={clsx('card-header')}>\n                        <Typography\n                          className={clsx('dashboard-count')}\n                          style={{ color: '#FAB435' }}\n                        >\n                          {renewals_for_revision.length}\n                        </Typography>\n                        <Typography\n                          className={clsx('dashboard-count-description')}\n                        >\n                          Renewals to be Revised\n                        </Typography>\n                      </Box>\n                      <Box\n                        className={clsx('card-content')}\n                        alignItems=\"flex-start\"\n                      >\n                        <List dense>\n                          {/*\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trenewals_for_revision.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText id={'renewal_for_revision_'+index} className={clsx('dashboard-list-item-text')} primary={item.name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-list-item-link')} to={item.link}>Revise</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*/}\n                        </List>\n                      </Box>\n                      {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View List</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                    </Paper>\n                  ) : (\n                    <Paper className={clsx('content')}>\n                      <Box className={clsx('card-header')}>\n                        <Typography\n                          className={clsx('dashboard-count')}\n                          style={{ color: '#FAB435' }}\n                        >\n                          {proposals_for_revision.length}\n                        </Typography>\n                        <Typography\n                          className={clsx('dashboard-count-description')}\n                        >\n                          Proposals to be Revised\n                        </Typography>\n                      </Box>\n                      <Box\n                        className={clsx('card-content')}\n                        alignItems=\"flex-start\"\n                      >\n                        <List dense>\n                          {/*\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tproposals_for_revision.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText id={'proposals_for_revision_'+index} className={clsx('dashboard-list-item-text')} primary={item.name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-list-item-link')} to={item.link}>Revise</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*/}\n                        </List>\n                      </Box>\n                      {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View List</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                    </Paper>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={12} md={12}>\n              <Grid\n                container\n                justify=\"space-between\"\n                spacing={4}\n                alignItems=\"flex-start\"\n              >\n                <Grid item xs={12} md={4}>\n                  <Paper className={clsx('content')}>\n                    <Box className={clsx('card-header')}>\n                      <Typography\n                        className={clsx('dashboard-count')}\n                        style={{ color: '#8034AD' }}\n                      >\n                        {proposalsForApproval.length}\n                      </Typography>\n                      <Typography\n                        className={clsx('dashboard-count-description')}\n                      >\n                        Proposals Waiting Approval\n                      </Typography>\n                    </Box>\n                    <Box className={clsx('card-content')}>\n                      <List dense>\n                        {proposalsForApproval.map((item, index) => {\n                          return (\n                            <ListItem key={index}>\n                              <ListItemText\n                                id={'proposals_for_approval_' + index}\n                                className={clsx('dashboard-list-item-text')}\n                                primary={item.corporate_account}\n                              />\n                              <ListItemSecondaryAction>\n                                <Link\n                                  className={clsx('dashboard-list-item-link')}\n                                  to={'approve-proposal/' + item.app_uid}\n                                >\n                                  View\n                                </Link>\n                              </ListItemSecondaryAction>\n                            </ListItem>\n                          );\n                        })}\n                      </List>\n                    </Box>\n                    {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                  </Paper>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  {role == 'underwriting_head' ||\n                  role == 'underwriting_staff' ? (\n                    <Paper className={clsx('content')}>\n                      <Box className={clsx('card-header')}>\n                        <Typography\n                          className={clsx('dashboard-count')}\n                          style={{ color: '#272E4C' }}\n                        >\n                          {contractsToSignOff.length}\n                        </Typography>\n                        <Typography\n                          className={clsx('dashboard-count-description')}\n                        >\n                          Contracts to Sign-Off\n                        </Typography>\n                      </Box>\n                      <Box className={clsx('card-content')}>\n                        <List dense>\n                          {contractsToSignOff.map((item, index) => {\n                            return (\n                              <ListItem key={index}>\n                                <ListItemText\n                                  id={'contracts_to_signoff_' + index}\n                                  className={clsx('dashboard-list-item-text')}\n                                  primary={item.corporate_account}\n                                />\n                                <ListItemSecondaryAction>\n                                  <Link\n                                    className={clsx('dashboard-list-item-link')}\n                                    to={\n                                      'finalize-proposal/approver/' +\n                                      item.app_uid\n                                    }\n                                  >\n                                    View\n                                  </Link>\n                                </ListItemSecondaryAction>\n                              </ListItem>\n                            );\n                          })}\n                        </List>\n                      </Box>\n                      {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                    </Paper>\n                  ) : (\n                    <Paper className={clsx('content')}>\n                      <Box className={clsx('card-header')}>\n                        <Typography\n                          className={clsx('dashboard-count')}\n                          style={{ color: '#272E4C' }}\n                        >\n                          {contractsToSignOff.length}\n                        </Typography>\n                        <Typography\n                          className={clsx('dashboard-count-description')}\n                        >\n                          Contracts to Sign-Off\n                        </Typography>\n                      </Box>\n                      <Box className={clsx('card-content')}>\n                        <List dense>\n                          {contractsToSignOff.map((item, index) => {\n                            return (\n                              <ListItem key={index}>\n                                <ListItemText\n                                  id={'contracts_to_signoff_' + index}\n                                  className={clsx('dashboard-list-item-text')}\n                                  primary={item.corporate_account}\n                                />\n                                <ListItemSecondaryAction>\n                                  <Link\n                                    className={clsx('dashboard-list-item-link')}\n                                    to={\n                                      'finalize-proposal/approver/' +\n                                      item.app_uid\n                                    }\n                                  >\n                                    View\n                                  </Link>\n                                </ListItemSecondaryAction>\n                              </ListItem>\n                            );\n                          })}\n                        </List>\n                      </Box>\n                      {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                    </Paper>\n                  )}\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <Paper className={clsx('content')}>\n                    <Box className={clsx('card-header')}>\n                      <Typography\n                        className={clsx('dashboard-count')}\n                        style={{ color: '#1AB1C4' }}\n                      >\n                        {tickets_waiting_response.length}\n                      </Typography>\n                      <Typography\n                        className={clsx('dashboard-count-description')}\n                      >\n                        Tickets Waiting Response\n                      </Typography>\n                    </Box>\n                    <Box className={clsx('card-content')}>\n                      <List dense>\n                        {/*\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttickets_waiting_response.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText id={'tickets_waiting_response_'+index} className={clsx('dashboard-list-item-text')} primary={item.name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-list-item-link')} to={item.link}>View</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t*/}\n                      </List>\n                    </Box>\n                    {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                  </Paper>\n                </Grid>\n              </Grid>\n            </Grid>\n            {/*\n\t\t\t\t\t\t\t\t<Grid item xs={12} md={12}>\n\t\t\t\t\t\t\t\t\t<Typography className={clsx('sub-title')} style={{marginTop: 48}}>\n\t\t\t\t\t\t\t\t\t\tReports\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12} md={12} style={{display: 'none'}}>\n\t\t\t\t\t\t\t\t\t<Grid container justify=\"space-between\" spacing={4} alignItems=\"flex-start\">\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-graph-header')} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-graph-title')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tClosed Accounts\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={'temp_dashboard_graph_02.png'} className={clsx('dashboard-temp-graph-img-report')} alt=\"Closed Accounts\" />\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t(role == 'underwriting_head' || role == 'underwriting_staff') ?\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-graph-header')} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-graph-title')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTop 5 Clients in Utilization\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={'temp_dashboard_graph_03.png'} className={clsx('dashboard-temp-graph-img-report')} alt=\"Top 5 Clients in Utilization\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-graph-header')} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-graph-title')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFranchised Accounts\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={'temp_dashboard_graph_05.png'} className={clsx('dashboard-temp-graph-img-report')} alt=\"Top 5 Clients in Utilization\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12} md={12}>\n\t\t\t\t\t\t\t\t\t<Grid container justify=\"space-between\" spacing={4} alignItems=\"flex-start\">\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={4}>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t(role == 'underwriting_head' || role == 'underwriting_staff') ?\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-header')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count')} style={{color: \"#272E4C\"}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t6\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count-description')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNewly Renewed Accounts\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<List dense>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewly_renewed_accounts.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText id={'newly_renewed_accounts_'+index} className={clsx('dashboard-list-item-text')} primary={item.name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-list-item-link')} to={item.link}>View</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View List</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-header')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count')} style={{color: \"#272E4C\"}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t6\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count-description')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tClosed Contracts / Accounts\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<List dense>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclosed_contracts.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText id={'closed_contracts_'+index} className={clsx('dashboard-list-item-text')} primary={item.name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-list-item-link')} to={item.link}>View</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View List</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={4}>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t(role == 'underwriting_head' || role == 'underwriting_staff') ?\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-header')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count')} style={{color: \"#272E4C\"}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t35\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count-description')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tGenerated Proposals\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<List dense>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgenerated_proposals.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText id={'generated_proposals_'+index} className={clsx('dashboard-list-item-text')} primary={item.name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-list-item-link')} to={item.link}>View</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-header')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count')} style={{color: \"#272E4C\"}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t35\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count-description')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tActive Proposals\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<List dense>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tactive_proposals.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText id={'active_proposals_'+index} className={clsx('dashboard-list-item-text')} primary={item.name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-list-item-link')} to={item.link}>View</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={4}>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t(role == 'underwriting_head' || role == 'underwriting_staff') ?\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')} style={{visibility: 'hidden'}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-graph-header')} style={{borderBottom: '1px solid #151C1B'}} display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-graph-title')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTop<br />Facilities\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select items={top_facilities_options} value={this.state.top_facility_sort} onChange={this.handleTopFacilitySortSelect} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={'temp_dashboard_graph_04.png'} className={clsx('dashboard-temp-graph-img')} alt=\"Top Facilities\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-footer')} display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>Download Top Facilities Report</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-header')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count')} style={{color: \"#272E4C\"}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t35\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count-description')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNew Franchised Accounts\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<List dense>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnew_franchised_accounts.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText id={'new_franchised_accounts_'+index} className={clsx('dashboard-list-item-text')} primary={item.name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-list-item-link')} to={item.link}>View</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t*/}\n          </Grid>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state: Store) => state.dashboard;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  Map: bindActionCreators(DashboardActions.Map, dispatch),\n});\n\nexport { mapStateToProps, mapDispatchToProps };\n\n/**\n * Notes:\n * Limit Types(Hard coded): ABL, MBL, PEC (Pre-existing condition)\n */\n","let API_URL = process.env.REACT_APP_PMAKER_BASE_URL;\nlet ROOT_URL = process.env.REACT_APP_PMAKER_ROOT_URL;\n// let API_URL: string;\n// if(process.env.NODE_ENV === \"development\"){\n//     API_URL = \"http://18.140.39.215/api/1.0/workflow\";\n// }else{\n//     API_URL = \"http://18.140.39.215/api/1.0/workflow\";\n// }\n\nexport class Processmaker {\n    static getWithToken(url:string, token:string){ \n        console.log('token: ',token);\n    \tlet URL = API_URL + url;\n    \tconsole.log('get url: ', URL, token);\n        return fetch(URL, {\n\t\t   \tmethod: 'GET',\n\t\t   \theaders: {\n\t\t   \t\t'Content-Type':'application/json',\n\t\t   \t\t'Authorization': 'Bearer ' + localStorage.getItem('pm_token')\n\t\t   \t}\n\t\t}).then(response => response.json()\n\t\t).catch(error => {\n\t\t\tconsole.log('client error: ', error);\n\t\t});\n    }\n\n    static postWithToken(url:string, token:string, body:any){\n        console.log('token: ',token);\n    \tlet URL = API_URL + url;\n    \tconsole.log('post url: ', URL, body);\n        return fetch(URL, {\n\t\t   \tmethod: 'POST',\n\t\t   \theaders: {\n\t\t   \t\t'Content-Type':'application/json',\n\t\t   \t\t'Authorization': 'Bearer ' + localStorage.getItem('pm_token')\n\t\t   \t},\n\t\t   \tbody: JSON.stringify(body)\n\t\t}).then(response => {\n\t\t\tconsole.log('response',response);\n\t\t\treturn response.json()}\n\t\t).catch(error => {\n\t\t\tconsole.log('client error: ', error);\n\t\t});\n\t}\n\t\n\tstatic put(url:string, token:string, body:any){\n        console.log('token: ',token);\n    \tlet URL = API_URL + url;\n    \tconsole.log('post url: ', URL, body);\n        return fetch(URL, {\n\t\t   \tmethod: 'PUT',\n\t\t   \theaders: {\n\t\t   \t\t'Content-Type':'application/json',\n\t\t   \t\t'Authorization': 'Bearer ' + localStorage.getItem('pm_token')\n\t\t   \t},\n\t\t   \tbody: JSON.stringify(body)\n\t\t}).then(response => {\n\t\t\tconsole.log('response',response);\n\t\t\treturn response.json()}\n\t\t).catch(error => {\n\t\t\tconsole.log('client error: ', error);\n\t\t});\n    }\n\n    static post(url:string, body:any){\n    \tlet URL = API_URL + url;\n    \tconsole.log('post url: ', URL, body);\n        return fetch(URL, {\n\t\t   \tmethod: 'POST',\n\t\t   \theaders: {\n\t\t   \t\t'Content-Type':'application/json',\n\t\t   \t},\n\t\t   \tbody: JSON.stringify(body)\n\t\t}).then(response => {\n\t\t\tconsole.log('response',response);\n\t\t\treturn response.json()}\n\t\t).catch(error => {\n\t\t\tconsole.log('client error: ', error);\n\t\t});\n\t}\n\t\n\tstatic postLogin(url:string, body:any){\n    \tlet URL = ROOT_URL + url;\n    \tconsole.log('post url: ', URL, body);\n        return fetch(URL, {\n\t\t   \tmethod: 'POST',\n\t\t   \theaders: {\n\t\t   \t\t'Content-Type':'application/json',\n\t\t   \t},\n\t\t   \tbody: JSON.stringify(body)\n\t\t}).then(response => {\n\t\t\tconsole.log('response',response);\n\t\t\treturn response.json()}\n\t\t).catch(error => {\n\t\t\tconsole.log('client error: ', error);\n\t\t});\n\t}\n\n\tstatic postClaim(url:string){\n        return fetch(API_URL+url, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Authorization': 'Bearer ' + localStorage.getItem('pm_token')\n\t\t\t}\n\t\t}).then(response => response.json()\n\t\t).catch(error => {\n\t\t\tconsole.log('client error: ', error);\n\t\t});\n    }\n}"],"sourceRoot":""}