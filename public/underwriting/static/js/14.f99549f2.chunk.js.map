{"version":3,"sources":["Pages/ApproveProposal/Summary/index.tsx","Pages/ApproveProposal/ApproveProposalActions.ts","Pages/ApproveProposal/ApproveProposalModals/index.tsx","Pages/ApproveProposal/ApproveProposalSelector.ts","Pages/ApproveProposal/ApproveProposalPage.tsx"],"names":["AvaileeItems","EligibleAvaileesItems","MaternityEligibleAvaileesItems","Summary","props","classes","summaryPackages","summaryBenefits","selectedSummaryCategory","SetSelectedSummaryPackage","SetSelectedSummaryCategory","useEffect","length","first","tree_path","code","Grid","container","className","gridContainer","item","xs","Typography","sectionTitle","Tabs","value","tabs","map","i","Tab","key","label","name","tab","onClick","Table","table","TableHead","TableRow","TableCell","columnCategory","columnBenefit","columnLimit","columnEligibility","TableBody","planType","row","x","tableRowEven","tableRowOdd","component","scope","rowSpan","limits","lim","found","LimitTypeItems","find","type","limit_unit","suffix","limit","GlobalFunction","formatNumber","includes","Fragment","custom_metadata","eligible_availees","availee","colSpan","ApproveProposalActions","payload","ActionConsts","ApproveProposal","SetBenefitNodes","SetClientData","SetSelectedPlanType","SetSelectedPlanPackage","SetSelectedBenefitCategory","useStyles","makeStyles","theme","root","flexWrap","dialog","align","justify","width","fontFamily","dialogContent","paddingTop","dialogContentText","fontSize","paddingRight","paddingLeft","dialogTitle","marginTop","spacing","marginBottom","color","fontWeight","dialogContentContainer","dialogAction","justifyContent","closeButton","position","right","top","palette","grey","ProposalApprovalModal","isModalOpen","id","Dialog","open","aria-labelledby","style","zIndex","alignItems","direction","DialogTitle","disableTypography","title","IconButton","aria-label","onClose","DialogContent","padding","DialogContentText","message","allowRevision","FormGroup","FormControlLabel","control","Checkbox","checked","allowedRevise","onChange","e","stopPropagation","console","log","target","setAllowedRevise","DialogActions","buttons","defaultProps","getBenefitNodes","state","pages","approveProposal","benefitNodes","getSelectedSummaryPackage","selectedSummaryPackage","getSelectedSummaryCategory","getSelectedPlanType","selectedPlanType","getSelectedPlanPackage","selectedPlanPackage","getSelectedBenefitCategory","selectedBenefitCategory","getClientData","clientData","selectBusinessData","createSelector","businessData","selectNatureData","natureData","selectContactDetailsData","contactDetailsData","selectHMOData","HMOData","selectPrincipalData","principalData","selectContractNodes","getFilteredNodes","selectPlanTypeNodes","selectPlanPackageNodes","selectBenefitCategoryNodes","selectBenefitTypeNodes","selectMainBenefitNodes","selectContractNode","contractNodes","getContractNode","selectCategoryNode","planPackageNodes","benefitCategoryNodes","getCategoryNode","selectSummaryPackages","mainBenefitNodes","nodes","filter","category","benefits","benefit","included","baseNode","baseItem","undefined","node","index","findIndex","selectSummaryBenefits","planTypeNodes","reduce","result","newPlanItem","Object","assign","push","Array","selectPlanTypeList","benefitTypeNodes","getPlanTypeList","selectRows","getRows","selectRoomAndBoardList","getSidebarList","selectCoverageList","selectRiderList","API_URL","process","buttonStyles","approveBtn","approveWithConditionsBtn","minWidth","borderWidth","borderColor","backgroundColor","disapproveBtn","cancelBtn","marginRight","border","okayBtn","checkboxSize","main","boxShadow","subSectionTitle","fieldGroupTitle","listItemTextRoot","flex","listItemTextPrimarySelected","cursor","listItemTextPrimaryNotSelected","dropzone","height","borderRadius","display","flexDirection","inputLabel","keyboardDatePicker","checkbox","radio","appBar","bottom","breakpoints","up","grow","flexGrow","button","margin","minHeight","buttonTitle","buttonSubTitle","ApproveProposalPage","contractNode","btnclasses","useState","currentStep","setCurrentStep","loading","setLoading","isApprovalModalOpen","setIsApprovalModalOpen","approvalModalTitle","setApprovalModalTitle","approvalModalMessage","setApprovalModalMessage","approvalModalButtons","setApprovalModalButtons","setallowRevision","redirectToDashboard","setRedirectToDashboard","clientLoaded","setClientLoaded","nodesLoaded","setNodesLoaded","contractLoaded","setContractLoaded","invalidFields","user_role","accessToken","successRedirectToDashboard","showHideApprovalModal","handleLoadBenefitNodesFromAPI","baseNodes","GET_URL","match","params","proposal_id","fetch","method","headers","then","response","json","data","convertNodeData","combineBaseBenefitNodes","catch","error","showFailedModal","Button","variant","handleDisapproveProposal","Processmaker","put","ticket_id","response2","response3","showSuccessModal","handleApproveProposal","withconditions","body","response4","client_id","client","convertClientData","handleLoadClientFromAPI","handleLoadBaseNodesFromAPI","numOfPrincipals","principals_count","malePrincipals","male_principals_count","femalePrincipals","female_principals_count","numOfDependents","dependents_count","maleDependents","male_dependents_count","femaleDependents","female_dependents_count","to","pathname","step","Details","submitMode","StandardBenefitPlan","renderStep","flag","mapStateToProps","categoryNode","planTypeList","roomAndBoardList","coverageList","riderList","rows","mapDispatchToProps","dispatch","bindActionCreators"],"mappings":"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","file":"static/js/14.f99549f2.chunk.js","sourcesContent":["import React from 'react';\n\nimport { useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { GlobalFunction } from '../../CreateProposal/GlobalFunction';\n\nimport { IApproveProposal } from 'Pages/ApproveProposal/IApproveProposal';\n\nimport {\n\tGrid,\n} from '@material-ui/core';\n\nimport { \n\tLimitTypeItems,\n\tEligibleAvaileesItems,\n\tMaternityEligibleAvaileesItems\n} from '../../CreateProposal/Components/BenefitsTable/DropdownConstants';\n\ninterface SummaryProps {\n\tclasses: any;\n}\n\nconst AvaileeItems = [...EligibleAvaileesItems, MaternityEligibleAvaileesItems];\n\nexport const Summary:React.FC<IApproveProposal.IProps & SummaryProps> = (props: IApproveProposal.IProps & SummaryProps) => {\n\tconst { classes, \n\t\t\tsummaryPackages, \n\t\t\tsummaryBenefits, \n\t\t\tselectedSummaryCategory,\n\t\t\tSetSelectedSummaryPackage, \n\t\t\tSetSelectedSummaryCategory \n\t\t} = props;\n\n\n\tuseEffect(() => {\n\t\tif (summaryPackages.length > 0) {\n\t\t\tconst first = summaryPackages[0];\n\t\t\tSetSelectedSummaryPackage(`${first.tree_path[3]}`);\n\t\t\tSetSelectedSummaryCategory(`${first.code}`);\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t\t<Grid container className={classes.gridContainer}>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<Typography className={classes.sectionTitle}>\n\t\t\t\t\t\tSummary Per Plan Type\n\t\t\t\t\t</Typography>\n\t\t\t        <Tabs value={selectedSummaryCategory} className={classes.tabs}>\n\t\t\t         {\n\t\t\t         \tsummaryPackages.length > 0 ? \n\t\t\t         \t\tsummaryPackages.map((item: any, i: number) => \n\t\t\t         \t\t\t <Tab \n\t\t\t         \t\t\t \tkey={i}\n\t\t\t         \t\t\t \tvalue={item.code}\n\t\t\t         \t\t\t \tlabel={item.name}\n\t\t\t         \t\t\t \tclassName={classes.tab}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tSetSelectedSummaryPackage(`${item.tree_path[3]}`);\n\t\t\t\t\t\t\t\t\t\tSetSelectedSummaryCategory(`${item.code}`);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t         \t\t\t />\n\t\t\t\t\t\t\t) : null\n\t\t\t         }\n\t\t\t        </Tabs>\n\n\t\t\t\t    <Table className={classes.table}>\n\t\t\t\t        <TableHead>\n\t\t\t\t          \t<TableRow>\n\t\t\t\t\t            <TableCell className={classes.columnCategory}></TableCell>\n\t\t\t\t\t            <TableCell className={classes.columnBenefit}>Benefit</TableCell>\n\t\t\t\t\t           \t<TableCell className={classes.columnLimit}>Limit</TableCell>\n\t\t\t\t\t           \t<TableCell className={classes.columnEligibility}>Eligibility</TableCell>\n\t\t\t\t\t    \t{/*     \n\t\t\t\t\t    \t\t<TableCell>Effectivity</TableCell>\n\t\t\t\t\t            <TableCell>Reimbursement</TableCell>\n\t\t\t\t\t    \t*/}\n\t\t\t\t          \t</TableRow>\n\t\t\t\t        </TableHead>\n\t\t\t\t        <TableBody>\n\t\t\t\t        \t{\n\t\t\t\t        \t\tsummaryBenefits.length > 0 ? \n\t\t\t\t        \t\t\tsummaryBenefits.map((planType, i) => \n\t\t\t\t        \t\t\t\tplanType['child_nodes'] && planType['child_nodes'].length > 0 ? \n\t\t\t\t        \t\t\t\t\tplanType['child_nodes'].map ((row, x) => \n\t\t\t\t\t\t\t\t\t            <TableRow className={i % 2 ? classes.tableRowEven : classes.tableRowOdd} key={x}>\n\t\t\t\t\t\t\t\t\t              { \n\t\t\t\t\t\t\t\t\t              \tx === 0 ? \n\t\t\t\t\t\t\t\t\t              \t\t<TableCell component=\"th\" scope=\"row\" rowSpan={planType['child_nodes'].length}>\n\t\t\t\t\t\t\t\t\t\t\t            \t{planType.name}\n\t\t\t\t\t\t\t\t\t\t\t            </TableCell> : null\n\n\t\t\t\t\t\t\t\t\t              }    \n\t\t\t\t\t\t\t\t\t              <TableCell>\n\t\t\t\t\t\t\t\t\t              \t{row.name}\n\t\t\t\t\t\t\t\t\t              </TableCell>\n\t\t\t\t\t\t\t\t\t              <TableCell>\n\t\t\t\t\t\t\t\t\t              {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trow.limits && row.limits.length > 0 ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow.limits.map((lim: any, i: number) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst found = LimitTypeItems.find ((item) => item.type === lim.type && item.limit_unit === lim.limit_unit);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet name = '';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet suffix = '';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet value = lim.limit;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (found) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname = found.name + \": \";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (lim.limit_unit === 'PHP') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix = 'PHP';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = GlobalFunction.formatNumber(value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (lim.limit_unit === 'Percentage') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix = '%';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (['ABL', 'MBL'].includes(lim.type)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix = '% ' + lim.type;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (lim.limit_unit === 'Sessions') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix = lim.limit == 1 ? 'session' : 'sessions';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (lim.limit_unit === 'Visits') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix = lim.limit == 1 ? 'visit' : 'visits';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment key={i}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{name}{value} {suffix}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br /> \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}) : null\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t              </TableCell>\n\t\t\t\t\t\t\t\t\t              <TableCell>\n\t\t\t\t\t\t\t\t\t              \t{\n\t\t\t\t\t\t\t\t\t              \t\trow.custom_metadata && \n\t\t\t\t\t\t\t\t\t              \t\trow.custom_metadata.eligible_availees && \n\t\t\t\t\t\t\t\t\t              \t\trow.custom_metadata.eligible_availees.length > 0 ? \n\t\t\t\t\t\t\t\t\t              \t\t\trow.custom_metadata.eligible_availees.map((availee: any, i: number) => {\n\t\t\t\t\t\t\t\t\t              \t\t\t\tconst found:any = AvaileeItems.find((item: any) => item.value === availee);\n\n\t\t\t\t\t\t\t\t\t              \t\t\t\tif (found) {\n\t\t\t\t\t\t\t\t\t              \t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment key={i}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{found.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br /> \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t              \t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t              \t\t\t\t}\n\t\t\t\t\t\t\t\t\t              \t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t              \t\t\t}) : null\n\t\t\t\t\t\t\t\t\t              \t}\n\t\t\t\t\t\t\t\t\t              </TableCell>\n\t\t\t\t\t\t\t\t\t            </TableRow>\n\t\t\t\t        \t\t\t\t\t) : null\n\t\t\t\t        \t\t\t) : \n\t\t\t\t\t\t          \t<TableRow>\n\t\t\t\t\t\t\t            <TableCell colSpan={4}>No additional benefits on top of Base Plan have been added.</TableCell>\n\t\t\t\t\t\t          \t</TableRow>\n\t\t\t\t        \t}\n\t\t\t\t        </TableBody>\n\t\t\t\t     </Table>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t);\n};","import { ActionConsts } from './ActionConsts';\n\nexport const ApproveProposalActions = {\n\tMap: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.ApproveProposal.SetReducer,\n\t}),\n\n\tReset: () => ({\n\t\ttype: ActionConsts.ApproveProposal.ResetReducer,\n\t}),\n\n\tSetBenefitNodes: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.ApproveProposal.SetBenefitNodes,\n\t}),\n\n\tSetClientData: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.ApproveProposal.SetClientData,\n\t}),\n\n\tSetSelectedSummaryPackage: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.ApproveProposal.SetSelectedSummaryPackage,\n\t}),\n\n\tSetSelectedSummaryCategory: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.ApproveProposal.SetSelectedSummaryCategory,\n\t}),\n\t\n\tSetSelectedPlanType: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.ApproveProposal.SetSelectedPlanType,\n\t}),\n\n\tSetSelectedPlanPackage: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.ApproveProposal.SetSelectedPlanPackage,\n\t}),\n\n\tSetSelectedBenefitCategory: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.ApproveProposal.SetSelectedBenefitCategory,\n\t}),\n};\n","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dialog, DialogTitle, DialogContent,\n    DialogContentText, DialogActions, Grid,\n    IconButton, FormControlLabel, Checkbox,\n    FormGroup} from '@material-ui/core/';\nimport CloseIcon from '@material-ui/icons/Close';\n\ninterface ProposalApprovalModalProps {\n    isModalOpen: boolean;\n    id: string;\n    message: string;\n    title: string;\n    buttons?: any | null;\n    allowRevision?: any | null;\n    onClose: (flag: boolean) => void;\n    allowedRevise: boolean;\n    setAllowedRevise: (flag: boolean) => void;\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexWrap:'wrap'\n    },\n    dialog:{\n        align:'center',\n        justify:'center',\n        width:'100%',\n        fontFamily: 'usual',\n    },\n    dialogContent :{\n        paddingTop : '0px',\n    },\n    dialogContentText :{\n        fontSize: '0.875rem'\n    },\n    container: {\n        paddingRight:'15px',\n        paddingLeft:'15px',\n        width: '450px'\n    },\n    dialogTitle: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        fontSize: '16px',\n        color: '#272E4C',\n        fontWeight: 700\n    },\n    dialogContentContainer: {\n        width: '100%'\n    },\n    dialogAction: {\n        marginBottom: theme.spacing(3),\n        marginTop: theme.spacing(2),\n        justifyContent:'center'\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    }\n}));\n  \n\nexport const ProposalApprovalModal: React.FC<ProposalApprovalModalProps> = (\n\tprops: ProposalApprovalModalProps,\n): JSX.Element => {\n    const {\n        isModalOpen,\n        id\n    } = props;\n    const classes = useStyles();\n    \n    const onClose = () =>{\n        if(props.onClose){\n            props.onClose(false);\n        }\n    }\n\n    return (\n        <Dialog\n            id={id}\n            open={isModalOpen}\n            aria-labelledby=\"modal-title\"\n            className={classes.dialog}\n            style={{zIndex: 9999}}\n        >\n            <div>\n                <Grid container className={classes.container} justify=\"flex-start\" alignItems=\"flex-start\" direction=\"column\">\n                    <Grid item xs={12}>\n                        <DialogTitle className={classes.dialogTitle} disableTypography={true} id=\"modal-title\" >\n                            {props.title}\n                            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </DialogTitle>\n                    </Grid>\n                    <Grid item xs={12} className={classes.dialogContentContainer}>\n                        <DialogContent className={classes.dialogContent} style={{padding: '0px 20px 10px 20px'}}>\n                            <DialogContentText className={classes.dialogContentText}>\n                                {props.message}\n                                {props.allowRevision === true ?\n                                    <div>\n                                        <FormGroup>\n                                            <FormControlLabel\n                                                style={{paddingTop: '15px'}}\n                                                className={\"allowed_revision\"}\n                                                control={<Checkbox\n                                                    checked={props.allowedRevise}\n                                                    color=\"primary\"\n                                                    onChange={e => {\n                                                        e.stopPropagation();\n                                                        console.log(\" e.target.checked >>>\", e.target.checked)\n                                                        props.setAllowedRevise(e.target.checked)\n                                                    }}\n                                                />}\n                                                label=\"Allow the BDO to revise\"\n                                            />\n                                        </FormGroup>\n                                    </div>: null\n                                }\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions className={classes.dialogAction}>\n                            {props.buttons}\n                        </DialogActions>\n                    </Grid>\n                </Grid>\n            </div>\n        </Dialog>\n    )\n}\n\nProposalApprovalModal.defaultProps = {\n    isModalOpen: false,\n    id: 'proposal_approval_modal',\n    message: \"This is a sample modal.\",\n    title: \"Sample Modal\",\n    allowRevision: false\n};\n","/**\n * The global state selectors\n */\n\nimport { createSelector } from 'reselect';\nimport { getFilteredNodes, getSidebarList, getRows, getPlanTypeList, getContractNode, getCategoryNode } from '../CreateProposal/CreateProposalSelector';\n\nconst getBenefitNodes = (state: any) => {\n  return state.pages.approveProposal.benefitNodes;\n};\n\nconst getSelectedSummaryPackage = (state: any) => {\n  return state.pages.approveProposal.selectedSummaryPackage;\n};\n\nconst getSelectedSummaryCategory = (state: any) => {\n  return state.pages.approveProposal.selectedSummaryCategory;\n};\n\nconst getSelectedPlanType = (state: any) => {\n  return state.pages.approveProposal.selectedPlanType;\n};\n\nconst getSelectedPlanPackage = (state: any) => {\n  return state.pages.approveProposal.selectedPlanPackage;\n};\n\nconst getSelectedBenefitCategory = (state: any) => {\n  return state.pages.approveProposal.selectedBenefitCategory;\n};\n\nconst getClientData = (state: any) => {\n  return state.pages.approveProposal.clientData;\n};\n\nconst selectBusinessData = createSelector(getClientData, (clientData) => {\n  return clientData.businessData;\n});\n\nconst selectNatureData = createSelector(getClientData, (clientData) => {\n  return clientData.natureData;\n});\n\nconst selectContactDetailsData = createSelector(getClientData, (clientData) => {\n  return clientData.contactDetailsData;\n});\n\nconst selectHMOData = createSelector(getClientData, (clientData) => {\n  return clientData.HMOData;\n});\n\nconst selectPrincipalData = createSelector(getClientData, (clientData) => {\n  return clientData.principalData;\n});\n\nconst selectContractNodes = createSelector(getBenefitNodes, (benefitNodes) => {\n  return getFilteredNodes (benefitNodes, 2);\n});\n\nconst selectPlanTypeNodes = createSelector(getBenefitNodes, (benefitNodes) => {\n  return getFilteredNodes (benefitNodes, 3);\n});\n\nconst selectPlanPackageNodes = createSelector(getBenefitNodes, (benefitNodes) => {\n  return getFilteredNodes (benefitNodes, 4);\n});\n\nconst selectBenefitCategoryNodes = createSelector(getBenefitNodes, (benefitNodes) => {\n  return getFilteredNodes (benefitNodes, 5);\n});\n\nconst selectBenefitTypeNodes = createSelector(getBenefitNodes, (benefitNodes) => {\n  return getFilteredNodes (benefitNodes, 6);\n});\n\nconst selectMainBenefitNodes = createSelector(getBenefitNodes, (benefitNodes) => {\n  return getFilteredNodes (benefitNodes, 7);\n});\n\nconst selectContractNode = createSelector(selectContractNodes, (contractNodes) => {\n  return getContractNode(contractNodes);\n});\n\nconst selectCategoryNode = createSelector(selectPlanPackageNodes, selectBenefitCategoryNodes, getSelectedPlanType, getSelectedPlanPackage, getSelectedBenefitCategory, (planPackageNodes, benefitCategoryNodes, selectedPlanType, selectedPlanPackage, selectedBenefitCategory) => {\n  return getCategoryNode(planPackageNodes, benefitCategoryNodes, selectedPlanType, selectedPlanPackage, selectedBenefitCategory);\n});\n\nconst selectSummaryPackages = createSelector(selectBenefitCategoryNodes, selectMainBenefitNodes, (benefitCategoryNodes, mainBenefitNodes) => {\n\tlet nodes = benefitCategoryNodes.filter((category: any) => {\n\t\tlet benefits = mainBenefitNodes.filter((benefit) => {\n\t\t\treturn \tbenefit.tree_path[2] === category.tree_path[2] &&\n\t\t\t\t\tbenefit.tree_path[3] === category.tree_path[3] &&\n\t\t\t\t\tbenefit.tree_path[4] === category.tree_path[4] &&\n\t\t\t\t\tbenefit.included === true\n\t\t});\n\n\t\tbenefits = benefits.filter((benefit) => {\n\t\t\tconst baseNode = mainBenefitNodes.find ((baseItem) => {\n\t            return (\n\t              baseItem.name === benefit.name &&\n\t              baseItem.code === benefit.code &&\n\t              baseItem.tree_path[2] === 'BASE' &&\n\t              baseItem.tree_path[3] === benefit.tree_path[3] &&\n\t              baseItem.tree_path[4] === benefit.tree_path[4] &&\n\t              baseItem.tree_path[5] === benefit.tree_path[5] &&\n\t              baseItem.tree_path[6] === benefit.tree_path[6]\n\t            )\n\t          });\n\n\t\t\tif (baseNode && !baseNode.included) {\n\t\t\t\treturn true;\n\t\t\t} else if (baseNode === undefined) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\treturn (\n\t\t\tcategory.tree_path[2] !== \"BASE\" &&\n\t\t\t[\"CV\", \"RI\"].includes(category.tree_path[3]) &&\n\t\t\tbenefits.length > 0\n\t\t);\n\t});\n\n\t// filter duplicates\n\tnodes = nodes.filter ((node: any, i: number)  => {\n\t\tconst index = nodes.findIndex(category => \n\t\t    category.name === node.name && \n\t\t    category.code === node.code\n\t\t);\n\n\t\tif (index !== undefined && index !== i) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t});\n\n\treturn nodes;\n});\n\nconst selectSummaryBenefits = createSelector(selectPlanTypeNodes, selectMainBenefitNodes, getSelectedSummaryPackage, getSelectedSummaryCategory, (planTypeNodes, mainBenefitNodes, selectedSummaryPackage, selectedSummaryCategory) => {\n\tlet nodes = planTypeNodes.reduce ((result, item) => {\n\t\tif (item.code !== \"BASE\") {\n\t\t\tlet newPlanItem = Object.assign({}, item);\n\t\t\tconst code = newPlanItem.code;\n\n\t\t\tlet benefits = mainBenefitNodes.filter((item) => {\n\t\t\t\treturn \titem.tree_path[2] === code &&\n\t\t\t\t\t\titem.tree_path[3] === selectedSummaryPackage &&\n\t\t\t\t\t\titem.tree_path[4] === selectedSummaryCategory &&\n\t\t\t\t\t\titem.included === true\n\t\t\t});\n\n\t\t\tbenefits = benefits.filter((benefit) => {\n\t\t\t\tconst baseNode = mainBenefitNodes.find ((baseItem) => {\n\t\t            return (\n\t\t              baseItem.name === benefit.name &&\n\t\t              baseItem.code === benefit.code &&\n\t\t              baseItem.tree_path[2] === 'BASE' &&\n\t\t              baseItem.tree_path[3] === benefit.tree_path[3] &&\n\t\t              baseItem.tree_path[4] === benefit.tree_path[4] &&\n\t\t              baseItem.tree_path[5] === benefit.tree_path[5] &&\n\t\t              baseItem.tree_path[6] === benefit.tree_path[6]\n\t\t            )\n\t\t          });\n\n\t\t\t\tif (baseNode && !baseNode.included) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else if (baseNode === undefined) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\tnewPlanItem['child_nodes'] = benefits;\n\n\t\t\tif (newPlanItem['child_nodes'].length > 0) {\n\t\t\t\tresult.push(newPlanItem);\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t}, new Array());\n\n\treturn nodes;\n});\n\n\nconst selectPlanTypeList = createSelector(selectPlanTypeNodes, selectMainBenefitNodes, selectBenefitTypeNodes, (planTypeNodes, mainBenefitNodes, benefitTypeNodes) => {\n  return getPlanTypeList(planTypeNodes, mainBenefitNodes, benefitTypeNodes);\n});\n\nconst selectRows = createSelector(selectBenefitCategoryNodes, selectBenefitTypeNodes, selectMainBenefitNodes, getSelectedPlanType, getSelectedPlanPackage, getSelectedBenefitCategory, (benefitCategoryNodes, benefitTypeNodes, mainBenefitNodes, selectedPlanType, selectedPlanPackage, selectedBenefitCategory) => {\n  return getRows(benefitCategoryNodes, benefitTypeNodes, mainBenefitNodes, selectedPlanType, selectedPlanPackage, selectedBenefitCategory);\n});\n\nconst selectRoomAndBoardList = createSelector(selectBenefitCategoryNodes, getSelectedPlanType, (benefitCategoryNodes, selectedPlanType) => {\n  return getSidebarList (benefitCategoryNodes, selectedPlanType, 'RB');\n});\n\nconst selectCoverageList = createSelector(selectBenefitCategoryNodes, getSelectedPlanType, (benefitCategoryNodes, selectedPlanType) => {\n  return getSidebarList (benefitCategoryNodes, selectedPlanType, 'CV');\n});\n\nconst selectRiderList = createSelector(selectBenefitCategoryNodes, getSelectedPlanType, (benefitCategoryNodes, selectedPlanType) => {\n  return getSidebarList (benefitCategoryNodes, selectedPlanType, 'RI');\n});\n\nexport { \n\tgetBenefitNodes,\n\tgetClientData,\n\tselectPlanTypeNodes,\n\tselectSummaryPackages,\n\tselectSummaryBenefits,\n\tgetSelectedPlanType,\n\tgetSelectedPlanPackage,\n\tgetSelectedBenefitCategory,\n\tselectPlanTypeList,\n\tselectRoomAndBoardList,\n\tselectCoverageList,\n\tselectRiderList,\n\tselectRows,\n\tselectBusinessData,\n\tselectNatureData,\n\tselectContactDetailsData,\n\tselectHMOData,\n\tselectPrincipalData,\n\tselectContractNode,\n\tselectCategoryNode,\n\tgetSelectedSummaryPackage,\n\tgetSelectedSummaryCategory,\n};\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { convertNodeData, convertClientData, combineBaseBenefitNodes } from '../CreateProposal/CreateProposalPage';\nimport { Details } from '../CreateProposal/Details';\nimport { StandardBenefitPlan } from '../CreateProposal/Benefits/StandardBenefitPlan';\nimport { Summary } from './Summary';\n\nimport { Store } from 'Components/Stores/IStore';\nimport { IApproveProposal } from 'Pages/ApproveProposal/IApproveProposal';\nimport { ApproveProposalActions } from './ApproveProposalActions';\n\nimport { ProposalApprovalModal } from './ApproveProposalModals';\n\nimport {\n\tgetBenefitNodes, \n\tselectSummaryPackages,\n\tselectSummaryBenefits,\n\tgetSelectedPlanType,\n\tgetSelectedPlanPackage,\n\tgetSelectedBenefitCategory,\n\tgetSelectedSummaryPackage,\n\tgetSelectedSummaryCategory,\n\tselectPlanTypeList,\n\tselectRoomAndBoardList,\n\tselectCoverageList,\n\tselectRiderList,\n\tselectRows,\n\tgetClientData,\n\tselectBusinessData,\n\tselectNatureData,\n\tselectContactDetailsData,\n\tselectHMOData,\n\tselectPrincipalData,\n\tselectContractNode,\n\tselectCategoryNode,\n} from './ApproveProposalSelector';\nimport {\n\tFloatingFooter,\n\tLoadingIndicator\n} from 'Components/UI/';\n\n// import { Components } from '@hims/core';\n\nimport { Processmaker } from '../Processmaker';\n\nlet\tAPI_URL = process.env.REACT_APP_BASE_URL;\n\nconst buttonStyles = makeStyles({\n\tapproveBtn:{\n\t\twidth:115,\n\t},\n\tapproveWithConditionsBtn:{\n\t\tminWidth:115,\n\t\tcolor: '#0F808E',\n\t\tborderWidth: '2px',\n\t\tborderColor: '#E6F5F6',\n\t\tbackgroundColor: \"#E6F5F6\",\n\t\t'&:hover': {\n\t\t\tcolor: '#FFFFFF',\n\t\t},\n\t},\n\tdisapproveBtn:{\n\t\twidth:115,\n\t\tcolor: '#FD5451',\n\t\tborderWidth: '2px',\n\t\tborderColor: '#DDDFE3',\n\t\tbackgroundColor: \"#DDDFE3\",\n\t\t'&:hover': {\n\t\t\tcolor: '#FFFFFF',\n\t\t},\n\t},\n\tcancelBtn:{\n\t\twidth:115,\n        marginRight:25,\n        border: '1px solid #3AB77D',\n        color: '#3AB77D',\n        backgroundColor: \"#FFFFFF\"\n\t},\n\tokayBtn:{\n\t\twidth:115,\n        border: '1px solid #3AB77D',\n        color: '#3AB77D',\n        backgroundColor: \"#FFFFFF\"\n\t},\n\tcheckboxSize: {\n\t\tfontSize: '0.85rem',\n\t\t'& > .MuiTypography-body':{\n\t\t\tfontSize: '0.85rem',\n\t\t}\n\t}\n\n})\n\nconst useStyles = makeStyles(theme => ({\n\tmain:{\n\t\tbackgroundColor: '#F5F7FB',\n\t\tpadding: '32px 24px'\n\t},\n\tgridContainer: {\n\t\tpadding: theme.spacing(1),\n\t},\n\tsectionTitle: {\n\t\tfontSize: 24,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\ttable: {\n\t\tmarginTop: 10,\n\t\tboxShadow: '0px 3px 6px #00000029'\n\t},\n\ttabs: {\n\t\tmarginTop: 10,\n\t},\n\ttab: {\n        fontWeight: 'normal'\n\t},\n\tcolumnCategory: {\n\t\twidth: 150\n\t},\n\tcolumnBenefit: {\n\t\twidth: 200\n\t},\n\tcolumnLimit: {\n\t\twidth: 150\n\t},\n\tcolumnEligibility: {\n\t\twidth: 150\n\t},\n\ttableRowEven: {\n\t\tbackgroundColor: '#F6F7FA !important'\n\t},\n\ttableRowOdd: {\n\t\tbackgroundColor: '#FFFFFF !important'\n\t},\n\tsubSectionTitle: {\n\t\tfontSize: 16,\n\t\tfontWeight: 400,\n\t\tcolor: '#272e4c',\n\t},\n\tfieldGroupTitle: {\n\t\tfontSize: 13,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\tlistItemTextRoot: {\n\t\tflex: 'none',\n\t},\n\tlistItemTextPrimarySelected: {\n\t\tfontSize: 14,\n\t\tfontWeight: 700,\n\t\tcolor: 'rgba(39, 46, 76, 1)',\n\t\tcursor: 'pointer',\n\t},\n\tlistItemTextPrimaryNotSelected: {\n\t\tfontSize: 14,\n\t\tfontWeight: 700,\n\t\tcolor: 'rgba(39, 46, 76, 0.3)',\n\t\tcursor: 'pointer',\n\t},\n\tdropzone: {\n\t\twidth: '460px',\n\t\theight: '88px',\n\t\tmarginTop: '10px',\n\t\tmarginBottom: '20px',\n\t\tborder: '2px dashed rgba(30, 32, 113, 0.3)',\n\t\tborderRadius: '5px',\n\t\tbackgroundColor: '#e6e8ee',\n\t\tcolor: '#7b8094',\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tflexDirection: 'column',\n\t},\n\tinputLabel: {\n\t\tcolor: '#272e4c',\n\t},\n\tkeyboardDatePicker: {\n\t\tmarginTop: '10px',\n\t\tmarginBottom: '20px',\n\t\twidth: '212px',\n\t},\n\tcheckbox: {\n\t\t'&.Mui-checked': {\n\t\t\tcolor: '#1e2071',\n\t\t},\n\t},\n\tradio: {\n\t\t'&.Mui-checked': {\n\t\t\tcolor: '#1e2071',\n\t\t},\n\t},\n\tappBar: {\n\t\ttop: 'auto',\n\t\tbottom: 0,\n\t\tborder: '1px solid #707070',\n\t\tbackgroundColor: 'rgba(54, 54, 54, 0.64)',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: 'calc(100% - 72px)',\n\t\t},\n\t},\n\tgrow: {\n\t\tflexGrow: 1,\n\t},\n\tbutton: {\n\t\tmargin: '0 10px',\n\t\tminHeight: '42px',\n\t\tminWidth: '150px',\n\t},\n\tbuttonTitle: {\n\t\tfontWeight: 700,\n\t\tfontSize: 13,\n\t},\n\tbuttonSubTitle: {\n\t\tfontWeight: 400,\n\t\tfontSize: 7,\n\t},\n}));\n\nexport const ApproveProposalPage: React.FC<IApproveProposal.IProps> = (\n\t\tprops: IApproveProposal.IProps\n\t): JSX.Element => {\n\tconst { contractNode, clientData, SetBenefitNodes, SetClientData } = props;\n\n\tconst classes = useStyles();\n\tconst btnclasses = buttonStyles();\n\tconst [currentStep, setCurrentStep] = useState(0);\n\tconst [loading, setLoading] = useState(false);\n\tconst [isApprovalModalOpen, setIsApprovalModalOpen] = useState(false);\n\tconst [approvalModalTitle, setApprovalModalTitle] = useState(\"\");\n\tconst [approvalModalMessage, setApprovalModalMessage] = useState(\"\");\n\tconst [approvalModalButtons, setApprovalModalButtons] = useState<any>(null);\n\tconst [allowRevision, setallowRevision] = useState(false);\n\tconst [allowedRevise, setAllowedRevise] = useState(false);\n\tconst [redirectToDashboard, setRedirectToDashboard] = useState(false);\n\tconst [clientLoaded, setClientLoaded] = useState(false);\n\tconst [nodesLoaded, setNodesLoaded] = useState(false);\n\tconst [contractLoaded, setContractLoaded] = useState(false);\n\tconst [invalidFields] = useState<string[]>([]);\n\tconst [user_role] = useState(\"Underwriting Manager\");\n\tconst [accessToken] = useState('');\n\t// const [client_id] = useState(\"5db7fc70a251bafd2ee7c96d\");\n\n\t// const renderTitle = (step) => {\n\t// \tswitch(step) {\n\t// \t    case 0:\n\t// \t    \treturn \"Details\";\n\t// \t    case 1:\n\t// \t    \treturn \"Modify Benefits\";\n\t// \t    case 2: \n\t// \t    \treturn \"Review\";\n\t// \t   \tdefault:\n\t// \t      return '';\n\t// \t}\n\t// }\n\n\n\tconst renderStep = (step) => {\n\t\tswitch(step) {\n\t\t    case 0:\n\t\t    \treturn <Details submitMode invalidFields={invalidFields} classes={classes} {...props} />;\n\t\t    case 1:\n\t\t    \treturn <StandardBenefitPlan submitMode classes={classes} {...props} />;\n\t\t    case 2: \n\t\t    \treturn <Summary classes={classes} {...props} />;\n\t\t   \tdefault:\n\t\t      return null;\n\t\t}\n\t}\n\n\n\tconst setStepBack = () => {\n\t\tif (currentStep > 0) {\n\t\t\tsetCurrentStep(currentStep - 1);\n\t\t}\n\t}\n\n\tconst setStepForward = () => {\n\t\tif (currentStep < 2) {\n\t\t\tsetCurrentStep(currentStep + 1);\n\t\t}\n\t}\n\n\tconst successRedirectToDashboard = () => {\n\t\tsetRedirectToDashboard(true);\n\t}\n\n\tconst showHideApprovalModal = (open: boolean) => {\n\t\tsetIsApprovalModalOpen(open);\n\t}\n\n\tconst updateAllowedRevise = (flag: boolean) => {\n\t\tsetAllowedRevise(flag)\n\t}\n\n\tconst handleLoadClientFromAPI = () => {\n\t\tconst GET_URL = API_URL + \"clients/\" + props.match.params.client_id;\n\n\t\treturn fetch(GET_URL, {\n\t\t   \tmethod: 'get',\n\t\t   \theaders: {'Content-Type':'application/json'}\n\t\t}).then(response => response.json()\n\t\t).then((response: any) => {\n\t\t\tconst data: any = Object.assign({}, response);\n\n\t\t\tconst client = convertClientData(data);\n\n\t\t\tSetClientData(Object.assign({}, clientData, client));\n\t\t\tsetClientLoaded(true);\n\t\t}).catch(error => {\n\t\t\tsetClientLoaded(true);\n\t\t\tconsole.log('getbenefitlist api error: ', error);\n\t\t});\n\t}\n\n\tconst handleLoadBaseNodesFromAPI = () => {\n\t\tsetLoading(true);\n\n\t\tconst GET_URL = API_URL + \"base-benefit-plans/\";\n\n\t\treturn fetch(GET_URL, {\n\t\t   \tmethod: 'get',\n\t\t   \theaders: {'Content-Type':'application/json'}\n\t\t}).then(response => response.json()\n\t\t).then((response: any) => {\n\t\t\tconst data: any[] = [...response];\n\n\t\t\tconst nodes = convertNodeData(data);\n\t\t\t\t\n\t\t\thandleLoadBenefitNodesFromAPI(nodes);\n\t\t}).catch(error => {\n\t\t\tsetLoading(false);\n\t\t\tconsole.log('getbenefitlist api error: ', error);\n\t\t});\n\t}\n\n\tconst handleLoadBenefitNodesFromAPI = (baseNodes: any[]) => {\n\t\tconst GET_URL = API_URL + \"benefit-plans/tree/\" + props.match.params.proposal_id;\n\n\t\treturn fetch(GET_URL, {\n\t\t   \tmethod: 'get',\n\t\t   \theaders: {'Content-Type':'application/json'}\n\t\t}).then(response => response.json()\n\t\t).then((response: any) => {\n\t\t\tconst data: any[] = [...response];\n\n\t\t\tconst benefitNodes = convertNodeData(data, true);\n\t\t\t\t\n\t\t\tlet nodes: any[] = combineBaseBenefitNodes(baseNodes, benefitNodes);\n\n\t\t\tsetNodesLoaded(true);\n\t\t\tSetBenefitNodes (nodes);\n\t\t}).catch(error => {\n\t\t\tsetNodesLoaded(true);\n\t\t\tconsole.log('getbenefitlist api error: ', error);\n\t\t});\n\t}\n\n\tconst showSuccessModal = (message: string, title: string) => {\n\t\tsetLoading(false);\n\t\tsetApprovalModalTitle(title);\n\t\tsetallowRevision(false);\n\t\tsetAllowedRevise(false);\n\t\tsetApprovalModalMessage(message);\n\t\tshowHideApprovalModal(true);\n\t\tsetApprovalModalButtons(\n\t\t\t<div>\n\t\t\t\t<Button\n\t\t\t\t\tclassName={btnclasses.okayBtn}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tonClick={successRedirectToDashboard}>\n\t\t\t\t\tOkay\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst showFailedModal = (message: string, title: string) => {\n\t\tsetLoading(false);\n\t\tsetApprovalModalTitle(title);\n\t\tsetallowRevision(false);\n\t\tsetAllowedRevise(false);\n\t\tsetApprovalModalMessage(message);\n\t\tshowHideApprovalModal(true);\n\t\tsetApprovalModalButtons(\n\t\t\t<div>\n\t\t\t\t<Button\n\t\t\t\t\tclassName={btnclasses.okayBtn}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tonClick={()=>showHideApprovalModal(false)}\n\t\t\t\t>\n\t\t\t\t\tOkay\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst handleDisapproveProposal = () => {\n\t\tsetLoading(true);\n\t\tshowHideApprovalModal(false);\n\t\tconst body = {\n\t\t\t\"proposal_approved\": false\n\t\t}\n\t\tProcessmaker.put('cases/'+props.match.params.ticket_id+'/variable', accessToken, body)\n\t\t.then(response => {\n\t\t\tif(response && response.error !== undefined){\n\t\t\t\tconst message: string = \"Failed to disapprove proposal.\";\n\t\t\t\tshowFailedModal(message, \"Disapprove Proposal\")\n\t\t\t}else{\n\t\t\t\tProcessmaker.put('cases/'+props.match.params.ticket_id+'/route-case',accessToken,{}).then(response2 => {\n\t\t\t\t\tconsole.log(response2);\n\t\t\t\t\tProcessmaker.put('cases/'+props.match.params.ticket_id+'/route-case',accessToken,{}).then(response3 => {\n\t\t\t\t\t\tif(response3 && response3.error !== undefined){\n\t\t\t\t\t\t\tconst message: string = \"Failed to disapprove proposal.\";\n\t\t\t\t\t\t\tshowFailedModal(message, \"Disapprove Proposal\")\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tlet message: string;\n\t\t\t\t\t\t\t\tmessage = \"BDO was notified that the proposal \"\n\t\t\t\t\t\t\t\t\t+ \"is disapproved and can no longer be revised\"\n\t\t\t\t\t\t\t\t\t+ \" for further use.\";\n\t\t\t\t\t\t\t\t\tshowSuccessModal(message, \"Proposal Disapproved\")\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}  \n        });\n\t}\n\n\tconst disapproveProposal = () => {\n\t\tconst message = \"Your comments will be sent back to the BDO agent.\"\n\t\t\t+ \" You can choose to have the BDO revise this or reject\"\n\t\t\t+ \" the proposal altogether.\";\n\t\tsetApprovalModalTitle(\"Disapprove\")\n\t\tsetApprovalModalMessage(message)\n\t\tshowHideApprovalModal(true);\n\t\tsetallowRevision(true);\n\t\tsetApprovalModalButtons(\n\t\t\t<div>\n\t\t\t\t <Button\n\t\t\t\t \tclassName={btnclasses.cancelBtn}\n\t\t\t\t\t variant=\"contained\"\n\t\t\t\t\t color=\"secondary\"\n\t\t\t\t\t onClick={()=>showHideApprovalModal(false)}>\n                        Cancel\n                </Button>\n                <Button\n\t\t\t\t\tclassName={btnclasses.disapproveBtn}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\" onClick={handleDisapproveProposal}>\n                    Disapprove\n                </Button>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst handleApproveProposal = (withconditions: boolean) => {\n\t\tsetLoading(true);\n\t\tshowHideApprovalModal(false);\n\t\tconst body = {\n\t\t\t\"proposal_approved\": true,\n\t\t\t\"revisions\": withconditions\n\t\t}\n\t\tProcessmaker.put('cases/'+props.match.params.ticket_id+'/variable',accessToken, body)\n\t\t.then(response => {\n\t\t\tconsole.log(\"variable >>>>\", response);\n\t\t\tif(response && response.error !== undefined){\n\t\t\t\tconst message: string = \"Failed to approve proposal.\";\n\t\t\t\tif(withconditions === true){\n\t\t\t\t\tshowFailedModal(message, \"Approve Proposal with conditions\");\n\t\t\t\t}else{\n\t\t\t\t\tshowFailedModal(message, \"Approve Proposal\");\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tProcessmaker.put('cases/'+props.match.params.ticket_id+'/route-case',accessToken,{}).then(response2 => {\n\t\t\t\t\tconsole.log(response2);\n\t\t\t\t\tProcessmaker.put('cases/'+props.match.params.ticket_id+'/route-case',accessToken,{}).then(response3 => {\n\t\t\t\t\t\tif(withconditions === true){\n\t\t\t\t\t\t\tProcessmaker.put('cases/'+props.match.params.ticket_id+'/route-case',accessToken,{}).then(response4 => {\n\t\t\t\t\t\t\t\tif(response4 && response4.error !== undefined){\n\t\t\t\t\t\t\t\t\tconst message: string = \"Failed to approve proposal.\";\n\t\t\t\t\t\t\t\t\tif(withconditions === true){\n\t\t\t\t\t\t\t\t\t\tshowFailedModal(message, \"Approve Proposal with conditions\");\n\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\tshowFailedModal(message, \"Approve Proposal\");\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tlet message: string;\n\t\t\t\t\t\t\t\t\tmessage = \"Proposal was successfully approved.\";\n\t\t\t\t\t\t\t\t\tsetApprovalModalTitle(\"Approve Proposal with conditions\");\n\t\t\t\t\t\t\t\t\tsetApprovalModalMessage(message)\n\t\t\t\t\t\t\t\t\tshowHideApprovalModal(true);\n\t\t\t\t\t\t\t\t\tsetApprovalModalButtons(\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={btnclasses.okayBtn}\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={successRedirectToDashboard}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tOkay\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tif(response3 && response3.error !== undefined){\n\t\t\t\t\t\t\t\tconst message: string = \"Failed to approve proposal.\";\n\t\t\t\t\t\t\t\tshowFailedModal(message, \"Approve Proposal\");\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tlet message: string;\n\t\t\t\t\t\t\t\t\tmessage = \"Proposal was successfully approved.\";\n\t\t\t\t\t\t\t\tsetApprovalModalTitle(\"Approve Proposal\");\n\t\t\t\t\t\t\t\tsetApprovalModalMessage(message)\n\t\t\t\t\t\t\t\tshowHideApprovalModal(true);\n\t\t\t\t\t\t\t\tsetApprovalModalButtons(\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tclassName={btnclasses.okayBtn}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={successRedirectToDashboard}>\n\t\t\t\t\t\t\t\t\t\t\t\tOkay\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}    \n        });\n\t}\n\n\tconst approveProposalWithConditions = () => {\n\t\tconst message = \"Your comments will be sent back to the BDO\"\n\t\t\t+ \" agent for revisions. Are you sure you want to \"\n\t\t\t+ \"approve this with conditions?\";\n\t\tsetApprovalModalTitle(\"Approve Proposal with conditions\")\n\t\tsetApprovalModalMessage(message)\n\t\tshowHideApprovalModal(true);\n\t\tsetApprovalModalButtons(\n\t\t\t<div>\n\t\t\t\t <Button\n\t\t\t\t \tclassName={btnclasses.cancelBtn}\n\t\t\t\t\t variant=\"contained\"\n\t\t\t\t\t color=\"secondary\"\n\t\t\t\t\t onClick={()=>showHideApprovalModal(false)}>\n                        Cancel\n                </Button>\n                <Button\n\t\t\t\t\tclassName={btnclasses.approveWithConditionsBtn}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\" onClick={()=>handleApproveProposal(true)}>\n                    Approve with conditions\n                </Button>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst approveProposal = () => {\n\t\tlet message:string = \"\";\n\t\tif(user_role === \"Underwriting Manager\"){\n\t\t\tmessage = \"The BDO will be notified of your approval and\"\n\t\t\t\t+ \" the changes you added in this proposal. Are you\"\n\t\t\t\t+ \" sure you want to approve this?\";\n\t\t}else{\n\t\t\tmessage = \"You included several comments for this proposal. \"\n\t\t\t\t+ \"Are you sure you want to approve this and send it to\"\n\t\t\t\t+ \" the Underwriting Department?\";\n\t\t}\n\t\tsetApprovalModalTitle(\"Approve Proposal\")\n\t\tsetApprovalModalMessage(message)\n\t\tshowHideApprovalModal(true);\n\t\tsetApprovalModalButtons(\n\t\t\t<div>\n\t\t\t\t <Button\n\t\t\t\t \tclassName={btnclasses.cancelBtn}\n\t\t\t\t\t variant=\"contained\"\n\t\t\t\t\t color=\"secondary\"\n\t\t\t\t\t onClick={()=>showHideApprovalModal(false)}>\n                        Cancel\n                </Button>\n                <Button\n\t\t\t\t\tclassName={btnclasses.approveBtn}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\" onClick={()=>handleApproveProposal(false)}>\n                    Approve\n                </Button>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tuseEffect(() => {\n\t\tsetLoading(true);\n\t\thandleLoadClientFromAPI();\n\t\thandleLoadBaseNodesFromAPI();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (clientLoaded && nodesLoaded) {\n\t\t\tsetLoading(false);\n\t\t}\n\t}, [clientLoaded, nodesLoaded]);\n\n\tuseEffect(() => {\n\t\tif (!contractLoaded && contractNode) {\n\t\t\tconst client = {\n\t\t\t\tprincipalData: {\n\t\t\t\t\tnumOfPrincipals: contractNode.principals_count ? contractNode.principals_count : 0,\n\t\t\t\t\tmalePrincipals: contractNode.male_principals_count ? contractNode.male_principals_count : 0,\n\t\t\t\t\tfemalePrincipals: contractNode.female_principals_count ? contractNode.female_principals_count : 0,\n\t\t\t\t\tnumOfDependents: contractNode.dependents_count ? contractNode.dependents_count : 0,\n\t\t\t\t\tmaleDependents: contractNode.male_dependents_count ? contractNode.male_dependents_count : 0,\n\t\t\t\t\tfemaleDependents: contractNode.female_dependents_count ? contractNode.female_dependents_count : 0,\n\t\t\t\t}\n\t\t\t};\n\t\t\tSetClientData(Object.assign({}, clientData, client));\n\t\t\tsetContractLoaded(true);\n\t\t}\n\t}, [contractNode]);\n\n\tif(redirectToDashboard === true){\n\t\treturn <Redirect to={{pathname: '/underwriting'}}/>\n\t}else{\n\t\treturn (\n\t\t\t<div className={classes.main}>\n\t\t\t\t{ loading ?\n\t\t\t\t\t(<LoadingIndicator/>) : null\n\n\t\t\t\t}\n\t\t\t\t{renderStep(currentStep)}\n\t\t\t\t<FloatingFooter>\n\n\t\t\t\t\t{currentStep !== 0 ?\n\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tonClick={setStepBack}\n\t\t\t\t\t\t\tid=\"proposal_previous\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tclassName='button back'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t</Button> : null\n\t\t\t\t\t}\n\t\t\t\t\t<div style={{flexGrow: 1}}></div>\n\n\t\t\t\t\t{currentStep !== 2 ? \n\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\tvariant=\"contained\" \n\t\t\t\t\t\t\tonClick={setStepForward} \n\t\t\t\t\t\t\tid=\"proposal_next\" \n\t\t\t\t\t\t\tcolor=\"primary\" \n\t\t\t\t\t\t\tclassName='button'>\n\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t</Button> :\n\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tid=\"proposal_approve_btn\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName='button'\n\t\t\t\t\t\t\t\tonClick={approveProposal}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tApprove\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tid=\"proposal_approve_btn\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName={\"button withcomment\"}\n\t\t\t\t\t\t\t\tonClick={approveProposalWithConditions}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tApprove with conditions\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tid=\"proposal_approve_btn\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName={\"button disapprove\"}\n\t\t\t\t\t\t\t\tonClick={disapproveProposal}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tDisapprove\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</React.Fragment>\n\n\t\t\t\t\t}\n\t\t\t\t</FloatingFooter>\n\t\t\t\t<ProposalApprovalModal\n\t\t\t\t\tid=\"proposal_approval_modal\"\n\t\t\t\t\tisModalOpen={isApprovalModalOpen}\n\t\t\t\t\ttitle={approvalModalTitle}\n\t\t\t\t\tmessage={approvalModalMessage}\n\t\t\t\t\tonClose={showHideApprovalModal}\n\t\t\t\t\tbuttons={approvalModalButtons}\n\t\t\t\t\tallowRevision={allowRevision}\n\t\t\t\t\tsetAllowedRevise={updateAllowedRevise}\n\t\t\t\t\tallowedRevise={allowedRevise}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nconst mapStateToProps = (state: Store) => {\n\treturn {\n\t\tbenefitNodes: getBenefitNodes(state),\n\t\tclientData: getClientData(state),\n\t\tcontractNode: selectContractNode(state),\n\t\tcategoryNode: selectCategoryNode(state),\n\t\tsummaryPackages: selectSummaryPackages(state),\n\t\tsummaryBenefits: selectSummaryBenefits(state),\n\t\tselectedSummaryPackage: getSelectedSummaryPackage(state),\n\t\tselectedSummaryCategory: getSelectedSummaryCategory(state),\n\t\tplanTypeList: selectPlanTypeList(state),\n\t\troomAndBoardList: selectRoomAndBoardList(state),\n\t\tcoverageList: selectCoverageList(state),\n\t\triderList: selectRiderList(state),\n\t\trows: selectRows(state),\n\t\tselectedPlanType: getSelectedPlanType(state),\n\t\tselectedPlanPackage: getSelectedPlanPackage(state),\n\t\tselectedBenefitCategory: getSelectedBenefitCategory(state),\n\t\tbusinessData: selectBusinessData (state),\n\t\tnatureData: selectNatureData (state),\n\t\tcontactDetailsData: selectContactDetailsData (state),\n\t\tHMOData: selectHMOData (state),\n\t\tprincipalData: selectPrincipalData(state),\n\t}\n};\n\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tSetBenefitNodes: bindActionCreators(ApproveProposalActions.SetBenefitNodes, dispatch),\n\tSetClientData: bindActionCreators(ApproveProposalActions.SetClientData, dispatch),\n\tSetSelectedSummaryPackage: bindActionCreators(ApproveProposalActions.SetSelectedSummaryPackage, dispatch),\n\tSetSelectedSummaryCategory: bindActionCreators(ApproveProposalActions.SetSelectedSummaryCategory, dispatch),\n\tSetSelectedPlanType: bindActionCreators(ApproveProposalActions.SetSelectedPlanType, dispatch),\n\tSetSelectedPlanPackage: bindActionCreators(ApproveProposalActions.SetSelectedPlanPackage, dispatch),\n\tSetSelectedBenefitCategory: bindActionCreators(ApproveProposalActions.SetSelectedBenefitCategory, dispatch),\n});\n\nexport { mapStateToProps, mapDispatchToProps };"],"sourceRoot":""}