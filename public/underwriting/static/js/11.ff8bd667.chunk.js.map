{"version":3,"sources":["Pages/CreateBenefitPage/RenderPdfModal.tsx","Pages/CreateBenefitPage/IConstants.ts","Pages/CreateBenefitPage/AddDataFieldModal.tsx","Pages/CreateBenefitPage/MethodContentModal.tsx","Pages/CreateBenefitPage/BenefitTreeSelect.tsx","Pages/CreateBenefitPage/Actions.ts","Pages/CreateBenefitPage/CreateBenefitPage.tsx"],"names":["useStyles","makeStyles","theme","root","flexWrap","dialog","align","justify","width","fontFamily","dialogContent","padding","marginTop","overflow","textAlign","dialogContentText","fontSize","item","paddingTop","minHeight","container","paddingRight","paddingLeft","iframe","height","top","left","bottom","right","dialogTitle","spacing","marginBottom","color","dialogAction","justifyContent","boldText","fontWeight","cancelButton","marginRight","border","backgroundColor","submitButton","marginLeft","closeButton","position","palette","grey","loadingIndicator","green","RenderPdfModal","props","isModalOpen","id","classes","viewerUrl","process","execPath","pdfUrl","open","aria-labelledby","className","style","zIndex","fullWidth","fullScreen","maxWidth","alignItems","direction","disableTypography","aria-label","onClick","onClose","alignContent","xs","src","defaultProps","LimitTypes","value","label","type","unit","InputTypes","TextField","Dropdown","InputChipTextField","Components","UI","InputSelect","InputTextField","AddDataFieldModal","useState","fieldName","setFieldName","fieldNameError","setFieldNameError","inputType","setInputType","valueType","setValueType","valueTypeError","setValueTypeError","defaultValue","setDefaultValue","defaultValueError","setDefaultValueError","isRequired","setIsRequired","values","setValues","reset","handleClose","Dialog","DialogTitle","DialogContent","Grid","md","error","onChange","length","data","required","items","getDataFieldMetaComponent","FormControlLabel","control","Checkbox","checked","event","target","DialogActions","clsx","Button","variant","name","onSubmit","MethodContentModal","React","content","setContent","method","IconButton","multiline","rows","grayColor","borderCss","borderColor","borderRadius","borderStyles","borderBottomColor","display","formControl","select","selectEmpty","icon","fifthLevel","sixthLevel","seventhLevel","eightLevel","ninthLevel","StyledOutlinedInput","withStyles","OutlinedInput","BenefitTreeSelect","inputLabel","useRef","labelWidth","InputLabel","ref","htmlFor","Select","renderValue","console","log","e","selectedItem","find","disabled","input","IconComponent","map","selectItem","displaySelectItem","level","MenuItem","key","selected","CreateBenefitPageActions","payload","ActionConsts","CreateBenefitPage","SetReducer","InputSelectSetValue","GetBenefitsURL","CreateBenefitURL","EditBenefitURL","RenderContractURL","ViewerPageMode","ContractURL","useStyles1","success","light","info","primary","main","warning","amber","iconVariant","opacity","message","MySnackbarContentWrapper","other","SnackbarContent","aria-describedby","action","setState","selectedBenefitName","selectedBenefitValue","parentBenefit","benefitName","benefitNameError","category","code","codeError","limitType","limitTypeName","limitTypeError","limitTypeErrorMessage","limitAmount","limitAmountError","limitAmountErrorMessage","clause","clauseError","description","descriptionError","additionalDataFields","addDataFieldModalVisible","methodContentModalVisible","renderContractModalVisible","benefitsListDisabled","selectedBenefit","canAvail","canCover","renderContract","renderProposal","createButtonDisabled","editButtonDisabled","renderContractDisabled","loading","renderIsClicked","setFieldValue","state","setFieldError","setBenefitData","_id","resetPrevBenefit","benefitsList","renderClause","limits","limit","Object","entries","custom_metadata","constructor","updDataArr","customMetadata","customMetadataSchema","custom_metadata_schema","dataArr","keys","push","properties","enum","item2","url","fetch","headers","then","response","json","body","JSON","stringify","catch","displayAdditionalDataFields","elements","field","fieldIdx","removeAdditionalDataField","fieldSelectItems","index","idx","newAdditionalDataFields","filter","_dataField","onCreateBenefitBtnClick","parent_id","limit_unit","limit_type","create_benefit_request","tree_id","tree_path","temp","forEach","layers","node_path","pop","handleCreateBenefit","onEditBenefitBtnClick","edit_benefit_request","handleEditBenefit","handleTempSaveBenefit","is_temp","snackbarMessage","onRenderContractBtnClick","handleGetBenefitList","existingBenefits","onAddFieldBtnClicked","onAddDataFieldModalClose","onRenderContractModalClose","onMethodContentModalClose","onSnackbarClose","openSnackbar","onAddDataFieldModalSubmit","onMethodContentModalSubmit","undefined","showMethodContent","autocompleteItems","categories","limitTypes","originalBenefit","this","CircularProgress","Breadcrumbs","Typography","lg","errorMessage","sm","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","mapStateToProps","createBenefitPage","mapDispatchToProps","dispatch","Map","bindActionCreators"],"mappings":"gKAAA,sIAiBMA,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,SAAS,QAEbC,OAAO,CACHC,MAAM,SACNC,QAAQ,SACRC,MAAM,OACNC,WAAY,SAEhBC,cAAe,CACXC,QAAS,MACTC,UAAU,MACVL,QAAQ,SACRM,SAAS,SACTC,UAAW,UAEfC,kBAAmB,CACfC,SAAU,YAEdC,KAAM,CACFT,MAAO,OACPU,WAAY,MACZC,UAAW,SAEfC,UAAW,CACPC,aAAa,OACbC,YAAY,OACZd,MAAO,OACPW,UAAW,SAEfI,OAAQ,CACJf,MAAO,MACPgB,OAAQ,MACRC,IAAK,GACLC,KAAM,GACNC,OAAQ,GACRC,MAAO,IAEXC,YAAa,CACTjB,UAAWV,EAAM4B,QAAQ,GACzBC,aAAc7B,EAAM4B,QAAQ,GAC5BR,YAAa,MACbN,SAAU,OACVgB,MAAO,WAEXC,aAAc,CACVF,aAAc7B,EAAM4B,QAAQ,GAC5BlB,UAAWV,EAAM4B,QAAQ,GACzBI,eAAe,UAEnBC,SAAS,CACLC,WAAY,QAEhBC,aAAc,CACV7B,MAAM,IACN8B,YAAY,GACZC,OAAQ,oBACRP,MAAO,UACPQ,gBAAiB,WAErBC,aAAc,CACVjC,MAAM,IACNkC,WAAW,IAEfC,YAAa,CACTC,SAAU,WACVhB,MAAO1B,EAAM4B,QAAQ,GACrBL,IAAKvB,EAAM4B,QAAQ,GACnBE,MAAO9B,EAAM2C,QAAQC,KAAK,MAE9BC,iBAAkB,CACdnC,UAAWV,EAAM4B,QAAQ,GACzBtB,MAAO,OACPwB,MAAOgB,IAAM,KACbzC,QAAS,aAKJ0C,EAAgD,SAC5DC,GACkB,IAEXC,EAEAD,EAFAC,YACAC,EACAF,EADAE,GAEEC,EAAUrD,IACZsD,EAAS,UAAMC,EAAQC,SAAd,uDAAqEN,EAAMO,QAOxF,OACI,gBAAC,IAAD,CACIL,GAAIA,EACJM,KAAMP,EACNQ,kBAAgB,cAChBC,UAAWP,EAAQhD,OACnBwD,MAAO,CAACC,OAAQ,MAChBC,WAAW,EACXC,YAAY,EACZC,SAAY,MAEZ,2BACI,gBAAC,IAAD,CAAM7C,WAAS,EAACwC,UAAWP,EAAQjC,UAAWb,QAAQ,gBAAgB2D,WAAW,aAAaC,UAAU,UACpG,gBAAC,IAAD,CAAMlD,MAAI,GACN,gBAAC,IAAD,CAAa2C,UAAWP,EAAQxB,YAAauC,mBAAmB,EAAMhB,GAAG,eACrE,gBAAC,IAAD,CAAYiB,aAAW,QAAQT,UAAWP,EAAQV,YAAa2B,QAnBtE,WACnBpB,EAAMqB,YAmBwB,gBAAC,IAAD,SAIZ,gBAAC,IAAD,CAAMnD,WAAS,EAACb,QAAQ,SAAS2D,WAAW,UAAUM,aAAa,WAC/D,gBAAC,IAAD,CAAeZ,UAAWP,EAAQ3C,eAC9B,gBAAC,IAAD,CAAMU,WAAS,EAACb,QAAQ,SAAS2D,WAAW,UAAUM,aAAa,WACvF,gBAAC,IAAD,CAAMvD,MAAI,EAACwD,GAAI,GAAIb,UAAWP,EAAQpC,MACV,0BAAQyD,IAAKpB,EAAWM,UAAWP,EAAQ9B,iBAY/E0B,EAAe0B,aAAe,CAC1BxB,aAAa,EACbC,GAAI,mBACJK,OAAQ,M,uXCpJCmB,EAAa,CACzB,CACCxB,GAAI,EACJyB,MAAO,SACPC,MAAO,MACPC,KAAM,SACNC,KAAM,OAEP,CACC5B,GAAI,EACJyB,MAAO,MACPC,MAAO,MACPC,KAAM,MACNC,KAAM,OAEP,CACC5B,GAAI,EACJyB,MAAO,UACPC,MAAO,MACPC,KAAM,UACNC,KAAM,OAEP,CACC5B,GAAI,EACJyB,MAAO,aACPC,MAAO,MACPC,KAAM,SACNC,KAAM,OAEP,CACC5B,GAAI,EACJyB,MAAO,QACPC,MAAO,QACPC,KAAM,MACNC,KAAM,cAEP,CACC5B,GAAI,EACJyB,MAAO,MACPC,MAAO,MACPC,KAAM,MACNC,KAAM,OAGP,CACC5B,GAAI,EACJyB,MAAO,UACPC,MAAO,QACPC,KAAM,MACNC,KAAM,cAEP,CACC5B,GAAI,EACJyB,MAAO,QACPC,MAAO,QACPC,KAAM,MACNC,KAAM,cAEP,CACC5B,GAAI,EACJyB,MAAO,MACPC,MAAO,MACPC,KAAM,MACNC,KAAM,OAEP,CACC5B,GAAI,EACJyB,MAAO,WACPC,MAAO,YACPC,KAAM,WACNC,KAAM,YAEP,CACC5B,GAAI,GACJyB,MAAO,SACPC,MAAO,UACPC,KAAM,SACNC,KAAM,WAOKC,EAAa,CACzBC,UAAW,YACXC,SAAU,YCxELC,EAAqBC,IAAWC,GAAGF,mBAAmBA,mBACtDG,EAAcF,IAAWC,GAAGC,YAAYA,YACxCC,EAAiBH,IAAWC,GAAGE,eAAeA,eAqB9CxF,EAAYC,YAAW,SAACC,GAAD,MAAmB,CAC/CG,OAAQ,GACR4B,aAAc,CACbF,aAAc7B,EAAM4B,QAAQ,OAMjB2D,EAAmD,SAAAvC,GAC/D,IAAMG,EAAUrD,IADwD,EAGtC0F,mBAAiB,IAHqB,mBAGjEC,EAHiE,KAGtDC,EAHsD,OAI5BF,oBAAkB,GAJU,mBAIjEG,EAJiE,KAIjDC,EAJiD,OAKtCJ,mBAA6B,MALS,mBAKjEK,EALiE,KAKtDC,EALsD,OAMtCN,mBAAiB,IANqB,mBAMjEO,EANiE,KAMtDC,EANsD,OAO5BR,oBAAkB,GAPU,mBAOjES,EAPiE,KAOjDC,EAPiD,OAQhCV,mBAAiB,IARe,mBAQjEW,EARiE,KAQnDC,EARmD,OAStBZ,oBAAkB,GATI,mBASjEa,EATiE,KAS9CC,EAT8C,OAUpCd,oBAAkB,GAVkB,mBAUjEe,EAViE,KAUrDC,EAVqD,OAW5ChB,mBAAgB,IAX4B,mBAWjEiB,EAXiE,KAWzDC,GAXyD,KAalEC,GAAQ,WACbjB,EAAa,IACbE,GAAkB,GAClBE,EAAa,MACbE,EAAa,IACbE,GAAkB,GAClBE,EAAgB,IAChBE,GAAqB,GACrBE,GAAc,GACdE,GAAU,KAGLE,GAAc,WACnBD,KACA3D,EAAMqB,WAuDP,OACC,kBAACwC,EAAA,EAAD,CACCrD,KAAMR,EAAMC,YACZoB,QAASuC,GACTnD,kBAAgB,oBAChBM,SAAS,KACTL,UAAWP,EAAQhD,QAEnB,kBAAC2G,EAAA,EAAD,CAAa5D,GAAG,qBAAhB,kBACA,kBAAC6D,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAM9F,WAAS,EAACU,QAAS,EAAGvB,QAAQ,gBAAgB2D,WAAW,cAC9D,kBAACgD,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GAAI0C,GAAI,GACtB,kBAAC3B,EAAD,CACCV,MAAM,aACND,MAAOc,EACPyB,MAAOvB,EACPwB,SAAU,SAACxC,GACVe,EAAaf,GACbiB,EAAmC,IAAjBjB,EAAMyC,YAI3B,kBAACJ,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GAAI0C,GAAI,GACtB,kBAAC5B,EAAD,CACCnC,GAAG,oBACH0B,MAAM,aACNyC,KArI4B,CACjC,CACCnE,GAAI,EACJyB,MAAOI,EAAWC,UAClBJ,MAAO,cAER,CACC1B,GAAI,EACJyB,MAAOI,EAAWE,SAClBL,MAAO,aA6HH0C,UAAU,EACVH,SAAU,SAACpG,GACV+E,EAAa/E,OAnEc,WACjC,GAAI8E,EACH,OAAQA,EAAUlB,OACjB,KAAKI,EAAWC,UACf,OACC,kBAACgC,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GAAI0C,GAAI,GACtB,kBAAC3B,EAAD,CACCV,MAAM,aACND,MAAOoB,EACPmB,MAAOjB,EACPkB,SAAU,SAACxC,GACVqB,EAAarB,GACbuB,EAAmC,IAAjBvB,EAAMyC,YAM7B,KAAKrC,EAAWE,SACf,OACC,kBAAC+B,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,IACd,kBAACW,EAAD,CACCN,MAAM,UACNuC,SAAU,SAACI,GACVb,GAAUa,OAKf,QACC,OAAO,KAKV,OAAO,KAoCHC,GACD,kBAACR,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GAAI0C,GAAI,GACtB,kBAAC3B,EAAD,CACCV,MAAM,gBACND,MAAOwB,EACPe,MAAOb,EACPc,SAAU,SAACxC,GACVyB,EAAgBzB,GAChB2B,EAAsC,IAAjB3B,EAAMyC,YAI9B,kBAACJ,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,IACd,kBAACkD,EAAA,EAAD,CACCC,QACC,kBAACC,EAAA,EAAD,CACCC,QAASrB,EACTY,SAAU,SAACU,GACVrB,EAAcqB,EAAMC,OAAOF,UAE5BjD,MAAM,WACN7C,MAAM,YAGR8C,MAAM,gBAKV,kBAACmD,EAAA,EAAD,CAAerE,UAAWsE,kBAAK7E,EAAQpB,eACtC,kBAACiF,EAAA,EAAD,CAAM9F,WAAS,EAACU,QAAS,EAAGvB,QAAQ,eAAe2D,WAAW,cAC7D,kBAACgD,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GACd,kBAAC0D,EAAA,EAAD,CAAQ7D,QAASwC,GAAasB,QAAQ,WAAWpG,MAAM,UAAU+B,WAAS,GAA1E,WAID,kBAACmD,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GACd,kBAAC0D,EAAA,EAAD,CACC7D,QA3He,WACpB,IAAMiD,EAAmB,CACxBc,KAAM1C,EACNI,UAAYA,GAAaA,EAAUlB,OAAU,GAC7CoB,UAAWA,EACXU,OAAQA,EACRN,aAAcA,EACdI,WAAYA,GAGbI,KACA3D,EAAMoF,SAASf,IAiHVa,QAAQ,YACRpG,MAAM,UACN+B,WAAS,GAJV,uBAeN0B,EAAkBd,aAAe,CAChCxB,aAAa,GChNd,IAAMqC,EAAiBH,IAAWC,GAAGE,eAAeA,eAW9CxF,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,SAAS,QAEbC,OAAO,CACHC,MAAM,SACNC,QAAQ,SACRC,MAAM,OACNC,WAAY,SAEhBC,cAAe,CACXC,QAAS,MACTC,UAAU,MACVL,QAAQ,SACRC,MAAM,QAEVO,kBAAmB,CACfC,SAAU,YAEdI,UAAW,CACPC,aAAa,OACbC,YAAY,OACZd,MAAO,OACPW,UAAW,SAEfU,YAAa,CACTjB,UAAWV,EAAM4B,QAAQ,GACzBC,aAAc7B,EAAM4B,QAAQ,GAC5BR,YAAa,MACbN,SAAU,OACVgB,MAAO,WAEXC,aAAc,CACVF,aAAc7B,EAAM4B,QAAQ,GAC5BlB,UAAWV,EAAM4B,QAAQ,GACzBI,eAAe,SACf1B,MAAO,QAEX2B,SAAS,CACLC,WAAY,QAEhBC,aAAc,CACV7B,MAAM,IACN8B,YAAY,GACZC,OAAQ,oBACRP,MAAO,UACPQ,gBAAiB,WAErBC,aAAc,CACVjC,MAAM,IACNkC,WAAW,IAEfC,YAAa,CACTC,SAAU,WACVhB,MAAO1B,EAAM4B,QAAQ,GACrBL,IAAKvB,EAAM4B,QAAQ,GACnBE,MAAO9B,EAAM2C,QAAQC,KAAK,SAKrByF,EAAwD,SACpErF,GACkB,IAEXC,EAEAD,EAFAC,YACAC,EACAF,EADAE,GAGEC,EAAUrD,IANF,EAQgBwI,WAAuB,IARvC,mBAQPC,EARO,KAQEC,EARF,KAUdF,YAAgB,WACbE,EAAWxF,EAAMuF,UAClB,CAACvF,EAAMuF,UAET,IAAM5B,EAAQ,WAChB6B,EAAW,KAkBT,OACI,gBAAC3B,EAAA,EAAD,CACI3D,GAAIA,EACJM,KAAMP,EACNQ,kBAAgB,cAChBC,UAAWP,EAAQhD,OACnBwD,MAAO,CAACC,OAAQ,MAChBC,WAAW,EACXE,SAAY,MAEZ,2BACI,gBAACiD,EAAA,EAAD,CAAM9F,WAAS,EAACwC,UAAWP,EAAQjC,UAAWb,QAAQ,aAAa2D,WAAW,aAAaC,UAAU,UACjG,gBAAC+C,EAAA,EAAD,CAAMjG,MAAI,GACN,gBAAC+F,EAAA,EAAD,CAAapD,UAAWP,EAAQxB,YAAauC,mBAAmB,EAAMhB,GAAG,eAAzE,WACaF,EAAMyF,OACf,gBAACC,EAAA,EAAD,CAAYvE,aAAW,QAAQT,UAAWP,EAAQV,YAAa2B,QAASpB,EAAMqB,SAC1E,gBAAC,IAAD,SAIZ,gBAAC2C,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,IACX,gBAACwC,EAAA,EAAD,CAAerD,UAAWP,EAAQ3C,eAC9B,gBAACwG,EAAA,EAAD,CAAM9F,WAAS,EAACb,QAAQ,SAASiE,aAAa,WAClE,gBAAC0C,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,IACd,gBAAC,EAAD,CACCK,MAAM,UACND,MAAO4D,EACPI,WAAW,EACXC,KAAM,GACNzB,SAAU,SAACxC,GACV6D,EAAW7D,SAME,gBAACoD,EAAA,EAAD,CAAerE,UAAWP,EAAQpB,cAC9B,gBAACkG,EAAA,EAAD,CAAQvE,UAAWP,EAAQhB,aAAc+F,QAAQ,YAAYpG,MAAM,YAAYsC,QA1CtF,WACnBuC,IACA3D,EAAMqB,YAwCoB,UAIA,gBAAC4D,EAAA,EAAD,CAAQvE,UAAWP,EAAQZ,aAAc2F,QAAQ,YAAYpG,MAAM,UAAUsC,QAxDhF,WACvB,IAAMiD,EAAY,CACjBoB,OAAQzF,EAAMyF,OACdF,QAASA,GAAW,IAGrB5B,IACA3D,EAAMoF,SAASf,KAiDW,cAa5BgB,EAAmB5D,aAAe,CAC9BxB,aAAa,EACbC,GAAI,WACJuF,OAAQ,GACRF,QAAS,I,+TCnKb,IACMM,GAAY,qBAEZC,GAAY,CAChBC,YAAaF,GACbG,aAAc,GAEVC,GAAe,CACnBhJ,KAAM,CACJ,sBAAuB,CACrB6B,MAVa,iBAYf,8BAA+B,CAC7BoH,kBAAmBL,IAErB,2BAA4B,CAC1B,aAAcC,GACd,mBAAoBA,GACpB,yB,uVAAyB,CAAzB,GACKA,GADL,CAEEC,YAlBiB,0BA6CnBjJ,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJkJ,QAAS,OACTjJ,SAAU,QAEZkJ,YAAa,CACX9I,MAAO,QAETsE,MAAO,CACL9D,SAAS,QAEXuI,OAAQ,CACN3I,UAAWV,EAAM4B,QAAQ,GACzBU,gBAAiB,SAEnBgH,YAAa,CACX5I,UAAWV,EAAM4B,QAAQ,IAE3B2H,KAAM,CACJnH,YAAapC,EAAM4B,QAAQ,KAC3BE,MAAO+G,IAETW,WAAY,CACVpI,YAAapB,EAAM4B,QAAQ,IAE7B6H,WAAY,CACVrI,YAAapB,EAAM4B,QAAQ,IAE7B8H,aAAc,CACZtI,YAAapB,EAAM4B,QAAQ,KAE7B+H,WAAY,CACVvI,YAAapB,EAAM4B,QAAQ,KAE7BgI,WAAY,CACVxI,YAAapB,EAAM4B,QAAQ,QAKzBiI,GAAsBC,YAAWb,GAAXa,CAAyBC,KAExCC,GAAgD,SAAChH,GAC5D,IAAMuE,EAAY,YAAOvE,EAAMqE,MAEzBlE,EAAUrD,KAEVmK,EAAa3B,IAAM4B,OAAyB,MAL4C,EAMzE5B,IAAM9C,SAAS,GAA7B2E,EANuF,oBAqH9F,OACE,yBAAKzG,UAAWP,EAAQiG,aACtB,kBAACgB,EAAA,EAAD,CACEtI,MAAM,cACN4B,UAAWP,EAAQyB,MACnByF,IAAKJ,EACLK,QAAStH,EAAME,GACfgE,MAAOlE,EAAMkE,OAEZlE,EAAM4B,OAET,kBAAC2F,EAAA,EAAD,CACE7G,UAAWP,EAAQkG,OACnB1E,MAAO3B,EAAM2B,MACb6F,YAAa,SAAA7F,GAEX,OADA8F,QAAQC,IAAI,UAAU/F,GAChB,GAAN,OAAU3B,EAAMmG,UAElBhC,SA/HW,SACfwD,GAEA,IAAMC,EACJrD,EAAMsD,KAAK,SAAA9J,GAAI,OAAIA,EAAK4D,QAAUgG,EAAE7C,OAAOnD,QACzC3B,EAAMmE,UACRnE,EAAMmE,SAASyD,IA0HbE,SAAU9H,EAAM8H,SAChBC,MACE,kBAAClB,GAAD,CACE3G,GAAIF,EAAME,GACViF,KAAMnF,EAAME,GACZgE,MAAOlE,EAAMkE,MACbiD,WAAYA,EACZtG,WAAS,EACTiH,SAAU9H,EAAM8H,WAGpBE,cAAe,kBAAM,kBAAC,KAAD,CAAmBtH,UAAWP,EAAQoG,SAE1DhC,EAAM0D,IAAI,SAAAlK,GAAI,OAnIK,SACxBiC,EACAkI,GAEA,GAAIlI,EAAMmI,kBAER,OADAV,QAAQC,IAAI,qBACL1H,EAAMmI,kBAAkBD,GAGjC,IAAMJ,GAA8B,IAAnBI,EAAWhI,IAAaF,EAAMsE,SAE/C,OAAwB,IAArB4D,EAAWE,MAEV,kBAACC,EAAA,EAAD,CACEC,IAAKJ,EAAWhI,GAChByB,MAAOuG,EAAWvG,MAClBmG,UAAU,GAETI,EAAWtG,OAGa,IAArBsG,EAAWE,MAEjB,kBAACC,EAAA,EAAD,CACEC,IAAKJ,EAAWhI,GAChByB,MAAOuG,EAAWvG,MAClBmG,SAAUA,GAEV,kBAAC,KAAD,CAAmCpH,UAAWP,EAAQoG,OALxD,IAKiE2B,EAAWtG,OAGjD,IAArBsG,EAAWE,MAEjB,kBAACC,EAAA,EAAD,CACEC,IAAKJ,EAAWhI,GAChByB,MAAOuG,EAAWvG,MAClBmG,SAAUA,EACVpH,UAAWP,EAAQqG,YAEnB,kBAAC,KAAD,CAAmC9F,UAAWP,EAAQoG,OANxD,IAMiE2B,EAAWtG,OAGjD,IAArBsG,EAAWE,MAEjB,kBAACC,EAAA,EAAD,CACEC,IAAKJ,EAAWhI,GAChByB,MAAOuG,EAAWvG,MAClBmG,SAAUA,EACVpH,UAAWP,EAAQsG,YAEnB,kBAAC,KAAD,CAAmC/F,UAAWP,EAAQoG,OANxD,IAMiE2B,EAAWtG,OAGjD,IAArBsG,EAAWE,MAEjB,kBAACC,EAAA,EAAD,CACEC,IAAKJ,EAAWhI,GAChByB,MAAOuG,EAAWvG,MAClBmG,SAAUA,EACVpH,UAAWP,EAAQuG,cAEnB,kBAAC,KAAD,CAAmChG,UAAWP,EAAQoG,OANxD,IAMiE2B,EAAWtG,OAGjD,IAArBsG,EAAWE,MAEjB,kBAACC,EAAA,EAAD,CACEC,IAAKJ,EAAWhI,GAChByB,MAAOuG,EAAWvG,MAClBmG,SAAUA,EACVpH,UAAWP,EAAQwG,YAEnB,kBAAC,KAAD,CAAmCjG,UAAWP,EAAQoG,OANxD,IAMiE2B,EAAWtG,OAGjD,IAArBsG,EAAWE,MAEjB,kBAACC,EAAA,EAAD,CACEC,IAAKJ,EAAWhI,GAChByB,MAAOuG,EAAWvG,MAClBmG,SAAUA,EACVpH,UAAWP,EAAQyG,YAEnB,kBAAC,KAAD,CAAmClG,UAAWP,EAAQoG,OANxD,IAMiE2B,EAAWtG,OAK5E,kBAACyG,EAAA,EAAD,CACEC,IAAKJ,EAAWhI,GAChByB,MAAOuG,EAAWvG,MAClBmG,SAAUA,GAETI,EAAWtG,OAsCKuG,CAAkBnI,EAAOjC,QAMpDiJ,GAAkBvF,aAAe,CAC/BG,MAAO,GACPD,MAAO,GACPwE,QAAS,GACToC,UAAU,EACVrE,OAAO,EACP4D,UAAU,EACVxD,UAAU,EACVH,SAAU,SAACxC,GACT8F,QAAQC,IAAI/F,K,cCnQH6G,GACP,SAACC,GAAD,MACJ,CACCA,UACA5G,KAAM6G,KAAaC,kBAAkBC,a,gtBCiCxC,IAAMvG,GAAcF,IAAWC,GAAGC,YAAYA,YACxCwG,GAAsB1G,IAAWC,GAAGyG,oBAAoBA,oBACxDvG,GAAiBH,IAAWC,GAAGE,eAAeA,eAEhDwG,GAAiBzI,2GACjB0I,GAAmB1I,qDACnB2I,GAAiB3I,qDACjB4I,GAAoB5I,oFAqBlB6I,GAAiB,sBAEnBC,GAAsB,GAMpBC,GAAarM,YAAW,SAAAC,GAAK,MAAK,CACtCqM,QAAS,CACP/J,gBAAiB,WAEnB4E,MAAO,CACL5E,gBAAiBtC,EAAM2C,QAAQuE,MAAMoF,OAEvCC,KAAM,CACJjK,gBAAiBtC,EAAM2C,QAAQ6J,QAAQC,MAEzCC,QAAS,CACPpK,gBAAiBqK,IAAM,MAEzBpD,KAAM,CACJzI,SAAU,GACVgB,MAAO,WAET8K,YAAa,CACXC,QAAS,GACTzK,YAAapC,EAAM4B,QAAQ,IAE7BkL,QAAS,CACRhL,MAAO,UACNqH,QAAS,OACTnF,WAAY,aAIhB,SAAS+I,GAAyB/J,GAChC,IAAMG,EAAUiJ,KACR1I,EAAmDV,EAAnDU,UAAWoJ,EAAwC9J,EAAxC8J,QAASzI,EAA+BrB,EAA/BqB,QAAS6D,EAAsBlF,EAAtBkF,QAAY8E,EAFV,YAEoBhK,EAFpB,6CAIvC,OACE,gBAACiK,EAAA,EAAD,eACEvJ,UAAWsE,kBAAK7E,EAAQ+E,GAAUxE,GAClCwJ,mBAAiB,kBACjBJ,QACE,wBAAM5J,GAAG,kBAAkBQ,UAAWP,EAAQ2J,SAC3CA,GAGLK,OAAQ,CACN,gBAACzE,EAAA,EAAD,CAAY4C,IAAI,QAAQnH,aAAW,QAAQrC,MAAM,UAAUsC,QAASC,GAClE,gBAAC,IAAD,CAAWX,UAAWP,EAAQoG,UAG9ByD,IAYH,IAAMrB,GAAb,YAIC,WAAY3I,GAAmC,IAAD,uBAC7C,4CAAMA,KA8JP2D,MAAQ,WACP,EAAKyG,SAAS,CACbC,oBAAqB,GACrBC,qBAAsB,GACtBC,cAAe,KACfC,YAAa,GACbC,kBAAkB,EAClBC,SAAU,KACVC,KAAM,GACNC,WAAW,EACXC,UAAW,KACXC,cAAe,GACfC,gBAAgB,EAChBC,sBAAuB,GACvBC,YAAa,GACbC,kBAAkB,EAClBC,wBAAyB,GACzBC,OAAQ,GACRC,aAAa,EACbC,YAAa,GACbC,kBAAkB,EAClBC,qBAAsB,GACtBC,0BAA0B,EAC1BC,2BAA2B,EAC3BC,4BAA4B,EAC5BC,sBAAsB,EACtBC,gBAAiB,GACjBC,SAAU,GACVC,SAAU,GACVC,eAAgB,GAChBC,eAAgB,GAChB1G,QAAS,GACTE,OAAQ,GACRyG,sBAAsB,EACtBC,oBAAoB,EACpBC,wBAAwB,EACxBC,SAAS,EACT9D,UAAU,EACV+D,iBAAiB,KArM2B,EAyM9CC,cAAgB,SAAC9J,EAAmBd,GACnC,EAAKyI,SAAS,SAAAoC,GAAK,aACfA,EADe,eAEjB/J,EAAYd,OA5M+B,EAgN9C8K,cAAgB,SAAChK,EAAmByB,GACnC,EAAKkG,SAAS,SAAAoC,GAAK,aACfA,EADe,eAEjB/J,EAAYyB,OAnN+B,EAuN9CwI,eAAiB,SAACC,GACd,EAAKH,MAAMF,iBAAiB,EAAKM,mBAEpC,EAAKJ,MAAMK,aAAa5E,IAAI,SAAAlK,GAC3B,GAAGA,EAAK4O,MAAQA,EAAI,CACnB,IAAMd,EAAkB9N,EA8BxB,GA7BA0J,QAAQC,IAAI,oBAAoBmE,GAEhC,EAAKzB,SAAS,CACbyB,gBAAiBA,EACjBxB,oBAAqBwB,EAAgB1G,KACrCmF,qBAAsBuB,EAAgBc,IACtChC,KAAMkB,EAAgBlB,KACtBH,YAAaqB,EAAgB1G,KAC7BuF,SAAUmB,EAAgBhK,KAC1BuJ,OAAQS,EAAgBiB,aACxBxB,YAAaO,EAAgBP,YAC7BQ,SAAUD,EAAgBC,SAC1BC,SAAUF,EAAgBE,SAC1BC,eAAgBH,EAAgBG,eAChCC,eAAgBJ,EAAgBI,iBAG9BJ,EAAgBkB,OAAO3I,OAAS,EAClC,EAAKgG,SAAS,CACbU,cAAee,EAAgBkB,OAAO,GAAGlL,KACzCoJ,YAAaY,EAAgBkB,OAAO,GAAGC,QAGxC,EAAK5C,SAAS,CACbU,cAAe,GACfG,YAAa,KAIZgC,OAAOC,QAAQrB,EAAgBsB,iBAAiB/I,OAAS,GAAKyH,EAAgBsB,gBAAgBC,cAAgBH,OAAO,CACvHxF,QAAQC,IAAI,kBAAmBmE,EAAgBsB,iBAC/C,IAGIE,EAHEC,EAAiBzB,EAAgBsB,gBACjCI,EAAuB1B,EAAgB2B,uBACvCC,EAAiB,GAGvBR,OAAOS,KAAKJ,GAAgBrF,IAAI,SAACK,EAAI3G,GAClC8F,QAAQC,IAAIY,EAAKgF,EAAehF,GAAK3G,GACrC,IAAM0C,EAAY,GAClBA,EAAI,KAAWiE,EACfjE,EAAI,aAAmBiJ,EAAehF,GAEtCmF,EAAQE,KAAKtJ,KAGhB4I,OAAOS,KAAKH,EAAqBK,YAAY3F,IAAI,SAACK,EAAI3G,GACrD,IAAMiM,EAAaL,EAAqBK,WACxCnG,QAAQC,IAAI,uBAAuBY,EAAKsF,EAAWtF,GAAK3G,GAExD0L,EAAaI,EAAQxF,IAAI,SAAAlK,GAcxB,OAbGA,EAAKoH,MAAQmD,IACZsF,EAAWtF,GAAKzG,MAClB9D,EAAI,UAAgB6P,EAAWtF,GAAKzG,KACpC9D,EAAI,UAAgB,YACpBA,EAAI,OAAa,IACR6P,EAAWtF,GAAKuF,OACzB9P,EAAI,UAAgB,WACpBA,EAAI,UAAgB,GACpBA,EAAI,OAAa6P,EAAWtF,GAAKuF,OAK5B9P,MAMTwP,EAAqBjJ,SAAS2D,IAAI,SAAAlK,GAEjCsP,EAAaA,EAAWpF,IAAI,SAAA6F,GAE3B,OADAA,EAAK,WAAiBA,EAAM3I,MAAQpH,EAC7B+P,MAMT,EAAK1D,SAAS,CACboB,qBAAsB6B,SAIvB,EAAKjD,SAAS,CACboB,qBAAsB,KAIxB,EAAKe,cAAc,wBAAwB,GAC3C,EAAKA,cAAc,sBAAsB,GACzC,EAAKA,cAAc,0BAA0B,OAxTF,EA6T9CK,iBAAmB,WAClB,IAAMmB,EAAM/E,GAAiB,EAAKwD,MAAMX,gBAAX,IAC7BmC,MAAMD,EAAK,CACPtI,OAAQ,MACRwI,QAAS,CAAC,eAAe,sBAC1BC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC3BF,KAAK,SAAAC,GACN1G,QAAQC,IAAI,kCAAmCyG,GAC/CA,EAAQ,QAAc,GACtBH,MAAMD,EAAK,CACPtI,OAAQ,QACRwI,QAAS,CAAC,eAAe,oBACzBI,KAAMC,KAAKC,UAAUJ,KACtBD,KAAK,SAAAC,GACP1G,QAAQC,IAAI,4BAA6ByG,KACvCK,MAAM,SAAAtK,GACRuD,QAAQC,IAAI,2BAA4BxD,OAEvCsK,MAAM,SAAAtK,GACRuD,QAAQC,IAAI,yBAA0BxD,MAhVM,EAuV9CuK,4BAA8B,WAC7B,IAAMC,EAA0B,GACxBlD,EAAyB,EAAKgB,MAA9BhB,qBAyFR,OAvFA/D,QAAQC,IAAI,uBAAwB8D,GAEpCA,EAAqBvD,IAAI,SAAC0G,EAAOC,GAChC,OAAQD,EAAM9L,WACb,KAAKd,EAAWC,UACf0M,EAASf,KACR,gBAAC3J,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GAAI+G,IAAKsG,GACvB,gBAAC5K,EAAA,EAAD,CACC9F,WAAS,EACTU,QAAS,EACTvB,QAAQ,gBACR2D,WAAW,YAEX,gBAACgD,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,IACd,gBAAC,GAAD,CACCK,MAAO+M,EAAMxJ,KACbtD,KAAM8M,EAAM5L,UACZpB,MAAOgN,EAAMxL,aACbe,OAAO,EACPC,SAAU,SAACxC,GACV8F,QAAQC,IAAI/F,OAIf,gBAACqC,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,EAAGb,UAAWsE,kBAAK,0BACjC,gBAACU,EAAA,EAAD,CACCvE,aAAW,SACXC,QAAS,WACR,EAAKyN,0BAA0BD,KAGhC,gBAAC,IAAD,WAML,MACD,KAAK7M,EAAWE,SACf,IAAM6M,EAAkCH,EAAMlL,OAAOwE,IAAI,SAAClK,EAAMgR,GAC/D,MAAO,CACN7O,GAAI6O,EACJpN,MAAO5D,EACP6D,MAAO7D,KAIT2Q,EAASf,KACR,gBAAC3J,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GAAI+G,IAAKsG,GACvB,gBAAC5K,EAAA,EAAD,CACC9F,WAAS,EACTU,QAAS,EACTvB,QAAQ,gBACR2D,WAAW,YAEX,gBAACgD,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,IACd,gBAAC,GAAD,CACCrB,GAAE,qBAAgB0O,GAClBhN,MAAO+M,EAAMxJ,KACbd,KAAMyK,EACNnN,MAAOgN,EAAMxL,aACbe,OAAO,EACPI,SAAUqK,EAAMpL,WAChBY,SAAU,SAACpG,GACV,EAAKwO,cAAc,gBAAiBxO,OAIvC,gBAACiG,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,EAAGb,UAAWsE,kBAAK,0BACjC,gBAACU,EAAA,EAAD,CACCvE,aAAW,SACXC,QAAS,WACR,EAAKyN,0BAA0BD,KAGhC,gBAAC,IAAD,cAYDF,GAlbsC,EAwb9CG,0BAA4B,SAACG,GAC5B,IAAMC,EAA0BC,iBAC/B,EAAK1C,MAAMhB,qBACX,SAAC2D,EAAYJ,GACZ,OAAOA,IAAUC,IAInB,EAAK5E,SAAS,CACboB,qBAAsByD,KAjcsB,EAwc9CG,wBAA0B,WACzB,IAAMjC,EAAuB,GACvBS,EAAkB,GAClBtJ,EAAkB,GACpByJ,EAAc,GACdsB,EAAoB,GACpBC,EAAqB,GACrBC,EAAqB,GAEO,KAA7B,EAAK/C,MAAM1B,eAAmD,KAA3B,EAAK0B,MAAMvB,aAChD,EAAKb,SAAS,CACbW,gBAAgB,EAChBC,sBAAuB,6BAIO,KAA7B,EAAKwB,MAAM1B,eAAmD,KAA3B,EAAK0B,MAAMvB,aAChD,EAAKb,SAAS,CACbc,kBAAkB,EAClBC,wBAAyB,wBAI3BzJ,EAAWuG,IAAI,SAAAlK,GACXA,EAAK4D,QAAU,EAAK6K,MAAM1B,gBAC5BwE,EAAavR,EAAK+D,KAClByN,EAAaxR,EAAK8D,QAIpB,EAAK2K,MAAMhB,qBAAqBvD,IAAI,SAAAlK,GACnCoP,EAAgBpP,EAAKoH,MAAQpH,EAAKoF,aAE/BpF,EAAKwF,YACPe,EAASqJ,KAAK5P,EAAKoH,MAGE,aAAnBpH,EAAK8E,UACP+K,EAAW7P,EAAKoH,MAAQ,CACvB,KAAQpH,EAAK0F,QAGdmK,EAAW7P,EAAKoH,MAAQ,CACvB,KAAQpH,EAAKgF,aAKhB,IAKIyM,EALEhC,EAAyB,CAC9B,WAAcI,EACd,SAAYtJ,GAKb,GAAgC,OAA7B,EAAKkI,MAAMjC,mBACP,CACQ,EAAKiC,MAAMX,gBAAgB4D,QAAzC,IACIC,EAAY,EAAKlD,MAAMX,gBAAgB6D,UAC3CA,EAAUA,EAAUtL,OAAO,GAAK,EAAKoI,MAAM7B,KAC3C,IAAIgF,EAAO,GACXD,EAAUE,QAAQ,SAAA7R,GACL,KAAT4R,EACFA,GAAc5R,EAEd4R,EAAOA,EAAO,IAAM5R,IAMtByR,EAAyB,CACxB,QAHSG,EAIT,UAAaD,EACb,KAAQ,EAAKlD,MAAMhC,YACnB,KAAQ,EAAKgC,MAAM7B,KACnB,KAAQ,EAAK6B,MAAM9B,SACnB,YAAe,EAAK8B,MAAMlB,YAC1B,UAAa,GACb,SAAY,GACZ,gBAAmB,GACnB,gBAAmB6B,EACnB,uBAA0BK,EAC1B,SAAY,EAAKhB,MAAMV,SACvB,SAAY,EAAKU,MAAMT,SACvB,eAAkB,EAAKS,MAAMR,eAC7B,eAAkB,EAAKQ,MAAMP,eAC7B,aAAgB,EAAKO,MAAMpB,OAC3B,OAAU,EAAKoB,MAAMX,gBAAgBgE,OACrC,UAAa,EAAKrD,MAAMX,gBAAgBiE,UACxC,QAAW,IAGM,KAAfP,GAA+C,IAA1B,EAAK/C,MAAMvB,cAClCuE,EAAsB,OAAa,CAAC,CACnC,KAAQD,EACR,OAAU,EAAK/C,MAAMvB,YACrB,WAAcqE,KAuChBD,EAAYG,EAAsB,UAAcA,EAAsB,UAAcpL,OAAO,GAC3FqD,QAAQC,IAAI,cAAc8H,EAAsB,WAChDA,EAAsB,UAAcO,MAEpChC,EAAMhF,GAAmBsG,EAEzB5H,QAAQC,IAAI,2BAA4B8H,GACxC/H,QAAQC,IAAI,QAASqG,GAErB,EAAK3D,SAAS,CACbiC,SAAS,IAGV,EAAK2D,oBAAoBR,EAAuBzB,KA7lBJ,EAomB9CkC,sBAAwB,WACvB,IAGIlC,EAHEZ,EAAuB,GACvBS,EAAkB,GAClBtJ,EAAkB,GAEpBgL,EAAqB,GACrBC,EAAqB,GAEzB7N,EAAWuG,IAAI,SAAAlK,GACXA,EAAK4D,QAAU,EAAK6K,MAAM1B,gBAC5BwE,EAAavR,EAAK+D,KAClByN,EAAaxR,EAAK8D,QAIY,KAA7B,EAAK2K,MAAM1B,eAAmD,KAA3B,EAAK0B,MAAMvB,aAChD,EAAKb,SAAS,CACbW,gBAAgB,EAChBC,sBAAuB,6BAIO,KAA7B,EAAKwB,MAAM1B,eAAmD,KAA3B,EAAK0B,MAAMvB,aAChD,EAAKb,SAAS,CACbc,kBAAkB,EAClBC,wBAAyB,wBAI3B,EAAKqB,MAAMhB,qBAAqBvD,IAAI,SAAAlK,GACnCoP,EAAgBpP,EAAKoH,MAAQpH,EAAKoF,aAE/BpF,EAAKwF,YACPe,EAASqJ,KAAK5P,EAAKoH,MAGE,aAAnBpH,EAAK8E,UACP+K,EAAW7P,EAAKoH,MAAQ,CACvB,KAAQpH,EAAK0F,QAGdmK,EAAW7P,EAAKoH,MAAQ,CACvB,KAAQpH,EAAKgF,aAKhB,IAKImN,EALE1C,EAAyB,CAC9B,WAAcI,EACd,SAAYtJ,GAKTmL,EAAU,EAAKjD,MAAMX,gBAAgB4D,QACrCC,EAAY,EAAKlD,MAAMX,gBAAgB6D,UAC3CA,EAAUA,EAAUtL,OAAO,GAAK,EAAKoI,MAAM7B,KAC3C,IAAIgF,EAAO,GACXD,EAAUE,QAAQ,SAAA7R,GACL,KAAT4R,EACFA,GAAc5R,EAEd4R,EAAOA,EAAO,IAAM5R,IAItB0R,EAAUE,GAEVO,EAAuB,EAAK1D,MAAMX,iBACd,QAAc4D,EAClCS,EAAoB,UAAgBR,EACpCQ,EAAoB,KAAW,EAAK1D,MAAMhC,YAC1C0F,EAAoB,KAAW,EAAK1D,MAAM7B,KAC1CuF,EAAoB,KAAW,EAAK1D,MAAM9B,SAC1CwF,EAAoB,YAAkB,EAAK1D,MAAMlB,YACjD4E,EAAoB,gBAAsB/C,EAC1C+C,EAAoB,uBAA6B1C,EACjD0C,EAAoB,SAAe,EAAK1D,MAAMV,SAC9CoE,EAAoB,SAAe,EAAK1D,MAAMT,SAC9CmE,EAAoB,eAAqB,EAAK1D,MAAMR,eACpDkE,EAAoB,eAAqB,EAAK1D,MAAMP,eACpDiE,EAAoB,aAAmB,EAAK1D,MAAMpB,OAClD8E,EAAoB,QAAc,GAEhB,KAAfX,GAA+C,IAA1B,EAAK/C,MAAMvB,cAClCiF,EAAoB,OAAa,CAAC,CACjC,KAAQX,EACR,OAAU,EAAK/C,MAAMvB,YACrB,WAAcqE,KAIhBvB,EAAM/E,GAAiBkH,EAAoB,IAE3CzI,QAAQC,IAAI,yBAA0BwI,GACtCzI,QAAQC,IAAI,QAASqG,GAErB,EAAK3D,SAAS,CACbiC,SAAS,IAGV,EAAK8D,kBAAkBD,EAAqBnC,IAzsBC,EA+sB9CqC,sBAAwB,SAAC/L,EAAW0J,GAEnC,IAAIxI,EAAU,CACb8K,QAAShM,GAGV2J,MAAMD,EAAK,CACPtI,OAAQ,QACRwI,QAAS,CAAC,eAAe,oBACzBI,KAAMC,KAAKC,UAAUhJ,KACtB2I,KAAK,SAAAC,GACP1G,QAAQC,IAAI,sBAAuByG,GAEnC,EAAK/D,SAAS,CACbiC,SAAS,IAGVlD,GAAcF,GAAoB5E,EAAKyL,UAAU,GAAK5G,GAGtD,EAAKkB,SAAS,CACbuB,4BAA4B,MAE3B6C,MAAM,SAAAtK,GACRuD,QAAQC,IAAI,gCAAiCxD,GAC7C,EAAKkG,SAAS,CACblF,QAAS,QACToL,gBAAiBpM,OA1uB0B,EAkvB9CqM,yBAA2B,WAC1B,EAAKnG,SAAS,CACbkC,iBAAiB,IAElB,IAGIyB,EAHEZ,EAAuB,GACvBS,EAAkB,GAClBtJ,EAAkB,GAEpBgL,EAAqB,GACrBC,EAAqB,GAEzB7N,EAAWuG,IAAI,SAAAlK,GACXA,EAAK4D,QAAU,EAAK6K,MAAM1B,gBAC5BwE,EAAavR,EAAK+D,KAClByN,EAAaxR,EAAK8D,QAIY,KAA7B,EAAK2K,MAAM1B,eAAmD,KAA3B,EAAK0B,MAAMvB,aAChD,EAAKb,SAAS,CACbW,gBAAgB,EAChBC,sBAAuB,6BAIO,KAA7B,EAAKwB,MAAM1B,eAAmD,KAA3B,EAAK0B,MAAMvB,aAChD,EAAKb,SAAS,CACbc,kBAAkB,EAClBC,wBAAyB,wBAI3B,EAAKqB,MAAMhB,qBAAqBvD,IAAI,SAAAlK,GAIlCoP,EAAgBpP,EAAKoH,MAAQpH,EAAKoF,aAGhCpF,EAAKwF,YACPe,EAASqJ,KAAK5P,EAAKoH,MAGE,aAAnBpH,EAAK8E,UACP+K,EAAW7P,EAAKoH,MAAQ,CACvB,KAAQpH,EAAK0F,QAGdmK,EAAW7P,EAAKoH,MAAQ,CACvB,KAAQpH,EAAKgF,aAKhB,IAKImN,EALE1C,EAAyB,CAC9B,WAAcI,EACd,SAAYtJ,GAKTmL,EAAU,EAAKjD,MAAMX,gBAAgB4D,QACrCC,EAAY,EAAKlD,MAAMX,gBAAgB6D,UAC3CA,EAAUA,EAAUtL,OAAO,GAAK,EAAKoI,MAAM7B,KAC3C,IAAIgF,EAAO,GACXD,EAAUE,QAAQ,SAAA7R,GACL,KAAT4R,EACFA,GAAc5R,EAEd4R,EAAOA,EAAO,IAAM5R,IAItB0R,EAAUE,GAEVO,EAAuB,EAAK1D,MAAMX,iBACd,QAAc4D,EAClCS,EAAoB,UAAgBR,EACpCQ,EAAoB,KAAW,EAAK1D,MAAMhC,YAC1C0F,EAAoB,KAAW,EAAK1D,MAAM7B,KAC1CuF,EAAoB,KAAW,EAAK1D,MAAM9B,SAC1CwF,EAAoB,YAAkB,EAAK1D,MAAMlB,YACjD4E,EAAoB,gBAAsB/C,EAC1C+C,EAAoB,uBAA6B1C,EACjD0C,EAAoB,SAAe,EAAK1D,MAAMV,SAC9CoE,EAAoB,SAAe,EAAK1D,MAAMT,SAC9CmE,EAAoB,eAAqB,EAAK1D,MAAMR,eACpDkE,EAAoB,eAAqB,EAAK1D,MAAMP,eACpDiE,EAAoB,aAAmB,EAAK1D,MAAMpB,OAEhC,KAAfmE,GAA+C,IAA1B,EAAK/C,MAAMvB,cAClCiF,EAAoB,OAAa,CAAC,CACjC,KAAQX,EACR,OAAU,EAAK/C,MAAMvB,YACrB,WAAcqE,KAIhBvB,EAAM/E,GAAiBkH,EAAoB,IAE3CzI,QAAQC,IAAI,yBAA0BwI,GACtCzI,QAAQC,IAAI,qBAAsB,EAAK8E,MAAMX,iBAC7CpE,QAAQC,IAAI,QAASqG,GAErB,EAAKyC,uBAAuBtC,KAAK,SAAAC,GAIhC,GAHA,EAAK/D,SAAS,CACbiC,SAAS,IAEP8B,EAAS,CACX,IAAM1K,EAAgB0K,EAASlG,IAAI,SAAAlK,GAClC,MAAO,CACNmC,GAAInC,EAAK4O,IACThL,MAAO5D,EAAK4O,IACZ/K,MAAO7D,EAAKoH,KACZtD,KAAM9D,EAAK8D,KACXuG,MAAOrK,EAAKqK,SAGd,EAAKgC,SAAS,CACbqG,iBAAkBhN,EAClBoJ,aAAcsB,EACdvC,sBAAsB,OAKtB0C,KAAKC,UAAU2B,KAA0B5B,KAAKC,UAAU,EAAK/B,MAAMX,kBACrE,EAAKzB,SAAS,CACbiC,SAAS,IAGV,EAAK+D,sBAAsBF,EAAqBnC,KAEhD5E,GAAcF,GAAoBiH,EAAqBJ,UAAU,GAAK5G,GAGtE,EAAKkB,SAAS,CACbuB,4BAA4B,MA33Be,EAm4B9C+E,qBAAuB,WACtB,EAAKtG,SAAS,CACbqB,0BAA0B,KAr4BkB,EA44B9CkF,yBAA2B,WAC1B,EAAKvG,SAAS,CACbqB,0BAA0B,KA94BkB,EAq5B9CmF,2BAA6B,WAC5B,EAAKxG,SAAS,CACbuB,4BAA4B,KAv5BgB,EA85B9CkF,0BAA4B,WAC3B,EAAKzG,SAAS,CACbsB,2BAA2B,EAC3BjG,OAAQ,GACRF,QAAS,MAl6BmC,EAy6B9CuL,gBAAkB,WAEjB,EAAK1G,SAAS,CACb2G,cAAc,KA56B8B,EAq7B9CC,0BAA4B,SAAC3M,GAC5B,EAAK+F,SAAS,CACbqB,0BAA0B,EAC1BD,qBAAqB,GAAD,mBAAM,EAAKgB,MAAMhB,sBAAjB,CAAuCnH,OAx7Bf,EA+7B9C4M,2BAA6B,SAAC5M,GAC7B,IAAMoB,EAASpB,EAAKoB,OACdF,EAAUlB,EAAKkB,QACrB,EAAK6E,SAAS,CACbsB,2BAA2B,EAC3BjG,OAAQ,GACRF,QAAS,KAEV,EAAKgH,cAAc9G,EAAQF,IAv8BkB,EA08B9CiL,qBAAuB,WAItB,OAHA,EAAKpG,SAAS,CACbiC,SAAS,IAEH2B,MAAMlF,GAAgB,CACzBrD,OAAQ,MACRwI,QAAS,CAAC,eAAe,sBAC1BC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC3BI,MAAM,SAAAtK,GACPuD,QAAQC,IAAI,6BAA8BxD,MAn9BE,EAu9B9C8L,oBAAsB,SAAC3L,EAAW0J,GAmBjCC,MAAMD,EAAK,CACPtI,OAAQ,OACRwI,QAAS,CAAC,eAAe,oBACzBI,KAAMC,KAAKC,UAAUlK,KACtB6J,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC5BF,KAAK,SAAAC,GACL1G,QAAQC,IAAI,sBAAuByG,GACnC,EAAK/D,SAAS,CACbiC,SAAS,SAGY6E,IAAnB/C,EAASjK,OACX,EAAKkG,SAAS,CACb2G,cAAc,EACd7L,QAAS,QACToL,gBAAiB,sBAGlB,EAAK3M,UAEL,EAAKyG,SAAS,CACbC,oBAAqB,GACrBC,qBAAsB,GACtBC,cAAe,KACfwG,cAAc,EACd7L,QAAS,UACToL,gBAAiB,+BAGlB,EAAKE,uBAAuBtC,KAAK,SAAAC,GAIhC,GAHA,EAAK/D,SAAS,CACbiC,SAAS,IAEP8B,EAAS,CACX,IAAM1K,EAAgB0K,EAASlG,IAAI,SAAAlK,GAClC,MAAO,CACNmC,GAAInC,EAAK4O,IACThL,MAAO5D,EAAK4O,IACZ/K,MAAO7D,EAAKoH,KACZtD,KAAM9D,EAAK8D,KACXuG,MAAOrK,EAAKqK,SAGd,EAAKgC,SAAS,CACbqG,iBAAkBhN,EAClBoJ,aAAcsB,EACdvC,sBAAsB,OAKzB,EAAKjI,WAEJ6K,MAAM,SAAAtK,GACRuD,QAAQC,IAAI,6BAA8BxD,GAC1C,EAAKkG,SAAS,CACblF,QAAS,QACToL,gBAAiBpM,OAniC0B,EAwiC9CiM,kBAAoB,SAAC9L,EAAW0J,GAmB/BC,MAAMD,EAAK,CACPtI,OAAQ,QACRwI,QAAS,CAAC,eAAe,oBACzBI,KAAMC,KAAKC,UAAUlK,KACtB6J,KAAK,SAAAC,GACP1G,QAAQC,IAAI,sBAAuByG,GACnC,EAAK/D,SAAS,CACbiC,SAAS,IAGV,EAAKjC,SAAS,CACbC,oBAAqB,GACrBC,qBAAsB,GACtBC,cAAe,KACfwG,cAAc,EACd7L,QAAS,UACToL,gBAAiB,iCAGlB,EAAKE,uBAAuBtC,KAAK,SAAAC,GAIhC,GAHA,EAAK/D,SAAS,CACbiC,SAAS,IAEP8B,EAAS,CACX,IAAM1K,EAAgB0K,EAASlG,IAAI,SAAAlK,GAClC,MAAO,CACNmC,GAAInC,EAAK4O,IACThL,MAAO5D,EAAK4O,IACZ/K,MAAO7D,EAAKoH,KACZtD,KAAM9D,EAAK8D,KACXuG,MAAOrK,EAAKqK,SAGd,EAAKgC,SAAS,CACbqG,iBAAkBhN,EAClBoJ,aAAcsB,EACdvC,sBAAsB,OAKzB,EAAKjI,UACH6K,MAAM,SAAAtK,GACRuD,QAAQC,IAAI,2BAA4BxD,GACxC,EAAKkG,SAAS,CACblF,QAAS,QACToL,gBAAiB,qBACjBjE,SAAS,OA1mCkC,EA+mC9C8E,kBAAoB,SAAC1L,GACpB,EAAK8G,cAAc,SAAS9G,GAC5B,EAAK8G,cAAc,UAAU,EAAKC,MAAM/G,IACxC,EAAK8G,cAAc,6BAA4B,IA/mC/C,IA0DM6E,EA1DQ,CACb,CACClR,GAAI,EACJyB,MAAO,SACPC,MAAO,SACPC,KAAM,GACNuG,MAAO,IAER,CACClI,GAAI,EACJyB,MAAO,SACPC,MAAO,SACPC,KAAM,GACNuG,MAAO,IAER,CACClI,GAAI,EACJyB,MAAO,SACPC,MAAO,SACPC,KAAM,GACNuG,MAAO,KAsC4CH,IAAI,SAAAlK,GACxD,MAAO,CACN4D,MAAO5D,EAAK4D,MACZC,MAAO7D,EAAK6D,SAMd,EAAK4O,uBAAuBtC,KAAK,SAAAC,GAKhC,GAJA1G,QAAQC,IAAI,4BAA4ByG,GACxC,EAAK/D,SAAS,CACbiC,SAAS,IAEP8B,EAAS,CACX,IAAM1K,EAAgB0K,EAASlG,IAAI,SAAAlK,GAClC,MAAO,CACNmC,GAAInC,EAAK4O,IACThL,MAAO5D,EAAK4O,IACZ/K,MAAO7D,EAAKoH,KACZtD,KAAM9D,EAAK8D,KACXuG,MAAOrK,EAAKqK,SAGd,EAAKgC,SAAS,CACbqG,iBAAkBhN,EAClBoJ,aAAcsB,EACdvC,sBAAsB,OAKzB,IAAMyF,EAlEe,CACpB,CACCnR,GAAI,EACJyB,MAAO,WACPC,MAAO,YAER,CACC1B,GAAI,EACJyB,MAAO,cACPC,MAAO,eAGR,CACC1B,GAAI,EACJyB,MAAO,cACPC,MAAO,eAER,CACC1B,GAAI,EACJyB,MAAO,UACPC,MAAO,WAER,CACC1B,GAAI,EACJyB,MAAO,kBACPC,MAAO,mBAER,CACC1B,GAAI,EACJyB,MAAO,cACPC,MAAO,gBAoCyCqG,IAAI,SAAAlK,GACrD,MAAO,CACNmC,GAAInC,EAAKmC,GACTyB,MAAO5D,EAAK4D,MACZC,MAAO7D,EAAK6D,SAIR0P,EAA+B5P,EAAWuG,IAAI,SAAAlK,GACnD,MAAO,CACNmC,GAAInC,EAAKmC,GACTyB,MAAO5D,EAAK4D,MACZC,MAAO7D,EAAK4D,SAzG+B,OA6G7C,EAAK6K,MAAQ,CACZ+E,gBAAiB,GACjBlH,oBAAqB,GACrBC,qBAAsB,GACtBC,cAAe,KACfC,YAAa,GACbC,kBAAkB,EAClBC,SAAU,GACVC,KAAM,GACNC,WAAW,EACXC,UAAW,KACXC,cAAe,GACfC,gBAAgB,EAChBC,sBAAuB,GACvBC,YAAa,GACbC,kBAAkB,EAClBC,wBAAyB,GACzBC,OAAQ,GACRC,aAAa,EACbC,YAAa,GACbC,kBAAkB,EAClBkF,iBA9D+B,GA+D/BY,aACAC,aACA9F,qBAAsB,GACtBC,0BAA0B,EAC1BE,4BAA4B,EAC5BD,2BAA2B,EAC3B0F,oBACAvF,gBAAiB,GACjBgB,aAAc,GACdf,SAAU,GACVC,SAAU,GACVC,eAAgB,GAChBC,eAAgB,GAChB1G,QAAS,GACTE,OAAQ,GACRyG,sBAAsB,EACtBC,oBAAoB,EACpBC,wBAAwB,EACxBR,sBAAsB,EACtBS,SAAS,EACT9D,UAAU,EACVwI,cAAc,EACd7L,QAAS,GACToL,gBAAiB,GACjBhE,iBAAiB,GA3J2B,EAJ/C,sEAynC+B,IAAD,SAoCxBkF,KAAKhF,MAlCRnC,EAF2B,EAE3BA,oBACAC,EAH2B,EAG3BA,qBACAI,EAJ2B,EAI3BA,SACAF,EAL2B,EAK3BA,YACAC,EAN2B,EAM3BA,iBACAE,EAP2B,EAO3BA,KACAC,EAR2B,EAQ3BA,UACAE,EAT2B,EAS3BA,cACAC,EAV2B,EAU3BA,eACAC,EAX2B,EAW3BA,sBACAC,EAZ2B,EAY3BA,YACAC,EAb2B,EAa3BA,iBACAC,EAd2B,EAc3BA,wBACAC,EAf2B,EAe3BA,OACAC,EAhB2B,EAgB3BA,YACAC,EAjB2B,EAiB3BA,YACAC,EAlB2B,EAkB3BA,iBACAkF,EAnB2B,EAmB3BA,iBACA7E,EApB2B,EAoB3BA,qBACAyF,EArB2B,EAqB3BA,WACAC,EAtB2B,EAsB3BA,WACA7F,EAvB2B,EAuB3BA,yBACAE,EAxB2B,EAwB3BA,2BACAD,EAzB2B,EAyB3BA,0BACAjG,EA1B2B,EA0B3BA,OACAF,EA3B2B,EA2B3BA,QACA2G,EA5B2B,EA4B3BA,qBACAC,EA7B2B,EA6B3BA,mBACAC,EA9B2B,EA8B3BA,uBACAC,EA/B2B,EA+B3BA,QACA9D,EAhC2B,EAgC3BA,SACAwI,EAjC2B,EAiC3BA,aACA7L,EAlC2B,EAkC3BA,QACAoL,EAnC2B,EAmC3BA,gBAGD,OACC,uBAAK5P,UAAWsE,kBAAK,sBACpB,gBAAChB,EAAA,EAAD,CAAM9F,WAAS,EAACU,QAAS,EAAGvB,QAAQ,gBAAgB2D,WAAW,cAC9D,gBAACgD,EAAA,EAAD,CAAM9F,WAAS,EAACb,QAAQ,SAAS2D,WAAW,UAC3C,gBAACgD,EAAA,EAAD,CAAMjG,MAAI,GACRsO,GAAW,gBAACoF,EAAA,EAAD,CAAkB/Q,UAAWsE,kBAAK,yBAGhD,gBAAChB,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,IACd,gBAACmQ,EAAA,EAAD,CAAavQ,aAAW,cACvB,gBAACwQ,EAAA,EAAD,CAAY7S,MAAM,eAAlB,YACA,gBAAC6S,EAAA,EAAD,CAAY7S,MAAM,eAAlB,oBAGF,gBAACkF,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,IACd,gBAACyC,EAAA,EAAD,CAAM9F,WAAS,EAACb,QAAQ,aAAa2D,WAAW,cAC/C,gBAACgD,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,IACd,gBAACoQ,EAAA,EAAD,CAAYjR,UAAWsE,kBAAK,SAAUlG,MAAM,eAA5C,oBAMH,gBAACkF,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,IACd,gBAACyC,EAAA,EAAD,CAAM9F,WAAS,EAACb,QAAQ,gBAAgB2D,WAAW,cAClD,gBAACgD,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GAAI0C,GAAI,GACtB,gBAACD,EAAA,EAAD,CACC9F,WAAS,EACTU,QAAS,EACTvB,QAAQ,gBACR2D,WAAW,cAEX,gBAACgD,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,IACd,gBAAC,GAAD,CACCrB,GAAG,wBACH0B,MAAM,gCACND,MAAO2I,EACPnE,QAASkE,EACThG,KAAMoM,EACNlI,SAAUA,EACVrE,OAAO,EACPI,UAAU,EACVwD,SAAU8D,EACVzH,SAAU,SAACpG,GACV,EAAKwO,cAAc,gBAAiBxO,GACpC,EAAK2O,eAAe3O,EAAKmC,QAI5B,gBAAC8D,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,IACd,gBAACyC,EAAA,EAAD,CACC9F,WAAS,EACTU,QAAS,EACTvB,QAAQ,gBACR2D,WAAW,cAEX,gBAACgD,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GAAI0C,GAAI,GACtB,gBAAC4E,GAAD,CACC3I,GAAG,wBACH0B,MAAM,WACND,MAAO+I,EACPrG,KAAMgN,EACNnN,OAAO,EACP4D,UAAU,EACV3D,SAAU,SAACpG,GACV,EAAKwO,cAAc,WAAYxO,EAAK4D,WAIvC,gBAACqC,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GAAI0C,GAAI,GACtB,gBAAC,GAAD,CACCrC,MAAM,eACND,MAAO6I,EACPtG,MAAOuG,EACPtG,SAAU,SAACxC,GACV,EAAK4K,cAAc,cAAe5K,GAClC,EAAK8K,cACJ,mBACiB,IAAjB9K,EAAMyC,cAOZ,gBAACJ,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,IACd,gBAACyC,EAAA,EAAD,CACC9F,WAAS,EACTU,QAAS,EACTvB,QAAQ,gBACR2D,WAAW,cAEX,gBAACgD,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GAAI0C,GAAI,EAAG2N,GAAI,GAC7B,gBAAC,GAAD,CACChQ,MAAM,OACND,MAAOgJ,EACPzG,MAAO0G,EACPzG,SAAU,SAACxC,GACV,EAAK4K,cAAc,OAAQ5K,GAC3B,EAAK8K,cACJ,YACiB,IAAjB9K,EAAMyC,YAKV,gBAACJ,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GAAI0C,GAAI,EAAG2N,GAAI,GAC7B,gBAAC/I,GAAD,CACC3I,GAAG,oBACH0B,MAAM,aACND,MAAOmJ,EACPzG,KAAMiN,EACNpN,MAAO6G,EACP8G,aAAc7G,EACd7G,SAAU,SAACpG,GACV,EAAKwO,cAAc,YAAaxO,GAChC,EAAKwO,cAAc,gBAAiBxO,EAAK4D,OAEzC,EAAK8K,cACJ,sBACSyE,IAATnT,GAGEkN,EAAY7G,OAAS,GACvB,EAAKqI,cACJ,oBACA,GAIF/K,EAAWuG,IAAI,SAAA6F,GACXA,EAAMnM,QAAU5D,EAAK4D,OACL,eAAfmM,EAAMhM,OACR,EAAK2K,cACJ,oBACCxB,EAAc,KAEhB,EAAKsB,cAAc,0BAA2B,uCAapD,gBAACvI,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GAAI0C,GAAI,EAAG2N,GAAI,GAC7B,gBAAC,GAAD,CACChQ,MAAM,eACND,MAAOsJ,EACP/G,MAAOgH,EACP2G,aAAc1G,EACdhH,SAAU,SAACxC,GACV,EAAK4K,cAAc,cAAe5K,GAEb,KAAlBmJ,EACW,KAAVnJ,GACF,EAAK8K,cACJ,kBACA,GAED,EAAKF,cAAc,wBAAyB,6BAE5C,EAAKE,cACJ,kBACA,GAKF/K,EAAWuG,IAAI,SAAAlK,GACd0J,QAAQC,IAAI,uBAAuB3J,GAChCA,EAAK4D,QAAUmJ,IACA,eAAd/M,EAAK+D,MACP,EAAK2K,cACJ,oBACC9K,EAAQ,KAEV,EAAK8K,cACJ,mBACiB,IAAjB9K,EAAMyC,QAEP,EAAKmI,cAAc,0BAA2B,gCAC9C9E,QAAQC,IAAI,kBAAkB/F,EAAQ,OAMtC,EAAK4K,cAAc,0BAA2B,6BAC9C,EAAKE,cACJ,mBACiB,IAAjB9K,EAAMyC,kBAWhB,gBAACJ,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,IACd,gBAACyC,EAAA,EAAD,CACC9F,WAAS,EACTU,QAAS,EACTvB,QAAQ,gBACR2D,WAAW,cAEX,gBAACgD,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GACd,gBAAC,GAAD,CACCK,MAAM,SACND,MAAOyJ,EACPlH,MAAOmH,EACP1F,WAAW,EACXC,KAAM,EACNzB,SAAU,SAACxC,GACV,EAAK4K,cAAc,SAAU5K,GAC7B,EAAK8K,cACJ,cACiB,IAAjB9K,EAAMyC,YAKV,gBAACJ,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GACd,gBAAC,GAAD,CACCK,MAAM,cACND,MAAO2J,EACPpH,MAAOqH,EACP5F,WAAW,EACXC,KAAM,EACNzB,SAAU,SAACxC,GACV,EAAK4K,cAAc,cAAe5K,GAClC,EAAK8K,cACJ,mBACiB,IAAjB9K,EAAMyC,gBASd,gBAACJ,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GAAI0C,GAAI,GACtB,gBAACD,EAAA,EAAD,CACC9F,WAAS,EACTU,QAAS,EACTvB,QAAQ,gBACR2D,WAAW,cAEX,gBAACgD,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,IACd,gBAACyC,EAAA,EAAD,CACC9F,WAAS,EACTU,QAAS,EACTvB,QAAQ,gBACR2D,WAAW,cAEX,gBAACgD,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,IACd,gBAACoQ,EAAA,EAAD,CAAY7S,MAAM,eAAlB,YAED,gBAACkF,EAAA,EAAD,CACCjG,MAAI,EACJwD,GAAI,GACJb,UAAWsE,kBAAK,sBAEhB,gBAAChB,EAAA,EAAD,CACC9F,WAAS,EACTU,QAAS,EACTvB,QAAQ,gBACR2D,WAAW,aACXN,UAAWsE,kBACV,qCAGD,gBAAChB,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GACd,gBAAC0D,EAAA,EAAD,CACCvE,UAAWsE,kBAAK,YAChB5D,QAAS,kBAAM,EAAK+P,kBAAkB,cAFvC,aAOD,gBAACnN,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GACd,gBAAC0D,EAAA,EAAD,CACCvE,UAAWsE,kBAAK,YAChB5D,QAAS,kBAAM,EAAK+P,kBAAkB,oBAFvC,mBAOD,gBAACnN,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GACd,gBAAC0D,EAAA,EAAD,CACCvE,UAAWsE,kBAAK,YAChB5D,QAAS,kBAAM,EAAK+P,kBAAkB,cAFvC,aAOD,gBAACnN,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GACd,gBAAC0D,EAAA,EAAD,CACCvE,UAAWsE,kBAAK,YAChB5D,QAAS,kBAAM,EAAK+P,kBAAkB,oBAFvC,uBAWL,gBAACnN,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,IACd,gBAACyC,EAAA,EAAD,CACC9F,WAAS,EACTU,QAAS,EACTvB,QAAQ,gBACR2D,WAAW,cAEX,gBAACgD,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,IACd,gBAACoQ,EAAA,EAAD,CAAY7S,MAAM,eAAlB,WAED,gBAACkF,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GAAIb,UAAWsE,kBAAK,qBAClC,gBAAChB,EAAA,EAAD,CACC9F,WAAS,EACTU,QAAS,EACTvB,QAAQ,gBACR2D,WAAW,aACXN,UAAWsE,kBACV,oCAGD,gBAAChB,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GACd,gBAACoQ,EAAA,EAAD,CAAY7S,MAAM,eAAlB,aAID,gBAACkF,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GACd,gBAACoQ,EAAA,EAAD,CAAY7S,MAAM,eAAlB,WAID,gBAACkF,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GACd,gBAACoQ,EAAA,EAAD,CAAY7S,MAAM,eAAlB,gBAYT,gBAACkF,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GAAIuQ,GAAI,GACtB,gBAAC9N,EAAA,EAAD,CAAM9F,WAAS,EAACU,QAAS,EAAGvB,QAAQ,gBAAgB2D,WAAW,cAC9D,gBAACgD,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,IACd,0BACC,gBAACoQ,EAAA,EAAD,CAAYjR,UAAWsE,kBAAK,aAAclG,MAAM,eAAhD,oBAID,4BAED,gBAACkF,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,IACd,gBAACyC,EAAA,EAAD,CACC9F,WAAS,EACTU,QAAS,EACTvB,QAAQ,gBACR2D,WAAW,cAEVwQ,KAAK/C,gCAGR,gBAACzK,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,IACd,gBAAC0D,EAAA,EAAD,CAAQnG,MAAM,UAAUsC,QAASoQ,KAAKd,sBAAtC,6BAMH,gBAAC1M,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GAAIb,UAAWsE,kBAAK,iCAClC,gBAAChB,EAAA,EAAD,CAAM9F,WAAS,EAACU,QAAS,EAAGvB,QAAQ,WAAW2D,WAAW,cACzD,gBAACgD,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GACd,gBAAC0D,EAAA,EAAD,CACCC,QAAQ,YACR9D,QAASoQ,KAAKjB,yBACdzR,MAAM,UACN+B,WAAS,EACTiH,SAAUsE,GALX,oBAUD,gBAACpI,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GACd,gBAAC0D,EAAA,EAAD,CACCC,QAAQ,YACR9D,QAASoQ,KAAKvB,sBACdnR,MAAM,UACN+B,WAAS,EACTiH,SAAUqE,GALX,iBAUD,gBAACnI,EAAA,EAAD,CAAMjG,MAAI,EAACwD,GAAI,GACd,gBAAC0D,EAAA,EAAD,CACCC,QAAQ,YACR9D,QAASoQ,KAAKpC,wBACdtQ,MAAM,UACN+B,WAAS,EACTiH,SAAUoE,GALX,0BAaJ,gBAAC,EAAD,CACCjM,YAAawL,EACbpK,QAASmQ,KAAKb,yBACdvL,SAAUoM,KAAKR,4BAEhB,gBAAC,EAAD,CACC9Q,GAAG,uBACHD,YAAayL,EACbjG,OAAQA,EACRF,QAASA,EACTlE,QAASmQ,KAAKX,0BACdzL,SAAUoM,KAAKP,6BAEhB,gBAAClR,EAAA,EAAD,CACCG,GAAG,mBACHD,YAAa0L,EACbpL,OAAQ4I,GACR9H,QAASmQ,KAAKZ,6BAIf,gBAACmB,EAAA,EAAD,CACOC,aAAc,CACZC,SAAU,SACVC,WAAY,SAEd1R,KAAMuQ,EACNoB,iBAAkB,IAClB9Q,QAASmQ,KAAKV,iBAEd,gBAAC/G,GAAD,CACE1I,QAASmQ,KAAKV,gBACd5L,QAASA,EACT4E,QAASwG,UAzmDtB,GAAuChL,aAinDjC8M,GAAkB,SAAC5F,GAAD,OAAkBA,EAAM6F,mBAE1CC,GAAqB,SAACC,GAAD,MAAyB,CACnDC,IAAKC,YAAmBjK,GAA8B+J","file":"static/js/11.ff8bd667.chunk.js","sourcesContent":["import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dialog, DialogTitle, DialogContent,\n    Grid, IconButton} from '@material-ui/core/';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { green } from '@material-ui/core/colors';\n// Library of PDFJS\n// import * as pdfjsLib from \"pdfjs-dist\";\n// import * as pdfjsViewer from 'pdfjs-dist/web/pdf_viewer';\n\ninterface RenderPdfModalProps {\n    isModalOpen: boolean;\n    id: string;\n    pdfUrl: string;\n    onClose: () => void;\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexWrap:'wrap'\n    },\n    dialog:{\n        align:'center',\n        justify:'center',\n        width:'100%',\n        fontFamily: 'usual',\n    },\n    dialogContent :{\n        padding: '0px',\n        marginTop:'0px',\n        justify:'center',\n        overflow:'scroll',\n        textAlign: 'center'\n    },\n    dialogContentText :{\n        fontSize: '0.875rem',\n    },\n    item: {\n        width: '100%',\n        paddingTop: '0px',\n        minHeight: '730px'\n    },\n    container: {\n        paddingRight:'15px',\n        paddingLeft:'15px',\n        width: '100%',\n        minHeight: '500px'\n    },\n    iframe: {\n        width: '90%',\n        height: '85%',\n        top: 50,\n        left: 50,\n        bottom: 50,\n        right: 50,\n    },\n    dialogTitle: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        paddingLeft: '0px',\n        fontSize: '16px',\n        color: '#272E4C'\n    },\n    dialogAction: {\n        marginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        justifyContent:'center',\n    },\n    boldText:{\n        fontWeight: 'bold'\n    },\n    cancelButton: {\n        width:115,\n        marginRight:25,\n        border: '1px solid #3AB77D',\n        color: '#3AB77D',\n        backgroundColor: \"#FFFFFF\"\n    },\n    submitButton: {\n        width:115,\n        marginLeft:25,\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n    loadingIndicator: {\n        marginTop: theme.spacing(3),\n        width: '100%',\n        color: green[500],\n        justify: 'center'\n    }\n}));\n  \n\nexport const RenderPdfModal: React.FC<RenderPdfModalProps> = (\n\tprops: RenderPdfModalProps,\n): JSX.Element => {\n    const {\n        isModalOpen,\n        id\n    } = props;\n    const classes = useStyles();\n    let viewerUrl = `${process.execPath}/../pdfjs-2.2.228-dist/web/viewer.html?file=${props.pdfUrl}`;\n    // const viewerUrl = `https://mozilla.github.io/pdf.js/web/viewer.html?file=${props.pdfUrl}`;\n\n\tconst handleClose = () => {\n\t\tprops.onClose();\n\t};\n\n    return (\n        <Dialog\n            id={id}\n            open={isModalOpen}\n            aria-labelledby=\"modal-title\"\n            className={classes.dialog}\n            style={{zIndex: 9999}}\n            fullWidth={true}\n            fullScreen={true}\n            maxWidth = {'md'}\n        >\n            <div>\n                <Grid container className={classes.container} justify=\"space-between\" alignItems=\"flex-start\" direction=\"column\">\n                    <Grid item>\n                        <DialogTitle className={classes.dialogTitle} disableTypography={true} id=\"modal-title\" >\n                            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </DialogTitle>\n                    </Grid>\n                    <Grid container justify=\"center\" alignItems=\"stretch\" alignContent=\"stretch\">\n                        <DialogContent className={classes.dialogContent}>\n                            <Grid container justify=\"center\" alignItems=\"stretch\" alignContent=\"stretch\">\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.item}>\n                                    <iframe src={viewerUrl} className={classes.iframe}>\n                                    </iframe>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n                        </DialogContent>\n                    </Grid>\n                </Grid>\n            </div>\n        </Dialog>\n    )\n}\n\nRenderPdfModal.defaultProps = {\n    isModalOpen: false,\n    id: 'render_pdf_modal',\n    pdfUrl: '',\n};\n","/**\n * Benefit Categories.\n */\nexport const LimitTypes = [\n\t{\n\t\tid: 0,\n\t\tvalue: 'Amount',\n\t\tlabel: 'PHP',\n\t\ttype: 'Amount',\n\t\tunit: 'PHP'\n\t},\n\t{\n\t\tid: 1,\n\t\tvalue: 'PEC',\n\t\tlabel: 'PHP',\n\t\ttype: 'PEC',\n\t\tunit: 'PHP'\n\t},\n\t{\n\t\tid: 2,\n\t\tvalue: 'DISEASE',\n\t\tlabel: 'PHP',\n\t\ttype: 'DISEASE',\n\t\tunit: 'PHP'\n\t},\n\t{\n\t\tid: 3,\n\t\tvalue: 'MAX AMOUNT',\n\t\tlabel: 'PHP',\n\t\ttype: 'Amount',\n\t\tunit: 'PHP'\n\t},\n\t{\n\t\tid: 4,\n\t\tvalue: '% MBL',\n\t\tlabel: '% MBL',\n\t\ttype: 'MBL',\n\t\tunit: 'Percentage'\n\t},\n\t{\n\t\tid: 5,\n\t\tvalue: 'MBL',\n\t\tlabel: 'MBL',\n\t\ttype: 'MBL',\n\t\tunit: 'PHP'\n\n\t},\n\t{\n\t\tid: 6,\n\t\tvalue: 'Benefit',\n\t\tlabel: '% MBL',\n\t\ttype: 'MBL',\n\t\tunit: 'Percentage'\n\t},\n\t{\n\t\tid: 7,\n\t\tvalue: '% ABL',\n\t\tlabel: '% ABL',\n\t\ttype: 'ABL',\n\t\tunit: 'Percentage'\n\t},\n\t{\n\t\tid: 8,\n\t\tvalue: 'ABL',\n\t\tlabel: 'ABL',\n\t\ttype: 'ABL',\n\t\tunit: 'PHP'\n\t},\n\t{\n\t\tid: 9,\n\t\tvalue: 'Sessions',\n\t\tlabel: ' sessions',\n\t\ttype: 'Sessions',\n\t\tunit: 'Sessions'\n\t},\n\t{\n\t\tid: 10,\n\t\tvalue: 'Visits',\n\t\tlabel: ' visits',\n\t\ttype: 'Visits',\n\t\tunit: 'Visits'\n\t},\n];\n\n/**\n * Additional Data Field Input Types\n */\nexport const InputTypes = {\n\tTextField: 'textfield',\n\tDropdown: 'dropdown',\n};\n","import React, { FC, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { Components } from '@hims/core';\n\nimport { IAddDataFieldModal } from './IAddDataFieldModal';\nimport { InputTypes } from './IConstants';\n\nconst InputChipTextField = Components.UI.InputChipTextField.InputChipTextField;\nconst InputSelect = Components.UI.InputSelect.InputSelect;\nconst InputTextField = Components.UI.InputTextField.InputTextField;\n\ntype ISelectItem = Components.UI.InputSelect.ISelectItem;\n\nconst getInputTypes = () => {\n\tconst inputTypes: ISelectItem[] = [\n\t\t{\n\t\t\tid: 1,\n\t\t\tvalue: InputTypes.TextField,\n\t\t\tlabel: 'Text Field',\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\tvalue: InputTypes.Dropdown,\n\t\t\tlabel: 'Dropdown',\n\t\t},\n\t];\n\n\treturn inputTypes;\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\tdialog: {},\n\tdialogAction: {\n\t\tmarginBottom: theme.spacing(2),\n\t},\n}));\n\nexport type IDataField = IAddDataFieldModal.IDataField;\n\nexport const AddDataFieldModal: FC<IAddDataFieldModal.IProps> = props => {\n\tconst classes = useStyles();\n\n\tconst [fieldName, setFieldName] = useState<string>('');\n\tconst [fieldNameError, setFieldNameError] = useState<boolean>(false);\n\tconst [inputType, setInputType] = useState<ISelectItem | null>(null);\n\tconst [valueType, setValueType] = useState<string>('');\n\tconst [valueTypeError, setValueTypeError] = useState<boolean>(false);\n\tconst [defaultValue, setDefaultValue] = useState<string>('');\n\tconst [defaultValueError, setDefaultValueError] = useState<boolean>(false);\n\tconst [isRequired, setIsRequired] = useState<boolean>(false);\n\tconst [values, setValues] = useState<any[]>([]);\n\n\tconst reset = () => {\n\t\tsetFieldName('');\n\t\tsetFieldNameError(false);\n\t\tsetInputType(null);\n\t\tsetValueType('');\n\t\tsetValueTypeError(false);\n\t\tsetDefaultValue('');\n\t\tsetDefaultValueError(false);\n\t\tsetIsRequired(false);\n\t\tsetValues([]);\n\t};\n\n\tconst handleClose = () => {\n\t\treset();\n\t\tprops.onClose();\n\t};\n\n\tconst handleSubmit = () => {\n\t\tconst data: IDataField = {\n\t\t\tname: fieldName,\n\t\t\tinputType: (inputType && inputType.value) || '',\n\t\t\tvalueType: valueType,\n\t\t\tvalues: values,\n\t\t\tdefaultValue: defaultValue,\n\t\t\tisRequired: isRequired,\n\t\t};\n\n\t\treset();\n\t\tprops.onSubmit(data);\n\t};\n\n\tconst getDataFieldMetaComponent = () => {\n\t\tif (inputType) {\n\t\t\tswitch (inputType.value) {\n\t\t\t\tcase InputTypes.TextField:\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t\t<InputTextField\n\t\t\t\t\t\t\t\tlabel=\"Value Type\"\n\t\t\t\t\t\t\t\tvalue={valueType}\n\t\t\t\t\t\t\t\terror={valueTypeError}\n\t\t\t\t\t\t\t\tonChange={(value: string) => {\n\t\t\t\t\t\t\t\t\tsetValueType(value);\n\t\t\t\t\t\t\t\t\tsetValueTypeError(value.length === 0);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t);\n\n\t\t\t\tcase InputTypes.Dropdown:\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<InputChipTextField\n\t\t\t\t\t\t\t\tlabel=\"Choices\"\n\t\t\t\t\t\t\t\tonChange={(items: any[]) => {\n\t\t\t\t\t\t\t\t\tsetValues(items);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t);\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={props.isModalOpen}\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"form-dialog-title\"\n\t\t\tmaxWidth=\"sm\"\n\t\t\tclassName={classes.dialog}\n\t\t>\n\t\t\t<DialogTitle id=\"form-dialog-title\">Add Data Field</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<Grid container spacing={2} justify=\"space-between\" alignItems=\"flex-start\">\n\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t<InputTextField\n\t\t\t\t\t\t\tlabel=\"Field Name\"\n\t\t\t\t\t\t\tvalue={fieldName}\n\t\t\t\t\t\t\terror={fieldNameError}\n\t\t\t\t\t\t\tonChange={(value: string) => {\n\t\t\t\t\t\t\t\tsetFieldName(value);\n\t\t\t\t\t\t\t\tsetFieldNameError(value.length === 0);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t<InputSelect\n\t\t\t\t\t\t\tid=\"input-type-select\"\n\t\t\t\t\t\t\tlabel=\"Input Type\"\n\t\t\t\t\t\t\tdata={getInputTypes()}\n\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\tonChange={(item: ISelectItem) => {\n\t\t\t\t\t\t\t\tsetInputType(item);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{getDataFieldMetaComponent()}\n\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t<InputTextField\n\t\t\t\t\t\t\tlabel=\"Default Value\"\n\t\t\t\t\t\t\tvalue={defaultValue}\n\t\t\t\t\t\t\terror={defaultValueError}\n\t\t\t\t\t\t\tonChange={(value: string) => {\n\t\t\t\t\t\t\t\tsetDefaultValue(value);\n\t\t\t\t\t\t\t\tsetDefaultValueError(value.length === 0);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tchecked={isRequired}\n\t\t\t\t\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\t\t\t\t\t\tsetIsRequired(event.target.checked);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tvalue=\"checkedB\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel=\"Required\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions className={clsx(classes.dialogAction)}>\n\t\t\t\t<Grid container spacing={2} justify=\"space-around\" alignItems=\"flex-start\">\n\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t<Button onClick={handleClose} variant=\"outlined\" color=\"default\" fullWidth>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAdd Data Field\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n};\n\nAddDataFieldModal.defaultProps = {\n\tisModalOpen: false,\n};\n","import * as React from 'react';\n// import React, { FC, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dialog, DialogTitle, DialogContent,\n    DialogActions, Grid,\n    Button, IconButton} from '@material-ui/core/';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Components } from '@hims/core';\n\nconst InputTextField = Components.UI.InputTextField.InputTextField;\n\ninterface MethodContentModalProps {\n    isModalOpen: boolean;\n    id: string;\n    method: string;\n    content: string;\n    onClose: () => void;\n    onSubmit: (data: any) => void;\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexWrap:'wrap'\n    },\n    dialog:{\n        align:'center',\n        justify:'center',\n        width:'100%',\n        fontFamily: 'usual',\n    },\n    dialogContent :{\n        padding: '0px',\n        marginTop:'0px',\n        justify:'center',\n        width:'315%'\n    },\n    dialogContentText :{\n        fontSize: '0.875rem',\n    },\n    container: {\n        paddingRight:'15px',\n        paddingLeft:'15px',\n        width: '100%',\n        minHeight: '500px'\n    },\n    dialogTitle: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        paddingLeft: '0px',\n        fontSize: '16px',\n        color: '#272E4C'\n    },\n    dialogAction: {\n        marginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        justifyContent:'center',\n        width: '315%'\n    },\n    boldText:{\n        fontWeight: 'bold'\n    },\n    cancelButton: {\n        width:115,\n        marginRight:25,\n        border: '1px solid #3AB77D',\n        color: '#3AB77D',\n        backgroundColor: \"#FFFFFF\"\n    },\n    submitButton: {\n        width:115,\n        marginLeft:25,\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    }\n}));\n  \n\nexport const MethodContentModal: React.FC<MethodContentModalProps> = (\n\tprops: MethodContentModalProps,\n): JSX.Element => {\n    const {\n        isModalOpen,\n        id\n    } = props;\n\n    const classes = useStyles();\n\n    const [content, setContent] = React.useState<string>('');\n\n    React.useEffect(() => {\n      \tsetContent(props.content);\n  \t}, [props.content])\n\n    const reset = () => {\n\t\tsetContent('');\n\t};\n\n    const handleSubmit = () => {\n\t\tconst data: any = {\n\t\t\tmethod: props.method,\n\t\t\tcontent: content || '',\n\t\t};\n\n\t\treset();\n\t\tprops.onSubmit(data);\n\t};\n\n\tconst handleClose = () => {\n\t\treset();\n\t\tprops.onClose();\n\t};\n\n    return (\n        <Dialog\n            id={id}\n            open={isModalOpen}\n            aria-labelledby=\"modal-title\"\n            className={classes.dialog}\n            style={{zIndex: 9999}}\n            fullWidth={true}\n            maxWidth = {'md'}\n        >\n            <div>\n                <Grid container className={classes.container} justify=\"flex-start\" alignItems=\"flex-start\" direction=\"column\">\n                    <Grid item>\n                        <DialogTitle className={classes.dialogTitle} disableTypography={true} id=\"modal-title\" >\n                            Method: {props.method}\n                            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={props.onClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </DialogTitle>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <DialogContent className={classes.dialogContent}>\n                            <Grid container justify=\"center\" alignContent=\"stretch\">\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<InputTextField\n\t\t\t\t\t\t\t\t\t\tlabel=\"Content\"\n\t\t\t\t\t\t\t\t\t\tvalue={content}\n\t\t\t\t\t\t\t\t\t\tmultiline={true}\n\t\t\t\t\t\t\t\t\t\trows={14}\n\t\t\t\t\t\t\t\t\t\tonChange={(value: string) => {\n\t\t\t\t\t\t\t\t\t\t\tsetContent(value);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n                        </DialogContent>\n                        <DialogActions className={classes.dialogAction}>\n                            <Button className={classes.cancelButton} variant=\"contained\" color=\"secondary\" onClick={handleClose}>\n                                Cancel\n                            </Button>\n\n                            <Button className={classes.submitButton} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n                                Save\n                            </Button>\n\n                        </DialogActions>\n\n                    </Grid>\n                </Grid>\n            </div>\n        </Dialog>\n    )\n}\n\nMethodContentModal.defaultProps = {\n    isModalOpen: false,\n    id: 'modal-id',\n    method: '',\n    content: '',\n};\n","import React, { FC, ChangeEvent } from 'react';\n// import FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Select from '@material-ui/core/Select';\n// import Typography from '@material-ui/core/Typography';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport ExpandMoreRounded from '@material-ui/icons/ExpandMoreRounded';\nimport SubdirectoryArrowRightRoundedIcon from '@material-ui/icons/SubdirectoryArrowRightRounded';\n\nconst labelColor = 'rgb(21,28,28)';\nconst grayColor = 'rgba(39,52,76,0.3)';\nconst grayColorFocused = 'rgba(39,52,76,0.5)';\nconst borderCss = {\n  borderColor: grayColor,\n  borderRadius: 5,\n};\nconst borderStyles = {\n  root: {\n    '& label.Mui-focused': {\n      color: labelColor,\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: grayColor,\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': borderCss,\n      '&:hover fieldset': borderCss,\n      '&.Mui-focused fieldset': {\n        ...borderCss,\n        borderColor: grayColorFocused,\n      },\n    },\n  },\n  // input: {\n  //   '&:focus': {\n  //     borderRadius: 4,\n  //     borderColor: '#80bdff',\n  //     boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n  //   }\n  // }\n};\n\ninterface BenefitTreeSelectProps {\n    id: string;\n    error: boolean;\n    label: string;\n    value: string;\n    display: string;\n    required: boolean;\n    selected: boolean;\n    data: any[];\n    disabled: boolean;\n    onChange?: (value: any) => void;\n    displaySelectItem?: (selectItem: any) => JSX.Element;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    width: '100%',\n  },\n  label: {\n    fontSize:'.8em'\n  },\n  select: {\n    marginTop: theme.spacing(1),\n    backgroundColor: 'white',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  icon: {\n    marginRight: theme.spacing(2.5),\n    color: grayColor,\n  },\n  fifthLevel: {\n    paddingLeft: theme.spacing(4),\n  },\n  sixthLevel: {\n    paddingLeft: theme.spacing(8),\n  },\n  seventhLevel: {\n    paddingLeft: theme.spacing(12),\n  },\n  eightLevel: {\n    paddingLeft: theme.spacing(16),\n  },\n  ninthLevel: {\n    paddingLeft: theme.spacing(20),\n  }\n}));\n\n// const StyledFormControl = withStyles(borderStyles)(FormControl);\nconst StyledOutlinedInput = withStyles(borderStyles)(OutlinedInput);\n\nexport const BenefitTreeSelect: FC<BenefitTreeSelectProps> = (props: BenefitTreeSelectProps) => {\n  const items: any[] = [...props.data];\n\n  const classes = useStyles();\n\n  const inputLabel = React.useRef<HTMLLabelElement>(null);\n  const [labelWidth] = React.useState(0);\n\n  const onChange = (\n    e: ChangeEvent<{ name?: string | undefined; value: unknown }>,\n  ) => {\n    const selectedItem =\n      items.find(item => item.value === e.target.value);\n    if (props.onChange) {\n      props.onChange(selectedItem);\n    }\n  };\n\n  const displaySelectItem = (\n    props: BenefitTreeSelectProps,\n    selectItem: any,\n  ) => {\n    if (props.displaySelectItem) {\n      console.log('displaySelectItem');\n      return props.displaySelectItem(selectItem);\n    }\n\n    const disabled = selectItem.id === -1 && props.required;\n\n    if(selectItem.level === 3){\n      return (\n        <MenuItem\n          key={selectItem.id}\n          value={selectItem.value}\n          disabled={true}\n        >\n          {selectItem.label}\n        </MenuItem>\n      );\n    } else if(selectItem.level === 4){\n      return (\n        <MenuItem\n          key={selectItem.id}\n          value={selectItem.value}\n          disabled={disabled}\n        >\n          <SubdirectoryArrowRightRoundedIcon className={classes.icon}/> {selectItem.label}\n        </MenuItem>\n      );\n    } else if(selectItem.level === 5){\n      return (\n        <MenuItem\n          key={selectItem.id}\n          value={selectItem.value}\n          disabled={disabled}\n          className={classes.fifthLevel}\n        >\n          <SubdirectoryArrowRightRoundedIcon className={classes.icon}/> {selectItem.label}\n        </MenuItem>\n      );\n    } else if(selectItem.level === 6){\n      return (\n        <MenuItem\n          key={selectItem.id}\n          value={selectItem.value}\n          disabled={disabled}\n          className={classes.sixthLevel}\n        >\n          <SubdirectoryArrowRightRoundedIcon className={classes.icon}/> {selectItem.label}\n        </MenuItem>\n      );\n    } else if(selectItem.level === 7){\n      return (\n        <MenuItem\n          key={selectItem.id}\n          value={selectItem.value}\n          disabled={disabled}\n          className={classes.seventhLevel}\n        >\n          <SubdirectoryArrowRightRoundedIcon className={classes.icon}/> {selectItem.label}\n        </MenuItem>\n      );\n    } else if(selectItem.level === 8){\n      return (\n        <MenuItem\n          key={selectItem.id}\n          value={selectItem.value}\n          disabled={disabled}\n          className={classes.eightLevel}\n        >\n          <SubdirectoryArrowRightRoundedIcon className={classes.icon}/> {selectItem.label}\n        </MenuItem>\n      );\n    } else if(selectItem.level === 9){\n      return (\n        <MenuItem\n          key={selectItem.id}\n          value={selectItem.value}\n          disabled={disabled}\n          className={classes.ninthLevel}\n        >\n          <SubdirectoryArrowRightRoundedIcon className={classes.icon}/> {selectItem.label}\n        </MenuItem>\n      );\n    } else {\n      return (\n        <MenuItem\n          key={selectItem.id}\n          value={selectItem.value}\n          disabled={disabled}\n        >\n          {selectItem.label}\n        </MenuItem>\n      );\n    }\n  };\n\n  return (\n    <div className={classes.formControl}>\n      <InputLabel\n        color=\"textPrimary\"\n        className={classes.label}\n        ref={inputLabel}\n        htmlFor={props.id}\n        error={props.error}\n      >\n        {props.label}\n      </InputLabel>\n      <Select\n        className={classes.select}\n        value={props.value}\n        renderValue={value => {\n          console.log('value: ',value);\n          return `${props.display}`;\n        }}\n        onChange={onChange}\n        disabled={props.disabled}\n        input={\n          <StyledOutlinedInput\n            id={props.id}\n            name={props.id}\n            error={props.error}\n            labelWidth={labelWidth}\n            fullWidth\n            disabled={props.disabled}\n          /> \n        }\n        IconComponent={() => <ExpandMoreRounded className={classes.icon} />}\n      >\n        {items.map(item => displaySelectItem(props, item))}\n      </Select>\n    </div>\n  );\n};\n\nBenefitTreeSelect.defaultProps = {\n  label: '',\n  value: '',\n  display: '',\n  selected: false,\n  error: false,\n  disabled: false,\n  required: false,\n  onChange: (value: string) => {\n    console.log(value);\n  },\n};\n\n","import { ActionConsts } from \"./ActionConsts\";\n\n/**\n * ACTIONS\n*/\nexport const CreateBenefitPageActions = {\n\tMap: (payload: any) => (\n\t\t{\n\t\t\tpayload,\n\t\t\ttype: ActionConsts.CreateBenefitPage.SetReducer\n\t\t}\n\t),\n\n\tReset: () => ({\n\t\ttype: ActionConsts.CreateBenefitPage.ResetReducer\n\t})\n}","//#region Global Imports\nimport * as React from 'react';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Cancel from '@material-ui/icons/Cancel';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { amber } from '@material-ui/core/colors';\n\nimport clsx from 'clsx';\nimport { filter } from 'lodash';\nimport PropTypes from 'prop-types';\n//#endregion Global Imports\n\n//#region Local Imports\nimport './style.scss';\n//#endregion Local Imports\n\n//#region Interface Imports\nimport { Store } from 'Components/Stores/IStore';\n// import { ConfirmationModal } from 'Components/UI/ConfirmationModal';\nimport { ICreateBenefitPage } from './ICreateBenefitPage';\nimport { AddDataFieldModal, IDataField } from './AddDataFieldModal';\nimport { MethodContentModal } from './MethodContentModal';\nimport { RenderPdfModal } from './RenderPdfModal';\nimport { BenefitTreeSelect } from './BenefitTreeSelect';\nimport { LimitTypes, InputTypes } from './IConstants';\nimport { CreateBenefitPageActions } from './Actions';\nimport { Components } from '@hims/core';\n\n// import { APIService } from 'Services/APIService';\n//#endregion Interface Imports\n\nimport '@hims/core/dist/index.css';\n\nconst InputSelect = Components.UI.InputSelect.InputSelect;\nconst InputSelectSetValue = Components.UI.InputSelectSetValue.InputSelectSetValue;\nconst InputTextField = Components.UI.InputTextField.InputTextField;\n\nlet GetBenefitsURL = process.env.REACT_APP_BASE_URL + \"base-benefit-plans?filter[where][level][gt]=3&filter[order]=tree_id%20asc\";\nlet CreateBenefitURL = process.env.REACT_APP_BASE_URL + \"base-benefit-plans/\";\nlet EditBenefitURL = process.env.REACT_APP_BASE_URL + \"base-benefit-plans/\";\nlet RenderContractURL = process.env.REACT_APP_RENDER_CONTRACT_BASE_URL + \"base-benefit-plans%2Fcontracts%3Fid%3D\";\n\n// let GetBenefitsURL:string;\n// let CreateBenefitURL:string;\n// let EditBenefitURL:string;\n// let RenderContractURL:string;\n\n// if (process.env.NODE_ENV === 'development') {\n// \t// Local API\n// \tGetBenefitsURL = \"https://neo-local.seerlabs.com/api/base-benefit-plans?filter[where][level][gt]=3&filter[order]=tree_id%20asc\";\n// \tCreateBenefitURL = \"https://neo-local.seerlabs.com/api/base-benefit-plans/\";\n// \tEditBenefitURL = \"https://neo-local.seerlabs.com/api/base-benefit-plans/\";\n// \tRenderContractURL = \"https%3A%2F%2Fneo-local.seerlabs.com%2Fapi%2Fbase-benefit-plans%2Fcontracts%3Fid%3D\";\n// } else {\n// \t// Staging API\n// \tGetBenefitsURL = \"http://18.138.94.224:4101/api/base-benefit-plans?filter[where][level][gt]=3&filter[order]=tree_id%20asc\";\n// \tCreateBenefitURL = \"http://18.138.94.224:4101/api/base-benefit-plans/\";\n// \tEditBenefitURL = \"http://18.138.94.224:4101/api/base-benefit-plans/\";\n// \tRenderContractURL = \"http%3A%2F%2F18.138.94.224%3A4101%2Fapi%2Fbase-benefit-plans%2Fcontracts%3Fid%3D\";\n// }\n\nconst ViewerPageMode = \"#pagemode=bookmarks\"\n\nlet ContractURL: string = \"\";\n\ntype IAutocompleteItem = Components.UI.InputAutocomplete.IAutocompleteItem;\ntype ISelectItem = Components.UI.InputSelect.ISelectItem;\ntype ISelectSetItem = Components.UI.InputSelectSetValue.ISelectItem;\n\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: '#E6F5F6',\n  },\n  error: {\n    backgroundColor: theme.palette.error.light,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n    color: '#363636'\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n  \tcolor: '#272E4C',\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nfunction MySnackbarContentWrapper(props) {\n  const classes = useStyles1();\n  const { className, message, onClose, variant, ...other } = props;\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n};\n\nexport class CreateBenefitPage extends React.Component<\n\tICreateBenefitPage.IProps,\n\tICreateBenefitPage.IState\n> {\n\tconstructor(props: ICreateBenefitPage.IProps) {\n\t\tsuper(props);\n\n\t\tconst items = [\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tvalue: 'item-1',\n\t\t\t\tlabel: 'Item 1',\n\t\t\t\ttype: '',\n\t\t\t\tlevel: ''\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tvalue: 'item-2',\n\t\t\t\tlabel: 'Item 2',\n\t\t\t\ttype: '',\n\t\t\t\tlevel: ''\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 2,\n\t\t\t\tvalue: 'item-3',\n\t\t\t\tlabel: 'Item 3',\n\t\t\t\ttype: '',\n\t\t\t\tlevel: ''\n\t\t\t},\n\t\t];\n\n\t\tconst categoryList = [\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tvalue: 'PlanType',\n\t\t\t\tlabel: 'PlanType',\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tvalue: 'PlanPackage',\n\t\t\t\tlabel: 'PlanPackage',\n\t\t\t\t\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 2,\n\t\t\t\tvalue: 'Sub-benefit',\n\t\t\t\tlabel: 'Sub-benefit',\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 3,\n\t\t\t\tvalue: 'Benefit',\n\t\t\t\tlabel: 'Benefit',\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 4,\n\t\t\t\tvalue: 'BenefitCategory',\n\t\t\t\tlabel: 'BenefitCategory',\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 5,\n\t\t\t\tvalue: 'BenefitType',\n\t\t\t\tlabel: 'BenefitType',\n\t\t\t},\n\t\t];\n\n\t\tconst autocompleteItems: IAutocompleteItem[] = items.map(item => {\n\t\t\treturn {\n\t\t\t\tvalue: item.value,\n\t\t\t\tlabel: item.label,\n\t\t\t};\n\t\t});\n\n\t\tconst existingBenefits: any[] = [];\n\n\t\tthis.handleGetBenefitList().then(response => {\n\t\t\tconsole.log('getbenefitlist response: ',response);\n\t\t\tthis.setState({\n\t\t\t\tloading: false\n\t\t\t});\n\t\t\tif(response){\n\t\t\t\tconst values: any[] = response.map(item => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: item._id,\n\t\t\t\t\t\tvalue: item._id,\n\t\t\t\t\t\tlabel: item.name,\n\t\t\t\t\t\ttype: item.type,\n\t\t\t\t\t\tlevel: item.level\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.setState({\n\t\t\t\t\texistingBenefits: values,\n\t\t\t\t\tbenefitsList: response,\n\t\t\t\t\tbenefitsListDisabled: false\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tconst categories: ISelectSetItem[] = categoryList.map(item => {\n\t\t\treturn {\n\t\t\t\tid: item.id,\n\t\t\t\tvalue: item.value,\n\t\t\t\tlabel: item.label,\n\t\t\t};\n\t\t});\n\n\t\tconst limitTypes: ISelectSetItem[] = LimitTypes.map(item => {\n\t\t\treturn {\n\t\t\t\tid: item.id,\n\t\t\t\tvalue: item.value,\n\t\t\t\tlabel: item.value,\n\t\t\t};\n\t\t});\n\n\t\tthis.state = {\n\t\t\toriginalBenefit: {},\n\t\t\tselectedBenefitName: '',\n\t\t\tselectedBenefitValue: '',\n\t\t\tparentBenefit: null,\n\t\t\tbenefitName: '',\n\t\t\tbenefitNameError: false,\n\t\t\tcategory: '',\n\t\t\tcode: '',\n\t\t\tcodeError: false,\n\t\t\tlimitType: null,\n\t\t\tlimitTypeName: '',\n\t\t\tlimitTypeError: false,\n\t\t\tlimitTypeErrorMessage: '',\n\t\t\tlimitAmount: '',\n\t\t\tlimitAmountError: false,\n\t\t\tlimitAmountErrorMessage: '',\n\t\t\tclause: '',\n\t\t\tclauseError: false,\n\t\t\tdescription: '',\n\t\t\tdescriptionError: false,\n\t\t\texistingBenefits,\n\t\t\tcategories,\n\t\t\tlimitTypes,\n\t\t\tadditionalDataFields: [],\n\t\t\taddDataFieldModalVisible: false,\n\t\t\trenderContractModalVisible: false,\n\t\t\tmethodContentModalVisible: false,\n\t\t\tautocompleteItems,\n\t\t\tselectedBenefit: {},\n\t\t\tbenefitsList: [],\n\t\t\tcanAvail: '',\n\t\t\tcanCover: '',\n\t\t\trenderContract: '',\n\t\t\trenderProposal: '',\n\t\t\tcontent: '',\n\t\t\tmethod: '',\n\t\t\tcreateButtonDisabled: true,\n\t\t\teditButtonDisabled: true,\n\t\t\trenderContractDisabled: true,\n\t\t\tbenefitsListDisabled: false,\n\t\t\tloading: false,\n\t\t\tselected: false,\n\t\t\topenSnackbar: false,\n\t\t\tvariant: '',\n\t\t\tsnackbarMessage: '',\n\t\t\trenderIsClicked: false\n\t\t};\n\t}\n\n\treset = () => {\n\t\tthis.setState({\n\t\t\tselectedBenefitName: '',\n\t\t\tselectedBenefitValue: '',\n\t\t\tparentBenefit: null,\n\t\t\tbenefitName: '',\n\t\t\tbenefitNameError: false,\n\t\t\tcategory: null,\n\t\t\tcode: '',\n\t\t\tcodeError: false,\n\t\t\tlimitType: null,\n\t\t\tlimitTypeName: '',\n\t\t\tlimitTypeError: false,\n\t\t\tlimitTypeErrorMessage: '',\n\t\t\tlimitAmount: '',\n\t\t\tlimitAmountError: false,\n\t\t\tlimitAmountErrorMessage: '',\n\t\t\tclause: '',\n\t\t\tclauseError: false,\n\t\t\tdescription: '',\n\t\t\tdescriptionError: false,\n\t\t\tadditionalDataFields: [],\n\t\t\taddDataFieldModalVisible: false,\n\t\t\tmethodContentModalVisible: false,\n\t\t\trenderContractModalVisible: false,\n\t\t\tbenefitsListDisabled: false,\n\t\t\tselectedBenefit: {},\n\t\t\tcanAvail: '',\n\t\t\tcanCover: '',\n\t\t\trenderContract: '',\n\t\t\trenderProposal: '',\n\t\t\tcontent: '',\n\t\t\tmethod: '',\n\t\t\tcreateButtonDisabled: true,\n\t\t\teditButtonDisabled: true,\n\t\t\trenderContractDisabled: true,\n\t\t\tloading: false,\n\t\t\tselected: false,\n\t\t\trenderIsClicked: false\n\t\t});\n\t};\n\n\tsetFieldValue = (fieldName: string, value: any) => {\n\t\tthis.setState(state => ({\n\t\t\t...state,\n\t\t\t[fieldName]: value,\n\t\t}));\n\t};\n\n\tsetFieldError = (fieldName: string, error: boolean) => {\n\t\tthis.setState(state => ({\n\t\t\t...state,\n\t\t\t[fieldName]: error,\n\t\t}));\n\t};\n\n\tsetBenefitData = (_id: number) => {\n\t\tif(this.state.renderIsClicked) this.resetPrevBenefit();\n\n\t\tthis.state.benefitsList.map(item =>{\n\t\t\tif(item._id === _id){\n\t\t\t\tconst selectedBenefit = item;\n\t\t\t\tconsole.log('selectedBenefit: ',selectedBenefit);\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tselectedBenefit: selectedBenefit,\n\t\t\t\t\tselectedBenefitName: selectedBenefit.name,\n\t\t\t\t\tselectedBenefitValue: selectedBenefit._id,\n\t\t\t\t\tcode: selectedBenefit.code,\n\t\t\t\t\tbenefitName: selectedBenefit.name,\n\t\t\t\t\tcategory: selectedBenefit.type,\n\t\t\t\t\tclause: selectedBenefit.renderClause,\n\t\t\t\t\tdescription: selectedBenefit.description,\n\t\t\t\t\tcanAvail: selectedBenefit.canAvail,\n\t\t\t\t\tcanCover: selectedBenefit.canCover,\n\t\t\t\t\trenderContract: selectedBenefit.renderContract,\n\t\t\t\t\trenderProposal: selectedBenefit.renderProposal,\n\t\t\t\t});\n\n\t\t\t\tif(selectedBenefit.limits.length > 0){\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tlimitTypeName: selectedBenefit.limits[0].type,\n\t\t\t\t\t\tlimitAmount: selectedBenefit.limits[0].limit,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tlimitTypeName: '',\n\t\t\t\t\t\tlimitAmount: '',\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif(Object.entries(selectedBenefit.custom_metadata).length > 0 && selectedBenefit.custom_metadata.constructor === Object){\n\t\t\t\t\tconsole.log('custom_metadata', selectedBenefit.custom_metadata);\n\t\t\t\t\tconst customMetadata = selectedBenefit.custom_metadata;\n\t\t\t\t\tconst customMetadataSchema = selectedBenefit.custom_metadata_schema;\n\t\t\t\t\tconst dataArr: any[] = [];\n\t\t\t\t\tlet updDataArr;\n\n\t\t\t\t\tObject.keys(customMetadata).map((key,value)=>{\n\t\t\t\t\t  \tconsole.log(key, customMetadata[key],value);\n\t\t\t\t\t  \tconst data: any = {};\n\t\t\t\t\t  \tdata[\"name\"] = key;\n\t\t\t\t\t  \tdata[\"defaultValue\"] = customMetadata[key];\n\n\t\t\t\t\t  \tdataArr.push(data);\n\t\t\t\t\t});\n\n\t\t\t\t\tObject.keys(customMetadataSchema.properties).map((key,value)=>{\n\t\t\t\t\t\tconst properties = customMetadataSchema.properties;\n\t\t\t\t\t\tconsole.log(\"customMetadataSchema\",key, properties[key],value);\n\n\t\t\t\t\t\tupdDataArr = dataArr.map(item => {\n\t\t\t\t\t\t\tif(item.name == key){\n\t\t\t\t\t\t\t\tif(properties[key].type){\n\t\t\t\t\t\t\t\t\titem[\"valueType\"] = properties[key].type;\n\t\t\t\t\t\t\t\t\titem[\"inputType\"] = \"textfield\";\n\t\t\t\t\t\t\t\t\titem[\"values\"] = [];\n\t\t\t\t\t\t\t\t} else if(properties[key].enum){\n\t\t\t\t\t\t\t\t\titem[\"inputType\"] = \"dropdown\"\n\t\t\t\t\t\t\t\t\titem[\"valueType\"] = \"\";\n\t\t\t\t\t\t\t\t\titem[\"values\"] = properties[key].enum;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// console.log('dataArr item: ',item);\n\t\t\t\t\t\t\t// console.log('dataArr: ',dataArr);\n\t\t\t\t\t\t\treturn item;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// console.log('updDataArr: ', updDataArr);\n\t\t\t\t\t});\n\n\t\t\t\t\tcustomMetadataSchema.required.map(item=> {\n\t\t\t\t\t\t// console.log('item:',item);\n\t\t\t\t\t\tupdDataArr = updDataArr.map(item2 => {\n\t\t\t\t\t\t\titem2[\"isRequired\"] = item2.name == item ? true : false;\n\t\t\t\t\t\t\treturn item2;\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\t// console.log('updDataArr2: ', updDataArr);\n\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tadditionalDataFields: updDataArr,\n\t\t\t\t\t});\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tadditionalDataFields: [],\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.setFieldValue('createButtonDisabled', false);\n\t\t\t\tthis.setFieldValue('editButtonDisabled', false);\n\t\t\t\tthis.setFieldValue('renderContractDisabled', false);\n\t\t\t}\n\t\t});\t\n\t};\n\n\tresetPrevBenefit = () => {\n\t\tconst url = EditBenefitURL + this.state.selectedBenefit['_id'];\n\t\tfetch(url, {\n\t\t   \tmethod: 'get',\n\t\t   \theaders: {'Content-Type':'application/json'}\n\t\t}).then(response => response.json()\n\t\t).then(response => {\n\t\t\tconsole.log('get specific benefit response: ', response);\n\t\t\tresponse[\"is_temp\"] = {};\n\t\t\tfetch(url, {\n\t\t\t   \tmethod: 'PATCH',\n\t\t\t   \theaders: {'Content-Type':'application/json'},\n\t\t\t   \tbody: JSON.stringify(response)\n\t\t\t}).then(response => {\n\t\t\t\tconsole.log('resetPrevBenefit response', response);\n\t\t\t}).catch(error => {\n\t\t\t\tconsole.log('resetPrevBenefit error: ', error);\n\t\t\t});\n\t\t}).catch(error => {\n\t\t\tconsole.log('getbenefit api error: ', error);\n\t\t});\n\t};\n\n\t/**\n\t * Display additional data fields.\n\t */\n\tdisplayAdditionalDataFields = () => {\n\t\tconst elements: JSX.Element[] = [];\n\t\tconst { additionalDataFields } = this.state;\n\n\t\tconsole.log('additionalDataFields', additionalDataFields);\n\n\t\tadditionalDataFields.map((field, fieldIdx) => {\n\t\t\tswitch (field.inputType) {\n\t\t\t\tcase InputTypes.TextField:\n\t\t\t\t\telements.push(\n\t\t\t\t\t\t<Grid item xs={12} key={fieldIdx}>\n\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\tspacing={2}\n\t\t\t\t\t\t\t\tjustify=\"space-between\"\n\t\t\t\t\t\t\t\talignItems=\"flex-end\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Grid item xs={11}>\n\t\t\t\t\t\t\t\t\t<InputTextField\n\t\t\t\t\t\t\t\t\t\tlabel={field.name}\n\t\t\t\t\t\t\t\t\t\ttype={field.valueType}\n\t\t\t\t\t\t\t\t\t\tvalue={field.defaultValue}\n\t\t\t\t\t\t\t\t\t\terror={false}\n\t\t\t\t\t\t\t\t\t\tonChange={(value: string) => {\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(value);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={1} className={clsx('data-field-remove-btn')}>\n\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\taria-label=\"Remove\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tthis.removeAdditionalDataField(fieldIdx);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Cancel />\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase InputTypes.Dropdown:\n\t\t\t\t\tconst fieldSelectItems: ISelectItem[] = field.values.map((item, index) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid: index,\n\t\t\t\t\t\t\tvalue: item,\n\t\t\t\t\t\t\tlabel: item,\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\n\t\t\t\t\telements.push(\n\t\t\t\t\t\t<Grid item xs={12} key={fieldIdx}>\n\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\tspacing={2}\n\t\t\t\t\t\t\t\tjustify=\"space-between\"\n\t\t\t\t\t\t\t\talignItems=\"flex-end\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Grid item xs={11}>\n\t\t\t\t\t\t\t\t\t<InputSelect\n\t\t\t\t\t\t\t\t\t\tid={`data-field-${fieldIdx}`}\n\t\t\t\t\t\t\t\t\t\tlabel={field.name}\n\t\t\t\t\t\t\t\t\t\tdata={fieldSelectItems}\n\t\t\t\t\t\t\t\t\t\tvalue={field.defaultValue}\n\t\t\t\t\t\t\t\t\t\terror={false}\n\t\t\t\t\t\t\t\t\t\trequired={field.isRequired}\n\t\t\t\t\t\t\t\t\t\tonChange={(item: ISelectItem) => {\n\t\t\t\t\t\t\t\t\t\t\tthis.setFieldValue('parentBenefit', item);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={1} className={clsx('data-field-remove-btn')}>\n\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\taria-label=\"Remove\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tthis.removeAdditionalDataField(fieldIdx);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Cancel />\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn elements;\n\t};\n\n\t/**\n\t * Remove selected data field.\n\t */\n\tremoveAdditionalDataField = (idx: number) => {\n\t\tconst newAdditionalDataFields = filter(\n\t\t\tthis.state.additionalDataFields,\n\t\t\t(_dataField, index) => {\n\t\t\t\treturn index !== idx;\n\t\t\t},\n\t\t);\n\n\t\tthis.setState({\n\t\t\tadditionalDataFields: newAdditionalDataFields,\n\t\t});\n\t};\n\n\t/**\n\t * Handles 'Create New Benefit' button click.\n\t */\n\tonCreateBenefitBtnClick = () => {\n\t\tconst custom_metadata: any = {};\n\t\tconst properties: any = {};\n\t\tconst required: any[] = [];\n\t\tlet url: string = \"\";\n\t\tlet parent_id: string = \"\";\n\t\tlet limit_unit: string = \"\";\n\t\tlet limit_type: string = \"\";\n\n\t\tif(this.state.limitTypeName === \"\" && this.state.limitAmount !== \"\"){\n\t\t\tthis.setState({\n\t\t\t\tlimitTypeError: true,\n\t\t\t\tlimitTypeErrorMessage: 'Please select limit type'\n\t\t\t});\n\t\t}\n\n\t\tif(this.state.limitTypeName !== \"\" && this.state.limitAmount === \"\"){\n\t\t\tthis.setState({\n\t\t\t\tlimitAmountError: true,\n\t\t\t\tlimitAmountErrorMessage: 'Please enter amount'\n\t\t\t});\n\t\t}\n\n\t\tLimitTypes.map(item => {\n\t\t\tif(item.value === this.state.limitTypeName){\n\t\t\t\tlimit_unit = item.unit;\n\t\t\t\tlimit_type = item.type;\n\t\t\t}\n\t\t});\n\n\t\tthis.state.additionalDataFields.map(item => {\n\t\t\tcustom_metadata[item.name] = item.defaultValue;\n\n\t\t\tif(item.isRequired){\n\t\t\t\trequired.push(item.name);\n\t\t\t}\n\n\t\t\tif(item.inputType === \"dropdown\"){\n\t\t\t\tproperties[item.name] = {\n\t\t\t\t\t\"enum\": item.values\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tproperties[item.name] = {\n\t\t\t\t\t\"type\": item.valueType\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\tconst custom_metadata_schema = {\n\t\t\t\"properties\": properties,\n\t\t\t\"required\": required\n\t\t};\n\n\t\tlet create_benefit_request;\n\n\t\tif(this.state.parentBenefit === null){\n\t\t} else {\n\t\t\tlet tree_id = this.state.selectedBenefit.tree_id;\n\t\t\tlet tree_path = this.state.selectedBenefit.tree_path;\n\t\t\ttree_path[tree_path.length-1] = this.state.code;\n\t\t\tlet temp = \"\";\n\t\t\ttree_path.forEach(item => {\n\t\t\t\tif(temp === \"\"){\n\t\t\t\t\ttemp = temp + item\n\t\t\t\t} else {\n\t\t\t\t\ttemp = temp + \"-\" + item\n\t\t\t\t}\n\t\t\t});\n\n\t\t\ttree_id = temp;\n\n\t\t\tcreate_benefit_request = {\n\t\t\t\t\"tree_id\": tree_id,\n\t\t\t\t\"tree_path\": tree_path,\n\t\t\t\t\"name\": this.state.benefitName,\n\t\t\t\t\"code\": this.state.code,\n\t\t\t\t\"type\": this.state.category,\n\t\t\t\t\"description\": this.state.description,\n\t\t\t\t\"revisions\": [],\n\t\t\t\t\"metadata\": {},\n\t\t\t\t\"metadata_schema\": {},\n\t\t\t\t\"custom_metadata\": custom_metadata,\n\t\t\t\t\"custom_metadata_schema\": custom_metadata_schema,\n\t\t\t\t\"canAvail\": this.state.canAvail,\n\t\t\t\t\"canCover\": this.state.canCover,\n\t\t\t\t\"renderContract\": this.state.renderContract,\n\t\t\t\t\"renderProposal\": this.state.renderProposal,\n\t\t\t\t\"renderClause\": this.state.clause,\n\t\t\t\t\"layers\": this.state.selectedBenefit.layers,\n\t\t\t\t\"node_path\": this.state.selectedBenefit.node_path,\n\t\t\t\t\"is_temp\": {}\n\t\t\t};\n\n\t\t\tif(limit_type !== \"\" && this.state.limitAmount != \"\"){\n\t\t\t\tcreate_benefit_request[\"limits\"] = [{\n\t\t\t\t\t\"type\": limit_type,\n\t\t\t\t\t\"limit\": +this.state.limitAmount,\n\t\t\t\t\t\"limit_unit\": limit_unit,\n\t\t\t\t}];\n\t\t\t}\n\n\t\t\t// create_benefit_request = this.state.selectedBenefit;\n\t\t\t// create_benefit_request[\"tree_id\"] = tree_id;\n\t\t\t// create_benefit_request[\"tree_path\"] = tree_path;\n\t\t\t// create_benefit_request[\"name\"] = this.state.benefitName;\n\t\t\t// create_benefit_request[\"code\"] = this.state.code;\n\t\t\t// create_benefit_request[\"type\"] = this.state.category;\n\t\t\t// create_benefit_request[\"custom_metadata\"] = custom_metadata;\n\t\t\t// create_benefit_request[\"custom_metadata_schema\"] = custom_metadata_schema;\n\t\t\t// create_benefit_request[\"limits\"] = [{\n\t\t\t// \t\"type\": limit_type,\n\t\t\t// \t\"limit\": +this.state.limitAmount,\n\t\t\t// \t\"limit_unit\": limit_unit,\n\t\t\t// }]\n\t\t\t\n\t\t\t// create_benefit_request[\"canAvail\"] = this.state.selectedBenefit.canAvail;\n\t\t\t// create_benefit_request[\"canCover\"] = this.state.selectedBenefit.canCover;\n\t\t\t// create_benefit_request[\"renderContract\"] = this.state.selectedBenefit.renderContract;\n\t\t\t// create_benefit_request[\"renderProposal\"] = this.state.selectedBenefit.renderProposal;\n\t\t\t// create_benefit_request[\"renderClause\"] = this.state.selectedBenefit.renderClause;\n\t\t\t// create_benefit_request[\"layers\"] = this.state.selectedBenefit.layers;\n\t\t\t// create_benefit_request[\"node_path\"] = this.state.selectedBenefit.node_path;\n\n\t\t\t// if(create_benefit_request[\"limits\"].length > 0) {\n\t\t\t// \tcreate_benefit_request[\"limits\"][0][\"type\"] = this.state.limitTypeName;\n\t\t\t// \tcreate_benefit_request[\"limits\"][0][\"limit\"] = this.state.limitAmount;\n\t\t\t// \tcreate_benefit_request[\"limits\"][0][\"limit_unit\"] = limit_unit;\n\t\t\t// } else {\n\t\t\t// \tcreate_benefit_request[\"limits\"].push({\n\t\t\t// \t\t\"type\": this.state.limitTypeName,\n\t\t\t// \t\t\"limit\": +this.state.limitAmount,\n\t\t\t// \t\t\"limit_unit\": limit_unit,\n\t\t\t// \t\t\"scope\": \"Member\"\n\t\t\t// \t})\n\t\t\t// }\n\n\t\t\tparent_id = create_benefit_request[\"node_path\"][create_benefit_request[\"node_path\"].length-2];\n\t\t\tconsole.log('node_path: ',create_benefit_request[\"node_path\"]);\n\t\t\tcreate_benefit_request[\"node_path\"].pop();\n\n\t\t\turl = CreateBenefitURL + parent_id;\n\n\t\t\tconsole.log('create_benefit_request: ', create_benefit_request);\n\t\t\tconsole.log('url: ', url);\n\n\t\t\tthis.setState({\n\t\t\t\tloading: true\n\t\t\t});\n\n\t\t\tthis.handleCreateBenefit(create_benefit_request,url);\n\t\t}\n\t};\n\n\t/**\n\t * Handles 'Edit Benefit' button click.\n\t */\n\tonEditBenefitBtnClick = () => {\n\t\tconst custom_metadata: any = {};\n\t\tconst properties: any = {};\n\t\tconst required: any[] = [];\n\t\tlet url: string = \"\";\n\t\tlet limit_unit: string = \"\";\n\t\tlet limit_type: string = \"\";\n\n\t\tLimitTypes.map(item => {\n\t\t\tif(item.value === this.state.limitTypeName){\n\t\t\t\tlimit_unit = item.unit;\n\t\t\t\tlimit_type = item.type;\n\t\t\t}\n\t\t});\n\n\t\tif(this.state.limitTypeName === \"\" && this.state.limitAmount !== \"\"){\n\t\t\tthis.setState({\n\t\t\t\tlimitTypeError: true,\n\t\t\t\tlimitTypeErrorMessage: 'Please select limit type'\n\t\t\t});\n\t\t}\n\n\t\tif(this.state.limitTypeName !== \"\" && this.state.limitAmount === \"\"){\n\t\t\tthis.setState({\n\t\t\t\tlimitAmountError: true,\n\t\t\t\tlimitAmountErrorMessage: 'Please enter amount'\n\t\t\t});\n\t\t}\n\n\t\tthis.state.additionalDataFields.map(item => {\n\t\t\tcustom_metadata[item.name] = item.defaultValue;\n\n\t\t\tif(item.isRequired){\n\t\t\t\trequired.push(item.name);\n\t\t\t}\n\n\t\t\tif(item.inputType === \"dropdown\"){\n\t\t\t\tproperties[item.name] = {\n\t\t\t\t\t\"enum\": item.values\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tproperties[item.name] = {\n\t\t\t\t\t\"type\": item.valueType\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\tconst custom_metadata_schema = {\n\t\t\t\"properties\": properties,\n\t\t\t\"required\": required\n\t\t};\n\n\t\tlet edit_benefit_request;\n\n\t\tlet tree_id = this.state.selectedBenefit.tree_id;\n\t\tlet tree_path = this.state.selectedBenefit.tree_path;\n\t\ttree_path[tree_path.length-1] = this.state.code;\n\t\tlet temp = \"\";\n\t\ttree_path.forEach(item => {\n\t\t\tif(temp === \"\"){\n\t\t\t\ttemp = temp + item\n\t\t\t} else {\n\t\t\t\ttemp = temp + \"-\" + item\n\t\t\t}\n\t\t});\n\n\t\ttree_id = temp;\n\n\t\tedit_benefit_request = this.state.selectedBenefit;\n\t\tedit_benefit_request[\"tree_id\"] = tree_id;\n\t\tedit_benefit_request[\"tree_path\"] = tree_path;\n\t\tedit_benefit_request[\"name\"] = this.state.benefitName;\n\t\tedit_benefit_request[\"code\"] = this.state.code;\n\t\tedit_benefit_request[\"type\"] = this.state.category;\n\t\tedit_benefit_request[\"description\"] = this.state.description;\n\t\tedit_benefit_request[\"custom_metadata\"] = custom_metadata;\n\t\tedit_benefit_request[\"custom_metadata_schema\"] = custom_metadata_schema;\n\t\tedit_benefit_request[\"canAvail\"] = this.state.canAvail;\n\t\tedit_benefit_request[\"canCover\"] = this.state.canCover;\n\t\tedit_benefit_request[\"renderContract\"] = this.state.renderContract;\n\t\tedit_benefit_request[\"renderProposal\"] = this.state.renderProposal;\n\t\tedit_benefit_request[\"renderClause\"] = this.state.clause;\n\t\tedit_benefit_request[\"is_temp\"] = {};\n\n\t\tif(limit_type !== \"\" && this.state.limitAmount != \"\"){\n\t\t\tedit_benefit_request[\"limits\"] = [{\n\t\t\t\t\"type\": limit_type,\n\t\t\t\t\"limit\": +this.state.limitAmount,\n\t\t\t\t\"limit_unit\": limit_unit,\n\t\t\t}];\n\t\t}\n\n\t\turl = EditBenefitURL + edit_benefit_request[\"_id\"];\n\n\t\tconsole.log('edit_benefit_request: ', edit_benefit_request);\n\t\tconsole.log('url: ', url);\n\n\t\tthis.setState({\n\t\t\tloading: true\n\t\t});\n\n\t\tthis.handleEditBenefit(edit_benefit_request,url);\n\t};\n\n\t/**\n\t * Handles 'Temp Save' on 'Render Contract' button click.\n\t */\n\thandleTempSaveBenefit = (data: any, url: string) => {\n\t\t// let content = this.state.selectedBenefit;\n\t\tlet content = {\n\t\t\tis_temp: data\n\t\t};\n\t\t// console.log('tempSave content: ',content, data);\n\t\tfetch(url, {\n\t\t   \tmethod: 'PATCH',\n\t\t   \theaders: {'Content-Type':'application/json'},\n\t\t   \tbody: JSON.stringify(content)\n\t\t}).then(response => {\n\t\t\tconsole.log('fetch api results: ', response);\n\n\t\t\tthis.setState({\n\t\t\t\tloading: false\n\t\t\t});\n\n\t\t\tContractURL = RenderContractURL + data.node_path[0] + ViewerPageMode;\n\t\t\t// ContractURL = RenderContractURL;\n\n\t\t\tthis.setState({\n\t\t\t\trenderContractModalVisible: true\n\t\t\t});\n\t\t}).catch(error => {\n\t\t\tconsole.log('temp save benefit api error: ', error);\n\t\t\tthis.setState({\n\t\t\t\tvariant: 'error',\n\t\t\t\tsnackbarMessage: error\n\t\t\t});\n\t\t});\n\t};\n\n\t/**\n\t * Handles 'Create New Benefit' button click.\n\t */\n\tonRenderContractBtnClick = () => {\n\t\tthis.setState({\n\t\t\trenderIsClicked: true\n\t\t});\n\t\tconst custom_metadata: any = {};\n\t\tconst properties: any = {};\n\t\tconst required: any[] = [];\n\t\tlet url: string = \"\";\n\t\tlet limit_unit: string = \"\";\n\t\tlet limit_type: string = \"\";\n\n\t\tLimitTypes.map(item => {\n\t\t\tif(item.value === this.state.limitTypeName){\n\t\t\t\tlimit_unit = item.unit;\n\t\t\t\tlimit_type = item.type;\n\t\t\t}\n\t\t});\n\n\t\tif(this.state.limitTypeName === \"\" && this.state.limitAmount !== \"\"){\n\t\t\tthis.setState({\n\t\t\t\tlimitTypeError: true,\n\t\t\t\tlimitTypeErrorMessage: 'Please select limit type'\n\t\t\t});\n\t\t}\n\n\t\tif(this.state.limitTypeName !== \"\" && this.state.limitAmount === \"\"){\n\t\t\tthis.setState({\n\t\t\t\tlimitAmountError: true,\n\t\t\t\tlimitAmountErrorMessage: 'Please enter amount'\n\t\t\t});\n\t\t}\n\n\t\tthis.state.additionalDataFields.map(item => {\n\t\t\t// if(item.inputType === \"dropdown\"){\n\t\t\t// \tcustom_metadata[item.name] = item.values\n\t\t\t// } else {\n\t\t\t\tcustom_metadata[item.name] = item.defaultValue\n\t\t\t// }\n\n\t\t\tif(item.isRequired){\n\t\t\t\trequired.push(item.name);\n\t\t\t}\n\n\t\t\tif(item.inputType === \"dropdown\"){\n\t\t\t\tproperties[item.name] = {\n\t\t\t\t\t\"enum\": item.values\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tproperties[item.name] = {\n\t\t\t\t\t\"type\": item.valueType\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\tconst custom_metadata_schema = {\n\t\t\t\"properties\": properties,\n\t\t\t\"required\": required\n\t\t};\n\n\t\tlet edit_benefit_request;\n\n\t\tlet tree_id = this.state.selectedBenefit.tree_id;\n\t\tlet tree_path = this.state.selectedBenefit.tree_path;\n\t\ttree_path[tree_path.length-1] = this.state.code;\n\t\tlet temp = \"\";\n\t\ttree_path.forEach(item => {\n\t\t\tif(temp === \"\"){\n\t\t\t\ttemp = temp + item\n\t\t\t} else {\n\t\t\t\ttemp = temp + \"-\" + item\n\t\t\t}\n\t\t});\n\n\t\ttree_id = temp;\n\n\t\tedit_benefit_request = this.state.selectedBenefit;\n\t\tedit_benefit_request[\"tree_id\"] = tree_id;\n\t\tedit_benefit_request[\"tree_path\"] = tree_path;\n\t\tedit_benefit_request[\"name\"] = this.state.benefitName;\n\t\tedit_benefit_request[\"code\"] = this.state.code;\n\t\tedit_benefit_request[\"type\"] = this.state.category;\n\t\tedit_benefit_request[\"description\"] = this.state.description;\n\t\tedit_benefit_request[\"custom_metadata\"] = custom_metadata;\n\t\tedit_benefit_request[\"custom_metadata_schema\"] = custom_metadata_schema;\n\t\tedit_benefit_request[\"canAvail\"] = this.state.canAvail;\n\t\tedit_benefit_request[\"canCover\"] = this.state.canCover;\n\t\tedit_benefit_request[\"renderContract\"] = this.state.renderContract;\n\t\tedit_benefit_request[\"renderProposal\"] = this.state.renderProposal;\n\t\tedit_benefit_request[\"renderClause\"] = this.state.clause;\n\n\t\tif(limit_type !== \"\" && this.state.limitAmount != \"\"){\n\t\t\tedit_benefit_request[\"limits\"] = [{\n\t\t\t\t\"type\": limit_type,\n\t\t\t\t\"limit\": +this.state.limitAmount,\n\t\t\t\t\"limit_unit\": limit_unit,\n\t\t\t}];\n\t\t}\n\n\t\turl = EditBenefitURL + edit_benefit_request[\"_id\"];\n\n\t\tconsole.log('edit_benefit_request: ', edit_benefit_request);\n\t\tconsole.log('selected_benefit: ', this.state.selectedBenefit);\n\t\tconsole.log('url: ', url);\n\n\t\tthis.handleGetBenefitList().then(response => {\n\t\t\tthis.setState({\n\t\t\t\tloading: false\n\t\t\t});\n\t\t\tif(response){\n\t\t\t\tconst values: any[] = response.map(item => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: item._id,\n\t\t\t\t\t\tvalue: item._id,\n\t\t\t\t\t\tlabel: item.name,\n\t\t\t\t\t\ttype: item.type,\n\t\t\t\t\t\tlevel: item.level\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.setState({\n\t\t\t\t\texistingBenefits: values,\n\t\t\t\t\tbenefitsList: response,\n\t\t\t\t\tbenefitsListDisabled: false\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tif(JSON.stringify(edit_benefit_request) === JSON.stringify(this.state.selectedBenefit)){\n\t\t\tthis.setState({\n\t\t\t\tloading: true\n\t\t\t});\n\n\t\t\tthis.handleTempSaveBenefit(edit_benefit_request,url);\n\t\t} else {\n\t\t\tContractURL = RenderContractURL + edit_benefit_request.node_path[0] + ViewerPageMode;\n\t\t\t// ContractURL = RenderContractURL;\n\n\t\t\tthis.setState({\n\t\t\t\trenderContractModalVisible: true\n\t\t\t});\t\n\t\t}\n\t};\n\n\t/**\n\t * Shows Additional Data Field modal.\n\t */\n\tonAddFieldBtnClicked = () => {\n\t\tthis.setState({\n\t\t\taddDataFieldModalVisible: true,\n\t\t});\n\t};\n\n\t/**\n\t * Handles Additional Data Field modal close.\n\t */\n\tonAddDataFieldModalClose = () => {\n\t\tthis.setState({\n\t\t\taddDataFieldModalVisible: false,\n\t\t});\n\t};\n\n\t/**\n\t * Handles RenderContract modal close.\n\t */\n\tonRenderContractModalClose = () => {\n\t\tthis.setState({\n\t\t\trenderContractModalVisible: false,\n\t\t});\n\t};\n\n\t/**\n\t * Handles MethodContent modal close.\n\t */\n\tonMethodContentModalClose = () => {\n\t\tthis.setState({\n\t\t\tmethodContentModalVisible: false,\n\t\t\tmethod: '',\n\t\t\tcontent: ''\n\t\t});\n\t};\n\n\t/**\n\t * Handles Snackbar close.\n\t */\n\tonSnackbarClose = () => {\n\t\t// this.reset();\n\t\tthis.setState({\n\t\t\topenSnackbar: false,\n\t\t\t// variant: '',\n\t\t\t// snackbarMessage: ''\n\t\t});\n\t};\n\n\t/**\n\t * Handles Additional Data Field modal submit.\n\t */\n\tonAddDataFieldModalSubmit = (data: IDataField) => {\n\t\tthis.setState({\n\t\t\taddDataFieldModalVisible: false,\n\t\t\tadditionalDataFields: [...this.state.additionalDataFields, data],\n\t\t});\n\t};\n\n\t/**\n\t * Handles Method Content modal submit.\n\t */\n\tonMethodContentModalSubmit = (data: any) => {\n\t\tconst method = data.method;\n\t\tconst content = data.content;\n\t\tthis.setState({\n\t\t\tmethodContentModalVisible: false,\n\t\t\tmethod: '',\n\t\t\tcontent: ''\n\t\t});\n\t\tthis.setFieldValue(method, content);\n\t};\n\n\thandleGetBenefitList = () => {\n\t\tthis.setState({\n\t\t\tloading: true\n\t\t});\n\t\treturn fetch(GetBenefitsURL, {\n\t\t   \tmethod: 'get',\n\t\t   \theaders: {'Content-Type':'application/json'}\n\t\t}).then(response => response.json()\n\t\t).catch(error => {\n\t\t\tconsole.log('getbenefitlist api error: ', error);\n\t\t});\n\t}\n\n\thandleCreateBenefit = (data: any, url: string) => {\n\t\t//\tSample body\n\t\t// {\n\t\t// \t\t\"tree_id\": \"RNF\",\n\t\t// \t\t\"tree_path\": [\n\t\t// \t\t\t\"RNF\"\n\t\t// \t\t],\n\t\t// \t\t\"name\": \"Test RNF\",\n\t\t// \t\t\"code\": \"RNF\",\n\t\t// \t\t\"type\": \"PlanType\",\n\t\t// \t\t\"description\": \"\",\n\t\t// \t\t\"limits\": [],\n\t\t// \t\t\"revisions\": [],\n\t\t// \t\t\"metadata\": {},\n\t\t// \t\t\"metadata_schema\": {},\n\t\t// \t\t\"custom_metadata\": {},\n\t\t// \t\t\"custom_metadata_schema\": {},\n\t\t// \t\t\"layers\": []\n\t\t// \t}\n\t\tfetch(url, {\n\t\t   \tmethod: 'post',\n\t\t   \theaders: {'Content-Type':'application/json'},\n\t\t   \tbody: JSON.stringify(data)\n\t\t}).then(response => response.json())\n\t\t.then(response => {\n\t\t\tconsole.log('fetch api results: ', response);\n\t\t\tthis.setState({\n\t\t\t\tloading: false\n\t\t\t});\n\n\t\t\tif(response.error !== undefined){\n\t\t\t\tthis.setState({\n\t\t\t\t\topenSnackbar: true,\n\t\t\t\t\tvariant: 'error',\n\t\t\t\t\tsnackbarMessage: 'Error encountered'\n\t\t\t\t});\n\n\t\t\t\tthis.reset();\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tselectedBenefitName: '',\n\t\t\t\t\tselectedBenefitValue: '',\n\t\t\t\t\tparentBenefit: null,\n\t\t\t\t\topenSnackbar: true,\n\t\t\t\t\tvariant: 'success',\n\t\t\t\t\tsnackbarMessage: 'Benefit successfully added'\n\t\t\t\t});\n\n\t\t\t\tthis.handleGetBenefitList().then(response => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tloading: false\n\t\t\t\t\t});\n\t\t\t\t\tif(response){\n\t\t\t\t\t\tconst values: any[] = response.map(item => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tid: item._id,\n\t\t\t\t\t\t\t\tvalue: item._id,\n\t\t\t\t\t\t\t\tlabel: item.name,\n\t\t\t\t\t\t\t\ttype: item.type,\n\t\t\t\t\t\t\t\tlevel: item.level\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\texistingBenefits: values,\n\t\t\t\t\t\t\tbenefitsList: response,\n\t\t\t\t\t\t\tbenefitsListDisabled: false\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t}).catch(error => {\n\t\t\tconsole.log('create benefit api error: ', error);\n\t\t\tthis.setState({\n\t\t\t\tvariant: 'error',\n\t\t\t\tsnackbarMessage: error\n\t\t\t});\n\t\t});\n\t}\n\n\thandleEditBenefit = (data: any, url: string) => {\n\t\t//\tSample body\n\t\t// {\n\t\t// \t\t\"tree_id\": \"RNF\",\n\t\t// \t\t\"tree_path\": [\n\t\t// \t\t\t\"RNF\"\n\t\t// \t\t],\n\t\t// \t\t\"name\": \"Test RNF\",\n\t\t// \t\t\"code\": \"RNF\",\n\t\t// \t\t\"type\": \"PlanType\",\n\t\t// \t\t\"description\": \"\",\n\t\t// \t\t\"limits\": [],\n\t\t// \t\t\"revisions\": [],\n\t\t// \t\t\"metadata\": {},\n\t\t// \t\t\"metadata_schema\": {},\n\t\t// \t\t\"custom_metadata\": {},\n\t\t// \t\t\"custom_metadata_schema\": {},\n\t\t// \t\t\"layers\": []\n\t\t// \t}\n\t\tfetch(url, {\n\t\t   \tmethod: 'PATCH',\n\t\t   \theaders: {'Content-Type':'application/json'},\n\t\t   \tbody: JSON.stringify(data)\n\t\t}).then(response => {\n\t\t\tconsole.log('fetch api results: ', response);\n\t\t\tthis.setState({\n\t\t\t\tloading: false\n\t\t\t});\n\n\t\t\tthis.setState({\n\t\t\t\tselectedBenefitName: '',\n\t\t\t\tselectedBenefitValue: '',\n\t\t\t\tparentBenefit: null,\n\t\t\t\topenSnackbar: true,\n\t\t\t\tvariant: 'success',\n\t\t\t\tsnackbarMessage: 'Benefit successfully updated'\n\t\t\t});\n\n\t\t\tthis.handleGetBenefitList().then(response => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tloading: false\n\t\t\t\t});\n\t\t\t\tif(response){\n\t\t\t\t\tconst values: any[] = response.map(item => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid: item._id,\n\t\t\t\t\t\t\tvalue: item._id,\n\t\t\t\t\t\t\tlabel: item.name,\n\t\t\t\t\t\t\ttype: item.type,\n\t\t\t\t\t\t\tlevel: item.level\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\texistingBenefits: values,\n\t\t\t\t\t\tbenefitsList: response,\n\t\t\t\t\t\tbenefitsListDisabled: false\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.reset();\n\t\t}).catch(error => {\n\t\t\tconsole.log('edit benefit api error: ', error);\n\t\t\tthis.setState({\n\t\t\t\tvariant: 'error',\n\t\t\t\tsnackbarMessage: 'Error encountered.',\n\t\t\t\tloading: false\n\t\t\t});\n\t\t});\n\t}\n\n\tshowMethodContent = (method: string) => {\n\t\tthis.setFieldValue('method',method);\n\t\tthis.setFieldValue('content',this.state[method]);\n\t\tthis.setFieldValue('methodContentModalVisible',true);\n\t}\n\n\tpublic render(): JSX.Element {\n\t\tconst {\n\t\t\tselectedBenefitName,\n\t\t\tselectedBenefitValue,\n\t\t\tcategory,\n\t\t\tbenefitName,\n\t\t\tbenefitNameError,\n\t\t\tcode,\n\t\t\tcodeError,\n\t\t\tlimitTypeName,\n\t\t\tlimitTypeError,\n\t\t\tlimitTypeErrorMessage,\n\t\t\tlimitAmount,\n\t\t\tlimitAmountError,\n\t\t\tlimitAmountErrorMessage,\n\t\t\tclause,\n\t\t\tclauseError,\n\t\t\tdescription,\n\t\t\tdescriptionError,\n\t\t\texistingBenefits,\n\t\t\tbenefitsListDisabled,\n\t\t\tcategories,\n\t\t\tlimitTypes,\n\t\t\taddDataFieldModalVisible,\n\t\t\trenderContractModalVisible,\n\t\t\tmethodContentModalVisible,\n\t\t\tmethod,\n\t\t\tcontent,\n\t\t\tcreateButtonDisabled,\n\t\t\teditButtonDisabled,\n\t\t\trenderContractDisabled,\n\t\t\tloading,\n\t\t\tselected,\n\t\t\topenSnackbar,\n\t\t\tvariant,\n\t\t\tsnackbarMessage\n\t\t} = this.state;\n\n\t\treturn (\n\t\t\t<div className={clsx('CreateBenefitPage')}>\n\t\t\t\t<Grid container spacing={2} justify=\"space-between\" alignItems=\"flex-start\">\n\t\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\">\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t{loading && <CircularProgress className={clsx('loading-indicator')} />}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Breadcrumbs aria-label=\"breadcrumb\">\n\t\t\t\t\t\t\t<Typography color=\"textPrimary\">BENEFITS</Typography>\n\t\t\t\t\t\t\t<Typography color=\"textPrimary\">CREATE BENEFIT</Typography>\n\t\t\t\t\t\t</Breadcrumbs>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Grid container justify=\"flex-start\" alignItems=\"flex-start\">\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<Typography className={clsx('title')} color=\"textPrimary\">\n\t\t\t\t\t\t\t\t\tAdd a Benefit\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Grid container justify=\"space-between\" alignItems=\"flex-start\">\n\t\t\t\t\t\t\t<Grid item xs={12} md={7}>\n\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\tspacing={2}\n\t\t\t\t\t\t\t\t\tjustify=\"space-between\"\n\t\t\t\t\t\t\t\t\talignItems=\"flex-start\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<BenefitTreeSelect\n\t\t\t\t\t\t\t\t\t\t\tid=\"parent-benefit-select\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Copy from an existing benefit\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={selectedBenefitValue}\n\t\t\t\t\t\t\t\t\t\t\tdisplay={selectedBenefitName}\n\t\t\t\t\t\t\t\t\t\t\tdata={existingBenefits}\n\t\t\t\t\t\t\t\t\t\t\tselected={selected}\n\t\t\t\t\t\t\t\t\t\t\terror={false}\n\t\t\t\t\t\t\t\t\t\t\trequired={false}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={benefitsListDisabled}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(item: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldValue('parentBenefit', item);\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setBenefitData(item.id);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\t\t\tspacing={4}\n\t\t\t\t\t\t\t\t\t\t\tjustify=\"space-between\"\n\t\t\t\t\t\t\t\t\t\t\talignItems=\"flex-start\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t\t\t\t\t\t\t<InputSelectSetValue\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"parent-benefit-select\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Category\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={category}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={categories}\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={false}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(item: ISelectSetItem) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldValue('category', item.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t\t\t\t\t\t\t<InputTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Benefit Name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={benefitName}\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={benefitNameError}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldValue('benefitName', value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldError(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'benefitNameError',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue.length === 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\t\t\tspacing={4}\n\t\t\t\t\t\t\t\t\t\t\tjustify=\"space-between\"\n\t\t\t\t\t\t\t\t\t\t\talignItems=\"flex-start\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={6} lg={4}>\n\t\t\t\t\t\t\t\t\t\t\t\t<InputTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Code\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={code}\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={codeError}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldValue('code', value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldError(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'codeError',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue.length === 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={6} lg={4}>\n\t\t\t\t\t\t\t\t\t\t\t\t<InputSelectSetValue\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"limit-type-select\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Limit Type\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={limitTypeName}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={limitTypes}\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={limitTypeError}\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessage={limitTypeErrorMessage}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(item: ISelectSetItem) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldValue('limitType', item);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldValue('limitTypeName', item.value);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldError(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'limitTypeError',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem === undefined\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(limitAmount.length > 0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldError(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'limitAmountError', \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tLimitTypes.map(item2 => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(item2.value === item.value){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(item2.unit === \"Percentage\"){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldError(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'limitAmountError',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+limitAmount > 100,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldValue('limitAmountErrorMessage', 'Amount must be less than 100');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// this.setFieldError(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t'limitAmountError',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t+value >= 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// this.setFieldValue('limitAmountErrorMessage', '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={6} lg={4}>\n\t\t\t\t\t\t\t\t\t\t\t\t<InputTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Limit Amount\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={limitAmount}\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={limitAmountError}\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessage={limitAmountErrorMessage}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldValue('limitAmount', value);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(limitTypeName === \"\"){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(value !== \"\"){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldError(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'limitTypeError',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldValue('limitTypeErrorMessage', 'Please select limit type');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldError(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'limitTypeError',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// this.setFieldValue('limitTypeErrorMessage', 'Please select limit type');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLimitTypes.map(item => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('iterate limit type: ',item);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(item.value === limitTypeName){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(item.unit === \"Percentage\"){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldError(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'limitAmountError',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+value > 100,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldError(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'limitAmountError',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue.length === 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldValue('limitAmountErrorMessage', 'Amount must be less than 100');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('limit amount: ',+value > 100);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// this.setFieldError(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t'limitAmountError',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t+value >= 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldValue('limitAmountErrorMessage', 'Please input limit amount');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldError(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'limitAmountError',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue.length === 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\t\t\tspacing={4}\n\t\t\t\t\t\t\t\t\t\t\tjustify=\"space-between\"\n\t\t\t\t\t\t\t\t\t\t\talignItems=\"flex-start\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t\t\t\t<InputTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Clause\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={clause}\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={clauseError}\n\t\t\t\t\t\t\t\t\t\t\t\t\tmultiline={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\trows={5}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldValue('clause', value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldError(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'clauseError',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue.length === 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t\t\t\t<InputTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Description\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={descriptionError}\n\t\t\t\t\t\t\t\t\t\t\t\t\tmultiline={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\trows={5}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldValue('description', value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setFieldError(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'descriptionError',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue.length === 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12} md={4}>\n\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\tspacing={3}\n\t\t\t\t\t\t\t\t\tjustify=\"space-between\"\n\t\t\t\t\t\t\t\t\talignItems=\"flex-start\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\t\t\tspacing={2}\n\t\t\t\t\t\t\t\t\t\t\tjustify=\"space-between\"\n\t\t\t\t\t\t\t\t\t\t\talignItems=\"flex-start\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography color=\"textPrimary\">Methods</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\t\t\t\txs={12}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={clsx('methods-container')}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\t\t\t\t\tspacing={2}\n\t\t\t\t\t\t\t\t\t\t\t\t\tjustify=\"space-between\"\n\t\t\t\t\t\t\t\t\t\t\t\t\talignItems=\"flex-start\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'methods-container-item-container',\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={5}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={clsx('text-btn')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.showMethodContent(\"canAvail\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcanAvail\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={5}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={clsx('text-btn')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.showMethodContent(\"renderContract\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trenderContract\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={5}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={clsx('text-btn')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.showMethodContent(\"canCover\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcanCover\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={5}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={clsx('text-btn')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.showMethodContent(\"renderProposal\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trenderProposal\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\t\t\tspacing={2}\n\t\t\t\t\t\t\t\t\t\t\tjustify=\"space-between\"\n\t\t\t\t\t\t\t\t\t\t\talignItems=\"flex-start\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography color=\"textPrimary\">Arrays</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={clsx('arrays-container')}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\t\t\t\t\tspacing={2}\n\t\t\t\t\t\t\t\t\t\t\t\t\tjustify=\"space-between\"\n\t\t\t\t\t\t\t\t\t\t\t\t\talignItems=\"flex-start\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'arrays-container-item-container',\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={5}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography color=\"textPrimary\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchildren\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={5}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography color=\"textPrimary\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclaims\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={5}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography color=\"textPrimary\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLOA\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={7}>\n\t\t\t\t\t\t<Grid container spacing={2} justify=\"space-between\" alignItems=\"flex-start\">\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t<Typography className={clsx('sub-title')} color=\"textPrimary\">\n\t\t\t\t\t\t\t\t\t\tAdditional Data\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\tspacing={2}\n\t\t\t\t\t\t\t\t\tjustify=\"space-between\"\n\t\t\t\t\t\t\t\t\talignItems=\"flex-start\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.displayAdditionalDataFields()}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<Button color=\"primary\" onClick={this.onAddFieldBtnClicked}>\n\t\t\t\t\t\t\t\t\t+ Add more Data Fields\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} className={clsx('create-benefit-btn-container')}>\n\t\t\t\t\t\t<Grid container spacing={2} justify=\"flex-end\" alignItems=\"flex-start\">\n\t\t\t\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tonClick={this.onRenderContractBtnClick}\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tdisabled={renderContractDisabled}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tRender Contract\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tonClick={this.onEditBenefitBtnClick}\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tdisabled={editButtonDisabled}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tEdit Benefit\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tonClick={this.onCreateBenefitBtnClick}\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tdisabled={createButtonDisabled}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tCreate New Benefit\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<AddDataFieldModal\n\t\t\t\t\tisModalOpen={addDataFieldModalVisible}\n\t\t\t\t\tonClose={this.onAddDataFieldModalClose}\n\t\t\t\t\tonSubmit={this.onAddDataFieldModalSubmit}\n\t\t\t\t/>\n\t\t\t\t<MethodContentModal\n\t\t\t\t\tid='method_content_modal'\n\t\t\t\t\tisModalOpen={methodContentModalVisible}\n\t\t\t\t\tmethod={method}\n\t\t\t\t\tcontent={content}\n\t\t\t\t\tonClose={this.onMethodContentModalClose}\n\t\t\t\t\tonSubmit={this.onMethodContentModalSubmit}\n\t\t\t\t/>\n\t\t\t\t<RenderPdfModal\n\t\t\t\t\tid='render_pdf_modal'\n\t\t\t\t\tisModalOpen={renderContractModalVisible}\n\t\t\t\t\tpdfUrl={ContractURL}\n\t\t\t\t\tonClose={this.onRenderContractModalClose}\n\t\t\t\t/>\n\t\t\t\t\n\n\t\t\t\t<Snackbar\n\t\t\t        anchorOrigin={{\n\t\t\t          vertical: 'bottom',\n\t\t\t          horizontal: 'right',\n\t\t\t        }}\n\t\t\t        open={openSnackbar}\n\t\t\t        autoHideDuration={6000}\n\t\t\t        onClose={this.onSnackbarClose}\n\t\t\t    >\n\t\t\t        <MySnackbarContentWrapper\n\t\t\t          onClose={this.onSnackbarClose}\n\t\t\t          variant={variant}\n\t\t\t          message={snackbarMessage}\n\t\t\t        />\n\t\t\t    </Snackbar>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state: Store) => state.createBenefitPage;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tMap: bindActionCreators(CreateBenefitPageActions.Map, dispatch),\n});\n\nexport { mapStateToProps, mapDispatchToProps };\n\n/**\n * Notes:\n * Limit Types(Hard coded): ABL, MBL, PEC (Pre-existing condition)\n */\n"],"sourceRoot":""}