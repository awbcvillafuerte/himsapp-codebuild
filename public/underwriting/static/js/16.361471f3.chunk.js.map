{"version":3,"sources":["Pages/ProposalList/Components/ProposalListTable2/index.tsx","Pages/ProposalList/ProposalListPage.tsx","Components/UI/ReportPopover/index.tsx"],"names":["textFieldStyles","makeStyles","root","backgroundColor","color","datePickerStyles","keyboardDatePicker","width","Select","items","restProps","variant","style","renderValue","selected","value","find","item","label","map","i","key","StatusItems","ProposalsFilterCell","props","column","filter","onFilter","filteringEnabled","classes","datePickerClasses","name","onChange","e","target","id","padding","format","inputVariant","className","invalidDateMessage","date","console","log","labelWidth","placeholder","SortingIcon","direction","marginLeft","icon","faSortUp","faSortDown","ProposalsSortLabel","onSort","children","hideSortIcon","onClick","faSort","ProposalsTable2","rows","columns","formattedColumns","disablePaging","disableSearch","disableSort","disableFilter","columnExtensions","dropdownHeader","totalCount","currentPage","limit","onPageChange","onPageSizeChange","defaultFilter","columnFilteringEnabled","filterExtensions","onFilterChange","onSearchChange","onSortingChange","onRowClick","sorting","useState","selection","setSelection","pageSizes","dataTypeProviders","TextFormatter","textFieldClasses","undefined","push","formatterComponent","for","text","onCurrentPageChange","page","pageSize","onValueChange","defaultSorting","onSelectionChange","newSelection","lastSelected","indexOf","defaultFilters","filters","onFiltersChange","selectByRowClick","showSelectionColumn","showSortingControls","sortLabelComponent","cellComponent","defaultProps","toolbarType","a","b","useStyles","theme","main","searchInputAdornment","marginRight","gridContainer","spacing","gridContainerNoPadding","headerTitle","fontSize","fontWeight","sectionTitle","subSectionTitle","fieldGroupTitle","listItemTextRoot","flex","listItemTextPrimarySelected","cursor","listItemTextPrimaryNotSelected","dropzone","height","marginTop","marginBottom","border","borderRadius","display","justifyContent","alignItems","flexDirection","inputLabel","checkbox","radio","appBar","top","bottom","breakpoints","up","grow","flexGrow","button","margin","minHeight","minWidth","buttonTitle","buttonSubTitle","searchField","filtersForApi","where","order","currentSortAttr","ProposalListPage","loading","setLoading","setRows","setPage","setSorting","setDefaultFilters","PropListTable","setPropListTable","renderTable","setRenderTable","largeSearch","setLargeSearch","redirect","setRedirect","redirectType","setRedirectType","anchorEl","setAnchorEl","popoverOpen","Boolean","largeDateSearch","setLargeDateSearch","exportData","setExportData","exportFormat","setExportFormat","typingTimeout","setTypingTimeout","clientIDtoDownload","setClientIDtoDownload","registeredNametoDownload","setRegisteredNametoDownload","proposalToDownload","setProposalToDownload","downloadProposal","setDownloadProposal","handleActionButton","status","proposalID","clientName","clientID","handleLoadProposalsFromAPI","skip","JSON","stringify","withCount","API","getProposal","then","response","proposals","error","total","status_active","status_approved","status_for_revision","status_signed","tmp","col","effdate","custom_metadata","coverage_start_date","coverage_end_date","Date","toLocaleDateString","year","day","month","account","client","registered_name","version","proposal_no","proposal_number","effectivity_date","bdobroker","sales_channel","contact_person","date_created","date_modified","date_updated","action","Button","_id","client_id","proposallistcolumn","title","useEffect","columnName","wordWrapEnabled","textAlign","handleRowClick","row","handleSortChange","sort","mask","field","handlePageChange","handlePageSizeChange","handleSearch","clearTimeout","setTimeout","handleFilterByColumn","length","tmpfilter","fil","like","options","lte","moment","toString","gte","concat","Grid","container","xs","paddingTop","paddingBottom","overflowX","to","pathname","justify","Typography","alignContent","Box","p","Link","currentTarget","faDownload","faPlus","paddingRight","TextField","fullWidth","event","search_value","trim","inputProps","InputProps","startAdornment","faSearch","endAdornment","faCalendar","Paper","maxWidth","ReportPopover","open","onClose","onChangeExportData","onChangeExportFormat","generateReport","RendererClass","fileType","download","setDownload","hideButton","renderType","objId","onError","onStartDownload","dialogAction","anchorOrigin","vertical","horizontal","transformOrigin","component","control","checked","stopPropagation","clsx"],"mappings":"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","file":"static/js/16.361471f3.chunk.js","sourcesContent":["//#region Global Imports\nimport * as React from 'react';\nimport { useState } from 'react';\nimport {\n\tGrid,\n\tTable,\n\tTableHeaderRow,\n\tTableFilterRow,\n\t//Toolbar,\n\t//SearchPanel,\n\tPagingPanel,\n\tTableSelection, \n} from '@devexpress/dx-react-grid-material-ui';\nimport {\n\tPagingState,\n\tCustomPaging,\n\tFilteringState,\n\tSortingState,\n\tSearchState,\n\tDataTypeProvider,\n\tSelectionState,\n\tIntegratedSelection\n} from '@devexpress/dx-react-grid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n\tfaSort,\n\tfaSortUp,\n\tfaSortDown,\n\t// faPlus,\n\t// faCheck, \n\t// faTimes\n} from '@fortawesome/free-solid-svg-icons';\nimport { makeStyles } from '@material-ui/styles';\nimport * as MaterialUI from '@material-ui/core';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\n//import { Components } from '@hims/core';\n//#endregion Global Imports\n\nconst textFieldStyles = makeStyles({\n\troot: {\n\t\t'& > div': {\n\t\t\tbackgroundColor: 'transparent',\n\t\t}, \n\t\t'& .Mui-disabled': {\n\t\t\tcolor: \"#272E4C\"\n\t\t}\t\n\t}\n});\n\nconst datePickerStyles = makeStyles({\n\tkeyboardDatePicker: {\n\t\t// marginTop: '10px',\n\t\t// marginBottom: '20px',\n\t\twidth: '100%',\n\t},\n});\nconst Select = ({ items, ...restProps  }: any) => {\n\treturn (\n\t\t<MaterialUI.Select\n\t\t\tvariant='outlined'\n\t\t\tstyle={{ width: '100%' }}\n\t\t\trenderValue={(selected: any) => {\n\t\t\t\tif (selected != null) {\n\t\t\t\t\tconst value: any = items.find((item: any) => {\n\t\t\t\t\t\treturn item.value === selected;\n\t\t\t\t\t});\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\treturn value.label;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '——';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn '——';\n\t\t\t}}\n\t\t\t{...restProps}\n\t\t>\n\t\t\t{items.map((item: any, i: number) => (\n\t\t\t\t<MaterialUI.MenuItem key={i} value={item.value}>\n\t\t\t\t\t{item.label}\n\t\t\t\t</MaterialUI.MenuItem>\n\t\t\t))}\n\t\t</MaterialUI.Select>\n\t);\n};\nconst StatusItems = [\n\t{ label: '', value: '' },\n\t{ label: 'Active', value: 'Active' },\n\t{ label: 'Approved', value: 'Approved' },\n\t{ label: 'Disapproved', value: 'Disapproved' },\n\t{ label: 'For Approval', value: 'For Approval' },\n\t{ label: 'Signed', value: 'Signed' },\n\t{ label: 'For Revision', value: 'For Revision' },\n\t{ label: 'Submitted', value: 'Submitted' },\n\t{ label: 'Resubmitted', value: 'Resubmitted' },\n];\n\nconst ProposalsFilterCell = (props: any) => {\n  \tconst { column, filter, onFilter, filteringEnabled, classes } = props;\n\tconst datePickerClasses = datePickerStyles();\n\tif (filteringEnabled) {\n\t\tif (column.name === 'status') {\n\t\t\tconst items = StatusItems;\n\n\t\t\treturn \t<Select\n\t\t\t\t\t\tonChange={e => onFilter(e.target.value ? { value: e.target.value } : null)}\n\t\t\t\t\t\tname={'status'}\n\t\t\t\t\t\titems={items}\n\t\t\t\t\t\tid={'status'}\n\t\t\t\t\t\tvalue={filter ? filter.value : ''}\n\t\t\t\t\t/>;\n\t\t} else if (column.name === 'effectivity_date' \n\t\t\t\t\t|| column.name === 'date_created' \n\t\t\t\t\t|| column.name === 'date_modified' ) {\n\t\t\treturn (\n\t\t\t\t<MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px' }} classes={classes}>\n\t\t\t\t\t<KeyboardDatePicker\n\t\t\t\t\t\tvariant=\"dialog\"\n\t\t\t\t\t\tformat=\"MMMM DD, YYYY\"\n\t\t\t\t\t\tinputVariant=\"outlined\"\n\t\t\t\t\t\tclassName={datePickerClasses.keyboardDatePicker}\n\t\t\t\t\t\tvalue={filter ? filter.value : ''}\n\t\t\t\t\t\tinvalidDateMessage=\"\"\n\t\t\t\t\t\tonChange={date => {console.log(date); onFilter(date ? { value: date } : null)}}\n\t\t\t\t\t/>\n\t\t\t\t</MaterialUI.TableCell>\n\t\t\t);\n\t\t} else if(column.name === 'action') {\n\t\t\treturn (\n\t\t\t\t<MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px' }} classes={classes}>\n\t\t\t\t\n\t\t\t\t</MaterialUI.TableCell>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px' }} classes={classes}>\n\t\t\t\t\t<MaterialUI.OutlinedInput\n\t\t\t\t\t\tclasses={classes}\n\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t\tvalue={filter ? filter.value : ''}\n\t\t\t\t\t\tlabelWidth={0}\n\t\t\t\t\t\tonChange={e => {console.log('filter changed');onFilter(e.target.value ? { value: e.target.value } : null)}}\n\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t/>\n\t\t\t\t</MaterialUI.TableCell>\n\t\t\t);\n\t\t}\n\t} \n\treturn null;\n}\n// const ProposalsPager = ({totalCount}: any) => {\n// \treturn (\n// \t\t<div style={pagerStyles}>\n// \t\t\t<MaterialUI.Typography>\n// \t\t\t\t1 - 10 out of {totalCount} Proposals\n// \t\t\t</MaterialUI.Typography>\n// \t\t\tShow 10\n// \t\t\tPrev\n// \t\t</div>\n// \t)\n// }\n\n/*const DefaultProposalsToolbar = ({ children }: any) => {\n\treturn <MaterialUI.Toolbar disableGutters={true} children={children} />;\n};*/\n\nconst SortingIcon = ({ direction }: any) =>\n\tdirection === 'asc' ? (\n\t\t<FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortUp} />\n\t) : (\n\t\t<FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortDown} />\n\t);\n\nconst ProposalsSortLabel = ({ onSort, children, direction }: any) => {\n\t//console.log('children ',children)\n\treturn (\n\t\t<MaterialUI.TableSortLabel hideSortIcon={true} onClick={onSort}>\n\t\t\t{children}\n\t\t\t{children.props && children.props.children !== 'Action' ? direction ? (\n\t\t\t\t<SortingIcon direction={direction} />\n\t\t\t) : (\n\t\t\t\t<FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSort} />\n\t\t\t) : ''}\n\t\t</MaterialUI.TableSortLabel>\n\t);\n};\n\ninterface ProposalsTableProps {\n\trows: any[];\n\tcolumns: any[];\n\tcolumnExtensions?: any[];\n\tsorting?: any[];\n\tformattedColumns?: any;\n\tdisableSearch?: boolean;\n\tdropdownHeader?: boolean;\n\tdisablePaging?: boolean;\n\tdisableFilter?: boolean;\n\tdisableSort?: boolean;\n\ttoolbarType?: string | null;\n  \ttotalCount: number;\n\tcurrentPage: number;\n\tlimit: number;\n\tcolumnFilteringEnabled?: boolean;\n\tfilterExtensions?: any[];\n\tdefaultFilter?: any[];\n  \tonSearchChange: (value: string) => void;\n  \tonFilterChange: (filters: any) => void;\n  \tonPageChange: (currentPage: any, skip: any) => void;\n  \tonPageSizeChange: (value: number) => void;\n  \tonSortingChange: (sorting: any) => void;\n  \tonRowClick: (row: number) => void;\n}\n\nconst defaultProps: ProposalsTableProps = {\n\trows: [],\n\tcolumns: [],\n\tcolumnExtensions: [],\n  \tfilterExtensions: [],\n  \tsorting: [],\n\tformattedColumns: {},\n\tdropdownHeader: false,\n\tdisableSearch: false,\n\tdisablePaging: false,\n\tdisableFilter: false,\n\tdisableSort: false,\n\ttoolbarType: null,\n  \ttotalCount: 0,\n\tcurrentPage: 0,\n\tlimit: 10,\n\tdefaultFilter: [],\n\tcolumnFilteringEnabled: true,\n\tonSearchChange: (a) => console.log(\"onSearchChange\", a),\n\tonFilterChange: (a) => console.log(\"onFilterChange\", a),\n\tonPageChange: (a, b) => console.log(\"onPageChange\", a, b),\n\tonPageSizeChange: (a) => console.log(\"onPageSizeChange\", a),\n\tonSortingChange: (a) => console.log(\"onSortingChange\", a),\n\tonRowClick: (a) => console.log(\"onRowClick\", a),\n};\n\nexport const ProposalsTable2: React.FC<ProposalsTableProps> = (\n\tprops: ProposalsTableProps,\n): JSX.Element => {\n\tconst {\n\t\trows,\n\t\tcolumns,\n\t\tformattedColumns,\n\t\tdisablePaging,\n\t\tdisableSearch,\n\t\tdisableSort,\n\t\tdisableFilter,\n\t\t//toolbarType,\n\t\tcolumnExtensions,\n\t\tdropdownHeader,\n\t    totalCount,\n\t    currentPage,\n\t    limit,\n\t    onPageChange,\n\t    onPageSizeChange,\n\t    defaultFilter,\n\t    columnFilteringEnabled,\n\t    filterExtensions,\n\t    onFilterChange,\n\t    onSearchChange,\n\t    onSortingChange,\n\t    onRowClick,\n\t    sorting\n\t} = props;\n\tconst [selection, setSelection] = useState<number[]>([]);\n\tconst [pageSizes] = useState([5, 10, 15, 0]);\n  \t// const [sorting, setSorting] = useState([]);\n\n\t//let toolbar = DefaultProposalsToolbar;\n\n\tconst dataTypeProviders: any[] = [];\n\n\tfunction handleSelectionChange(newSelection: any[]) {\n        const lastSelected = newSelection.find(\n          (selected: number) => selection.indexOf(selected) === -1,\n        );\n\n        if (lastSelected !== undefined) {\n        \tonRowClick(lastSelected);\n          \tsetSelection([lastSelected]);\n        }\n\t}\n\n\tconst TextFormatter = ({ value }: any) => {\n\t\tconst textFieldClasses = textFieldStyles();\n\t\treturn <MaterialUI.TextField value={value} classes={textFieldClasses} />;\n\t};\n\n\tconst TextDataTypeProvider = (props: any) => (\n\t\t<DataTypeProvider formatterComponent={TextFormatter} {...props} />\n\t);\n\n\tif (formattedColumns !== undefined) {\n\t\tif (formattedColumns['text'] !== undefined) {\n\t\t\tdataTypeProviders.push(<TextDataTypeProvider for={formattedColumns.text} />);\n\t\t}\n\t}\n\n\tconst setCurrentPageMethod = (page) => {\n\t    let skip = (limit * page);\n\n\t    onPageChange(page, skip);\n\t}\n\n\n\tconst changePageSize = (value) => {\n\t    onPageSizeChange(value);\n\t}\n\n\treturn (\n\t\t\t<Grid rows={rows} columns={columns}>\n\t\t\t\t{dataTypeProviders}\n\n\t\t\t\t{/* States */}\n\n\t\t\t\t{!disablePaging ? (\n\t\t\t\t\t<PagingState\n\t\t\t\t\t\tcurrentPage={currentPage}\n\t\t\t\t\t\tonCurrentPageChange={setCurrentPageMethod}\n\t\t\t\t\t\tpageSize={limit}\n            \t\t\tonPageSizeChange={changePageSize}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\n\t\t\t\t{!disablePaging ? <CustomPaging totalCount={totalCount} /> : null}\n\n\t\t\t\t{!disableSearch ? <SearchState onValueChange={onSearchChange} /> : null}\n\n\t\t\t\t{!disableSort ? (\n\t\t\t\t\t<SortingState \n\t\t\t\t\t\tdefaultSorting={[]} \n\t\t\t\t\t\tsorting={sorting}\n\t\t\t\t\t\tonSortingChange={onSortingChange}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\n\t\t\t\t<SelectionState\n\t\t\t\t\tselection={selection}\n\t\t\t\t\tonSelectionChange={handleSelectionChange}\n\t\t\t\t/>\n\t\t\t\t<IntegratedSelection />\n\n\t\t\t\t{!disableFilter ? \n\t\t\t\t\t<FilteringState \n\t\t\t\t\t\tdefaultFilters={[]} \t\n\t\t\t            filters={\n\t\t\t              defaultFilter !== undefined ? defaultFilter : []\n\t\t\t            }\n\t\t\t            columnFilteringEnabled={columnFilteringEnabled}\n\t\t\t            columnExtensions={filterExtensions}\n\t\t\t            onFiltersChange={onFilterChange}\n\t\t\t\t\t/> : null}\n\n\t\t\t\t<Table  columnExtensions={columnExtensions} />\n\n\t\t\t\t<TableSelection\n\t\t\t\t\tselectByRowClick\n\t\t\t\t\tshowSelectionColumn={false}\n\t\t\t\t/>\n\n\t\t\t\t{!dropdownHeader ? (\n\t\t\t\t\t<TableHeaderRow\n\t\t\t\t\t\tshowSortingControls={!disableSort}\n\t\t\t\t\t\tsortLabelComponent={ProposalsSortLabel}\n\t\t\t\t\t/> ) : null\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t{!disableFilter ? <TableFilterRow cellComponent={ProposalsFilterCell} /> : null}\n\n\t\t\t\t\n\n\t\t\t\t{!disablePaging ? <PagingPanel pageSizes={pageSizes} /> : null}\n\t\t\t</Grid>\n\t); \n};\n\nProposalsTable2.defaultProps = defaultProps;\n","import React, { useState, useEffect }  from 'react';\n\n//import { bindActionCreators, Dispatch } from 'redux';\n//import { Store } from 'Components/Stores/IStore';\n//import { ClientActions } from './ClientActions';\n//import { GlobalFunction } from 'Components/UI/GlobalFunction';\nimport { LoadingIndicator } from 'Components/UI/';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload, faPlus,faSearch,faCalendar } from '@fortawesome/free-solid-svg-icons';\n//import { ProposalTable } from './Components/ProposalListTable';\nimport { ProposalsTable2 } from './Components/ProposalListTable2/index';\nimport { Grid, Box, Typography, Link, Button } from '@material-ui/core/';\nimport { Redirect } from 'react-router-dom';\n//import { PositionProperty } from 'csstype';\nimport { ReportPopover } from 'Components/UI/ReportPopover';\n//import { GlobalFunction } from 'Components/UI/GlobalFunction';\nimport { \n    //TableRow,\n    //TableCell,\n    TextField,\n    Paper,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { API } from '../API';\n//import { IconButton } from './Components/IconButton';\n//import { InputField } from './Components/InputField';\nimport {\n\tGridHorizontalDivider\n} from 'Components/UI';\nimport moment from 'moment';\nimport { RendererClass } from '../CreateProposal/Components/RendererClass';\n//import { Processmaker  } from '../Processmaker';\n// import { Processmaker } from '../Processmaker';\n// import { ConfirmationModal } from './Components/Modal/ConfirmationModal';\n\n// import {\n// \tGrid,\n// \tAvatar,\n// \tTypography,\n// \tList,\n// \tListItem,\n// \tListItemText,\n// \tCard,\n// \tCardContent,\n// \tBadge,\n// } from '@material-ui/core';\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\n\nconst useStyles = makeStyles(theme => ({\n\tmain:{\n\t\tbackgroundColor: '#F5F7FB',\n\t\tpadding: '32px 24px'\n    },\n    searchInputAdornment:{\n        color: '#00000061',\n          marginRight: '8px',\n    },\n\tgridContainer: {\n\t\tpadding: theme.spacing(1),\n\t\t// paddingBottom: '75px'\n\t},\n\tgridContainerNoPadding: {\n\t\tpadding: theme.spacing(1),\n\t},\n\theaderTitle: {\n\t\tfontSize: 32,\n\t\tfontWeight: 700,\n\t},\n\tsectionTitle: {\n\t\tfontSize: 24,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\tsubSectionTitle: {\n\t\tfontSize: 16,\n\t\tfontWeight: 400,\n\t\tcolor: '#272e4c',\n\t},\n\tfieldGroupTitle: {\n\t\tfontSize: 13,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\tlistItemTextRoot: {\n\t\tflex: 'none',\n\t},\n\tlistItemTextPrimarySelected: {\n\t\tfontSize: 14,\n\t\tfontWeight: 700,\n\t\tcolor: 'rgba(39, 46, 76, 1)',\n\t\tcursor: 'pointer',\n\t},\n\tlistItemTextPrimaryNotSelected: {\n\t\tfontSize: 14,\n\t\tfontWeight: 700,\n\t\tcolor: 'rgba(39, 46, 76, 0.3)',\n\t\tcursor: 'pointer',\n\t},\n\tdropzone: {\n\t\twidth: '460px',\n\t\theight: '88px',\n\t\tmarginTop: '10px',\n\t\tmarginBottom: '20px',\n\t\tborder: '2px dashed rgba(30, 32, 113, 0.3)',\n\t\tborderRadius: '5px',\n\t\tbackgroundColor: '#e6e8ee',\n\t\tcolor: '#7b8094',\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tflexDirection: 'column',\n\t},\n\tinputLabel: {\n\t\tcolor: '#272e4c',\n\t},\n\tkeyboardDatePicker: {\n\t\tmarginTop: '10px',\n\t\tmarginBottom: '20px',\n\t\twidth: '212px',\n\t},\n\tcheckbox: {\n\t\t'&.Mui-checked': {\n\t\t\tcolor: '#1e2071',\n\t\t},\n\t},\n\tradio: {\n\t\t'&.Mui-checked': {\n\t\t\tcolor: '#1e2071',\n\t\t},\n\t},\n\tappBar: {\n\t\ttop: 'auto',\n\t\tbottom: 0,\n\t\tborder: '1px solid #707070',\n\t\tbackgroundColor: 'rgba(54, 54, 54, 0.64)',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: 'calc(100% - 72px)',\n\t\t},\n\t},\n\tgrow: {\n\t\tflexGrow: 1,\n\t},\n\tbutton: {\n\t\tmargin: '0 10px',\n\t\tminHeight: '42px',\n\t\tminWidth: '150px',\n\t},\n\tbuttonTitle: {\n\t\tfontWeight: 700,\n\t\tfontSize: 13,\n\t},\n\tbuttonSubTitle: {\n\t\tfontWeight: 400,\n\t\tfontSize: 7,\n    },\n    searchField: {\n        backgroundColor: 'white',\n    },\n}));\n\nconst filtersForApi = {\n  where: {}\n}\nlet order = {}\nlet limit = 10;\nlet totalCount = {};\nlet currentSortAttr = \"\";\nconsole.log(currentSortAttr); \n\nexport const ProposalListPage = () => {\n\tconst [loading, setLoading] = useState(false);\n  const [rows, setRows] = useState<any[]>([]);\n  //const [filters, setFilters] = useState<any[]>([]);\n  const [page, setPage] = useState(0);\n  const [sorting, setSorting] = useState<any[]>([]);\n  const [defaultFilters , setDefaultFilters] = useState<any[]>([]);\n  //const [limit, setLimit] = useState(10);\n  // const [selectedRows, setSelectedRows] = useState<any[]>([]);\n  const [PropListTable,setPropListTable] = useState<any>()\n  const [renderTable,setRenderTable] = useState(true)\n  const [largeSearch , setLargeSearch] = useState('');\n    //const [whereFilter, setWhereFilter] = useState<object>({});\n\tconst [redirect, setRedirect] = useState(false);\n\tconst [redirectType, setRedirectType] = useState('');\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n  const popoverOpen = Boolean(anchorEl);\n  const [largeDateSearch,setLargeDateSearch] = useState('')\n\tconst [exportData, setExportData] = useState('all_rows');\n  const [exportFormat, setExportFormat] = useState('pdf');\n  const [typingTimeout, setTypingTimeout] = useState<any>(0);\n  const [clientIDtoDownload, setClientIDtoDownload] = useState('');\n  const [registeredNametoDownload, setRegisteredNametoDownload] = useState('');\n  const [proposalToDownload , setProposalToDownload] = useState('');\n  const [downloadProposal, setDownloadProposal] = useState(false);\n  \n    const classes = useStyles();\n    const handlePopoverClose = () => {\n\t\tsetAnchorEl(null);\n  }\n  \n  const handleActionButton = (status:string\n    ,proposalID:string\n    ,clientName:string\n    ,clientID:string\n    ) => {\n    console.log(status,proposalID,clientID);\n    setProposalToDownload(proposalID);\n    setRegisteredNametoDownload(clientName);\n    setClientIDtoDownload(clientID)\n    if(status===''){\n      setRedirectType('approve')\n      setRedirect(true)\n    } else if(status==='Approved' || status==='Submitted' || \n    status==='Disapproved' || \n    status==='Resubmitted' || \n    status==='Signed' || \n    status==='Active'){\n      setDownloadProposal(true)\n      setLoading(true)\n    } else if(status==='For Revision'){\n      setRedirectType('revision')\n      setRedirect(true)\n    }\n  }\n    const handleLoadProposalsFromAPI = (limit, skip) => {\n      //let temp=[];\n      setRenderTable(false);\n\t\t  setLoading(true);\n        console.log('load')\n        console.log(JSON.stringify(filtersForApi));\n        console.log(order);\n        let withCount = true;\n        if(skip == 0){\n          withCount = true; \n        }\n        //filtersForApi['limit'] = limit;\n        //filtersForApi['skip'] = skip; \n\t    API.getProposal(filtersForApi,withCount,limit,skip,order).then(response => {\n          console.log('Load From API:',response)\n\t        if(response && response.proposals && response.error === undefined) {\n            if(withCount){\n              if(response.total){\n                totalCount['total'] = response.total;\n              }\n              if(response.status_active){\n                totalCount['active'] = response.status_active;\n              }\n              if(response.status_approved){\n                totalCount['approved'] = response.status_approved;\n              }\n              if(response.status_for_revision){\n                totalCount['for_revision'] = response.status_for_revision;\n              }\n              if(response.status_signed){\n                totalCount['signed'] = response.status_signed;\n              }\n              if(response.total){\n                totalCount['totalrow'] = response.total;\n              }\n            }\n            console.log('check') \n            console.log(response);\n                let tmp:any[]=[]; \n                    response.proposals.map(col =>{\n                        const effdate = col.custom_metadata.coverage_start_date &&\n                        col.custom_metadata.coverage_end_date ?\n                        (new Date(\n                          col.custom_metadata.coverage_start_date)).toLocaleDateString('en-US',\n                          {\n                            year:'numeric',\n                            day:'numeric',\n                            month:'short'\n                          }) + ' - ' + (new Date(\n                            col.custom_metadata.coverage_end_date)).toLocaleDateString('en-US',\n                            {\n                              year:'numeric',\n                              day: 'numeric',\n                              month:'short'\n                            }) : '-'\n                        tmp.push({\n                          account:col.client ? col.client[0].registered_name ? col.client[0].registered_name :'-' : '-',\n                          // account:col.client_registered_name ? col.client_registered_name : '-',\n                          version:col.version ? col.version : '-',\n                          proposal_no:col.proposal_number ? col.proposal_number : '-',\n                          effectivity_date:effdate,\n                          bdobroker:col.client[0].sales_channel && \n                                      col.client[0].sales_channel.contact_person && \n                                        col.client[0].sales_channel.contact_person !== ''  ? \n                                          col.client[0].sales_channel.contact_person : '-',\n                          date_created:col.custom_metadata.date_created ? \n                                        new Date(col.custom_metadata.date_created).toLocaleDateString('en-US',\n                                          {\n                                            year:'numeric',\n                                            day: 'numeric',\n                                            month:'short'\n                                          })\n                                          : '-',\n                          date_modified:col.custom_metadata.date_updated ? \n                                          new Date(col.custom_metadata.date_updated).toLocaleDateString('en-US',\n                                          {\n                                            year:'numeric',\n                                            day: 'numeric',\n                                            month:'short'\n                                          })\n                                            : '-',\n                          status:col.status,\n                          action:col.status==='' ?\n                          <Button \n                            //disabled={true} \n                            style={{backgroundColor:'#3AB77D',color:'white',fontSize:'12px',padding:'2px'}}\n                            onClick={()=>{handleActionButton(col.status,col._id,col.client[0].registered_name,col.client_id)}}\n                          >\n                             View\n                          </Button>:\n                          col.status==='Approved' || col.status==='Submitted' || \n                          col.status==='Disapproved' || \n                          col.status==='Resubmitted' || \n                          col.status==='Signed' || \n                          col.status==='Active' ?\n                          <Button \n                            //disabled={true} \n                            style={{backgroundColor:'#3AB77D',color:'white',fontSize:'12px',padding:'2px'}}\n                            onClick={()=>{handleActionButton(col.status,col._id,col.client[0].registered_name,col.client_id)}}\n                          >\n                              Download\n                          </Button> : \n                          col.status==='For Revision'?\n                          <Button \n                            //disabled={true} \n                            style={{backgroundColor:'#3AB77D',color:'white',fontSize:'12px',padding:'2px'}}\n                            onClick={()=>{handleActionButton(col.status,col._id,\n                              col.client[0].registered_name,col.client_id)}}\n                          >\n                              Revise\n                          </Button> :\n                          <Button \n                            //disabled={true} \n                            style={{backgroundColor:'#3AB77D',color:'white',fontSize:'12px',padding:'2px'}}\n                            onClick={()=>{handleActionButton(col.status,col._id,col.client[0].registered_name,col.client_id)}}\n                          >\n                              Upload Signed Proposal\n                          </Button>\n                        })\n                    })\n                console.log('tmp: ',tmp);\n                // setSelectedRows(tmp);\n                setRows(tmp);\n                setRenderTable(true);\n                setLoading(false);\n\t        }else{\n                setRows([])\n                setLoading(false);\n                setRenderTable(true)\n\t\t\t\tconsole.log('getbenefitlist api error: ', response);\n\t        }\n      });\n      setRenderTable(true)\n    }\n    const handleGenerateReport = () => {\n\t\tconsole.log(\"handleGenerateReport\");\n\t\tconsole.log(\"exportData\", exportData);\n\t\tconsole.log(\"setExportFormat\", exportFormat);\n\t\t//console.log(\"whereFilter\", whereFilter);\n\t\tsetAnchorEl(null);\n\t}\n    /*const rowcustomstyle = {\n      left: 0,\n      zIndex: 125,\n      position: 'relative' as PositionProperty,\n      fontSize:'12px',\n      //minWidth: '125px',\n      //maxWidth: '125px',\n      minWidth: '10px',\n      maxWidth: '300px',\n      paddingRight : '0px',\n      paddingLeft : '10px',\n    };*/\n\n    const proposallistcolumn: any = [\n\t\t{ \n\t\t\tname: 'account', \n\t\t\ttitle: 'Account'\n\t\t},\n\t\t{\n\t\t\tname: 'proposal_no', \n\t\t\ttitle: 'Proposal No.'\n\t\t},\n\t\t{\n\t\t\tname: 'effectivity_date', \n\t\t\ttitle: 'Effectivity Date'\n\t\t},\n\t\t{\n\t\t\tname: 'bdobroker', \n\t\t\ttitle: 'BDO/Broker', \n\t\t},\n\t\t{\n\t\t\tname: 'date_created', \n\t\t\ttitle: 'Date Created'\n    },\n    {\n\t\t\tname: 'date_modified', \n\t\t\ttitle: 'Date Modified'\n    },\n    {\n\t\t\tname: 'version', \n\t\t\ttitle: 'Version',\n    },\n    {\n\t\t\tname: 'status', \n\t\t\ttitle: 'Status',\n    },\n    {\n      name: 'action',\n      title: 'Action',\n    }\n    ];\n    useEffect(() => { \n        //setSelectedRows(sgncntsrows);\n      handleLoadProposalsFromAPI(10,0);\n    }, []);\n    \n\n    /*const sortProposals = (attrName: string) => { \n      let mask = \"\";\n      if(attrName == 'account'){\n        mask = \"client_registered_name\";\n      }else if(attrName == 'effectivity_date'){\n        mask = \"custom_metadata.coverage_start_date\";\n      } else if(attrName == 'version'){\n        mask = \"custom_metadata.version\";\n      }else if(attrName == 'date_created'){\n        mask = \"custom_metadata.date_created\";\n      }else if(attrName == 'date_modified'){\n        mask = \"custom_metadata.date_updated\";\n      }\n\n      filtersForApi['order'] = {};\n      if(currentSortAttr == mask){\n        filtersForApi['order']=  `${mask} desc`\n      }else{\n        filtersForApi['order']=  `${mask} asc`\n      }\n      handleLoadProposalsFromAPI(10, 0);\n      currentSortAttr = mask;\n      \n    }*/\n    /*const renderCustomTableHeader = (columns: any, fixedColumns: any) => {\n        let dockedColumnsCounter = 0;\n            return (\n              <>\n              {columns.map((column, index) => {\n                const matchedColumn = fixedColumns.filter(col => col === column.name)[0];\n                let nextColumnIsFixed = true;\n                if (matchedColumn && columns[index + 1]) {\n                  nextColumnIsFixed = fixedColumns.filter(col => col ===  columns[index + 1].name)[0] ? true : false;\n                }\n                const style = {\n                  left: matchedColumn ? dockedColumnsCounter * 125 : 0,\n                  zIndex: matchedColumn ? 125 : 0,\n                  width:column.name==='version'? '80px':'150px',\n                  paddingRight : '0px',\n                  paddingLeft : '10px',\n                  borderRight: !nextColumnIsFixed ? '#9EA3AC 2px solid' : undefined,\n                  tabSize:0, \n                };\n                if (matchedColumn) {\n                  dockedColumnsCounter++;\n                }\n                return (\n                  <TableCell style={style}>\n                    <span className='header-2'>{column.title}</span>\n                    <div style={{float: 'right'}}>\n                        <IconButton\n                            icon={faSort}\n                            onClick={() => {\n                                sortProposals(column.name);\n                                setRenderTable(true);\n                                setLoading(false);\n                            }} />\n                    </div>\n                    \n                    <InputField\n                        value={filters[column.name]}\n                        onChange={(value: string) => {\n                            filters[column.name] = value;\n                            let field = column.name;\n                            console.log(column.name);\n                            if(column.name == 'account'){\n                              field = \"client_registered_name\";\n                            }else if(column.name == 'effectivity_date'){\n                              field = \"custom_metadata.coverage_start_date\";\n                              filtersForApi['where'][field] = {like:value, options:'i'};\n                              field = \"custom_metadata.coverage_end_date\";\n                            }else if(column.name == 'version'){\n                              field = \"custom_metadata.version\";\n                            }else if(column.name == 'date_created'){\n                              field = \"custom_metadata.date_created\";\n                            }else if(column.name == 'date_modified'){\n                              field = \"custom_metadata.date_updated\";\n                            }\n                            filtersForApi['where'][field] = {like:value, options:'i'};\n                            if(value === ''){\n                              delete filtersForApi['where'][field];\n                              if(column.name == 'effectivity_date'){\n                                delete filtersForApi['where']['custom_metadata.coverage_start_date'];\n                              }\n                            }\n                            setFilters(filters);\n                            setRenderTable(true); \n                            console.log(\"filter onchange\", JSON.stringify(filters));\n                            console.log(JSON.stringify(filtersForApi));\n                            handleFiltersOnChange();\n                            // this.setState(prevState => ({...prevState, [attrName]: value}));\n                        }} />\n                  </TableCell>\n                );\n              })}\n              </>\n            );\n    }*/\n\n    const handleFiltersOnChange = () => {\n      if (typingTimeout) {\n        clearTimeout(typingTimeout);\n      }\n  \n      setTypingTimeout (setTimeout(function () {\n              setLoading(true);\n              handleLoadProposalsFromAPI(limit, 0);\n            }, 2000)\n      );\n    }\n    /*const renderCustomTableRow = (row: any, index: number, columns: any) => {\n            //console.log(row);\n            //console.log('column')\n            //console.log(columns)\n            //console.log(row.length)\n            const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n            return (\n              <TableRow\n                style={{backgroundColor: backgroundColor}}\n                >\n                {columns.map((column) => {\n                  return (\n                    \n                    <TableCell style={rowcustomstyle} onClick={() => {\n                      console.log('href');\n                    }}>\n                      {row[column.name]}\n                    </TableCell>\n                    \n                  );\n                })}\n              </TableRow>\n            );\n    }*/\n    const columnExtensions = [\n        {\n          columnName: 'account',\n          wordWrapEnabled: true,\n          textAlign:'center',\n        },\n        {\n          columnName: 'proposal_no',\n          wordWrapEnabled: true,\n          textAlign:'center',\n        },\n        {\n          columnName: 'effectivity_date',\n          wordWrapEnabled: true,\n          textAlign:'center',\n        },\n        {\n          columnName: 'bdobroker',\n          wordWrapEnabled: true,\n          textAlign:'center',\n        },\n        {\n          columnName: 'date_created',\n          wordWrapEnabled: true,\n          textAlign:'center',\n        },\n        {\n          columnName: 'date_modified',\n          wordWrapEnabled: true,\n          textAlign:'center',\n        },\n        {\n          columnName: 'version',\n          wordWrapEnabled: true,\n          textAlign:'center',\n        },\n        {\n          columnName: 'status',\n          wordWrapEnabled: true,\n          textAlign:'center',\n        },\n        {\n          columnName: 'action',\n          wordWrapEnabled: true,\n          textAlign:'center',\n        },\n    ];\n\n    const handleRowClick = (row: number) => {\n      console.log(row);\n    }\n  \n    const handleSortChange = (sort: any) => {\n      setSorting(sort);\n      console.log('handle sort:',sort)\n      let mask = \"\";\n      if(sort[0].columnName == 'account'){\n        mask = \"client.registered_name\";\n      }else if(sort[0].columnName == 'proposal_no'){\n        mask = \"proposal_number\";\n      }else if(sort[0].columnName == 'effectivity_date'){\n        mask = \"custom_metadata.coverage_start_date\";\n      } else if(sort[0].columnName == 'version'){\n        mask = \"version\";\n      }else if(sort[0].columnName == 'date_created'){\n        mask = \"custom_metadata.date_created\";\n      }else if(sort[0].columnName == 'date_modified'){\n        mask = \"custom_metadata.date_updated\";\n      }else if(sort[0].columnName == 'status'){\n        mask = \"status\";\n      }else if(sort[0].columnName == 'bdobroker'){\n        mask = \"client.sales_channel.contact_person\";\n      }\n\n      order = {\n        field:mask,\n        direction:(sort[0].direction === 'asc'? 1 : -1)\n      };\n      /*if(currentSortAttr == mask){\n        filtersForApi['order']=  `${mask} desc`\n      }else{\n        filtersForApi['order']=  `${mask} asc`\n      }*/\n      handleLoadProposalsFromAPI(10, 0);\n      currentSortAttr = mask;\n      //setLoading(true);\n    }\n  \n    const handlePageChange = (currentPage: number, skip: number) => {\n      setPage(currentPage);\n      console.log('handle page change')\n      filtersForApi['skip']=skip;\n      handleLoadProposalsFromAPI(limit, skip);\n    }\n  \n    const handlePageSizeChange = (value) => {\n      limit = value;\n  \n      handleLoadProposalsFromAPI(limit, 0);\n    }\n  \n    const handleSearch = (value: string | null) => {\n      console.log(value);\n      setPage(0);\n  \n      if (typingTimeout) {\n        clearTimeout(typingTimeout);\n      }\n  \n      setTypingTimeout (setTimeout(function () {\n              setLoading(true);\n              handleLoadProposalsFromAPI(limit, 0);\n            }, 2000)\n      );\n    }\n  \n    const handleFilterByColumn = (filter: any) => {\n        console.log('Filter By Column: ',filter);\n        setDefaultFilters(filter);\n        setPage(0);\n        if(filter.length>0)\n        {\n          let tmpfilter = {};\n          let value:any;\n          filter.map(fil =>{\n            let field = fil.columnName;\n            if(fil.columnName == 'account'){\n              field = \"client.registered_name\";\n              value = {like: fil.value, options: 'i'};\n            }else if(fil.columnName == 'effectivity_date'){\n              field = \"custom_metadata.coverage_start_date\";\n              //tmpfilter[field] = {like:fil.value, options:'i'};\n              tmpfilter[field]={\n                lte:new Date(fil.value)\n              }\n              field = \"custom_metadata.coverage_end_date\";\n              value = new Date(fil.value)\n            }else if(fil.columnName == 'date_created'){\n              field = 'and'\n              value = [{\n                'custom_metadata.date_created':{\n                  lte:moment(new Date(fil.value)).format(\"YYYY-MM-DD\").toString()+'T23:59:59.999Z'}},\n                {'custom_metadata.date_created':{\n                    gte:moment(new Date(fil.value)).format(\"YYYY-MM-DD\").toString()+'T00:00:00.000Z',\n                  }\n                }]\n            }else if(fil.columnName == 'date_modified'){\n              field = 'and'\n              value = [{\n                'custom_metadata.date_updated':{\n                  lte:moment(new Date(fil.value)).format(\"YYYY-MM-DD\").toString()+'T23:59:59.999Z'}},\n                {'custom_metadata.date_updated':{\n                    gte:moment(new Date(fil.value)).format(\"YYYY-MM-DD\").toString()+'T00:00:00.000Z',\n                  }\n                }]\n            }else if(fil.columnName == 'status'){\n              field = \"status\";\n              value = {like: fil.value, options: 'i'};\n            }else if(fil.columnName == 'bdobroker'){\n              field = \"client.sales_channel.contact_person\";\n              value = {like: fil.value, options: 'i'};\n            }\n            else if(fil.columnName == 'version'){\n              field = \"version\";\n              value = {like: fil.value, options: 'i'};\n            }else if(fil.columnName == 'proposal_no'){\n              field = \"proposal_number\";\n              value = {like: fil.value, options: 'i'};\n            }\n            //tmpfilter[field] = {like:fil.value, options:'i'};\n            if(fil.columnName == 'effectivity_date')\n            {\n              tmpfilter[field] = {\n                gte : value\n              }\n            } else if(fil.columnName === 'date_modified' || fil.columnName === 'date_created'){\n              if(tmpfilter[field])\n              {tmpfilter[field]=tmpfilter[field].concat(value);}\n              else{\n                tmpfilter[field] = value\n              }\n            }\n            else\n            {\n              tmpfilter[field] = value\n            }\n          })\n          filtersForApi['where'] = tmpfilter;\n        }\n        else\n        {\n          filtersForApi['where']={};\n        }\n        //console.log(filtersForApi)\n        //console.log('After Filters: ',filter)\n        //setFilters(filter); \n        setRenderTable(true); \n        //setWhereFilter(filter);\n        if (typingTimeout) {\n          clearTimeout(typingTimeout);\n        }\n    \n        setTypingTimeout (setTimeout(function () {\n                handleLoadProposalsFromAPI(limit, 0);\n              }, 2000)\n        );\n      }\n\n      const handleAssignTable =()=>{\n       return(\n         <div>\n           {/*<ProposalTable\n              className='ticket-list-table'\n              canOverflow\n              rows={rows}\n              stickyHeader={true}\n              renderHeader={() => renderCustomTableHeader(proposallistcolumn, proposallistcolumn)}\n              renderRow={(row: any, index: number) => renderCustomTableRow(row, index, proposallistcolumn)}\n              rowsPerPageOptions={[5, 10, 15]}\n              count={totalCount}\n              onPageChange={handleLoadProposalsFromAPI}\n              onRowsPerPageChange={handleLoadProposalsFromAPI}\n          />*/}\n          <Grid container>\n            <Grid item xs={3} style={{textAlign:'center',backgroundColor:'#F4F4F4',paddingTop:'25px',paddingBottom:'19px'}}>\n              <span style={{color:'#3AB77D',fontSize:'20px'}}>{totalCount['total']}</span> \n                            &nbsp;&nbsp;TOTAL\n            </Grid>\n            <Grid item xs={2} style={{textAlign:'center',backgroundColor:'#F4F4F4',paddingTop:'25px',paddingBottom:'19px'}}>\n              <span style={{color:'#3AB77D',fontSize:'20px'}}>{totalCount['active']}</span> \n                            &nbsp;&nbsp;ACTIVE\n            </Grid>\n            <Grid item xs={2} style={{textAlign:'center',backgroundColor:'#F4F4F4',paddingTop:'25px',paddingBottom:'19px'}}>\n              <span style={{color:'#3AB77D',fontSize:'20px'}}>{totalCount['approved']}</span> \n                            &nbsp;&nbsp;APPROVED\n            </Grid>\n            <Grid item xs={3} style={{textAlign:'center',backgroundColor:'#F4F4F4',paddingTop:'25px',paddingBottom:'19px'}}>\n              <span style={{color:'#3AB77D',fontSize:'20px'}}>{totalCount['for_revision']}</span> \n                            &nbsp;&nbsp;FOR REVISION\n            </Grid>\n            <Grid item xs={2} style={{textAlign:'center',backgroundColor:'#F4F4F4',paddingTop:'25px',paddingBottom:'19px'}}>\n              <span style={{color:'#3AB77D',fontSize:'20px'}}>{totalCount['signed']}</span> \n                            &nbsp;&nbsp;SIGNED\n            </Grid>\n          </Grid>\n          <div style={{minWidth:'1156',overflowX:'auto'}}>\n            <ProposalsTable2 \n              columns={proposallistcolumn}\n              rows={rows}\n              columnExtensions={columnExtensions}\n              currentPage={page}\n              limit={limit}\n              totalCount={totalCount['totalrow']}\n              onPageChange={handlePageChange}\n              onPageSizeChange={handlePageSizeChange}\n              onFilterChange={handleFilterByColumn}\n              onSearchChange={handleSearch}\n              onSortingChange={handleSortChange}\n              sorting={sorting}\n              defaultFilter={defaultFilters}\n              onRowClick={handleRowClick}\n            />\n          </div>\n          \n     </div>\n        \n       )\n      }\n      if(renderTable){\n        setPropListTable(handleAssignTable());\n        setRenderTable(false);\n      }\n\n\tif(redirect === true){\n\t\tif (redirectType === 'proposal') {\n\t\t\treturn <Redirect to={{pathname: '/underwriting/create-proposal/new'}} />\n    }\n    if(redirectType === 'approve'){\n      //return <Redirect to={{pathname: '/underwriting/approve-proposal/'+clientIDtoDownload+'/'+proposalToDownload}} />\n      return <Redirect to={{pathname:'/underwriting/finalize-proposal/' +\n      clientIDtoDownload +\n      '/' +\n      proposalToDownload +\n      '/uploader/' +\n      proposalToDownload}}/>\n    }\n    if(redirectType === 'revision'){\n      //return <Redirect to={{pathname: '/underwriting/approve-proposal/'+clientIDtoDownload+'/'+proposalToDownload}} />\n      return <Redirect to={{pathname:'/underwriting/create-proposal/' + proposalToDownload}}/>\n    }\n\t}\n    const handleRedirectToProposal = () => {\n\t\tsetRedirectType('proposal');\n\t\tsetRedirect(true);\n  }\n  \n  \n\n\treturn (\n\t\t<div className={classes.main}>\n\t\t\t{ loading ?\n\t\t\t\t(<LoadingIndicator/>) : null\n\n\t\t\t}\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tjustify=\"space-between\"\n\t\t\t\talignItems=\"center\"\n\t\t\t\tclassName={classes.gridContainer}\n\t\t\t>\n\t\t\t\t<Grid item xs={8}>\n\t\t\t\t\t<Typography className={classes.headerTitle}>Proposals</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={4} alignItems='flex-end' alignContent='flex-end'>\n                    <Box display=\"flex\" justifyContent=\"flex-end\" alignItems=\"center\" p={1} style={{width: '100%', height: '100%'}}>\n                        \t\n                        <Box p={1} style={{display:'none'}}>\n                                <Link \n                                  style={{ color: '#3AB77D', fontSize: '0.875rem' }} \n                                  onClick={(e: any) => {\n                                    const currentTarget = e.currentTarget;\n                                    setAnchorEl(currentTarget);\n                                  }}\n                            >\n                                <FontAwesomeIcon icon={faDownload} />&nbsp;&nbsp;Generate Report\n                            </Link>\n                        </Box>\n\n                        <Box p={1}>\n                            <Link \n                            \tstyle={{ color: '#3AB77D', fontSize: '0.875rem' }} \n                                onClick={handleRedirectToProposal}\n                            >\n                                <FontAwesomeIcon icon={faPlus} />&nbsp;&nbsp;Create Proposal\n                            </Link>\n\n                       \t</Box>\n\n                        \n                    </Box>\n\t\t\t\t</Grid>\n        <GridHorizontalDivider height=\"5px\"/>\n        <Grid item xs={9} style={{paddingRight:'30px'}}>\n          <TextField\n              id=\"proposal_search\"\n              placeholder=\"Search proposals\"\n              className={classes.searchField}\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              value={largeSearch}\n              onChange={(event:any)=>{\n                  let search_value = event.target.value.trim();\n                  setLargeSearch(search_value)\n                  setRenderTable(true)\n                  if(filtersForApi['where']){\n                    filtersForApi['where']['or'] = [\n                      {\"client.registered_name\": {like: search_value, options: 'i'}},\n                      {status: {like: search_value, options: 'i'}},\n                      {proposal_number: {like: search_value, options: 'i'}},\n                      {\"client.sales_channel.contact_person\": {like: search_value, options: 'i'}},\n                      /*{\"custom_metadata.coverage_start_date\": {like: search_value, options: 'i'}},\n                      {\"custom_metadata.coverage_end_date\": {like: search_value, options: 'i'}},\n                      {\"custom_metadata.date_created\": {like: search_value, options: 'i'}},\n                      {\"custom_metadata.date_updated\": {like: search_value, options: 'i'}},*/\n                      {\"custom_metadata.version\": {like: search_value, options: 'i'}},\n                    ];\n                  }else{\n                    filtersForApi['where'] = {};\n                    filtersForApi['where']['or'] = [\n                      {\"client.registered_name\": {like: search_value, options: 'i'}},\n                      {status: {like: search_value, options: 'i'}},\n                      {proposal_number: {like: search_value, options: 'i'}},\n                      {\"client.sales_channel.contact_person\": {like: search_value, options: 'i'}},\n                      /*{\"custom_metadata.coverage_start_date\": {like: search_value, options: 'i'}},\n                      {\"custom_metadata.coverage_end_date\": {like: search_value, options: 'i'}},\n                      {\"custom_metadata.date_created\": {like: search_value, options: 'i'}},\n                      {\"custom_metadata.date_updated\": {like: search_value, options: 'i'}},*/\n                      {\"custom_metadata.version\": {like: search_value, options: 'i'}},\n                    ];\n                  }\n                  handleFiltersOnChange(); \n                } \n              }\n              inputProps={{ 'aria-label': 'bare' }}\n              InputProps={{\n              startAdornment: (\n                  <FontAwesomeIcon\n                  icon={faSearch}\n                  className={classes.searchInputAdornment}\n                  />\n              ),\n              }}\n          />\n        </Grid>\n        <Grid item xs={3}>\n          <TextField\n              id=\"proposal_search\"\n              placeholder=\"This Month\"\n              className={classes.searchField}\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              value={largeDateSearch}\n              onChange={(event:any)=>{\n                  setLargeDateSearch(event.target.value.trim())\n                  setRenderTable(true)}}\n              inputProps={{ 'aria-label': 'bare' }}\n              InputProps={{\n              endAdornment: (\n                  <FontAwesomeIcon\n                  icon={faCalendar}\n                  className={classes.searchInputAdornment}\n                  />\n              ),\n              }}\n          />\n        </Grid>\n\t\t\t</Grid>\n      <Grid item xs={12} id='TableCont'>\n        <Paper style={{overflowX:'auto',maxWidth:'100%'}}>\n            {PropListTable}\n        </Paper>\n      </Grid>\n      \n            \n\t\t\t{/*<ClientsTable \n\t\t\t\tcolumns={columns}\n\t\t\t\trows={rows}\n\t\t\t\tcolumnExtensions={columnExtensions}\n                currentPage={page}\n                limit={limit}\n                totalCount={totalCount}\n                onPageChange={handlePageChange}\n                onPageSizeChange={handlePageSizeChange}\n                onFilterChange={handleFilterByColumn}\n                onSearchChange={handleSearch}\n                onSortingChange={handleSortChange}\n                sorting={sorting}\n                defaultFilter={defaultFilters}\n                onRowClick={handleRowClick}\n\t\t\t/>*/}\n\t\t\t<ReportPopover\n\t\t\t\topen={popoverOpen}\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\texportData={exportData}\n\t\t\t\texportFormat={exportFormat}\n\t\t\t\tonClose={handlePopoverClose}\n\t\t\t\tonChangeExportData={setExportData}\n\t\t\t\tonChangeExportFormat={setExportFormat}\n\t\t\t\tgenerateReport={handleGenerateReport}\n\t\t\t/>\n      <RendererClass \n        clientID={clientIDtoDownload} \n        clientName={registeredNametoDownload}\n        fileType={'pdf'} \n        download={downloadProposal} \n        setDownload={setDownloadProposal} \n        hideButton \n        label=\"Download Proposal\" \n        renderType={'renderProposal'}\n        objId={proposalToDownload}\n        onError={() => {\n            // alert('error render test');\n            setLoading(false);\n        }}\n        onStartDownload={() => {\n            //setDownloadScreen(true);\n            setLoading(false);\n        }} />\n\t\t</div>\n\t);\n\t\n};\n\n\n/*const mapStateToProps = (state: Store) => state.home;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tMap: bindActionCreators(ClientActions.Map, dispatch),\n});\n\nexport { mapStateToProps, mapDispatchToProps };*/\n","import React, { FC } from 'react';\nimport {  Grid, Typography } from '@material-ui/core/';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport Popover from '@material-ui/core/Popover';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport FormControl from '@material-ui/core/FormControl';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { IReportPopover } from './IReportPopover';\n\nconst useStyles = makeStyles(theme => ({\n\tdialogAction: {\n\t\tmarginBottom: theme.spacing(1),\n\t\tjustifyContent: 'center'\n\t},\n}));\n\nexport const ReportPopover: FC<IReportPopover.IProps> = props => {\n\tconst {open, anchorEl, exportData, exportFormat, onClose, onChangeExportData, onChangeExportFormat, generateReport} = props;\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Popover\n\t\t\topen={open}\n\t\t\tanchorEl={anchorEl}\n\t\t\tonClose={onClose}\n\t\t\tanchorOrigin={{\n\t\t\t    vertical: 'bottom',\n\t\t\t    horizontal: 'right',\n\t\t\t}}\n\t\t\ttransformOrigin={{\n\t\t\t\tvertical: 'top',\n\t\t\t\thorizontal: 'right',\n\t\t\t}}\n\t\t>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<Typography variant=\"body1\" style={{ fontWeight: 'bold' }}>\n\t\t\t\t\t\t\tChoose Data\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<FormControl component=\"fieldset\">\n\t\t\t\t\t\t\t<RadioGroup name=\"report_data\">\n\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\tcontrol={ \n\t\t\t\t\t\t\t\t\t\t\t\t<Radio \n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={exportData === 'all_rows'}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"all_rows\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChangeExportData(\"all_rows\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlabel=\"Include all rows\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\tcontrol={ \n\t\t\t\t\t\t\t\t\t\t\t\t<Radio \n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={exportData === 'filtered_rows'}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"filtered_rows\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChangeExportData(\"filtered_rows\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlabel=\"Include only filtered rows\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t\t<Typography variant=\"body1\" style={{ fontWeight: 'bold' }}>\n\t\t\t\t\t\t\tChoose Format\n\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t<FormControl component=\"fieldset\">\n\t\t\t\t\t\t\t<RadioGroup name=\"report_format\">\n\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\tcontrol={ \n\t\t\t\t\t\t\t\t\t\t\t\t<Radio \n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={exportFormat === 'pdf'}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"pdf\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChangeExportFormat(\"pdf\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlabel=\"PDF\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\tcontrol={ \n\t\t\t\t\t\t\t\t\t\t\t\t<Radio \n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={exportFormat === 'xls'}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"xls\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChangeExportFormat(\"xls\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlabel=\"XLS\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\tcontrol={ \n\t\t\t\t\t\t\t\t\t\t\t\t<Radio \n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={exportFormat === 'xml'}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"xml\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChangeExportFormat(\"xml\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlabel=\"XML\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t\t<DialogActions className={clsx(classes.dialogAction)}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tonClick={generateReport}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDownload Report&nbsp;&nbsp;<FontAwesomeIcon icon={faDownload} />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</DialogActions>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Popover>\n\t);\n};\n"],"sourceRoot":""}