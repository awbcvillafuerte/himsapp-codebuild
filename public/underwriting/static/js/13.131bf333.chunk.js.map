{"version":3,"sources":["../node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","Pages/Dashboard/ActionConsts.ts","Pages/Dashboard/Actions.ts","Pages/Dashboard/Dashboard.tsx","../node_modules/@material-ui/icons/Close.js","Components/UI/ModalComponent/ModalComponent.tsx","Pages/Processmaker/index.tsx"],"names":["forwardRef","props","ref","classes","className","other","createElement","root","muiName","withStyles","position","right","top","transform","name","ActionConsts","ResetReducer","SetReducer","DashboardActions","payload","type","ticket_options","value","top_facilities_options","renewals_for_revision","proposals_for_revision","link","tickets_waiting_response","CREATE_PROPOSAL_WORKFLOW","APPROVE_PROPOSAL_WORKFLOW","ONBOARD_CLIENT_WORKFLOW","FINALIZED_PROPOSAL_WORKFLOW","DISAPPROVE_WORKFLOW","Dashboard","reset","setState","role","loading","ticket_type","top_facility_sort","handleTicketTypeSelect","event","target","handleTopFacilitySortSelect","handleClickOpenTicketsRow","ticket","console","log","openTickets","Object","assign","state","ticket_details","app_tas_title","redirect","redirect_info","pathname","client_id","mother_contract_id","app_uid","gotoFinalizeProposalPage","history","push","window","location","reload","queryStringToJSON","queryString","trim","length","pairs","slice","split","result","forEach","pair","decodeURIComponent","JSON","parse","stringify","componentDidMount","propsJson","queryValues","search","handleViewTicket","caseid","Processmaker","getWithToken","then","response1","undefined","current_task","app_index","del_index","response2","clientId","contractId","catch","error","open_tickets_loading","unassigned_tickets_loading","proposalsCreated","proposalsForApproval","contractsToSignOff","unassigned_tickets","isModalOpen","modalTitle","modalMessage","case_id","this","postClaim","response","status","toLowerCase","Typography","ticket_id","style","color","fontSize","id","data-cy","onClick","temp_unassigned","filtered_response","filter","item","app_status","index","due_date","moment","del_task_due_date","format","modified_date","app_update_date","temp_opens_ticket","app_number","due","Date","client_name","app_title","proposal_id","last_updated","a","priority","del_priority","temp","toString","corporate_account","is_urgent","response3","getOpenTickets","getUnassignedTicket","sortOpenTicket","col","sortedtickets","sortbool","sort","b","sortUnassignedTicket","sortedOpenTicket","sortedUnassignedTicket","to","clsx","Grid","container","spacing","justify","alignItems","CircularProgress","xs","md","Paper","Box","display","flexDirection","justifyContent","Table","size","TableHead","TableRow","TableCell","icon","faSort","TableBody","map","row","key","cursor","e","minWidth","component","scope","toLocaleDateString","year","month","day","textDecoration","handleClaim","visibility","src","alt","List","dense","ListItem","ListItemText","primary","ModalComponent","title","message","onClose","buttons","Button","backgroundColor","padding","variant","React","mapStateToProps","dashboard","mapDispatchToProps","dispatch","Map","bindActionCreators","_interopRequireDefault","defineProperty","exports","default","_react","_default","d","useStyles","makeStyles","theme","dialog","dialogAction","marginBottom","marginTop","dialogContentContainer","width","paddingRight","paddingLeft","closeButton","palette","grey","dialogTitle","fontWeight","open","aria-labelledby","maxWidth","direction","disableTypography","aria-label","defaultProps","API_URL","process","url","token","URL","fetch","method","headers","localStorage","getItem","json","body"],"mappings":"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","file":"static/js/13.131bf333.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","export const ActionConsts = {\n    Dashboard : {\n        ResetReducer: 'Dashboard_ResetReducer',\n        SetReducer: 'Dashboard_SetReducer'\n    },\n};","import { ActionConsts } from \"./ActionConsts\";\n\n/**\n * ACTIONS\n*/\nexport const DashboardActions = {\n\tMap: (payload: any) => (\n\t\t{\n\t\t\tpayload,\n\t\t\ttype: ActionConsts.Dashboard.SetReducer\n\t\t}\n\t),\n\n\tReset: () => ({\n\t\ttype: ActionConsts.Dashboard.ResetReducer\n\t})\n}","//#region Global Imports\nimport * as React from 'react';\n//import { useState } from 'react';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport * as MaterialUI from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  LoadingIndicator,\n} from 'Components/UI/';\n\n// import { makeStyles } from '@material-ui/styles';\nimport moment from 'moment';\nimport clsx from 'clsx';\nimport { Redirect } from 'react-router-dom';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { AuthenticatedLayout } from 'Components/UI';\n\n//#endregion Global Imports\n\n//#region Local Imports\nimport './style.scss';\n//#endregion Local Imports\nimport Button from '@material-ui/core/Button';\n//#region Interface Imports\nimport { Store } from 'Components/Stores/IStore';\nimport { IDashboard } from './IDashboard';\nimport { DashboardActions } from './Actions';\nimport { Processmaker } from '../Processmaker';\nimport { ModalComponent } from 'Components/UI/ModalComponent/ModalComponent';\n// import { APIService } from 'Services/APIService';\n//#endregion Interface Imports\n\nimport '@hims/core/dist/index.css';\n\n// /** select customize style to set background as transparent */\n// const cellSelectStyles = makeStyles({\n// \tselect: {\n// \t\tbackgroundColor: 'transparent',\n// \t},\n// });\n\n// /** customization of material ui select for the page */\n// const Select = ({ id, value, items, onChange }: any) => {\n// \tconst cellSelectClasses = cellSelectStyles();\n// \treturn (\n// \t\t<MaterialUI.Select\n// \t\t\tid={id}\n// \t\t\tclasses={cellSelectClasses}\n// \t\t\tvalue={value}\n// \t\t\tonChange={onChange}\n// \t\t\tstyle={{ backgroundColor: 'transparent', color: '#242C2E', fontSize: '0.875em' }}\n// \t\t\trenderValue={(selected: any) => {\n// \t\t\t\tif (selected != null) {\n// \t\t\t\t\tconst value: any = items.find((item: any) => {\n// \t\t\t\t\t\treturn item.value == selected;\n// \t\t\t\t\t});\n// \t\t\t\t\tif (value) {\n// \t\t\t\t\t\treturn value.name;\n// \t\t\t\t\t} else {\n// \t\t\t\t\t\treturn '—';\n// \t\t\t\t\t}\n// \t\t\t\t}\n// \t\t\t\treturn '—';\n// \t\t\t}}\n// \t\t>\n// \t\t\t{items.map((item: any) => (\n// \t\t\t\t<MaterialUI.MenuItem key={item.value} value={item.value}>\n// \t\t\t\t\t{item.name}\n// \t\t\t\t</MaterialUI.MenuItem>\n// \t\t\t))}\n// \t\t</MaterialUI.Select>\n// \t);\n// };\n\nconst ticket_options = [\n  {\n    name: 'Created by Me',\n    value: 'created_by_me',\n  },\n  {\n    name: 'Created Tickets',\n    value: 'created_tickets',\n  },\n];\n\nconst top_facilities_options = [\n  {\n    name: 'By Amount',\n    value: 'amount',\n  },\n  {\n    name: 'By Availees',\n    value: 'availees',\n  },\n  {\n    name: 'By Cases',\n    value: 'cases',\n  },\n];\n\nconst renewals_for_revision = [];\n\nconst proposals_for_revision = [\n  {\n    name: 'NCG A.',\n    link: '#',\n  },\n  {\n    name: 'Nestle',\n    link: '#',\n  },\n  {\n    name: 'Ritz Corp.',\n    link: '#',\n  },\n  {\n    name: 'Innovative Tech.',\n    link: '#',\n  },\n];\n\nconst tickets_waiting_response = [];\n/** end of data */\n\n// const CREATE_PROPOSAL_TITLE = process.env.REACT_APP_CREATE_PROPOSAL_WORKFLOW;\n// const APPROVE_PROPOSAL_TITLE = process.env.REACT_APP_APPROVE_PROPOSAL_WORKFLOW;\n// const PROPOSAL_CREATION_TITLE = process.env.REACT_APP_PROPOSAL_CREATION_WORKFLOW;\n// const ONBOARD_CLIENT_TITLE = process.env.REACT_APP_ONBOARD_CLIENT_WORKFLOW;\n\nconst CREATE_PROPOSAL_WORKFLOW = 'Create Proposal';\nconst APPROVE_PROPOSAL_WORKFLOW = 'Approve Proposal';\nconst ONBOARD_CLIENT_WORKFLOW = 'Upload Signed Proposal';\nconst FINALIZED_PROPOSAL_WORKFLOW = 'Activate Account';\nconst DISAPPROVE_WORKFLOW = 'Revise Proposal';\n\n\nexport class Dashboard extends React.Component<\n  IDashboard.IProps,\n  IDashboard.IState\n> {\n  constructor(props: IDashboard.IProps) {\n    super(props);\n\n    this.state = {\n      role: 'underwriting_staff',\n      loading: false,\n      open_tickets_loading: false,\n      unassigned_tickets_loading: false,\n      ticket_type: ticket_options[0].value,\n      top_facility_sort: top_facilities_options[0].value,\n      openTickets: [],\n      proposalsCreated: [],\n      proposalsForApproval: [],\n      contractsToSignOff: [],\n      redirect: false,\n      redirect_info: {},\n      unassigned_tickets: [],\n      isModalOpen: false,\n      modalTitle:'',\n      modalMessage:<div></div>,\n    };\n  }\n\n  reset = () => {\n    this.setState({\n      role: 'underwriting_staff',\n      loading: false,\n      ticket_type: ticket_options[0].value,\n      top_facility_sort: top_facilities_options[0].value,\n    });\n  };\n\n  handleTicketTypeSelect = (\n    event: React.ChangeEvent<{ name?: string | undefined; value: any }>,\n  ) => {\n    this.setState({\n      ticket_type: event.target.value,\n    });\n  };\n\n  handleTopFacilitySortSelect = (\n    event: React.ChangeEvent<{ name?: string | undefined; value: any }>,\n  ) => {\n    this.setState({\n      top_facility_sort: event.target.value,\n    });\n  };\n\n  handleClickOpenTicketsRow = (ticket: any) => {\n    console.log('handleClickOpenTicketsRow', ticket);\n    let openTickets = Object.assign([], this.state.openTickets);\n    console.log('openTickets: ', openTickets);\n    switch (ticket.ticket_details.app_tas_title) {\n      case APPROVE_PROPOSAL_WORKFLOW:\n        this.setState({\n          redirect: true,\n          redirect_info: {\n            pathname:\n              '/underwriting/approve-proposal/' +\n              ticket.client_id +\n              '/' +\n              ticket.mother_contract_id +\n              '/' +\n              ticket.ticket_details.app_uid,\n          },\n        });\n        break;\n      case ONBOARD_CLIENT_WORKFLOW:\n        if (ticket.ticket_details.app_tas_title === 'Upload Signed Proposal') {\n          this.setState({\n            redirect: true,\n            redirect_info: {\n              pathname:\n                '/underwriting/finalize-proposal/' +\n                ticket.client_id +\n                '/' +\n                ticket.mother_contract_id +\n                '/uploader/' +\n                ticket.ticket_details.app_uid,\n            },\n          });\n        } else {\n          this.setState({\n            redirect: true,\n            redirect_info: {\n              pathname:\n                '/underwriting/finalize-proposal/' +\n                ticket.client_id +\n                '/' +\n                ticket.mother_contract_id +\n                '/approver/' +\n                ticket.ticket_details.app_uid,\n            },\n          });\n        }\n        break;\n      case FINALIZED_PROPOSAL_WORKFLOW:\n        this.setState({\n          redirect: true,\n          redirect_info: {\n            pathname:\n              '/underwriting/finalize-proposal/' +\n              ticket.client_id +\n              '/' +\n              ticket.mother_contract_id +\n              '/approver/' +\n              ticket.ticket_details.app_uid,\n          },\n        });\n        break;\n      case CREATE_PROPOSAL_WORKFLOW:\n      case DISAPPROVE_WORKFLOW:\n        this.setState({\n          redirect: true,\n          redirect_info: {\n            pathname:\n              '/underwriting/create-proposal/' + ticket.ticket_details.app_uid,\n          },\n        });\n        break;\n    }\n  };\n\n  handleClaim(ticket: any) {\n    if (ticket.case_id) {\n      this.setState(\n        {\n          loading: true,\n        },\n        () => {\n          Processmaker.postClaim(\n            'light/case/' + ticket.case_id + '/claim',\n          ).then(response => {\n            if (\n              response !== undefined &&\n              response.status !== undefined &&\n              response.status.toLowerCase() === 'ok'\n            ) {\n              this.setState({\n                loading: false,\n                isModalOpen:true,\n                modalMessage:(<div>\n                  <Typography>\n                    Ticket No. {ticket.ticket_id} for {ticket.ticket_type} was claimed successfully.\n                    <MaterialUI.Link\n                      style={{ color: '#3AB77D', fontSize: '0.875rem' }}\n                      id={\"view_ticket_link\"}\n                      data-cy={\"view_ticket_link\"}\n                      onClick={() => {\n                        this.handleViewTicket(ticket.ticket_details)\n                      }}\n                    > View Ticket </MaterialUI.Link>\n                  </Typography>\n                  \n                </div>),\n                modalTitle:'Ticket Claimed',\n              });\n            } else {\n              this.setState({\n                loading: false,\n              });\n            }\n          });\n        },\n      );\n    }\n  }\n\n  getUnassignedTicket() {\n    this.setState({\n      unassigned_tickets_loading: true,\n    });\n    Processmaker.getWithToken('cases/unassigned', '').then(response => {\n      console.log('getUnassigned',response)\n      if(response !== undefined){\n        const temp_unassigned: any = [];\n        const filtered_response = response.filter(item => {\n          return (\n            item.app_status === 'TO_DO' &&\n            (item.app_tas_title === CREATE_PROPOSAL_WORKFLOW ||\n              item.app_tas_title === DISAPPROVE_WORKFLOW ||\n              item.app_tas_title === ONBOARD_CLIENT_WORKFLOW ||\n              item.app_tas_title === APPROVE_PROPOSAL_WORKFLOW ||\n              item.app_tas_title === FINALIZED_PROPOSAL_WORKFLOW)\n          );\n        });\n        if (filtered_response.length > 0) {\n          filtered_response.forEach((item: any, index: number) => {\n            const due_date = moment(item.del_task_due_date).format('MMM D, YYYY');\n            const modified_date = moment(item.app_update_date).format(\n              'MMM D, YYYY hh:mm:ss',\n            );\n            const temp_opens_ticket: any = {\n              ticket_id: item.app_number,\n              due: new Date(due_date),\n              ticket_type: item.app_tas_title,\n              client_name: item.app_title ? item.app_title : \"\",\n              client_id: '',\n              ticket_details: item,\n              case_id: item.app_uid,\n              proposal_id: '',\n              app_index: item.del_index,\n              last_updated: new Date(modified_date),\n            };\n            temp_unassigned.push(temp_opens_ticket);\n            if (index === filtered_response.length - 1) {\n              console.log(\"loaded unassigned\");\n              this.setState({\n                unassigned_tickets: temp_unassigned,\n                unassigned_tickets_loading: false,\n              });\n            }\n          });\n        } else {\n          this.setState({\n            unassigned_tickets: [],\n            unassigned_tickets_loading: false,\n          });\n        }\n      }else{\n        this.setState({\n          unassigned_tickets: [],\n          unassigned_tickets_loading: false,\n        });\n      }\n    });\n  }\n\n  getOpenTickets() {\n    let openTickets: any[] = [];\n    let proposalsCreated: any[] = [];\n    let proposalsForApproval: any[] = [];\n    let contractsToSignOff: any[] = [];\n    let app_index: string = '';\n    this.setState({\n      open_tickets_loading: true,\n    });\n\n    Processmaker.getWithToken(\n      'cases?sort=APP_CACHE_VIEW.APP_UPDATE_DATE',\n      '',\n    ).then(async response => {\n      if (response !== undefined) {\n\n        for (let index = 0; index < response.length; index++) {\n          const item = response[index];\n\n          if (\n            item.app_tas_title === CREATE_PROPOSAL_WORKFLOW ||\n            item.app_tas_title === ONBOARD_CLIENT_WORKFLOW ||\n            item.app_tas_title === APPROVE_PROPOSAL_WORKFLOW ||\n            item.app_tas_title === FINALIZED_PROPOSAL_WORKFLOW ||\n            item.app_tas_title === DISAPPROVE_WORKFLOW\n          ) {\n            let priority = item.del_priority;\n            let due_date = moment(item.del_task_due_date).format('MMM D, YYYY');\n            let modified_date = moment(item.app_update_date).format(\n              'MMM D, YYYY hh:mm:ss',\n            );\n            let temp = {\n              ticket_id: item.app_number,\n              due: new Date(due_date),\n              ticket_type: item.app_tas_title.toString(),\n              corporate_account: '-',\n              is_urgent: priority === 'NORMAL' ? false : true,\n              ticket_details: item,\n              mother_contract_id: '',\n              client_id: '',\n              last_updated: new Date(modified_date),\n            };\n\n\n            try {\n              if (item['del_index'] && item['del_index'].length !== 0) {\n                app_index = item.del_index;\n              } else {\n                const response2 = await Processmaker.getWithToken('cases/' + item.app_uid, '');\n\n                if (\n                  response2 !== undefined &&\n                  response2.current_task !== undefined\n                ) {\n                  app_index = response2.current_task[0].del_index;\n                }\n              }\n\n                try {\n                  const response3 = await Processmaker.getWithToken(\n                    'cases/' +\n                      item.app_uid +\n                      '/variables?app_index=' +\n                      app_index,\n                    '',\n                  );\n\n                  if (\n                    response3 !== undefined &&\n                    response3['client_name'] !== undefined\n                  ) {\n                    temp.corporate_account = response3['client_name'] ;\n                  }\n                  if (\n                    response3 !== undefined &&\n                    response3['mother_contract_id'] !== undefined\n                  ) {\n                    temp.mother_contract_id = response3['mother_contract_id'];\n                  }\n                  if (\n                    response3 !== undefined &&\n                    response3['client_id'] !== undefined\n                  ) {\n                    temp.client_id = response3['client_id'];\n                  }\n                  openTickets.push(temp);\n                  if (\n                    temp.ticket_details.app_tas_title ===\n                      CREATE_PROPOSAL_WORKFLOW \n                      //|| temp.ticket_details.app_tas_title === DISAPPROVE_WORKFLOW\n                  ) {\n                    proposalsCreated.push(temp);\n                  } else if (\n                    temp.ticket_details.app_tas_title ===\n                    APPROVE_PROPOSAL_WORKFLOW\n                  ) {\n                    proposalsForApproval.push(temp);\n                  } else if (\n                    temp.ticket_details.app_tas_title ===\n                    FINALIZED_PROPOSAL_WORKFLOW\n                  ) {\n                    contractsToSignOff.push(temp);\n                  }\n                  this.setState({\n                    openTickets: openTickets,\n                    proposalsCreated: proposalsCreated,\n                    proposalsForApproval: proposalsForApproval,\n                    contractsToSignOff: contractsToSignOff,\n                  });\n              } catch (e) {\n                console.log('getOpenTickets Error', e);\n              } \n              \n            } catch (e) {\n              console.log('getOpenTickets Error', e);\n            }\n          }\n        }\n\n        this.setState({\n          open_tickets_loading: false,\n        });\n\n      }else{\n        this.setState({\n          openTickets: [],\n          proposalsCreated: [],\n          proposalsForApproval: [],\n          contractsToSignOff: [],\n          open_tickets_loading: false,\n        });\n      }\n    });\n  }\n\n  componentWillMount() {\n    // localStorage.setItem('pm_token', '92a4c0a5ad5b3dac3ff8ad1f008b33a3dba68350');//admin\n    //localStorage.setItem('pm_token', 'e2ee9b2e2343d3824703f4eb7dc039ba81de5662');//admin\n    //localStorage.setItem('api_token', 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InIxTGtiQm8zOTI1UmIyWkZGckt5VTNNVmV4OVQyODE3S3gwdmJpNmlfS2MifQ.eyJqdGkiOiJHWn5GTDJ6TVVzbnNSMzZ1VkgycW0iLCJzdWIiOiI1ZGI3OGNlMTczYjg2MWZiNTZhYjJmZDIiLCJpc3MiOiJodHRwOi8vMTguMTQxLjc3LjI0Mzo0MTAxL2FwaSIsImlhdCI6MTU4MzIwNTk5MSwiZXhwIjoxNTgzMjkyMzkxLCJhdWQiOiJ2ZXJpZGF0YSJ9.NAHiV6U5V2dsaxjz4E_P48K9t5cD9Mop9FHe9qNA-LEqfWFkZ9u91ddfJ0e9ueF74AH2oItq9hpPBFmIaH0me_U3fkI8jeYY2LWZUmnIqlDlLPazXNATk76Fb6oG4TDpQ4RLCOZoP-y-mOp4XXP438Wud1VjiYSJUPYlnZh_ALmWSBq2k5ECVlCOf1Cz9FRiEfQCEztJ1OO0DLmhsXsMGJw6e4Hh7_-CSZuxX4dzwz9rJ5VW0gBC5IMKszFTDLqBo85V-5tai3eCSlRB7_MHPxrKRVjcLbCQnzopFAfclMour_F37NUCAEi9rsvH8RgU8B_OkX3DvhI90f0GvZN8AA'); //BDO\n    //localStorage.setItem('pm_token', '47935839cfafe7437da7f17925391a8b2d70b0a9'); //Manager\n    //localStorage['user_id'] = 'bdo_user_1'\n    console.log('dashboard componentWillMount');\n    console.log(\n      'due_date: ',\n      moment('2019-10-28 17:00:00').format('MMM D, YYYY'),\n    ); \n    this.getOpenTickets();\n    this.getUnassignedTicket();\n  }\n\n  gotoFinalizeProposalPage = () => {\n    this.props.history.push('#/underwriting/finalize-proposal/approver/1');\n    window.location.reload();\n  };\n\n  queryStringToJSON = queryString => {\n    if (queryString.trim().length < 1) {\n      return {};\n    }\n\n    var pairs = queryString.slice(1).split('&');\n\n    var result = {};\n    pairs.forEach(function(pair) {\n      pair = (pair as string).split('=');\n      result[pair[0]] = decodeURIComponent(pair[1] || '');\n    });\n\n    return JSON.parse(JSON.stringify(result));\n  };\n\n  componentDidMount = () => {\n    let propsJson = JSON.parse(JSON.stringify(this.props));\n    let queryValues = this.queryStringToJSON(propsJson.location.search);\n\n    console.log('url query: ', queryValues);\n    this.setState({\n      role:\n        queryValues && queryValues.role\n          ? queryValues.role\n          : 'underwriting_staff',\n    });\n\n    // localStorage.setItem('sidebar', 'dashboard');\n  };\n\n  \n\n  handleViewTicket=(caseid:any)=>{\n    console.log(caseid)\n    Processmaker.getWithToken('cases/' + caseid.app_uid, '').then(\n      response1 => {\n        if (\n          response1 !== undefined &&\n          response1.current_task !== undefined\n        ) {\n          const app_index = response1.current_task[0].del_index;\n          Processmaker.getWithToken(\n            'cases/' +\n              caseid.app_uid +\n              '/variables?app_index=' +\n              app_index,\n            '',\n          ).then(response2 => {\n            let clientId = '';\n            let contractId = '';\n            if (response2 !== undefined &&\n              response2.mother_contract_id !== undefined\n            ) {\n              contractId = response2.mother_contract_id;\n            }\n            if (response2 !== undefined &&\n              response2.client_id !== undefined\n            ) {\n              clientId = response2.client_id;\n            }\n            switch (caseid.app_tas_title) {\n              case APPROVE_PROPOSAL_WORKFLOW:\n                this.setState({\n                  redirect: true,\n                  redirect_info: {\n                    pathname:\n                      '/underwriting/approve-proposal/' +\n                      clientId +\n                      '/' +\n                      contractId +\n                      '/' +\n                      caseid.app_uid,\n                  },\n                });\n                break;\n              case FINALIZED_PROPOSAL_WORKFLOW:\n                this.setState({\n                  redirect: true,\n                  redirect_info: {\n                    pathname:\n                      '/underwriting/finalize-proposal/' +\n                      clientId +\n                      '/' +\n                      contractId +\n                      '/approver/' +\n                      caseid.app_uid,\n                  },\n                });\n                break;\n              };\n            }).catch(error => {\n              \n              console.log('getbenefitlist api error: ', error);\n            });\n          }\n        });\n  }\n\n  public render(): JSX.Element {\n    const {\n      loading,\n      openTickets,\n      role,\n      proposalsCreated,\n      proposalsForApproval,\n      contractsToSignOff,\n      redirect,\n      redirect_info,\n      unassigned_tickets,\n      isModalOpen,\n      modalTitle,\n      modalMessage,\n      open_tickets_loading,\n      unassigned_tickets_loading\n    } = this.state;\n    const sortOpenTicket = (col: string) => {\n      const sortedtickets = openTickets;\n      let sortbool: boolean = true;\n      if (col !== 'due') {\n        sortedtickets.length > 1\n          ? (sortbool =\n              sortedtickets[0][col].toString().toLowerCase() >=\n              sortedtickets[sortedtickets.length - 1][col]\n                .toString()\n                .toLowerCase())\n          : (sortbool = true);\n        if (sortbool) {\n          sortedtickets.sort((a, b) =>\n            a[col] &&\n            b[col] &&\n            a[col]\n              .toString()\n              .toLowerCase()\n              .trim() >=\n              b[col]\n                .toString()\n                .toLowerCase()\n                .trim()\n              ? 1\n              : -1,\n          );\n        } else {\n          sortedtickets.sort((a, b) =>\n            a[col] &&\n            b[col] &&\n            a[col]\n              .toString()\n              .toLowerCase()\n              .trim() >=\n              b[col]\n                .toString()\n                .toLowerCase()\n                .trim()\n              ? -1\n              : 1,\n          );\n        }\n      } else {\n        sortedtickets.length > 1\n          ? (sortbool =\n              new Date(sortedtickets[0][col]) > new Date(sortedtickets[1][col]))\n          : (sortbool = true);\n\n        sortedtickets.sort((a, b) =>\n          a[col] && b[col] && new Date(a[col]) > new Date(b[col]) && sortbool\n            ? 1\n            : -1,\n        );\n      }\n      console.log(sortedtickets);\n      this.setState({\n        openTickets: sortedtickets,\n      });\n    };\n\n    const sortUnassignedTicket = (col: string) => {\n      let sortedtickets = unassigned_tickets;\n      let sortbool: boolean = true;\n      if (col !== 'due') {\n        sortedtickets.length > 1\n          ? (sortbool =\n              sortedtickets[0][col].toString().toLowerCase() >=\n              sortedtickets[sortedtickets.length - 1][col]\n                .toString()\n                .toLowerCase())\n          : (sortbool = true);\n        if (sortbool) {\n          sortedtickets.sort((a, b) =>\n            a[col] &&\n            b[col] &&\n            a[col]\n              .toString()\n              .toLowerCase()\n              .trim() >=\n              b[col]\n                .toString()\n                .toLowerCase()\n                .trim()\n              ? //&& sortbool\n                1\n              : -1,\n          );\n        } else {\n          sortedtickets.sort((a, b) =>\n            a[col] &&\n            b[col] &&\n            a[col]\n              .toString()\n              .toLowerCase()\n              .trim() >=\n              b[col]\n                .toString()\n                .toLowerCase()\n                .trim()\n              ? //&& sortbool\n                -1\n              : 1,\n          );\n        }\n      } else {\n        sortedtickets.length > 1\n          ? (sortbool =\n              new Date(sortedtickets[0][col]) > new Date(sortedtickets[1][col]))\n          : (sortbool = true);\n\n        sortedtickets.sort((a, b) =>\n          a[col] && b[col] && new Date(a[col]) > new Date(b[col]) && sortbool\n            ? 1\n            : -1,\n        );\n      }\n      console.log(sortedtickets);\n      this.setState({ unassigned_tickets: sortedtickets });\n    };\n\n    const sortedOpenTicket = openTickets.sort((a: any, b: any) =>\n      a['last_updated'] &&\n      b['last_updated'] &&\n      new Date(a['last_updated']) > new Date(b['last_updated'])\n        ? -1\n        : 1,\n    );\n\n    \n\n    const sortedUnassignedTicket = unassigned_tickets.sort((a: any, b: any) =>\n      a['last_updated'] &&\n      b['last_updated'] &&\n      new Date(a['last_updated']) > new Date(b['last_updated'])\n        ? -1\n        : 1,\n    );\n    if (redirect === true) {\n      return <Redirect to={redirect_info} />;\n    } else {\n      return (\n        <div className={clsx('Dashboard')}>\n          { open_tickets_loading || unassigned_tickets_loading ?\n            (<LoadingIndicator/>) : null\n\n          }\n          <Grid\n            container\n            spacing={2}\n            justify=\"space-between\"\n            alignItems=\"flex-start\"\n          >\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Grid item>\n                {loading && (\n                  <CircularProgress className={clsx('loading-indicator')} />\n                )}\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <Grid container justify=\"flex-start\" alignItems=\"flex-start\">\n                <Grid item xs={12}>\n                  <Typography className={clsx('title')}>Dashboard</Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={12} md={12}>\n              <Grid\n                container\n                justify=\"space-between\"\n                spacing={4}\n                alignItems=\"flex-start\"\n              >\n                <Grid item xs={12} md={8}>\n                  <Typography className={clsx('sub-title')}>\n                    Your Ticket List\n                  </Typography>\n                  <Paper className={clsx('content')}>\n                    <Box\n                      className={clsx('card-header')}\n                      display=\"flex\"\n                      flexDirection=\"row\"\n                      justifyContent=\"space-between\"\n                    >\n                      <Box>\n                        <Typography\n                          className={clsx('dashboard-count')}\n                          style={{ color: '#FD5451' }}\n                          id=\"open_tickets_count\"\n                          data-cy=\"open_tickets_count\"\n                        >\n                          {openTickets.length}\n                        </Typography>\n                        <Typography\n                          className={clsx('dashboard-count-description')}\n                          onClick={this.gotoFinalizeProposalPage}\n                        >\n                          Open Tickets\n                        </Typography>\n                      </Box>\n                      {/* <Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select items={ticket_options} value={this.state.ticket_type} onChange={this.handleTicketTypeSelect} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                    </Box>\n                    <Box className={clsx('card-content')}>\n                      <Table size=\"small\" className={clsx('dashboard-table')} id=\"open_tickets_table\" data-cy=\"open_tickets_table\">\n                        <TableHead>\n                          <TableRow>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              ID&nbsp;&nbsp;\n                              <div\n                                style={{ display: 'none' }}\n                                onClick={() => {\n                                  sortOpenTicket('ticket_id');\n                                }}\n                              >\n                                <FontAwesomeIcon icon={faSort} />\n                              </div>\n                            </TableCell>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              Date Created&nbsp;&nbsp;\n                              <div\n                                style={{ display: 'none' }}\n                                onClick={() => {\n                                  sortOpenTicket('due');\n                                }}\n                              >\n                                <FontAwesomeIcon icon={faSort} />\n                              </div>\n                            </TableCell>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              Ticket Type&nbsp;&nbsp;\n                              <div\n                                style={{ display: 'none' }}\n                                onClick={() => {\n                                  sortOpenTicket('ticket_type');\n                                }}\n                              >\n                                <FontAwesomeIcon icon={faSort} />\n                              </div>\n                            </TableCell>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              Corporate Account&nbsp;&nbsp;\n                              <div\n                                style={{ display: 'none' }}\n                                onClick={() => {\n                                  sortOpenTicket('corporate_account');\n                                }}\n                              >\n                                <FontAwesomeIcon icon={faSort} />\n                              </div>\n                            </TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {sortedOpenTicket.map((row, index) => (\n                            <TableRow\n                              key={index}\n                              style={{ cursor: 'pointer' }}\n                              className={clsx(\n                                index % 2 == 0\n                                  ? row.is_urgent\n                                    ? 'dashboard-table-hg-even-row'\n                                    : 'dashboard-table-even-row'\n                                  : row.is_urgent\n                                  ? 'dashboard-table-hg-odd-row'\n                                  : 'dashboard-table-odd-row',\n                              )}\n                              onClick={e => {\n                                this.handleClickOpenTicketsRow(row);\n                                console.log(\n                                  'handleClickOpenTicketsRow target: ',\n                                  e,\n                                );\n                              }}\n                            >\n                              <TableCell\n                                style={{ minWidth : '80px' }}\n                                className={clsx('dashboard-table-data-cell')}\n                                component=\"th\"\n                                scope=\"row\"\n                              >\n                                {row.ticket_id}\n                              </TableCell>\n                              <TableCell\n                                style={{ minWidth : '150px' }}\n                                className={clsx('dashboard-table-data-cell')}\n                              >\n                                {row.last_updated.toLocaleDateString('en-US', {\n                                  year: 'numeric',\n                                  month: 'short',\n                                  day: 'numeric',\n                                })}\n                              </TableCell>\n                              <TableCell\n                                style={{ minWidth : '210px' }}\n                                className={clsx('dashboard-table-data-cell')}\n                              >\n                                {row.ticket_type}\n                              </TableCell>\n                              <TableCell \n                              // style={{ maxWidth: '275px' }}\n                                className={clsx('dashboard-table-data-cell')}\n                              >\n                                {row.corporate_account}\n                              </TableCell>\n                            </TableRow>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    </Box>\n                    {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                  </Paper>\n                  <Paper className={clsx('content')}>\n                    <Box\n                      className={clsx('card-header')}\n                      display=\"flex\"\n                      flexDirection=\"row\"\n                      justifyContent=\"space-between\"\n                    >\n                      <Box>\n                        <Typography\n                          className={clsx('dashboard-count')}\n                          style={{ color: '#FD5451' }}\n                          id=\"unassigned_tickets_count\"\n                          data-cy=\"unassigned_tickets_count\"\n                        >\n                          {unassigned_tickets.length}\n                        </Typography>\n                        <Typography\n                          className={clsx('dashboard-count-description')}\n                          onClick={this.gotoFinalizeProposalPage}\n                        >\n                          Unassigned Tickets\n                        </Typography>\n                      </Box>\n                    </Box>\n                    <Box className={clsx('card-content')}>\n                      <Table size=\"small\" className={clsx('dashboard-table')}\n                        id=\"unassigned_tickets_table\"\n                        data-cy=\"unassigned_tickets_table\"\n                      >\n                        <TableHead>\n                          <TableRow>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              ID&nbsp;&nbsp;\n                              <div\n                                style={{ display: 'none' }}\n                                onClick={() => {\n                                  sortUnassignedTicket('ticket_id');\n                                }}\n                              >\n                                <FontAwesomeIcon icon={faSort} />\n                              </div>\n                            </TableCell>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              Date Created&nbsp;&nbsp;\n                              <div\n                                style={{ display: 'none' }}\n                                onClick={() => {\n                                  sortUnassignedTicket('due');\n                                }}\n                              >\n                                <FontAwesomeIcon icon={faSort} />\n                              </div>\n                            </TableCell>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              Ticket Type&nbsp;&nbsp;\n                              <div\n                                style={{ display: 'none' }}\n                                onClick={() => {\n                                  sortUnassignedTicket('ticket_type');\n                                }}\n                              >\n                                <FontAwesomeIcon icon={faSort} />\n                              </div>\n                            </TableCell>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              Corporate Account&nbsp;&nbsp;\n                              <div\n                                style={{ display: 'none' }}\n                                onClick={() => {\n                                  sortUnassignedTicket('client_name');\n                                }}\n                              >\n                                <FontAwesomeIcon icon={faSort} />\n                              </div>\n                            </TableCell>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              Action\n                            </TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {sortedUnassignedTicket.map((row, index) => (\n                            <TableRow\n                              key={index}\n                              className={clsx(\n                                index % 2 == 0\n                                  ? row.is_urgent\n                                    ? 'dashboard-table-hg-even-row'\n                                    : 'dashboard-table-even-row'\n                                  : row.is_urgent\n                                  ? 'dashboard-table-hg-odd-row'\n                                  : 'dashboard-table-odd-row',\n                              )}\n                              onClick={e => {\n                                // this.handleClickOpenTicketsRow(row);\n                                console.log(\n                                  'handleClickOpenTicketsRow target: ',\n                                  e,\n                                );\n                              }}\n                            >\n                              <TableCell\n                                style={{ minWidth : '80px' }}\n                                className={clsx('dashboard-table-data-cell')}\n                                component=\"th\"\n                                scope=\"row\"\n                              >\n                                {row.ticket_id}\n                              </TableCell>\n                              <TableCell\n                                style={{ minWidth : '150px' }}\n                                className={clsx('dashboard-table-data-cell')}\n                              >\n                                {row.last_updated.toLocaleDateString('en-US', {\n                                  year: 'numeric',\n                                  month: 'short',\n                                  day: 'numeric',\n                                })}\n                              </TableCell>\n                              <TableCell\n                                style={{ minWidth : '170px' }}\n                                className={clsx('dashboard-table-data-cell')}\n                              >\n                                {row.ticket_type}\n                              </TableCell>\n                              <TableCell \n                              // style={{ maxWidth : '250px'}}\n                                className={clsx('dashboard-table-data-cell')}\n                              >\n                                {row.client_name}\n                              </TableCell>\n                              <TableCell\n                                style={{ minWidth : '80px' }}\n                                className={clsx('dashboard-table-data-cell')}\n                              >\n                                <span\n                                  style={{ textDecoration: 'underline', cursor: 'pointer'}}\n                                  className={clsx('dashboard-list-item-link')}\n                                  id={\"unassigned_tickets_claim_btn_\"+row.ticket_id}\n                                  data-cy=\"unassigned_tickets_claim_btn\"\n                                  onClick={e => {\n                                    this.handleClaim(row);\n                                    console.log('e >>>>', e);\n                                  }}\n                                >\n                                  Claim\n                                </span>\n                              </TableCell>\n                            </TableRow>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    </Box>\n                    {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                  </Paper>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <Typography className={clsx('sub-title')}>\n                    Your Task Tray\n                  </Typography>\n                  {role == 'underwriting_head' ? (\n                    <Paper\n                      className={clsx('content')}\n                      style={{ visibility: 'hidden' }}\n                    >\n                      <Box className={clsx('card-header')}>\n                        <Typography\n                          className={clsx('dashboard-count')}\n                          style={{ color: '#3AB77D' }}\n                        >\n                          {proposalsCreated.length}\n                        </Typography>\n                        <Typography\n                          className={clsx('dashboard-count-description')}\n                        >\n                          Proposals To Be Created\n                        </Typography>\n                      </Box>\n                      <Box className={clsx('card-content')}>\n                        <img\n                          src={'temp_dashboard_graph_01.png'}\n                          className={clsx('dashboard-temp-graph-img')}\n                          alt=\"Proposals To Be Created\"\n                        />\n                      </Box>\n                      {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View List</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                    </Paper>\n                  ) : (\n                    <Paper className={clsx('content')}>\n                      <Box className={clsx('card-header')}>\n                        <Typography\n                          className={clsx('dashboard-count')}\n                          style={{ color: '#3AB77D' }}\n                        >\n                          {proposalsCreated.length}\n                        </Typography>\n                        <Typography\n                          className={clsx('dashboard-count-description')}\n                        >\n                          Proposals To Be Created\n                        </Typography>\n                      </Box>\n                      <Box\n                        className={clsx('card-content')}\n                        alignItems=\"flex-start\"\n                      >\n                        <List dense>\n                          {proposalsCreated.map((item, index) => {\n                            return (\n                              <ListItem key={index}>\n                                  <ListItemText\n                                    id={'proposals_to_be_created_' + index}\n                                    className={clsx('dashboard-list-item-text')}\n                                    primary={item.corporate_account}\n                                    \n                                  />\n                                  {/*<ListItemSecondaryAction>*/}\n                                    <Link\n                                      className={clsx('dashboard-list-item-link')}\n                                      style={{minWidth:'47px'}}\n                                      to={'create-proposal/' + item.app_uid}\n                                    >\n                                      Create\n                                    </Link>\n                                  {/*</ListItemSecondaryAction>*/}\n                                \n                              </ListItem>\n                            );\n                          })}\n                        </List>\n                      </Box>\n                      {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View List</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                    </Paper>\n                  )}\n\n                  {role == 'underwriting_head' ||\n                  role == 'underwriting_staff' ? (\n                    <Paper className={clsx('content')}>\n                      <Box className={clsx('card-header')}>\n                        <Typography\n                          className={clsx('dashboard-count')}\n                          style={{ color: '#FAB435' }}\n                        >\n                          {renewals_for_revision.length}\n                        </Typography>\n                        <Typography\n                          className={clsx('dashboard-count-description')}\n                        >\n                          Renewals to be Revised\n                        </Typography>\n                      </Box>\n                      <Box\n                        className={clsx('card-content')}\n                        alignItems=\"flex-start\"\n                      >\n                        <List dense>\n                          {/*\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trenewals_for_revision.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText id={'renewal_for_revision_'+index} className={clsx('dashboard-list-item-text')} primary={item.name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-list-item-link')} to={item.link}>Revise</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*/}\n                        </List>\n                      </Box>\n                      {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View List</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                    </Paper>\n                  ) : (\n                    <Paper className={clsx('content')}>\n                      <Box className={clsx('card-header')}>\n                        <Typography\n                          className={clsx('dashboard-count')}\n                          style={{ color: '#FAB435' }}\n                        >\n                          {proposals_for_revision.length}\n                        </Typography>\n                        <Typography\n                          className={clsx('dashboard-count-description')}\n                        >\n                          Proposals to be Revised\n                        </Typography>\n                      </Box>\n                      <Box\n                        className={clsx('card-content')}\n                        alignItems=\"flex-start\"\n                      >\n                        <List dense>\n                          {/*\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tproposals_for_revision.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText id={'proposals_for_revision_'+index} className={clsx('dashboard-list-item-text')} primary={item.name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-list-item-link')} to={item.link}>Revise</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*/}\n                        </List>\n                      </Box>\n                      {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View List</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                    </Paper>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={12} md={12}>\n              <Grid\n                container\n                justify=\"space-between\"\n                spacing={4}\n                alignItems=\"flex-start\"\n              >\n                <Grid item xs={12} md={4}>\n                  <Paper className={clsx('content')}>\n                    <Box className={clsx('card-header')}>\n                      <Typography\n                        className={clsx('dashboard-count')}\n                        style={{ color: '#8034AD' }}\n                      >\n                        {proposalsForApproval.length}\n                      </Typography>\n                      <Typography\n                        className={clsx('dashboard-count-description')}\n                      >\n                        Proposals Waiting Approval\n                      </Typography>\n                    </Box>\n                    <Box className={clsx('card-content')}>\n                      <List dense>\n                        {proposalsForApproval.map((item, index) => {\n                          return (\n                            <ListItem key={index}>\n                              <ListItemText\n                                id={'proposals_for_approval_' + index}\n                                className={clsx('dashboard-list-item-text')}\n                                primary={item.corporate_account}\n                              />\n                              <ListItemSecondaryAction>\n                                <Link\n                                  className={clsx('dashboard-list-item-link')}\n                                  to={'approve-proposal/' + item.app_uid}\n                                >\n                                  View\n                                </Link>\n                              </ListItemSecondaryAction>\n                            </ListItem>\n                          );\n                        })}\n                      </List>\n                    </Box>\n                    {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                  </Paper>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  {role == 'underwriting_head' ||\n                  role == 'underwriting_staff' ? (\n                    <Paper className={clsx('content')}>\n                      <Box className={clsx('card-header')}>\n                        <Typography\n                          className={clsx('dashboard-count')}\n                          style={{ color: '#272E4C' }}\n                        >\n                          {contractsToSignOff.length}\n                        </Typography>\n                        <Typography\n                          className={clsx('dashboard-count-description')}\n                        >\n                          Contracts to Sign-Off\n                        </Typography>\n                      </Box>\n                      <Box className={clsx('card-content')}>\n                        <List dense>\n                          {contractsToSignOff.map((item, index) => {\n                            return (\n                              <ListItem key={index}>\n                                <ListItemText\n                                  id={'contracts_to_signoff_' + index}\n                                  className={clsx('dashboard-list-item-text')}\n                                  primary={item.corporate_account}\n                                />\n                                <ListItemSecondaryAction>\n                                  <Link\n                                    className={clsx('dashboard-list-item-link')}\n                                    to={\n                                      'finalize-proposal/approver/' +\n                                      item.app_uid\n                                    }\n                                  >\n                                    View\n                                  </Link>\n                                </ListItemSecondaryAction>\n                              </ListItem>\n                            );\n                          })}\n                        </List>\n                      </Box>\n                      {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                    </Paper>\n                  ) : (\n                    <Paper className={clsx('content')}>\n                      <Box className={clsx('card-header')}>\n                        <Typography\n                          className={clsx('dashboard-count')}\n                          style={{ color: '#272E4C' }}\n                        >\n                          {contractsToSignOff.length}\n                        </Typography>\n                        <Typography\n                          className={clsx('dashboard-count-description')}\n                        >\n                          Contracts to Sign-Off\n                        </Typography>\n                      </Box>\n                      <Box className={clsx('card-content')}>\n                        <List dense>\n                          {contractsToSignOff.map((item, index) => {\n                            return (\n                              <ListItem key={index}>\n                                <ListItemText\n                                  id={'contracts_to_signoff_' + index}\n                                  className={clsx('dashboard-list-item-text')}\n                                  primary={item.corporate_account}\n                                />\n                                <ListItemSecondaryAction>\n                                  <Link\n                                    className={clsx('dashboard-list-item-link')}\n                                    to={\n                                      'finalize-proposal/approver/' +\n                                      item.app_uid\n                                    }\n                                  >\n                                    View\n                                  </Link>\n                                </ListItemSecondaryAction>\n                              </ListItem>\n                            );\n                          })}\n                        </List>\n                      </Box>\n                      {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                    </Paper>\n                  )}\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <Paper className={clsx('content')}>\n                    <Box className={clsx('card-header')}>\n                      <Typography\n                        className={clsx('dashboard-count')}\n                        style={{ color: '#1AB1C4' }}\n                      >\n                        {tickets_waiting_response.length}\n                      </Typography>\n                      <Typography\n                        className={clsx('dashboard-count-description')}\n                      >\n                        Tickets Waiting Response\n                      </Typography>\n                    </Box>\n                    <Box className={clsx('card-content')}>\n                      <List dense>\n                        {/*\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttickets_waiting_response.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText id={'tickets_waiting_response_'+index} className={clsx('dashboard-list-item-text')} primary={item.name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-list-item-link')} to={item.link}>View</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t*/}\n                      </List>\n                    </Box>\n                    {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                  </Paper>\n                </Grid>\n                <ModalComponent\n                        isModalOpen={isModalOpen}\n                        title={modalTitle}\n                        message={modalMessage}\n                        onClose={() => {\n                          this.setState({\n                            isModalOpen:false\n                          }, () =>{\n                            this.getOpenTickets();\n                            this.getUnassignedTicket();\n                          })\n                        }}\n                        buttons={<Button\n                          id=\"claim_modal_okay_btn\"\n                          data-cy=\"claim_modal_okay_btn\"\n                          style={{backgroundColor:'#3AB77D',color:'white',padding:'10px 30px'}}\n                          onClick={() => {\n                            this.setState({\n                              isModalOpen:false\n                            }, () =>{\n                              this.getOpenTickets();\n                              this.getUnassignedTicket();\n                            })\n                          }}\n                          variant=\"contained\"\n                      >\n                          Okay\n                      </Button>} />\n              </Grid>\n            </Grid>\n            {/*\n\t\t\t\t\t\t\t\t<Grid item xs={12} md={12}>\n\t\t\t\t\t\t\t\t\t<Typography className={clsx('sub-title')} style={{marginTop: 48}}>\n\t\t\t\t\t\t\t\t\t\tReports\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12} md={12} style={{display: 'none'}}>\n\t\t\t\t\t\t\t\t\t<Grid container justify=\"space-between\" spacing={4} alignItems=\"flex-start\">\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-graph-header')} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-graph-title')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tClosed Accounts\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={'temp_dashboard_graph_02.png'} className={clsx('dashboard-temp-graph-img-report')} alt=\"Closed Accounts\" />\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t(role == 'underwriting_head' || role == 'underwriting_staff') ?\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-graph-header')} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-graph-title')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTop 5 Clients in Utilization\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={'temp_dashboard_graph_03.png'} className={clsx('dashboard-temp-graph-img-report')} alt=\"Top 5 Clients in Utilization\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-graph-header')} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-graph-title')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFranchised Accounts\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={'temp_dashboard_graph_05.png'} className={clsx('dashboard-temp-graph-img-report')} alt=\"Top 5 Clients in Utilization\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12} md={12}>\n\t\t\t\t\t\t\t\t\t<Grid container justify=\"space-between\" spacing={4} alignItems=\"flex-start\">\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={4}>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t(role == 'underwriting_head' || role == 'underwriting_staff') ?\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-header')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count')} style={{color: \"#272E4C\"}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t6\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count-description')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNewly Renewed Accounts\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<List dense>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewly_renewed_accounts.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText id={'newly_renewed_accounts_'+index} className={clsx('dashboard-list-item-text')} primary={item.name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-list-item-link')} to={item.link}>View</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View List</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-header')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count')} style={{color: \"#272E4C\"}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t6\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count-description')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tClosed Contracts / Accounts\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<List dense>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclosed_contracts.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText id={'closed_contracts_'+index} className={clsx('dashboard-list-item-text')} primary={item.name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-list-item-link')} to={item.link}>View</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View List</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={4}>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t(role == 'underwriting_head' || role == 'underwriting_staff') ?\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-header')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count')} style={{color: \"#272E4C\"}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t35\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count-description')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tGenerated Proposals\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<List dense>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgenerated_proposals.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText id={'generated_proposals_'+index} className={clsx('dashboard-list-item-text')} primary={item.name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-list-item-link')} to={item.link}>View</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-header')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count')} style={{color: \"#272E4C\"}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t35\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count-description')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tActive Proposals\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<List dense>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tactive_proposals.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText id={'active_proposals_'+index} className={clsx('dashboard-list-item-text')} primary={item.name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-list-item-link')} to={item.link}>View</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={4}>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t(role == 'underwriting_head' || role == 'underwriting_staff') ?\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')} style={{visibility: 'hidden'}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-graph-header')} style={{borderBottom: '1px solid #151C1B'}} display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-graph-title')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTop<br />Facilities\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select items={top_facilities_options} value={this.state.top_facility_sort} onChange={this.handleTopFacilitySortSelect} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={'temp_dashboard_graph_04.png'} className={clsx('dashboard-temp-graph-img')} alt=\"Top Facilities\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-footer')} display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>Download Top Facilities Report</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-header')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count')} style={{color: \"#272E4C\"}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t35\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count-description')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNew Franchised Accounts\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<List dense>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnew_franchised_accounts.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText id={'new_franchised_accounts_'+index} className={clsx('dashboard-list-item-text')} primary={item.name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-list-item-link')} to={item.link}>View</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t*/}\n          </Grid>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state: Store) => state.dashboard;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  Map: bindActionCreators(DashboardActions.Map, dispatch),\n});\n\nexport { mapStateToProps, mapDispatchToProps };\n\n/**\n * Notes:\n * Limit Types(Hard coded): ABL, MBL, PEC (Pre-existing condition)\n */\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","import React, { FC } from 'react';\n// import Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\n\nimport { IModalComponent } from './IModalComponent';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\tdialog: {},\n\tdialogAction: {\n\t\tmarginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        justifyContent:'center'\n\t},\n\tdialogContentContainer: {\n        width: '100%'\n\t},\n\tcontainer: {\n        paddingRight:'15px',\n        paddingLeft:'15px',\n        width: '450px'\n\t},\n\tcloseButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n\t},\n\tdialogTitle: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        fontSize: '16px',\n        color: '#272E4C',\n\t\tfontWeight: 700\n    },\n}));\n\nexport const ModalComponent: FC<IModalComponent.IProps> = props => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={props.isModalOpen}\n\t\t\tonClose={props.onClose}\n\t\t\taria-labelledby=\"form-dialog-title\"\n\t\t\tmaxWidth=\"sm\"\n\t\t\tclassName={classes.dialog}\n\t\t> \n\t\t\t <div>\n                <Grid container className={classes.container} justify=\"flex-start\" alignItems=\"flex-start\" direction=\"column\">\n                    <Grid item xs>\n\t\t\t\t\t\t<DialogTitle className={classes.dialogTitle} disableTypography={false} id=\"form-dialog-title\" >\n\t\t\t\t\t\t\t<Box fontWeight={700}>{props.title}</Box>\n\t\t\t\t\t\t\t<IconButton aria-label=\"close\" className={classes.closeButton} onClick={props.onClose}>\n                                <CloseIcon />\n                            </IconButton>\n\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs className={classes.dialogContentContainer}>\n\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t<Grid container spacing={2} justify=\"space-between\" alignItems=\"flex-start\">\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t{props.message}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t<DialogActions className={classes.dialogAction}>\n\t\t\t\t\t\t\t{ props.buttons !== undefined ?\n\t\t\t\t\t\t\t\tprops.buttons: null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t</Grid>\n                </Grid>\n\t\t\t</div>\n\t\t</Dialog>\n\t);\n};\n\nModalComponent.defaultProps = {\n\tisModalOpen: false,\n};\n","let API_URL = process.env.REACT_APP_PMAKER_BASE_URL;\nlet ROOT_URL = process.env.REACT_APP_PMAKER_ROOT_URL;\n// let API_URL: string;\n// if(process.env.NODE_ENV === \"development\"){\n//     API_URL = \"http://18.140.39.215/api/1.0/workflow\";\n// }else{\n//     API_URL = \"http://18.140.39.215/api/1.0/workflow\";\n// }\n\nexport class Processmaker {\n    static getWithToken(url:string, token:string){ \n        console.log('token: ',token);\n    \tlet URL = API_URL + url;\n    \tconsole.log('get url: ', URL, token);\n        return fetch(URL, {\n\t\t   \tmethod: 'GET',\n\t\t   \theaders: {\n\t\t   \t\t'Content-Type':'application/json',\n\t\t   \t\t'Authorization': 'Bearer ' + localStorage.getItem('pm_token')\n\t\t   \t}\n\t\t}).then(response => response.json()\n\t\t).catch(error => {\n\t\t\tconsole.log('client error: ', error);\n\t\t});\n    }\n\n    static postWithToken(url:string, token:string, body:any){\n        console.log('token: ',token);\n    \tlet URL = API_URL + url;\n    \tconsole.log('post url: ', URL, body);\n        return fetch(URL, {\n\t\t   \tmethod: 'POST',\n\t\t   \theaders: {\n\t\t   \t\t'Content-Type':'application/json',\n\t\t   \t\t'Authorization': 'Bearer ' + localStorage.getItem('pm_token')\n\t\t   \t},\n\t\t   \tbody: JSON.stringify(body)\n\t\t}).then(response => {\n\t\t\tconsole.log('response',response);\n\t\t\treturn response.json()}\n\t\t).catch(error => {\n\t\t\tconsole.log('client error: ', error);\n\t\t});\n\t}\n\t\n\tstatic put(url:string, token:string, body:any){\n        console.log('token: ',token);\n    \tlet URL = API_URL + url;\n    \tconsole.log('post url: ', URL, body);\n        return fetch(URL, {\n\t\t   \tmethod: 'PUT',\n\t\t   \theaders: {\n\t\t   \t\t'Content-Type':'application/json',\n\t\t   \t\t'Authorization': 'Bearer ' + localStorage.getItem('pm_token')\n\t\t   \t},\n\t\t   \tbody: JSON.stringify(body)\n\t\t}).then(response => {\n\t\t\tconsole.log('response',response);\n\t\t\treturn response.json()}\n\t\t).catch(error => {\n\t\t\tconsole.log('client error: ', error);\n\t\t});\n    }\n\n    static post(url:string, body:any){\n    \tlet URL = API_URL + url;\n    \tconsole.log('post url: ', URL, body);\n        return fetch(URL, {\n\t\t   \tmethod: 'POST',\n\t\t   \theaders: {\n\t\t   \t\t'Content-Type':'application/json',\n\t\t   \t},\n\t\t   \tbody: JSON.stringify(body)\n\t\t}).then(response => {\n\t\t\tconsole.log('response',response);\n\t\t\treturn response.json()}\n\t\t).catch(error => {\n\t\t\tconsole.log('client error: ', error);\n\t\t});\n\t}\n\t\n\tstatic postLogin(url:string, body:any){\n    \tlet URL = ROOT_URL + url;\n    \tconsole.log('post url: ', URL, body);\n        return fetch(URL, {\n\t\t   \tmethod: 'POST',\n\t\t   \theaders: {\n\t\t   \t\t'Content-Type':'application/json',\n\t\t   \t},\n\t\t   \tbody: JSON.stringify(body)\n\t\t}).then(response => {\n\t\t\tconsole.log('response',response);\n\t\t\treturn response.json()}\n\t\t).catch(error => {\n\t\t\tconsole.log('client error: ', error);\n\t\t});\n\t}\n\n\tstatic postClaim(url:string){\n        return fetch(API_URL+url, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Authorization': 'Bearer ' + localStorage.getItem('pm_token')\n\t\t\t}\n\t\t}).then(response => response.json()\n\t\t).catch(error => {\n\t\t\tconsole.log('client error: ', error);\n\t\t});\n    }\n}"],"sourceRoot":""}