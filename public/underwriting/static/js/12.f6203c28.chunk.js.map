{"version":3,"sources":["../node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","Pages/Dashboard/ActionConsts.ts","Pages/Dashboard/Actions.ts","Pages/Dashboard/Dashboard.tsx","../node_modules/@material-ui/icons/Close.js","Pages/Processmaker/index.tsx","Components/UI/ModalComponent/ModalComponent.tsx"],"names":["forwardRef","props","ref","classes","className","other","createElement","root","muiName","withStyles","position","right","top","transform","name","ActionConsts","ResetReducer","SetReducer","DashboardActions","payload","type","ticket_options","value","top_facilities_options","renewals_for_revision","proposals_for_revision","link","tickets_waiting_response","CREATE_PROPOSAL_WORKFLOW","APPROVE_PROPOSAL_WORKFLOW","ONBOARD_CLIENT_WORKFLOW","FINALIZED_PROPOSAL_WORKFLOW","DISAPPROVE_WORKFLOW","Dashboard","reset","setState","role","loading","ticket_type","top_facility_sort","handleTicketTypeSelect","event","target","handleTopFacilitySortSelect","handleClickOpenTicketsRow","ticket","console","log","openTickets","Object","assign","state","ticket_details","app_tas_title","redirect","redirect_info","pathname","client_id","mother_contract_id","app_uid","gotoFinalizeProposalPage","history","push","window","location","reload","queryStringToJSON","queryString","trim","length","pairs","slice","split","result","forEach","pair","decodeURIComponent","JSON","parse","stringify","componentDidMount","propsJson","queryValues","search","localStorage","setItem","proposalsCreated","proposalsForApproval","contractsToSignOff","unassigned_tickets","isModalOpen","modalTitle","modalMessage","case_id","this","Processmaker","postClaim","then","response","undefined","status","toLowerCase","ticket_id","getWithToken","temp_unassigned","filtered_response","filter","item","app_status","index","due_date","moment","del_task_due_date","format","modified_date","app_update_date","temp_opens_ticket","app_number","due","Date","client_name","proposal_id","app_index","del_index","last_updated","priority","del_priority","temp","toString","corporate_account","is_urgent","current_task","getOpenTickets","getUnassignedTicket","sortOpenTicket","col","sortedtickets","sortbool","sort","a","b","sortUnassignedTicket","sortedOpenTicket","sortedUnassignedTicket","to","clsx","Grid","container","spacing","justify","alignItems","CircularProgress","xs","Typography","md","Paper","Box","display","flexDirection","justifyContent","style","color","onClick","Table","size","TableHead","TableRow","TableCell","icon","faSort","TableBody","map","row","key","cursor","e","component","scope","toLocaleDateString","year","month","day","textDecoration","handleClaim","visibility","src","alt","List","dense","ListItem","ListItemText","id","primary","ModalComponent","title","message","onClose","buttons","Button","backgroundColor","padding","variant","React","mapStateToProps","dashboard","mapDispatchToProps","dispatch","Map","bindActionCreators","_interopRequireDefault","defineProperty","exports","default","_react","_default","d","API_URL","process","url","token","URL","fetch","method","headers","getItem","json","catch","error","body","useStyles","makeStyles","theme","dialog","dialogAction","marginBottom","marginTop","dialogContentContainer","width","paddingRight","paddingLeft","closeButton","palette","grey","dialogTitle","fontSize","fontWeight","open","aria-labelledby","maxWidth","direction","disableTypography","aria-label","defaultProps"],"mappings":"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","file":"static/js/12.f6203c28.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","export const ActionConsts = {\n    Dashboard : {\n        ResetReducer: 'Dashboard_ResetReducer',\n        SetReducer: 'Dashboard_SetReducer'\n    },\n};","import { ActionConsts } from \"./ActionConsts\";\n\n/**\n * ACTIONS\n*/\nexport const DashboardActions = {\n\tMap: (payload: any) => (\n\t\t{\n\t\t\tpayload,\n\t\t\ttype: ActionConsts.Dashboard.SetReducer\n\t\t}\n\t),\n\n\tReset: () => ({\n\t\ttype: ActionConsts.Dashboard.ResetReducer\n\t})\n}","//#region Global Imports\nimport * as React from 'react';\n//import { useState } from 'react';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\n// import * as MaterialUI from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n// import { makeStyles } from '@material-ui/styles';\nimport moment from 'moment';\nimport clsx from 'clsx';\nimport { Redirect } from 'react-router-dom';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { AuthenticatedLayout } from 'Components/UI';\n\n//#endregion Global Imports\n\n//#region Local Imports\nimport './style.scss';\n//#endregion Local Imports\nimport Button from '@material-ui/core/Button';\n//#region Interface Imports\nimport { Store } from 'Components/Stores/IStore';\nimport { IDashboard } from './IDashboard';\nimport { DashboardActions } from './Actions';\nimport { Processmaker } from '../Processmaker';\nimport { ModalComponent } from 'Components/UI/ModalComponent/ModalComponent';\n\n// import { APIService } from 'Services/APIService';\n//#endregion Interface Imports\n\nimport '@hims/core/dist/index.css';\n\n// /** select customize style to set background as transparent */\n// const cellSelectStyles = makeStyles({\n// \tselect: {\n// \t\tbackgroundColor: 'transparent',\n// \t},\n// });\n\n// /** customization of material ui select for the page */\n// const Select = ({ id, value, items, onChange }: any) => {\n// \tconst cellSelectClasses = cellSelectStyles();\n// \treturn (\n// \t\t<MaterialUI.Select\n// \t\t\tid={id}\n// \t\t\tclasses={cellSelectClasses}\n// \t\t\tvalue={value}\n// \t\t\tonChange={onChange}\n// \t\t\tstyle={{ backgroundColor: 'transparent', color: '#242C2E', fontSize: '0.875em' }}\n// \t\t\trenderValue={(selected: any) => {\n// \t\t\t\tif (selected != null) {\n// \t\t\t\t\tconst value: any = items.find((item: any) => {\n// \t\t\t\t\t\treturn item.value == selected;\n// \t\t\t\t\t});\n// \t\t\t\t\tif (value) {\n// \t\t\t\t\t\treturn value.name;\n// \t\t\t\t\t} else {\n// \t\t\t\t\t\treturn '—';\n// \t\t\t\t\t}\n// \t\t\t\t}\n// \t\t\t\treturn '—';\n// \t\t\t}}\n// \t\t>\n// \t\t\t{items.map((item: any) => (\n// \t\t\t\t<MaterialUI.MenuItem key={item.value} value={item.value}>\n// \t\t\t\t\t{item.name}\n// \t\t\t\t</MaterialUI.MenuItem>\n// \t\t\t))}\n// \t\t</MaterialUI.Select>\n// \t);\n// };\n\nconst ticket_options = [\n  {\n    name: 'Created by Me',\n    value: 'created_by_me',\n  },\n  {\n    name: 'Created Tickets',\n    value: 'created_tickets',\n  },\n];\n\nconst top_facilities_options = [\n  {\n    name: 'By Amount',\n    value: 'amount',\n  },\n  {\n    name: 'By Availees',\n    value: 'availees',\n  },\n  {\n    name: 'By Cases',\n    value: 'cases',\n  },\n];\n\nconst renewals_for_revision = [];\n\nconst proposals_for_revision = [\n  {\n    name: 'NCG A.',\n    link: '#',\n  },\n  {\n    name: 'Nestle',\n    link: '#',\n  },\n  {\n    name: 'Ritz Corp.',\n    link: '#',\n  },\n  {\n    name: 'Innovative Tech.',\n    link: '#',\n  },\n];\n\nconst tickets_waiting_response = [];\n/** end of data */\n\n// const CREATE_PROPOSAL_TITLE = process.env.REACT_APP_CREATE_PROPOSAL_WORKFLOW;\n// const APPROVE_PROPOSAL_TITLE = process.env.REACT_APP_APPROVE_PROPOSAL_WORKFLOW;\n// const PROPOSAL_CREATION_TITLE = process.env.REACT_APP_PROPOSAL_CREATION_WORKFLOW;\n// const ONBOARD_CLIENT_TITLE = process.env.REACT_APP_ONBOARD_CLIENT_WORKFLOW;\n\nconst CREATE_PROPOSAL_WORKFLOW = 'Create Proposal';\nconst APPROVE_PROPOSAL_WORKFLOW = 'Approve Proposal';\nconst ONBOARD_CLIENT_WORKFLOW = 'Upload Signed Proposal';\nconst FINALIZED_PROPOSAL_WORKFLOW = 'Activate Account';\nconst DISAPPROVE_WORKFLOW = 'Revise Proposal';\n\nexport class Dashboard extends React.Component<\n  IDashboard.IProps,\n  IDashboard.IState\n> {\n  constructor(props: IDashboard.IProps) {\n    super(props);\n\n    this.state = {\n      role: 'underwriting_staff',\n      loading: false,\n      ticket_type: ticket_options[0].value,\n      top_facility_sort: top_facilities_options[0].value,\n      openTickets: [],\n      proposalsCreated: [],\n      proposalsForApproval: [],\n      contractsToSignOff: [],\n      redirect: false,\n      redirect_info: {},\n      unassigned_tickets: [],\n      isModalOpen: false,\n      modalTitle:'',\n      modalMessage:'',\n    };\n  }\n\n  reset = () => {\n    this.setState({\n      role: 'underwriting_staff',\n      loading: false,\n      ticket_type: ticket_options[0].value,\n      top_facility_sort: top_facilities_options[0].value,\n    });\n  };\n\n  handleTicketTypeSelect = (\n    event: React.ChangeEvent<{ name?: string | undefined; value: any }>,\n  ) => {\n    this.setState({\n      ticket_type: event.target.value,\n    });\n  };\n\n  handleTopFacilitySortSelect = (\n    event: React.ChangeEvent<{ name?: string | undefined; value: any }>,\n  ) => {\n    this.setState({\n      top_facility_sort: event.target.value,\n    });\n  };\n\n  handleClickOpenTicketsRow = (ticket: any) => {\n    console.log('handleClickOpenTicketsRow', ticket);\n    let openTickets = Object.assign([], this.state.openTickets);\n    console.log('openTickets: ', openTickets);\n    switch (ticket.ticket_details.app_tas_title) {\n      case APPROVE_PROPOSAL_WORKFLOW:\n        this.setState({\n          redirect: true,\n          redirect_info: {\n            pathname:\n              '/underwriting/approve-proposal/' +\n              ticket.client_id +\n              '/' +\n              ticket.mother_contract_id +\n              '/' +\n              ticket.ticket_details.app_uid,\n          },\n        });\n        break;\n      case ONBOARD_CLIENT_WORKFLOW:\n        if (ticket.ticket_details.app_tas_title === 'Upload Signed Proposal') {\n          console.log('open finalize page 1');\n          this.setState({\n            redirect: true,\n            redirect_info: {\n              pathname:\n                '/underwriting/finalize-proposal/' +\n                ticket.client_id +\n                '/' +\n                ticket.mother_contract_id +\n                '/uploader/' +\n                ticket.ticket_details.app_uid,\n            },\n          });\n        } else {\n          this.setState({\n            redirect: true,\n            redirect_info: {\n              pathname:\n                '/underwriting/finalize-proposal/' +\n                ticket.client_id +\n                '/' +\n                ticket.mother_contract_id +\n                '/approver/' +\n                ticket.ticket_details.app_uid,\n            },\n          });\n          console.log('open finalize page 2');\n        }\n        break;\n      case FINALIZED_PROPOSAL_WORKFLOW:\n        this.setState({\n          redirect: true,\n          redirect_info: {\n            pathname:\n              '/underwriting/finalize-proposal/' +\n              ticket.client_id +\n              '/' +\n              ticket.mother_contract_id +\n              '/approver/' +\n              ticket.ticket_details.app_uid,\n          },\n        });\n        break;\n      case CREATE_PROPOSAL_WORKFLOW:\n      case DISAPPROVE_WORKFLOW:\n        this.setState({\n          redirect: true,\n          redirect_info: {\n            pathname:\n              '/underwriting/create-proposal/' + ticket.ticket_details.app_uid,\n          },\n        });\n        break;\n    }\n  };\n\n  handleClaim(ticket: any) {\n    if (ticket.case_id) {\n      this.setState(\n        {\n          loading: true,\n        },\n        () => {\n          Processmaker.postClaim(\n            'light/case/' + ticket.case_id + '/claim',\n          ).then(response => {\n            if (\n              response !== undefined &&\n              response.status !== undefined &&\n              response.status.toLowerCase() === 'ok'\n            ) {\n              this.setState({\n                loading: false,\n                isModalOpen:true,\n                modalMessage:'Ticket No. '+ticket.ticket_id+' for '+ticket.ticket_type+' was claimed successfully.',\n                modalTitle:'Ticket Claimed',\n              });\n            } else {\n              this.setState({\n                loading: false,\n              });\n            }\n          });\n        },\n      );\n    }\n  }\n\n  getUnassignedTicket() {\n    Processmaker.getWithToken('cases/unassigned', '').then(response => {\n      const temp_unassigned: any = [];\n      const filtered_response = response.filter(item => {\n        return (\n          item.app_status === 'TO_DO' &&\n          (item.app_tas_title === CREATE_PROPOSAL_WORKFLOW ||\n            item.app_tas_title === DISAPPROVE_WORKFLOW ||\n            item.app_tas_title === ONBOARD_CLIENT_WORKFLOW ||\n            item.app_tas_title === APPROVE_PROPOSAL_WORKFLOW ||\n            item.app_tas_title === FINALIZED_PROPOSAL_WORKFLOW)\n        );\n      });\n      if (filtered_response.length > 0) {\n        filtered_response.forEach((item: any, index: number) => {\n          const due_date = moment(item.del_task_due_date).format('MMM D, YYYY');\n          const modified_date = moment(item.app_update_date).format(\n            'MMM D, YYYY hh:mm:ss',\n          );\n          const temp_opens_ticket: any = {\n            ticket_id: item.app_number,\n            due: new Date(due_date),\n            ticket_type: item.app_tas_title,\n            client_name: '',\n            client_id: '',\n            ticket_details: item,\n            case_id: item.app_uid,\n            proposal_id: '',\n            app_index: item.del_index,\n            last_updated: new Date(modified_date),\n          };\n          temp_unassigned.push(temp_opens_ticket);\n          if (index === filtered_response.length - 1) {\n            this.setState({\n              unassigned_tickets: temp_unassigned,\n            });\n          }\n        });\n      } else {\n        this.setState({\n          unassigned_tickets: [],\n        });\n      }\n    });\n  }\n\n  getOpenTickets() {\n    let openTickets: any[] = [];\n    let proposalsCreated: any[] = [];\n    let proposalsForApproval: any[] = [];\n    let contractsToSignOff: any[] = [];\n    let app_uid: string = '';\n    let app_index: string = '';\n\n    Processmaker.getWithToken(\n      'cases?sort=APP_CACHE_VIEW.APP_UPDATE_DATE',\n      '',\n    ).then(response => {\n      console.log('pm getWithToken response', response);\n      if (response !== undefined) {\n        response.forEach(item => {\n          console.log('item.app_tas_title', item.app_tas_title);\n          if (\n            item.app_tas_title === CREATE_PROPOSAL_WORKFLOW ||\n            item.app_tas_title === ONBOARD_CLIENT_WORKFLOW ||\n            item.app_tas_title === APPROVE_PROPOSAL_WORKFLOW ||\n            item.app_tas_title === FINALIZED_PROPOSAL_WORKFLOW ||\n            item.app_tas_title === DISAPPROVE_WORKFLOW\n          ) {\n            console.log('Proposal Creation and Customization yes!!', item);\n            let priority = item.del_priority;\n            let due_date = moment(item.del_task_due_date).format('MMM D, YYYY');\n            let modified_date = moment(item.app_update_date).format(\n              'MMM D, YYYY hh:mm:ss',\n            );\n            console.log('due_date: ', due_date);\n            let temp = {\n              ticket_id: item.app_number,\n              due: new Date(due_date),\n              ticket_type: item.app_tas_title.toString(),\n              corporate_account: '-',\n              is_urgent: priority === 'NORMAL' ? false : true,\n              ticket_details: item,\n              mother_contract_id: '',\n              client_id: '',\n              last_updated: new Date(modified_date),\n            };\n\n            app_uid = item.app_uid;\n            console.log('app_uid: ', item.app_uid);\n            console.log('app_uid2: ', app_uid);\n\n            Processmaker.getWithToken('cases/' + item.app_uid, '').then(\n              response => {\n                if (\n                  response !== undefined &&\n                  response.current_task !== undefined\n                ) {\n                  app_index = response.current_task[0].del_index;\n\n                  Processmaker.getWithToken(\n                    'cases/' +\n                      item.app_uid +\n                      '/variables?app_index=' +\n                      app_index,\n                    '',\n                  ).then(response => {\n                    if (\n                      response !== undefined &&\n                      response.client_name !== undefined\n                    ) {\n                      temp.corporate_account = response.client_name;\n                    }\n                    if (\n                      response !== undefined &&\n                      response.mother_contract_id !== undefined\n                    ) {\n                      temp.mother_contract_id = response.mother_contract_id;\n                    }\n                    if (\n                      response !== undefined &&\n                      response.client_id !== undefined\n                    ) {\n                      temp.client_id = response.client_id;\n                    }\n                    openTickets.push(temp);\n                    if (\n                      temp.ticket_details.app_tas_title ===\n                        CREATE_PROPOSAL_WORKFLOW \n                        //|| temp.ticket_details.app_tas_title === DISAPPROVE_WORKFLOW\n                    ) {\n                      proposalsCreated.push(temp);\n                    } else if (\n                      temp.ticket_details.app_tas_title ===\n                      APPROVE_PROPOSAL_WORKFLOW\n                    ) {\n                      proposalsForApproval.push(temp);\n                    } else if (\n                      temp.ticket_details.app_tas_title ===\n                      FINALIZED_PROPOSAL_WORKFLOW\n                    ) {\n                      contractsToSignOff.push(temp);\n                    }\n                    this.setState({\n                      openTickets: openTickets,\n                      proposalsCreated: proposalsCreated,\n                      proposalsForApproval: proposalsForApproval,\n                      contractsToSignOff: contractsToSignOff,\n                    });\n                  });\n                }\n              },\n            );\n          }\n        });\n      }\n      console.log('Open Tickets: ', openTickets);\n    });\n  }\n\n  componentWillMount() {\n    //localStorage.setItem('pm_token', '570c879831fcb881c8217789710224d8115a6576');//admin\n    //localStorage.setItem('pm_token', '38c75c36c67eae360b5e1d6c5b1a57beb6cf5dea'); //BDO\n    //localStorage.setItem('pm_token', '9a7b897fcaaa749c5854e4039dfd51717b20e2bf'); //Manager\n    console.log('dashboard componentWillMount');\n    console.log(\n      'due_date: ',\n      moment('2019-10-28 17:00:00').format('MMM D, YYYY'),\n    );\n    this.getOpenTickets();\n    this.getUnassignedTicket();\n  }\n\n  gotoFinalizeProposalPage = () => {\n    this.props.history.push('#/underwriting/finalize-proposal/approver/1');\n    window.location.reload();\n  };\n\n  queryStringToJSON = queryString => {\n    if (queryString.trim().length < 1) {\n      return {};\n    }\n\n    var pairs = queryString.slice(1).split('&');\n\n    var result = {};\n    pairs.forEach(function(pair) {\n      pair = (pair as string).split('=');\n      result[pair[0]] = decodeURIComponent(pair[1] || '');\n    });\n\n    return JSON.parse(JSON.stringify(result));\n  };\n\n  componentDidMount = () => {\n    let propsJson = JSON.parse(JSON.stringify(this.props));\n    let queryValues = this.queryStringToJSON(propsJson.location.search);\n\n    console.log('url query: ', queryValues);\n\n    this.setState({\n      role:\n        queryValues && queryValues.role\n          ? queryValues.role\n          : 'underwriting_staff',\n    });\n\n    localStorage.setItem('sidebar', 'dashboard');\n  };\n\n  public render(): JSX.Element {\n    const {\n      loading,\n      openTickets,\n      role,\n      proposalsCreated,\n      proposalsForApproval,\n      contractsToSignOff,\n      redirect,\n      redirect_info,\n      unassigned_tickets,\n      isModalOpen,\n      modalTitle,\n      modalMessage,\n    } = this.state;\n    const sortOpenTicket = (col: string) => {\n      console.log(`Sort Open Ticket: ${col}`);\n      const sortedtickets = openTickets;\n      let sortbool: boolean = true;\n      if (col !== 'due') {\n        sortedtickets.length > 1\n          ? (sortbool =\n              sortedtickets[0][col].toString().toLowerCase() >=\n              sortedtickets[sortedtickets.length - 1][col]\n                .toString()\n                .toLowerCase())\n          : (sortbool = true);\n        if (sortbool) {\n          sortedtickets.sort((a, b) =>\n            a[col] &&\n            b[col] &&\n            a[col]\n              .toString()\n              .toLowerCase()\n              .trim() >=\n              b[col]\n                .toString()\n                .toLowerCase()\n                .trim()\n              ? 1\n              : -1,\n          );\n        } else {\n          sortedtickets.sort((a, b) =>\n            a[col] &&\n            b[col] &&\n            a[col]\n              .toString()\n              .toLowerCase()\n              .trim() >=\n              b[col]\n                .toString()\n                .toLowerCase()\n                .trim()\n              ? -1\n              : 1,\n          );\n        }\n      } else {\n        sortedtickets.length > 1\n          ? (sortbool =\n              new Date(sortedtickets[0][col]) > new Date(sortedtickets[1][col]))\n          : (sortbool = true);\n\n        sortedtickets.sort((a, b) =>\n          a[col] && b[col] && new Date(a[col]) > new Date(b[col]) && sortbool\n            ? 1\n            : -1,\n        );\n      }\n      console.log(sortedtickets);\n      this.setState({\n        openTickets: sortedtickets,\n      });\n    };\n\n    const sortUnassignedTicket = (col: string) => {\n      console.log(col);\n      let sortedtickets = unassigned_tickets;\n      let sortbool: boolean = true;\n      if (col !== 'due') {\n        sortedtickets.length > 1\n          ? (sortbool =\n              sortedtickets[0][col].toString().toLowerCase() >=\n              sortedtickets[sortedtickets.length - 1][col]\n                .toString()\n                .toLowerCase())\n          : (sortbool = true);\n        if (sortbool) {\n          sortedtickets.sort((a, b) =>\n            a[col] &&\n            b[col] &&\n            a[col]\n              .toString()\n              .toLowerCase()\n              .trim() >=\n              b[col]\n                .toString()\n                .toLowerCase()\n                .trim()\n              ? //&& sortbool\n                1\n              : -1,\n          );\n        } else {\n          sortedtickets.sort((a, b) =>\n            a[col] &&\n            b[col] &&\n            a[col]\n              .toString()\n              .toLowerCase()\n              .trim() >=\n              b[col]\n                .toString()\n                .toLowerCase()\n                .trim()\n              ? //&& sortbool\n                -1\n              : 1,\n          );\n        }\n      } else {\n        sortedtickets.length > 1\n          ? (sortbool =\n              new Date(sortedtickets[0][col]) > new Date(sortedtickets[1][col]))\n          : (sortbool = true);\n\n        sortedtickets.sort((a, b) =>\n          a[col] && b[col] && new Date(a[col]) > new Date(b[col]) && sortbool\n            ? 1\n            : -1,\n        );\n      }\n      console.log(sortedtickets);\n      this.setState({ unassigned_tickets: sortedtickets });\n    };\n\n    const sortedOpenTicket = openTickets.sort((a: any, b: any) =>\n      a['last_updated'] &&\n      b['last_updated'] &&\n      new Date(a['last_updated']) > new Date(b['last_updated'])\n        ? -1\n        : 1,\n    );\n\n    const sortedUnassignedTicket = unassigned_tickets.sort((a: any, b: any) =>\n      a['last_updated'] &&\n      b['last_updated'] &&\n      new Date(a['last_updated']) > new Date(b['last_updated'])\n        ? -1\n        : 1,\n    );\n    console.log('sorted unassigned tickets', sortedUnassignedTicket);\n    console.log('role: ', role, ' ==== ', redirect_info);\n    if (redirect === true) {\n      return <Redirect to={redirect_info} />;\n    } else {\n      return (\n        <div className={clsx('Dashboard')}>\n          <Grid\n            container\n            spacing={2}\n            justify=\"space-between\"\n            alignItems=\"flex-start\"\n          >\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Grid item>\n                {loading && (\n                  <CircularProgress className={clsx('loading-indicator')} />\n                )}\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <Grid container justify=\"flex-start\" alignItems=\"flex-start\">\n                <Grid item xs={12}>\n                  <Typography className={clsx('title')}>Dashboard</Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={12} md={12}>\n              <Grid\n                container\n                justify=\"space-between\"\n                spacing={4}\n                alignItems=\"flex-start\"\n              >\n                <Grid item xs={12} md={8}>\n                  <Typography className={clsx('sub-title')}>\n                    Your Ticket List\n                  </Typography>\n                  <Paper className={clsx('content')}>\n                    <Box\n                      className={clsx('card-header')}\n                      display=\"flex\"\n                      flexDirection=\"row\"\n                      justifyContent=\"space-between\"\n                    >\n                      <Box>\n                        <Typography\n                          className={clsx('dashboard-count')}\n                          style={{ color: '#FD5451' }}\n                        >\n                          {openTickets.length}\n                        </Typography>\n                        <Typography\n                          className={clsx('dashboard-count-description')}\n                          onClick={this.gotoFinalizeProposalPage}\n                        >\n                          Open Tickets\n                        </Typography>\n                      </Box>\n                      {/* <Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select items={ticket_options} value={this.state.ticket_type} onChange={this.handleTicketTypeSelect} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                    </Box>\n                    <Box className={clsx('card-content')}>\n                      <Table size=\"small\" className={clsx('dashboard-table')}>\n                        <TableHead>\n                          <TableRow>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              ID&nbsp;&nbsp;\n                              <div\n                                style={{ display: 'none' }}\n                                onClick={() => {\n                                  sortOpenTicket('ticket_id');\n                                }}\n                              >\n                                <FontAwesomeIcon icon={faSort} />\n                              </div>\n                            </TableCell>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              Date&nbsp;&nbsp;\n                              <div\n                                style={{ display: 'none' }}\n                                onClick={() => {\n                                  sortOpenTicket('due');\n                                }}\n                              >\n                                <FontAwesomeIcon icon={faSort} />\n                              </div>\n                            </TableCell>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              Ticket Type&nbsp;&nbsp;\n                              <div\n                                style={{ display: 'none' }}\n                                onClick={() => {\n                                  sortOpenTicket('ticket_type');\n                                }}\n                              >\n                                <FontAwesomeIcon icon={faSort} />\n                              </div>\n                            </TableCell>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              Corporate Account&nbsp;&nbsp;\n                              <div\n                                style={{ display: 'none' }}\n                                onClick={() => {\n                                  sortOpenTicket('corporate_account');\n                                }}\n                              >\n                                <FontAwesomeIcon icon={faSort} />\n                              </div>\n                            </TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {sortedOpenTicket.map((row, index) => (\n                            <TableRow\n                              key={index}\n                              style={{ cursor: 'pointer' }}\n                              className={clsx(\n                                index % 2 == 0\n                                  ? row.is_urgent\n                                    ? 'dashboard-table-hg-even-row'\n                                    : 'dashboard-table-even-row'\n                                  : row.is_urgent\n                                  ? 'dashboard-table-hg-odd-row'\n                                  : 'dashboard-table-odd-row',\n                              )}\n                              onClick={e => {\n                                this.handleClickOpenTicketsRow(row);\n                                console.log(\n                                  'handleClickOpenTicketsRow target: ',\n                                  e,\n                                );\n                              }}\n                            >\n                              <TableCell\n                                className={clsx('dashboard-table-data-cell')}\n                                component=\"th\"\n                                scope=\"row\"\n                              >\n                                {row.ticket_id}\n                              </TableCell>\n                              <TableCell\n                                className={clsx('dashboard-table-data-cell')}\n                              >\n                                {row.last_updated.toLocaleDateString('en-US', {\n                                  year: 'numeric',\n                                  month: 'short',\n                                  day: 'numeric',\n                                })}\n                              </TableCell>\n                              <TableCell\n                                className={clsx('dashboard-table-data-cell')}\n                              >\n                                {row.ticket_type}\n                              </TableCell>\n                              <TableCell\n                                className={clsx('dashboard-table-data-cell')}\n                              >\n                                {row.corporate_account}\n                              </TableCell>\n                            </TableRow>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    </Box>\n                    {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                  </Paper>\n                  <Paper className={clsx('content')}>\n                    <Box\n                      className={clsx('card-header')}\n                      display=\"flex\"\n                      flexDirection=\"row\"\n                      justifyContent=\"space-between\"\n                    >\n                      <Box>\n                        <Typography\n                          className={clsx('dashboard-count')}\n                          style={{ color: '#FD5451' }}\n                        >\n                          {unassigned_tickets.length}\n                        </Typography>\n                        <Typography\n                          className={clsx('dashboard-count-description')}\n                          onClick={this.gotoFinalizeProposalPage}\n                        >\n                          Unassigned Tickets\n                        </Typography>\n                      </Box>\n                    </Box>\n                    <Box className={clsx('card-content')}>\n                      <Table size=\"small\" className={clsx('dashboard-table')}>\n                        <TableHead>\n                          <TableRow>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              ID&nbsp;&nbsp;\n                              <div\n                                style={{ display: 'none' }}\n                                onClick={() => {\n                                  sortUnassignedTicket('ticket_id');\n                                }}\n                              >\n                                <FontAwesomeIcon icon={faSort} />\n                              </div>\n                            </TableCell>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              Date&nbsp;&nbsp;\n                              <div\n                                style={{ display: 'none' }}\n                                onClick={() => {\n                                  sortUnassignedTicket('due');\n                                }}\n                              >\n                                <FontAwesomeIcon icon={faSort} />\n                              </div>\n                            </TableCell>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              Ticket Type&nbsp;&nbsp;\n                              <div\n                                style={{ display: 'none' }}\n                                onClick={() => {\n                                  sortUnassignedTicket('ticket_type');\n                                }}\n                              >\n                                <FontAwesomeIcon icon={faSort} />\n                              </div>\n                            </TableCell>\n                            <TableCell\n                              className={clsx('dashboard-table-header-cell')}\n                            >\n                              Action\n                            </TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {sortedUnassignedTicket.map((row, index) => (\n                            <TableRow\n                              key={index}\n                              className={clsx(\n                                index % 2 == 0\n                                  ? row.is_urgent\n                                    ? 'dashboard-table-hg-even-row'\n                                    : 'dashboard-table-even-row'\n                                  : row.is_urgent\n                                  ? 'dashboard-table-hg-odd-row'\n                                  : 'dashboard-table-odd-row',\n                              )}\n                              onClick={e => {\n                                // this.handleClickOpenTicketsRow(row);\n                                console.log(\n                                  'handleClickOpenTicketsRow target: ',\n                                  e,\n                                );\n                              }}\n                            >\n                              <TableCell\n                                className={clsx('dashboard-table-data-cell')}\n                                component=\"th\"\n                                scope=\"row\"\n                              >\n                                {row.ticket_id}\n                              </TableCell>\n                              <TableCell\n                                className={clsx('dashboard-table-data-cell')}\n                              >\n                                {row.last_updated.toLocaleDateString('en-US', {\n                                  year: 'numeric',\n                                  month: 'short',\n                                  day: 'numeric',\n                                })}\n                              </TableCell>\n                              <TableCell\n                                className={clsx('dashboard-table-data-cell')}\n                              >\n                                {row.ticket_type}\n                              </TableCell>\n                              <TableCell\n                                className={clsx('dashboard-table-data-cell')}\n                              >\n                                <span\n                                  style={{ textDecoration: 'underline', cursor: 'pointer'}}\n                                  className={clsx('dashboard-list-item-link')}\n                                  onClick={e => {\n                                    this.handleClaim(row);\n                                  console.log('e >>>>', e);\n                                  }}\n                                >\n                                  Claim\n                                </span>\n                              </TableCell>\n                            </TableRow>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    </Box>\n                    {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                  </Paper>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <Typography className={clsx('sub-title')}>\n                    Your Task Tray\n                  </Typography>\n                  {role == 'underwriting_head' ? (\n                    <Paper\n                      className={clsx('content')}\n                      style={{ visibility: 'hidden' }}\n                    >\n                      <Box className={clsx('card-header')}>\n                        <Typography\n                          className={clsx('dashboard-count')}\n                          style={{ color: '#3AB77D' }}\n                        >\n                          {proposalsCreated.length}\n                        </Typography>\n                        <Typography\n                          className={clsx('dashboard-count-description')}\n                        >\n                          Proposals To Be Created\n                        </Typography>\n                      </Box>\n                      <Box className={clsx('card-content')}>\n                        <img\n                          src={'temp_dashboard_graph_01.png'}\n                          className={clsx('dashboard-temp-graph-img')}\n                          alt=\"Proposals To Be Created\"\n                        />\n                      </Box>\n                      {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View List</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                    </Paper>\n                  ) : (\n                    <Paper className={clsx('content')}>\n                      <Box className={clsx('card-header')}>\n                        <Typography\n                          className={clsx('dashboard-count')}\n                          style={{ color: '#3AB77D' }}\n                        >\n                          {proposalsCreated.length}\n                        </Typography>\n                        <Typography\n                          className={clsx('dashboard-count-description')}\n                        >\n                          Proposals To Be Created\n                        </Typography>\n                      </Box>\n                      <Box\n                        className={clsx('card-content')}\n                        alignItems=\"flex-start\"\n                      >\n                        <List dense>\n                          {proposalsCreated.map((item, index) => {\n                            return (\n                              <ListItem key={index}>\n                                <ListItemText\n                                  id={'proposals_to_be_created_' + index}\n                                  className={clsx('dashboard-list-item-text')}\n                                  primary={item.corporate_account}\n                                />\n                                <ListItemSecondaryAction>\n                                  <Link\n                                    className={clsx('dashboard-list-item-link')}\n                                    to={'create-proposal/' + item.app_uid}\n                                  >\n                                    Create\n                                  </Link>\n                                </ListItemSecondaryAction>\n                              </ListItem>\n                            );\n                          })}\n                        </List>\n                      </Box>\n                      {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View List</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                    </Paper>\n                  )}\n\n                  {role == 'underwriting_head' ||\n                  role == 'underwriting_staff' ? (\n                    <Paper className={clsx('content')}>\n                      <Box className={clsx('card-header')}>\n                        <Typography\n                          className={clsx('dashboard-count')}\n                          style={{ color: '#FAB435' }}\n                        >\n                          {renewals_for_revision.length}\n                        </Typography>\n                        <Typography\n                          className={clsx('dashboard-count-description')}\n                        >\n                          Renewals to be Revised\n                        </Typography>\n                      </Box>\n                      <Box\n                        className={clsx('card-content')}\n                        alignItems=\"flex-start\"\n                      >\n                        <List dense>\n                          {/*\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trenewals_for_revision.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText id={'renewal_for_revision_'+index} className={clsx('dashboard-list-item-text')} primary={item.name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-list-item-link')} to={item.link}>Revise</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*/}\n                        </List>\n                      </Box>\n                      {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View List</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                    </Paper>\n                  ) : (\n                    <Paper className={clsx('content')}>\n                      <Box className={clsx('card-header')}>\n                        <Typography\n                          className={clsx('dashboard-count')}\n                          style={{ color: '#FAB435' }}\n                        >\n                          {proposals_for_revision.length}\n                        </Typography>\n                        <Typography\n                          className={clsx('dashboard-count-description')}\n                        >\n                          Proposals to be Revised\n                        </Typography>\n                      </Box>\n                      <Box\n                        className={clsx('card-content')}\n                        alignItems=\"flex-start\"\n                      >\n                        <List dense>\n                          {/*\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tproposals_for_revision.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText id={'proposals_for_revision_'+index} className={clsx('dashboard-list-item-text')} primary={item.name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-list-item-link')} to={item.link}>Revise</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*/}\n                        </List>\n                      </Box>\n                      {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View List</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                    </Paper>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={12} md={12}>\n              <Grid\n                container\n                justify=\"space-between\"\n                spacing={4}\n                alignItems=\"flex-start\"\n              >\n                <Grid item xs={12} md={4}>\n                  <Paper className={clsx('content')}>\n                    <Box className={clsx('card-header')}>\n                      <Typography\n                        className={clsx('dashboard-count')}\n                        style={{ color: '#8034AD' }}\n                      >\n                        {proposalsForApproval.length}\n                      </Typography>\n                      <Typography\n                        className={clsx('dashboard-count-description')}\n                      >\n                        Proposals Waiting Approval\n                      </Typography>\n                    </Box>\n                    <Box className={clsx('card-content')}>\n                      <List dense>\n                        {proposalsForApproval.map((item, index) => {\n                          return (\n                            <ListItem key={index}>\n                              <ListItemText\n                                id={'proposals_for_approval_' + index}\n                                className={clsx('dashboard-list-item-text')}\n                                primary={item.corporate_account}\n                              />\n                              <ListItemSecondaryAction>\n                                <Link\n                                  className={clsx('dashboard-list-item-link')}\n                                  to={'approve-proposal/' + item.app_uid}\n                                >\n                                  View\n                                </Link>\n                              </ListItemSecondaryAction>\n                            </ListItem>\n                          );\n                        })}\n                      </List>\n                    </Box>\n                    {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                  </Paper>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  {role == 'underwriting_head' ||\n                  role == 'underwriting_staff' ? (\n                    <Paper className={clsx('content')}>\n                      <Box className={clsx('card-header')}>\n                        <Typography\n                          className={clsx('dashboard-count')}\n                          style={{ color: '#272E4C' }}\n                        >\n                          {contractsToSignOff.length}\n                        </Typography>\n                        <Typography\n                          className={clsx('dashboard-count-description')}\n                        >\n                          Contracts to Sign-Off\n                        </Typography>\n                      </Box>\n                      <Box className={clsx('card-content')}>\n                        <List dense>\n                          {contractsToSignOff.map((item, index) => {\n                            return (\n                              <ListItem key={index}>\n                                <ListItemText\n                                  id={'contracts_to_signoff_' + index}\n                                  className={clsx('dashboard-list-item-text')}\n                                  primary={item.corporate_account}\n                                />\n                                <ListItemSecondaryAction>\n                                  <Link\n                                    className={clsx('dashboard-list-item-link')}\n                                    to={\n                                      'finalize-proposal/approver/' +\n                                      item.app_uid\n                                    }\n                                  >\n                                    View\n                                  </Link>\n                                </ListItemSecondaryAction>\n                              </ListItem>\n                            );\n                          })}\n                        </List>\n                      </Box>\n                      {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                    </Paper>\n                  ) : (\n                    <Paper className={clsx('content')}>\n                      <Box className={clsx('card-header')}>\n                        <Typography\n                          className={clsx('dashboard-count')}\n                          style={{ color: '#272E4C' }}\n                        >\n                          {contractsToSignOff.length}\n                        </Typography>\n                        <Typography\n                          className={clsx('dashboard-count-description')}\n                        >\n                          Contracts to Sign-Off\n                        </Typography>\n                      </Box>\n                      <Box className={clsx('card-content')}>\n                        <List dense>\n                          {contractsToSignOff.map((item, index) => {\n                            return (\n                              <ListItem key={index}>\n                                <ListItemText\n                                  id={'contracts_to_signoff_' + index}\n                                  className={clsx('dashboard-list-item-text')}\n                                  primary={item.corporate_account}\n                                />\n                                <ListItemSecondaryAction>\n                                  <Link\n                                    className={clsx('dashboard-list-item-link')}\n                                    to={\n                                      'finalize-proposal/approver/' +\n                                      item.app_uid\n                                    }\n                                  >\n                                    View\n                                  </Link>\n                                </ListItemSecondaryAction>\n                              </ListItem>\n                            );\n                          })}\n                        </List>\n                      </Box>\n                      {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                    </Paper>\n                  )}\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <Paper className={clsx('content')}>\n                    <Box className={clsx('card-header')}>\n                      <Typography\n                        className={clsx('dashboard-count')}\n                        style={{ color: '#1AB1C4' }}\n                      >\n                        {tickets_waiting_response.length}\n                      </Typography>\n                      <Typography\n                        className={clsx('dashboard-count-description')}\n                      >\n                        Tickets Waiting Response\n                      </Typography>\n                    </Box>\n                    <Box className={clsx('card-content')}>\n                      <List dense>\n                        {/*\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttickets_waiting_response.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText id={'tickets_waiting_response_'+index} className={clsx('dashboard-list-item-text')} primary={item.name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-list-item-link')} to={item.link}>View</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t*/}\n                      </List>\n                    </Box>\n                    {/* <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box> */}\n                  </Paper>\n                </Grid>\n                <ModalComponent\n                        isModalOpen={isModalOpen}\n                        title={modalTitle}\n                        message={modalMessage}\n                        onClose={() => {\n                          this.setState({\n                            isModalOpen:false\n                          }, () =>{\n                            this.getOpenTickets();\n                            this.getUnassignedTicket();\n                          })\n                        }}\n                        buttons={<Button\n                          style={{backgroundColor:'#3AB77D',color:'white',padding:'10px 30px'}}\n                          onClick={() => {\n                            this.setState({\n                              isModalOpen:false\n                            }, () =>{\n                              this.getOpenTickets();\n                              this.getUnassignedTicket();\n                            })\n                          }}\n                          variant=\"contained\"\n                      >\n                          Okay\n                      </Button>} />\n              </Grid>\n            </Grid>\n            {/*\n\t\t\t\t\t\t\t\t<Grid item xs={12} md={12}>\n\t\t\t\t\t\t\t\t\t<Typography className={clsx('sub-title')} style={{marginTop: 48}}>\n\t\t\t\t\t\t\t\t\t\tReports\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12} md={12} style={{display: 'none'}}>\n\t\t\t\t\t\t\t\t\t<Grid container justify=\"space-between\" spacing={4} alignItems=\"flex-start\">\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-graph-header')} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-graph-title')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tClosed Accounts\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={'temp_dashboard_graph_02.png'} className={clsx('dashboard-temp-graph-img-report')} alt=\"Closed Accounts\" />\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t(role == 'underwriting_head' || role == 'underwriting_staff') ?\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-graph-header')} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-graph-title')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTop 5 Clients in Utilization\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={'temp_dashboard_graph_03.png'} className={clsx('dashboard-temp-graph-img-report')} alt=\"Top 5 Clients in Utilization\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-graph-header')} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-graph-title')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFranchised Accounts\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={'temp_dashboard_graph_05.png'} className={clsx('dashboard-temp-graph-img-report')} alt=\"Top 5 Clients in Utilization\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12} md={12}>\n\t\t\t\t\t\t\t\t\t<Grid container justify=\"space-between\" spacing={4} alignItems=\"flex-start\">\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={4}>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t(role == 'underwriting_head' || role == 'underwriting_staff') ?\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-header')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count')} style={{color: \"#272E4C\"}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t6\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count-description')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNewly Renewed Accounts\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<List dense>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewly_renewed_accounts.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText id={'newly_renewed_accounts_'+index} className={clsx('dashboard-list-item-text')} primary={item.name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-list-item-link')} to={item.link}>View</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View List</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-header')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count')} style={{color: \"#272E4C\"}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t6\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count-description')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tClosed Contracts / Accounts\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<List dense>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclosed_contracts.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText id={'closed_contracts_'+index} className={clsx('dashboard-list-item-text')} primary={item.name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-list-item-link')} to={item.link}>View</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View List</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={4}>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t(role == 'underwriting_head' || role == 'underwriting_staff') ?\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-header')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count')} style={{color: \"#272E4C\"}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t35\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count-description')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tGenerated Proposals\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<List dense>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgenerated_proposals.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText id={'generated_proposals_'+index} className={clsx('dashboard-list-item-text')} primary={item.name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-list-item-link')} to={item.link}>View</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-header')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count')} style={{color: \"#272E4C\"}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t35\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count-description')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tActive Proposals\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<List dense>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tactive_proposals.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText id={'active_proposals_'+index} className={clsx('dashboard-list-item-text')} primary={item.name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-list-item-link')} to={item.link}>View</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={4}>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t(role == 'underwriting_head' || role == 'underwriting_staff') ?\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')} style={{visibility: 'hidden'}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-graph-header')} style={{borderBottom: '1px solid #151C1B'}} display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-graph-title')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTop<br />Facilities\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select items={top_facilities_options} value={this.state.top_facility_sort} onChange={this.handleTopFacilitySortSelect} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={'temp_dashboard_graph_04.png'} className={clsx('dashboard-temp-graph-img')} alt=\"Top Facilities\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-footer')} display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>Download Top Facilities Report</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={clsx('content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-header')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count')} style={{color: \"#272E4C\"}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t35\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className={clsx('dashboard-count-description')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNew Franchised Accounts\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-content')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<List dense>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnew_franchised_accounts.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText id={'new_franchised_accounts_'+index} className={clsx('dashboard-list-item-text')} primary={item.name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-list-item-link')} to={item.link}>View</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t*/}\n          </Grid>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state: Store) => state.dashboard;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  Map: bindActionCreators(DashboardActions.Map, dispatch),\n});\n\nexport { mapStateToProps, mapDispatchToProps };\n\n/**\n * Notes:\n * Limit Types(Hard coded): ABL, MBL, PEC (Pre-existing condition)\n */\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","let API_URL = process.env.REACT_APP_PMAKER_BASE_URL;\nlet ROOT_URL = process.env.REACT_APP_PMAKER_ROOT_URL;\n// let API_URL: string;\n// if(process.env.NODE_ENV === \"development\"){\n//     API_URL = \"http://18.140.39.215/api/1.0/workflow\";\n// }else{\n//     API_URL = \"http://18.140.39.215/api/1.0/workflow\";\n// }\n\nexport class Processmaker {\n    static getWithToken(url:string, token:string){ \n        console.log('token: ',token);\n    \tlet URL = API_URL + url;\n    \tconsole.log('get url: ', URL, token);\n        return fetch(URL, {\n\t\t   \tmethod: 'GET',\n\t\t   \theaders: {\n\t\t   \t\t'Content-Type':'application/json',\n\t\t   \t\t'Authorization': 'Bearer ' + localStorage.getItem('pm_token')\n\t\t   \t}\n\t\t}).then(response => response.json()\n\t\t).catch(error => {\n\t\t\tconsole.log('client error: ', error);\n\t\t});\n    }\n\n    static postWithToken(url:string, token:string, body:any){\n        console.log('token: ',token);\n    \tlet URL = API_URL + url;\n    \tconsole.log('post url: ', URL, body);\n        return fetch(URL, {\n\t\t   \tmethod: 'POST',\n\t\t   \theaders: {\n\t\t   \t\t'Content-Type':'application/json',\n\t\t   \t\t'Authorization': 'Bearer ' + localStorage.getItem('pm_token')\n\t\t   \t},\n\t\t   \tbody: JSON.stringify(body)\n\t\t}).then(response => {\n\t\t\tconsole.log('response',response);\n\t\t\treturn response.json()}\n\t\t).catch(error => {\n\t\t\tconsole.log('client error: ', error);\n\t\t});\n\t}\n\t\n\tstatic put(url:string, token:string, body:any){\n        console.log('token: ',token);\n    \tlet URL = API_URL + url;\n    \tconsole.log('post url: ', URL, body);\n        return fetch(URL, {\n\t\t   \tmethod: 'PUT',\n\t\t   \theaders: {\n\t\t   \t\t'Content-Type':'application/json',\n\t\t   \t\t'Authorization': 'Bearer ' + localStorage.getItem('pm_token')\n\t\t   \t},\n\t\t   \tbody: JSON.stringify(body)\n\t\t}).then(response => {\n\t\t\tconsole.log('response',response);\n\t\t\treturn response.json()}\n\t\t).catch(error => {\n\t\t\tconsole.log('client error: ', error);\n\t\t});\n    }\n\n    static post(url:string, body:any){\n    \tlet URL = API_URL + url;\n    \tconsole.log('post url: ', URL, body);\n        return fetch(URL, {\n\t\t   \tmethod: 'POST',\n\t\t   \theaders: {\n\t\t   \t\t'Content-Type':'application/json',\n\t\t   \t},\n\t\t   \tbody: JSON.stringify(body)\n\t\t}).then(response => {\n\t\t\tconsole.log('response',response);\n\t\t\treturn response.json()}\n\t\t).catch(error => {\n\t\t\tconsole.log('client error: ', error);\n\t\t});\n\t}\n\t\n\tstatic postLogin(url:string, body:any){\n    \tlet URL = ROOT_URL + url;\n    \tconsole.log('post url: ', URL, body);\n        return fetch(URL, {\n\t\t   \tmethod: 'POST',\n\t\t   \theaders: {\n\t\t   \t\t'Content-Type':'application/json',\n\t\t   \t},\n\t\t   \tbody: JSON.stringify(body)\n\t\t}).then(response => {\n\t\t\tconsole.log('response',response);\n\t\t\treturn response.json()}\n\t\t).catch(error => {\n\t\t\tconsole.log('client error: ', error);\n\t\t});\n\t}\n\n\tstatic postClaim(url:string){\n        return fetch(API_URL+url, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Authorization': 'Bearer ' + localStorage.getItem('pm_token')\n\t\t\t}\n\t\t}).then(response => response.json()\n\t\t).catch(error => {\n\t\t\tconsole.log('client error: ', error);\n\t\t});\n    }\n}","import React, { FC } from 'react';\n// import Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\n\nimport { IModalComponent } from './IModalComponent';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\tdialog: {},\n\tdialogAction: {\n\t\tmarginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        justifyContent:'center'\n\t},\n\tdialogContentContainer: {\n        width: '100%'\n\t},\n\tcontainer: {\n        paddingRight:'15px',\n        paddingLeft:'15px',\n        width: '450px'\n\t},\n\tcloseButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n\t},\n\tdialogTitle: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        fontSize: '16px',\n        color: '#272E4C',\n\t\tfontWeight: 700\n    },\n}));\n\nexport const ModalComponent: FC<IModalComponent.IProps> = props => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={props.isModalOpen}\n\t\t\tonClose={props.onClose}\n\t\t\taria-labelledby=\"form-dialog-title\"\n\t\t\tmaxWidth=\"sm\"\n\t\t\tclassName={classes.dialog}\n\t\t> \n\t\t\t <div>\n                <Grid container className={classes.container} justify=\"flex-start\" alignItems=\"flex-start\" direction=\"column\">\n                    <Grid item xs>\n\t\t\t\t\t\t<DialogTitle className={classes.dialogTitle} disableTypography={false} id=\"form-dialog-title\" >\n\t\t\t\t\t\t\t<Box fontWeight={700}>{props.title}</Box>\n\t\t\t\t\t\t\t<IconButton aria-label=\"close\" className={classes.closeButton} onClick={props.onClose}>\n                                <CloseIcon />\n                            </IconButton>\n\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs className={classes.dialogContentContainer}>\n\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t<Grid container spacing={2} justify=\"space-between\" alignItems=\"flex-start\">\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t{props.message}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t<DialogActions className={classes.dialogAction}>\n\t\t\t\t\t\t\t{ props.buttons !== undefined ?\n\t\t\t\t\t\t\t\tprops.buttons: null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t</Grid>\n                </Grid>\n\t\t\t</div>\n\t\t</Dialog>\n\t);\n};\n\nModalComponent.defaultProps = {\n\tisModalOpen: false,\n};\n"],"sourceRoot":""}