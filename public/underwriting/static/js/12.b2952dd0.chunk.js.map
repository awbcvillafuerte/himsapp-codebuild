{"version":3,"sources":["../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","Pages/ProposalList/Components/IconButton/index.tsx","Pages/ProposalList/Components/InputField/index.tsx","Pages/ProposalList/Components/ProposalListTable/index.tsx","Pages/ProposalList/ProposalListPage.tsx","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowRight.js"],"names":["_ref","createElement","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","forwardRef","props","ref","backIconButtonProps","count","nextIconButtonProps","onChangePage","page","rowsPerPage","other","theme","useTheme","IconButton","onClick","event","disabled","color","direction","Math","ceil","defaultLabelDisplayedRows","from","to","concat","defaultRowsPerPageOptions","colSpan","_props$ActionsCompone","ActionsComponent","classes","colSpanProp","_props$component","component","Component","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","onChangeRowsPerPage","_props$rowsPerPageOpt","rowsPerPageOptions","_props$SelectProps","SelectProps","MenuItemComponent","native","MenuItem","className","root","Toolbar","toolbar","spacer","length","Typography","variant","caption","Select","select","icon","selectIcon","input","InputBase","selectRoot","value","onChange","map","rowsPerPageOption","menuItem","key","min","actions","withStyles","palette","text","secondary","fontSize","typography","pxToRem","padding","height","minHeight","paddingRight","flex","flexShrink","marginRight","marginLeft","paddingLeft","textAlign","textAlignLast","top","name","this","size","React","InputField","_state","placeholder","error","dynamicStyle","borderColor","undefined","type","style","charLimit","target","ProposalTable","handleChangePage","_event","setState","handleChangeRowsPerPage","parseInt","getSlicedData","startingItem","state","rows","slice","filterData","numactive","filter","element","numapproved","numrevision","numsigned","overflow","canOverflow","Table","stickyHeader","TableHead","TableRow","align","backgroundColor","columns","column","label","renderHeader","left","zIndex","minWidth","maxWidth","float","faSort","console","log","TableBody","renderRow","row","j","TablePagination","paginationClass","info","onChangeInfo","useStyles","makeStyles","main","searchInputAdornment","gridContainer","spacing","gridContainerNoPadding","headerTitle","fontWeight","sectionTitle","subSectionTitle","fieldGroupTitle","listItemTextRoot","listItemTextPrimarySelected","cursor","listItemTextPrimaryNotSelected","dropzone","width","marginTop","marginBottom","border","borderRadius","display","justifyContent","alignItems","flexDirection","inputLabel","keyboardDatePicker","checkbox","radio","appBar","bottom","breakpoints","up","grow","flexGrow","button","margin","buttonTitle","buttonSubTitle","searchField","ProposalListPage","useState","loading","setLoading","filters","setFilters","selectedRows","setSelectedRows","PropListTable","setPropListTable","renderTable","setRenderTable","largeSearch","setLargeSearch","redirect","setRedirect","redirectType","setRedirectType","anchorEl","setAnchorEl","popoverOpen","Boolean","largeDateSearch","setLargeDateSearch","exportData","setExportData","exportFormat","setExportFormat","rowcustomstyle","position","proposallistcolumn","title","useEffect","API","getProposal","then","response","tmp","col","effdate","custom_metadata","coverage_start_date","coverage_end_date","Date","toLocaleDateString","year","day","month","push","account","registered_name","version","proposal_no","effectivity_date","bdobroker","date_created","date_modified","date_updated","status","renderCustomTableHeader","fixedColumns","dockedColumnsCounter","index","matchedColumn","nextColumnIsFixed","borderRight","tabSize","attrName","sortbool","toString","toLowerCase","sort","a","b","sortTickets","getFilteredTickets","filteredTickets","trim","ticket","includes","Button","renderCustomTableRow","pathname","Grid","container","justify","item","xs","alignContent","Box","p","Link","e","currentTarget","faDownload","faPlus","TextField","id","fullWidth","inputProps","InputProps","startAdornment","faSearch","endAdornment","faCalendar","ReportPopover","open","onClose","onChangeExportData","onChangeExportFormat","generateReport","d"],"mappings":"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","file":"static/js/12.b2952dd0.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(12),\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      height: 56,\n      minHeight: 56,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      // `.selectRoot` should be merged with `.input` in v5.\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {\n      top: 1\n    },\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count);\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      classes = props.classes,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"classes\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return React.createElement(Component, _extends({\n    className: classes.root,\n    colSpan: colSpan,\n    ref: ref\n  }, other), React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"caption\",\n    className: classes.caption\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption,\n      value: rowsPerPageOption\n    }, rowsPerPageOption);\n  })), React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"caption\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: Math.min(count, (page + 1) * rowsPerPage),\n    count: count,\n    page: page\n  })), React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: backIconButtonProps,\n    count: count,\n    nextIconButtonProps: nextIconButtonProps,\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a DOM element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label.\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label. Invoked with a `{ from, to, count, page }`\n   * object.\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: the page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","\n\nimport * as React from 'react';\n// import { Link } from '@material-ui/core';\nimport './component-style.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconProp, SizeProp } from '@fortawesome/fontawesome-svg-core';\n\ninterface IProps {\n    icon: IconProp;\n    onClick: () => void;\n    size?: SizeProp;\n}\n\nexport class IconButton extends React.Component<IProps> {\n\n    render(): JSX.Element {\n        return (\n            <div className='icon-button' onClick={() => this.props.onClick()}>\n                {this.props.icon ? <FontAwesomeIcon icon={this.props.icon} size={this.props.size} /> : null}\n            </div>\n        );\n    }\n}","import * as React from 'react';\n// import { InputBase } from '@material-ui/core';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport './component-style.scss';\n\ninterface IProps {\n    value: string;\n    onChange: (value: string) => void;\n\n    placeholder?: string;\n    error?: boolean;\n    icon?: IconProp;\n    disabled?: boolean;\n    charLimit?: number;\n}\n\nexport class InputField extends React.Component<IProps> {\n\n    \n\n    shouldComponentUpdate(props: IProps, _state: any) {\n        return (\n            (this.props.placeholder !== props.placeholder) ||\n            (this.props.value !== props.value) ||\n            (this.props.error !== props.error)\n        );\n    }\n\n    render(): JSX.Element {\n        const self = this;\n        const dynamicStyle = {\n            borderColor: (self.props.error ? '#E53935' : undefined)\n        };\n\n        return (\n            <div className='input-field-container'>\n                {this.props.placeholder ? (\n                    <div className={this.props.disabled ? 'text-disabled text' : 'text'}>\n                        {this.props.placeholder}\n                    </div>\n                ) : null}\n                <input type='text' \n                    disabled={this.props.disabled}\n                    className={this.props.disabled ? 'text-field-disabled text-field' : 'text-field'}\n                    style={dynamicStyle}\n                    // fullWidth \n                    value={this.props.value}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                        const condition = \n                            this.props.charLimit ? (\n                                event.target.value.length <= this.props.charLimit \n                            ) : (true) ;\n                            \n                        if (condition) {\n                            this.props.onChange(event.target.value);\n                        }\n                    }} />\n                {this.props.charLimit ? (\n                    <>\n                    <div className='text' />\n                    <div \n                        className={this.props.disabled ? 'text-disabled text' : 'text'}\n                        style={{textAlign: 'right'}}>\n                            {`${this.props.value.length}/${this.props.charLimit}`}\n                    </div>\n                    </>\n                ) : null}\n                \n            \n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { Table, TableBody, TableHead, TableRow, TablePagination, TableCell } from '@material-ui/core';\nimport './component-style.scss';\nimport { LabelDisplayedRowsArgs } from '@material-ui/core/TablePagination';\nimport { DropdownChoice } from '../../Models';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { IconButton } from '../IconButton';\nimport { InputField } from '../InputField'; \ninterface IProps {\n    className?: string;\n    paginationClass?: string;\n\n    /* Normal Mode */\n    rows: any[];\n    renderHeader: () => JSX.Element;\n    renderRow: (rowData: any, index: number) => JSX.Element;\n\n    /* Simple Mode - Automatically handles styling, so you can focus on data. */\n    columns?: DropdownChoice[]; // value: attribute, label: the title appearing on the header\n    canFilter?: boolean;\n    canSort?: boolean;\n\n    stickyHeader?: boolean;\n    canOverflow?: boolean;\n    rowsPerPageOptions?: number[];\n    labelRowsPerPage?: string;\n    onChangeInfo?: (info: LabelDisplayedRowsArgs) => string;\n}\n\ninterface IStates {\n    page: number;\n    rowsPerPage: number;\n    \n    filterData: any;\n}\n\n\nexport class ProposalTable extends React.PureComponent<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            page: 0,\n            rowsPerPage: 0,\n\n            filterData: {},\n            \n        }\n    }\n    componentDidMount() {\n        if (this.props.rowsPerPageOptions) {\n            this.setState({rowsPerPage: this.props.rowsPerPageOptions[0]});\n        }\n    }\n\n    handleChangePage = (_event: unknown, page: number) => {\n        this.setState({page: page});\n    }\n    \n    handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({\n            rowsPerPage: parseInt(event.target.value, 10),\n            page: 0\n        });\n    }\n\n    getSlicedData = () => {\n        if (this.props.rowsPerPageOptions) {\n            const startingItem = this.state.page * this.state.rowsPerPage;\n            return this.props.rows.slice(startingItem, startingItem + this.state.rowsPerPage);\n        } else {\n            return this.props.rows;\n        }\n    }\n    \n\n    render(): JSX.Element {\n        //console.log('rows')\n        //console.log(this.props.rows)\n        const numactive = this.props.rows.filter(function(element){\n            return (element['status']=='Approved');})\n        const numapproved = this.props.rows.filter(function(element){\n            return (element['status']=='Submitted');})\n        const numrevision = this.props.rows.filter(function(element){\n            return (element['status']=='Disapproved');})\n        const numsigned = this.props.rows.filter(function(element){\n            return (element['status']=='Signed');})\n            const style = {\n                left: 0,\n                zIndex: 125,\n                minWidth: '10px',\n                maxWidth: '300px',\n                paddingRight : '0px',\n                paddingLeft : '10px'\n              };\n        //console.log('rows end')\n        return (\n            <>\n            <div style={{overflow: this.props.canOverflow ? 'auto' : 'none'}}>\n                <Table \n                    className={`${(this.props.className ? this.props.className : '')} table`} \n                    stickyHeader={this.props.stickyHeader ? this.props.stickyHeader : false}>\n                    <TableHead>\n                        <TableRow >\n                            <TableCell colSpan={2} align='center' style={{backgroundColor:'#F4F4F4'}}>\n                            <span style={{color:'#3AB77D',fontSize:'20px'}}>{this.props.rows.length}</span> \n                            &nbsp;&nbsp;TOTAL\n                            </TableCell>\n                            <TableCell colSpan={1} align='center' style={{backgroundColor:'#F4F4F4'}}>\n                            <span style={{color:'#3AB77D',fontSize:'20px'}}>{numactive.length}</span> \n                            &nbsp;&nbsp;ACTIVE\n                            </TableCell>\n                            <TableCell colSpan={2} align='center' style={{backgroundColor:'#F4F4F4'}}>\n                            <span style={{color:'#3AB77D',fontSize:'20px'}}>{numapproved.length}</span> \n                            &nbsp;&nbsp;APPROVED\n                            </TableCell>\n                            <TableCell colSpan={2} align='center' style={{backgroundColor:'#F4F4F4'}}>\n                            <span style={{color:'#3AB77D',fontSize:'20px'}}>{numrevision.length}</span> \n                            &nbsp;&nbsp;FOR REVISION\n                            </TableCell>\n                            <TableCell colSpan={2} align='center' style={{backgroundColor:'#F4F4F4'}}>\n                            <span style={{color:'#3AB77D',fontSize:'20px'}}>{numsigned.length}</span> \n                            &nbsp;&nbsp;SIGNED\n                            </TableCell>\n                        </TableRow>\n                        {this.props.columns ? (\n                            <TableRow>\n                                {this.props.columns.map(column => {\n                                    return <TableCell>{column.label}</TableCell>\n                                })}\n                            </TableRow>\n                        ) : this.props.renderHeader ? (\n                            <TableRow>\n                                {this.props.renderHeader()}\n                                <TableCell style={style}>\n                                    <span className='header-2'>Action</span>\n                                    <div style={{float: 'right'}}>\n                                        <IconButton\n                                            icon={faSort}\n                                            onClick={() => {\n                                                console.log('sort')\n                                            }} />\n                                    </div>\n                                    <InputField\n                                        value=''\n                                        onChange={(value: string) => {\n                                            console.log(value)\n                                            // this.setState(prevState => ({...prevState, [attrName]: value}));\n                                        }} />\n                                </TableCell>\n                            </TableRow>\n                        ) : null}\n                    </TableHead>\n                    <TableBody>\n                        {this.props.renderRow ? (\n                            this.getSlicedData().map((row, j) => {\n                                return this.props.renderRow(row, j)\n                            })  \n                        ) : null}\n                    </TableBody>\n                </Table>\n            </div>\n            {this.props.rowsPerPageOptions ? (\n                <TablePagination\n                    className={`${(this.props.paginationClass ? this.props.paginationClass : '')} pagination MuiTablePagination-root`}\n                    rowsPerPageOptions={this.props.rowsPerPageOptions}\n                    count={this.props.rows.length}\n                    rowsPerPage={this.state.rowsPerPage}\n                    page={this.state.page}\n                    labelDisplayedRows={(info: LabelDisplayedRowsArgs) => {\n                        return (\n                            this.props.onChangeInfo ? (\n                                this.props.onChangeInfo(info)\n                            ) : (\n                                `${info.from}-${info.to} of ${info.count}`\n                            ));\n                    }}\n                    labelRowsPerPage={\n                        this.props.labelRowsPerPage ? (\n                            this.props.labelRowsPerPage\n                        ) : (\n                            'Rows per page:'\n                        )}\n                    onChangePage={(_event: unknown, page: number) => {\n                        this.setState({page: page});\n                    }}\n                    onChangeRowsPerPage={(event: React.ChangeEvent<HTMLInputElement>) => {\n                        this.setState({\n                            rowsPerPage: parseInt(event.target.value, 10),\n                            page: 0\n                        });\n                    }} />\n            ) : null}\n            </>\n        );\n    }\n}","import React, { useState, useEffect }  from 'react';\n\n//import { bindActionCreators, Dispatch } from 'redux';\n//import { Store } from 'Components/Stores/IStore';\n//import { ClientActions } from './ClientActions';\n//import { GlobalFunction } from 'Components/UI/GlobalFunction';\nimport { LoadingIndicator } from 'Components/UI/';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload, faPlus,faSort,faSearch,faCalendar } from '@fortawesome/free-solid-svg-icons';\nimport { ProposalTable } from './Components/ProposalListTable';\nimport { Grid, Box, Typography, Link, Button } from '@material-ui/core/';\nimport { Redirect } from 'react-router-dom';\nimport { PositionProperty } from 'csstype';\nimport { ReportPopover } from 'Components/UI/ReportPopover';\nimport {\n    TableRow,\n    TableCell,\n    TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { API } from '../API';\nimport { IconButton } from './Components/IconButton';\nimport { InputField } from './Components/InputField';\nimport {\n\tGridHorizontalDivider\n} from 'Components/UI';\n//import { Processmaker  } from '../Processmaker';\n// import { Processmaker } from '../Processmaker';\n// import { ConfirmationModal } from './Components/Modal/ConfirmationModal';\n\n// import {\n// \tGrid,\n// \tAvatar,\n// \tTypography,\n// \tList,\n// \tListItem,\n// \tListItemText,\n// \tCard,\n// \tCardContent,\n// \tBadge,\n// } from '@material-ui/core';\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\n\nconst useStyles = makeStyles(theme => ({\n\tmain:{\n\t\tbackgroundColor: '#F5F7FB',\n\t\tpadding: '32px 24px'\n    },\n    searchInputAdornment:{\n        color: '#00000061',\n          marginRight: '8px',\n    },\n\tgridContainer: {\n\t\tpadding: theme.spacing(1),\n\t\t// paddingBottom: '75px'\n\t},\n\tgridContainerNoPadding: {\n\t\tpadding: theme.spacing(1),\n\t},\n\theaderTitle: {\n\t\tfontSize: 32,\n\t\tfontWeight: 700,\n\t},\n\tsectionTitle: {\n\t\tfontSize: 24,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\tsubSectionTitle: {\n\t\tfontSize: 16,\n\t\tfontWeight: 400,\n\t\tcolor: '#272e4c',\n\t},\n\tfieldGroupTitle: {\n\t\tfontSize: 13,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\tlistItemTextRoot: {\n\t\tflex: 'none',\n\t},\n\tlistItemTextPrimarySelected: {\n\t\tfontSize: 14,\n\t\tfontWeight: 700,\n\t\tcolor: 'rgba(39, 46, 76, 1)',\n\t\tcursor: 'pointer',\n\t},\n\tlistItemTextPrimaryNotSelected: {\n\t\tfontSize: 14,\n\t\tfontWeight: 700,\n\t\tcolor: 'rgba(39, 46, 76, 0.3)',\n\t\tcursor: 'pointer',\n\t},\n\tdropzone: {\n\t\twidth: '460px',\n\t\theight: '88px',\n\t\tmarginTop: '10px',\n\t\tmarginBottom: '20px',\n\t\tborder: '2px dashed rgba(30, 32, 113, 0.3)',\n\t\tborderRadius: '5px',\n\t\tbackgroundColor: '#e6e8ee',\n\t\tcolor: '#7b8094',\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tflexDirection: 'column',\n\t},\n\tinputLabel: {\n\t\tcolor: '#272e4c',\n\t},\n\tkeyboardDatePicker: {\n\t\tmarginTop: '10px',\n\t\tmarginBottom: '20px',\n\t\twidth: '212px',\n\t},\n\tcheckbox: {\n\t\t'&.Mui-checked': {\n\t\t\tcolor: '#1e2071',\n\t\t},\n\t},\n\tradio: {\n\t\t'&.Mui-checked': {\n\t\t\tcolor: '#1e2071',\n\t\t},\n\t},\n\tappBar: {\n\t\ttop: 'auto',\n\t\tbottom: 0,\n\t\tborder: '1px solid #707070',\n\t\tbackgroundColor: 'rgba(54, 54, 54, 0.64)',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: 'calc(100% - 72px)',\n\t\t},\n\t},\n\tgrow: {\n\t\tflexGrow: 1,\n\t},\n\tbutton: {\n\t\tmargin: '0 10px',\n\t\tminHeight: '42px',\n\t\tminWidth: '150px',\n\t},\n\tbuttonTitle: {\n\t\tfontWeight: 700,\n\t\tfontSize: 13,\n\t},\n\tbuttonSubTitle: {\n\t\tfontWeight: 400,\n\t\tfontSize: 7,\n    },\n    searchField: {\n        backgroundColor: 'white',\n    },\n}));\n\n\nexport const ProposalListPage = () => {\n\tconst [loading, setLoading] = useState(false);\n    //const [rows, setRows] = useState<any[]>([]);\n    const [filters, setFilters] = useState<any[]>([]);\n    const [selectedRows, setSelectedRows] = useState<any[]>([]);\n    const [PropListTable,setPropListTable] = useState<any>()\n    const [renderTable,setRenderTable] = useState(true)\n    const [largeSearch , setLargeSearch] = useState('');\n    //const [whereFilter, setWhereFilter] = useState<object>({});\n\tconst [redirect, setRedirect] = useState(false);\n\tconst [redirectType, setRedirectType] = useState('');\n    const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n    const popoverOpen = Boolean(anchorEl);\n  const [largeDateSearch,setLargeDateSearch] = useState('')\n\tconst [exportData, setExportData] = useState('all_rows');\n    const [exportFormat, setExportFormat] = useState('pdf');\n    \n    const classes = useStyles();\n    const handlePopoverClose = () => {\n\t\tsetAnchorEl(null);\n\t}\n    const handleLoadClientsFromAPI = () => {\n      //let temp=[];\n\t\t//setLoading(true);\n        console.log('load')\n\t    API.getProposal().then(response => {\n            \n\t        if(response &&  response.error === undefined) {\n            console.log('check') \n            console.log(response);\n                let tmp:any[]=[]; \n                    response.map(col =>{\n                        const effdate = col.custom_metadata.coverage_start_date &&\n                        col.custom_metadata.coverage_end_date ?\n                        (new Date(\n                          col.custom_metadata.coverage_start_date)).toLocaleDateString('en-US',\n                          {\n                            year:'numeric',\n                            day:'numeric',\n                            month:'short'\n                          }) + ' - ' + (new Date(\n                            col.custom_metadata.coverage_end_date)).toLocaleDateString('en-US',\n                            {\n                              year:'numeric',\n                              day: 'numeric',\n                              month:'short'\n                            }) : '-'\n                        tmp.push({\n                          account:col.registered_name ? col.registered_name : '-',\n                          version:col.custom_metadata.version ? col.custom_metadata.version : '-',\n                          proposal_no:col.proposal_no ? col.proposal_no : '-',\n                          effectivity_date:effdate,\n                          bdobroker:col.bdobroker ? col.bdobroker : '-',\n                          date_created:col.custom_metadata.date_created ? col.custom_metadata.date_created : '-',\n                          date_modified:col.custom_metadata.date_updated ? \n                                          col.custom_metadata.date_updated \n                                          : col.custom_metadata.date_created ? \n                                          col.custom_metadata.date_created : '-',\n                          status:col.status,\n                        })\n                    })\n                    \n                \n                \n                \n                console.log(tmp);\n                setSelectedRows(tmp)\n                setRenderTable(true)\n\t\t\t\tsetLoading(false);\n\t        }else{\n                setLoading(false);\n                setRenderTable(true)\n\t\t\t\tconsole.log('getbenefitlist api error: ', response);\n\t        }\n      });\n      setRenderTable(true)\n    }\n    const handleGenerateReport = () => {\n\t\tconsole.log(\"handleGenerateReport\");\n\t\tconsole.log(\"exportData\", exportData);\n\t\tconsole.log(\"setExportFormat\", exportFormat);\n\t\t//console.log(\"whereFilter\", whereFilter);\n\t\tsetAnchorEl(null);\n\t}\n    const rowcustomstyle = {\n      left: 0,\n      zIndex: 125,\n      position: 'relative' as PositionProperty,\n      fontSize:'12px',\n      //minWidth: '125px',\n      //maxWidth: '125px',\n      minWidth: '10px',\n      maxWidth: '300px',\n      paddingRight : '0px',\n      paddingLeft : '10px',\n    };\n\n    const proposallistcolumn: any = [\n\t\t{ \n\t\t\tname: 'account', \n\t\t\ttitle: 'Account'\n\t\t},\n\t\t{\n\t\t\tname: 'proposal_no', \n\t\t\ttitle: 'Proposal No.'\n\t\t},\n\t\t{\n\t\t\tname: 'effectivity_date', \n\t\t\ttitle: 'Effectivity Date'\n\t\t},\n\t\t{\n\t\t\tname: 'bdobroker', \n\t\t\ttitle: 'BDO/Broker', \n\t\t},\n\t\t{\n\t\t\tname: 'date_created', \n\t\t\ttitle: 'Date Created',\n    },\n    {\n\t\t\tname: 'date_modified', \n\t\t\ttitle: 'Date Modified',\n    },\n    {\n\t\t\tname: 'version', \n\t\t\ttitle: 'Version',\n    },\n    {\n\t\t\tname: 'status', \n\t\t\ttitle: 'Status',\n    },\n    ];\n    /*\n    const sgncntsrows: any = [\n      { \n        account : 'Paxton Technologies',\n        proposal_no:'00912-0102',\n        effectivity_date: 'Jun 30, 2019 - Jul 3, 2020',\n        bdobroker: 'Christine Punzalan', \n        date_created: '03/30/2019',\n        date_modified:'03/30/2019',\n        version:'V2',\n        status:'Submitted',\n      },\n      { \n        account : 'Classic Agency',\n        proposal_no:'00912-0302',\n        effectivity_date: 'May 30, 2019 - Jun 31, 2020',\n        bdobroker: 'Christine Punzalan', \n        date_created: '03/30/2019',\n        date_modified:'03/30/2019',\n        version:'V1',\n        status:'Disapproved',\n      },\n      { \n        account : 'Flipboard Tech',\n        proposal_no:'00912-2151',\n        effectivity_date: 'Jun 30, 2019 - Jun 30, 2020',\n        bdobroker: 'Christine Punzalan', \n        date_created: '03/30/2019',\n        date_modified:'03/30/2019',\n        version:'V4',\n        status:'Approved',\n      },\n    ];\n    */\n    useEffect(() => { \n        //setSelectedRows(sgncntsrows);\n      handleLoadClientsFromAPI();\n    }, []);\n    \n\n    const sortTickets = (attrName: string) => {\n      //console.log(documentdata);\n      let sortbool:boolean = true;\n      (selectedRows.length>1 ?\n      sortbool = selectedRows[0][attrName].toString().toLowerCase()>selectedRows[1][attrName].toString().toLowerCase()\n      : sortbool = true)\n      \n      selectedRows.sort((a,b) => \n          (a[attrName] && b[attrName] && \n            a[attrName].toString().toLowerCase()>b[attrName].toString().toLowerCase()\n            && sortbool) ?\n            (1) : (-1)\n      );\n      //console.log('sort '+attrName)\n      //console.log(selectedRows)\n      setSelectedRows(selectedRows);\n      \n    }\n    const renderCustomTableHeader = (columns: any, fixedColumns: any) => {\n        let dockedColumnsCounter = 0;\n            return (\n              <>\n              {columns.map((column, index) => {\n                const matchedColumn = fixedColumns.filter(col => col === column.name)[0];\n                let nextColumnIsFixed = true;\n                if (matchedColumn && columns[index + 1]) {\n                  nextColumnIsFixed = fixedColumns.filter(col => col ===  columns[index + 1].name)[0] ? true : false;\n                }\n                const style = {\n                  left: matchedColumn ? dockedColumnsCounter * 125 : 0,\n                  zIndex: matchedColumn ? 125 : 0,\n                  minWidth: '10px',\n                  maxWidth: '300px',\n                  paddingRight : '0px',\n                  paddingLeft : '10px',\n                  borderRight: !nextColumnIsFixed ? '#9EA3AC 2px solid' : undefined,\n                  tabSize:0, \n                };\n                if (matchedColumn) {\n                  dockedColumnsCounter++;\n                }\n                return (\n                  <TableCell style={style}>\n                    <span className='header-2'>{column.title}</span>\n                    <div style={{float: 'right'}}>\n                        <IconButton\n                            icon={faSort}\n                            onClick={() => {\n                                sortTickets(column.name);\n                                setRenderTable(true);\n                                setLoading(false);\n                            }} />\n                    </div>\n                    \n                    <InputField\n                        value={filters[column.name]}\n                        onChange={(value: string) => {\n                            filters[column.name] = value;\n                            setFilters(filters);\n                            setRenderTable(true); \n                            // this.setState(prevState => ({...prevState, [attrName]: value}));\n                        }} />\n                  </TableCell>\n                );\n              })}\n              </>\n            );\n    }\n    const renderCustomTableRow = (row: any, index: number, columns: any) => {\n            //console.log(row);\n            //console.log('column')\n            //console.log(columns)\n            //console.log(row.length)\n            const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n            /*\n            let returnrow = row.length>0 ? row.map((rows:any)=><TableRow\n            style={{backgroundColor: backgroundColor}}\n            onClick={() => {\n              console.log('href');\n            }}>\n            {columns.map((column) => {\n              return (\n                <TableCell style={rowcustomstyle}>\n                  {rows[column.name]}\n                </TableCell>\n              );\n            })}\n          </TableRow>) : <TableRow></TableRow>\n            \n            return (\n              returnrow\n            );*/\n            return (\n              <TableRow\n                style={{backgroundColor: backgroundColor}}\n                >\n                {columns.map((column) => {\n                  return (\n                    \n                    <TableCell style={rowcustomstyle} onClick={() => {\n                      console.log('href');\n                    }}>\n                      {row[column.name]}\n                    </TableCell>\n                    \n                  );\n                })}\n                <TableCell style={rowcustomstyle}>\n                      {row['status']==='Submitted'?\n                        'For Evaluation':\n                        row['status']==='Disapproved'?\n                        'For Revision' :\n                        <Button disabled={true} style={{backgroundColor:'#3AB77D',color:'white',fontSize:'12px',padding:'2px'}}>\n                            Upload Signed Proposal\n                        </Button>}\n                </TableCell>\n              </TableRow>\n            );\n    }\n    const getFilteredTickets = (columns: any) => {\n        let filteredTickets = selectedRows;\n        console.log('filter')\n        console.log(largeSearch)\n        if(largeSearch.trim()!=='' || largeDateSearch.trim()!=='')\n        {   \n              filteredTickets = filteredTickets\n              .filter(ticket => ((\n                largeSearch.trim() !== '' &&\n                  ((ticket['account'] && \n                    ticket['account'].toString().toLowerCase().includes(largeSearch.trim().toLowerCase())\n                  ) ||\n                  (ticket['proposal_no'] && \n                    ticket['proposal_no'].toString().toLowerCase().includes(largeSearch.trim().toLowerCase())\n                  ) ||\n                  (ticket['bdobroker'] && \n                    ticket['bdobroker'].toString().toLowerCase().includes(largeSearch.trim().toLowerCase())\n                  ) ||\n                  (ticket['version'] && \n                    ticket['version'].toString().toLowerCase().includes(largeSearch.trim().toLowerCase())\n                  ) ||\n                  (ticket['status'] && \n                    ticket['status'].toString().toLowerCase().includes(largeSearch.trim().toLowerCase())\n                  )) \n                ) || (\n                  largeDateSearch.trim() !== '' &&\n                    ((ticket['effectivity_date'] && \n                      ticket['effectivity_date'].toString().toLowerCase().includes(largeDateSearch.trim().toLowerCase())\n                    ) ||\n                    (ticket['date_created'] && \n                      ticket['date_created'].toString().toLowerCase().includes(largeDateSearch.trim().toLowerCase())\n                    ) ||\n                    (ticket['date_modified'] && \n                      ticket['date_modified'].toString().toLowerCase().includes(largeDateSearch.trim().toLowerCase())\n                    ))\n                  ))\n              ) \n                /*filteredTickets = filteredTickets.filter(function(element){\n                    return ((largeSearch!=='' && (element['account'].includes(largeSearch) || \n                    element['proposal_no'].includes(largeSearch) ||\n                    element['bdobroker'].includes(largeSearch) ||\n                    element['version'].includes(largeSearch) ||\n                    element['status'].includes(largeSearch))) ||\n                    (largeDateSearch!=='' &&\n                    (element['effectivity_date'].includes(largeDateSearch) ||\n                    element['date_created'].includes(largeDateSearch) ||\n                    element['date_modified'].includes(largeDateSearch))))})*/\n        }\n        columns.map(column => {\n          filteredTickets = filteredTickets\n            .filter(ticket => \n                filters[column.name] ? (\n                    filters[column.name] === '' ||\n                (ticket[column.name] && \n                  ticket[column.name].toString().toLowerCase().includes(filters[column.name].toLowerCase())\n                )\n              ) : true\n            ) \n         });\n         //console.log(filteredTickets)\n        return filteredTickets;\n      }\n      const handleAssignTable =()=>{\n       return(\n        <ProposalTable\n          className='ticket-list-table'\n          canOverflow\n          rows={getFilteredTickets(proposallistcolumn)}\n          stickyHeader={true}\n          renderHeader={() => renderCustomTableHeader(proposallistcolumn, proposallistcolumn)}\n          renderRow={(row: any, index: number) => renderCustomTableRow(row, index, proposallistcolumn)}\n          rowsPerPageOptions={[5, 10, 15]}\n      />\n       )\n      }\n      if(renderTable){\n        setPropListTable(handleAssignTable());\n        setRenderTable(false);\n      }\n\n\tif(redirect === true){\n\t\tif (redirectType === 'proposal') {\n\t\t\treturn <Redirect to={{pathname: '/underwriting/create-proposal/new'}} />\n\t\t} \n\t}\n    const handleRedirectToProposal = () => {\n\t\tsetRedirectType('proposal');\n\t\tsetRedirect(true);\n\t}\n\treturn (\n\t\t<div className={classes.main}>\n\t\t\t{ loading ?\n\t\t\t\t(<LoadingIndicator/>) : null\n\n\t\t\t}\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tjustify=\"space-between\"\n\t\t\t\talignItems=\"center\"\n\t\t\t\tclassName={classes.gridContainer}\n\t\t\t>\n\t\t\t\t<Grid item xs={8}>\n\t\t\t\t\t<Typography className={classes.headerTitle}>Proposals</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={4} alignItems='flex-end' alignContent='flex-end'>\n                    <Box display=\"flex\" justifyContent=\"flex-end\" alignItems=\"center\" p={1} style={{width: '100%', height: '100%'}}>\n                        \t\n                        <Box p={1} style={{display:'none'}}>\n                                <Link \n                                  style={{ color: '#3AB77D', fontSize: '0.875rem' }} \n                                  onClick={(e: any) => {\n                                    const currentTarget = e.currentTarget;\n                                    setAnchorEl(currentTarget);\n                                  }}\n                            >\n                                <FontAwesomeIcon icon={faDownload} />&nbsp;&nbsp;Generate Report\n                            </Link>\n                        </Box>\n\n                        <Box p={1}>\n                            <Link \n                            \tstyle={{ color: '#3AB77D', fontSize: '0.875rem' }} \n                                onClick={handleRedirectToProposal}\n                            >\n                                <FontAwesomeIcon icon={faPlus} />&nbsp;&nbsp;Create Proposal\n                            </Link>\n\n                       \t</Box>\n\n                        \n                    </Box>\n\t\t\t\t</Grid>\n        <GridHorizontalDivider height=\"5px\"/>\n        <Grid item xs={9} style={{paddingRight:'30px'}}>\n          <TextField\n              id=\"proposal_search\"\n              placeholder=\"Search proposals\"\n              className={classes.searchField}\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              value={largeSearch}\n              onChange={(event:any)=>{\n                  setLargeSearch(event.target.value.trim())\n                  setRenderTable(true)}}\n              inputProps={{ 'aria-label': 'bare' }}\n              InputProps={{\n              startAdornment: (\n                  <FontAwesomeIcon\n                  icon={faSearch}\n                  className={classes.searchInputAdornment}\n                  />\n              ),\n              }}\n          />\n        </Grid>\n        <Grid item xs={3}>\n          <TextField\n              id=\"proposal_search\"\n              placeholder=\"This Month\"\n              className={classes.searchField}\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              value={largeDateSearch}\n              onChange={(event:any)=>{\n                  setLargeDateSearch(event.target.value.trim())\n                  setRenderTable(true)}}\n              inputProps={{ 'aria-label': 'bare' }}\n              InputProps={{\n              endAdornment: (\n                  <FontAwesomeIcon\n                  icon={faCalendar}\n                  className={classes.searchInputAdornment}\n                  />\n              ),\n              }}\n          />\n        </Grid>\n\t\t\t</Grid>\n            {PropListTable}\n\t\t\t{/*<ClientsTable \n\t\t\t\tcolumns={columns}\n\t\t\t\trows={rows}\n\t\t\t\tcolumnExtensions={columnExtensions}\n                currentPage={page}\n                limit={limit}\n                totalCount={totalCount}\n                onPageChange={handlePageChange}\n                onPageSizeChange={handlePageSizeChange}\n                onFilterChange={handleFilterByColumn}\n                onSearchChange={handleSearch}\n                onSortingChange={handleSortChange}\n                sorting={sorting}\n                defaultFilter={defaultFilters}\n                onRowClick={handleRowClick}\n\t\t\t/>*/}\n\t\t\t<ReportPopover\n\t\t\t\topen={popoverOpen}\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\texportData={exportData}\n\t\t\t\texportFormat={exportFormat}\n\t\t\t\tonClose={handlePopoverClose}\n\t\t\t\tonChangeExportData={setExportData}\n\t\t\t\tonChangeExportFormat={setExportFormat}\n\t\t\t\tgenerateReport={handleGenerateReport}\n\t\t\t/>\n\t\t</div>\n\t);\n\t\n};\n\n\n/*const mapStateToProps = (state: Store) => state.home;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tMap: bindActionCreators(ClientActions.Map, dispatch),\n});\n\nexport { mapStateToProps, mapDispatchToProps };*/\n","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');"],"sourceRoot":""}