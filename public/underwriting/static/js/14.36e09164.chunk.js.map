{"version":3,"sources":["Pages/ProposalList/Components/ProposalListTable2/index.tsx","Pages/ProposalList/ProposalListPage.tsx","../node_modules/@material-ui/icons/Close.js","Pages/CreateBenefitPage/RenderPdfModal.tsx","../node_modules/@material-ui/core/esm/colors/green.js"],"names":["textFieldStyles","makeStyles","root","backgroundColor","color","datePickerStyles","keyboardDatePicker","width","Select","items","restProps","variant","style","renderValue","selected","value","find","item","label","map","i","key","StatusItems","SortingIcon","direction","marginLeft","icon","faSortUp","faSortDown","ProposalsSortLabel","onSort","children","hideSortIcon","onClick","props","faSort","ProposalsTable2","rows","columns","formattedColumns","disablePaging","disableSearch","disableSort","disableFilter","columnExtensions","dropdownHeader","totalCount","currentPage","limit","onPageChange","onPageSizeChange","defaultFilter","columnFilteringEnabled","filterExtensions","onFilterChange","onSearchChange","onSortingChange","onRowClick","sorting","useState","selection","setSelection","pageSizes","headerRowHeight","setHeaderRowHeight","freezeHeader","setFreezeHeader","tableHeaderRowRef","useRef","dataTypeProviders","TextFormatter","textFieldClasses","classes","undefined","push","formatterComponent","for","text","useEffect","current","clientHeight","onCurrentPageChange","page","pageSize","onValueChange","defaultSorting","onSelectionChange","newSelection","lastSelected","indexOf","defaultFilters","filters","onFiltersChange","tableComponent","Table","stickyHeader","containerComponent","overflow","height","selectByRowClick","showSelectionColumn","showSortingControls","sortLabelComponent","cellComponent","ref","column","filter","onFilter","filteringEnabled","datePickerClasses","name","top","onChange","e","target","id","padding","format","inputVariant","className","invalidDateMessage","date","console","log","labelWidth","placeholder","defaultProps","toolbarType","a","b","useStyles","theme","main","searchInputAdornment","marginRight","gridContainer","spacing","gridContainerNoPadding","headerTitle","fontSize","fontWeight","sectionTitle","subSectionTitle","fieldGroupTitle","listItemTextRoot","flex","listItemTextPrimarySelected","cursor","listItemTextPrimaryNotSelected","dropzone","marginTop","marginBottom","border","borderRadius","display","justifyContent","alignItems","flexDirection","inputLabel","checkbox","radio","appBar","bottom","breakpoints","up","grow","flexGrow","button","margin","minHeight","minWidth","buttonTitle","buttonSubTitle","searchField","filtersForApi","where","order","currentSortAttr","ProposalListPage","loading","setLoading","setRows","setPage","setSorting","setDefaultFilters","PropListTable","setPropListTable","renderTable","setRenderTable","largeSearch","setLargeSearch","redirect","setRedirect","redirectType","setRedirectType","anchorEl","setAnchorEl","popoverOpen","Boolean","largeDateSearch","setLargeDateSearch","exportData","setExportData","exportFormat","setExportFormat","typingTimeout","setTypingTimeout","clientIDtoDownload","setClientIDtoDownload","registeredNametoDownload","setRegisteredNametoDownload","proposalToDownload","setProposalToDownload","downloadProposal","setDownloadProposal","renderAction","setRenderAction","pdfViewerOpen","setPDFViewerOpen","pdfURL","setPDFUrl","renderType","setRenderType","handleActionButton","status","proposalID","clientName","clientID","handleLoadProposalsFromAPI","skip","JSON","stringify","withCount","API","getProposal","then","response","proposals","error","total","status_active","status_approved","status_for_revision","status_signed","tmp","col","effdate","custom_metadata","coverage_start_date","coverage_end_date","Date","toLocaleDateString","year","day","month","account","client","registered_name","version","proposal_no","proposal_number","effectivity_date","bdobroker","sales_channel","contact_person","date_created","date_modified","date_updated","action","Button","_id","client_id","proposallistcolumn","title","columnName","wordWrapEnabled","textAlign","handleRowClick","row","handleSortChange","sort","mask","field","handlePageChange","handlePageSizeChange","handleSearch","clearTimeout","setTimeout","handleFilterByColumn","length","tmpfilter","fil","like","options","lte","moment","toString","gte","concat","Grid","container","xs","paddingTop","paddingBottom","overflowX","to","pathname","justify","Typography","alignContent","Box","p","Link","currentTarget","faDownload","faPlus","paddingRight","TextField","fullWidth","event","search_value","trim","inputProps","InputProps","startAdornment","faSearch","endAdornment","faCalendar","Paper","maxWidth","ReportPopover","open","onClose","onChangeExportData","onChangeExportFormat","generateReport","RendererClass","fileType","download","setDownload","hideButton","objId","viewOnly","blob","url","URL","createObjectURL","onError","onStartDownload","RenderPdfModal","isModalOpen","pdfUrl","_interopRequireDefault","Object","defineProperty","exports","default","_react","_default","createElement","d","flexWrap","dialog","align","fontFamily","dialogContent","dialogContentText","paddingLeft","iframe","left","right","dialogTitle","dialogAction","boldText","cancelButton","submitButton","closeButton","position","palette","grey","loadingIndicator","green","viewerUrl","process","execPath","aria-labelledby","zIndex","fullScreen","disableTypography","aria-label","src","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700"],"mappings":"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","file":"static/js/14.36e09164.chunk.js","sourcesContent":["//#region Global Imports\nimport * as React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport {\n\tGrid,\n\tTable,\n\tTableHeaderRow,\n\tTableFilterRow,\n\t//Toolbar,\n\t//SearchPanel,\n\tPagingPanel,\n\tTableSelection, \n} from '@devexpress/dx-react-grid-material-ui';\nimport {\n\tPagingState,\n\tCustomPaging,\n\tFilteringState,\n\tSortingState,\n\tSearchState,\n\tDataTypeProvider,\n\tSelectionState,\n\tIntegratedSelection\n} from '@devexpress/dx-react-grid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n\tfaSort,\n\tfaSortUp,\n\tfaSortDown,\n\t// faPlus,\n\t// faCheck, \n\t// faTimes\n} from '@fortawesome/free-solid-svg-icons';\nimport { makeStyles } from '@material-ui/styles';\nimport * as MaterialUI from '@material-ui/core';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\n//import { Components } from '@hims/core';\n//#endregion Global Imports\n\nconst textFieldStyles = makeStyles({\n\troot: {\n\t\t'& > div': {\n\t\t\tbackgroundColor: 'transparent',\n\t\t}, \n\t\t'& .Mui-disabled': {\n\t\t\tcolor: \"#272E4C\"\n\t\t}\t\n\t}\n});\n\nconst datePickerStyles = makeStyles({\n\tkeyboardDatePicker: {\n\t\t// marginTop: '10px',\n\t\t// marginBottom: '20px',\n\t\twidth: '100%',\n\t},\n});\nconst Select = ({ items, ...restProps  }: any) => {\n\treturn (\n\t\t<MaterialUI.Select\n\t\t\tvariant='outlined'\n\t\t\tstyle={{ width: '100%' }}\n\t\t\trenderValue={(selected: any) => {\n\t\t\t\tif (selected != null) {\n\t\t\t\t\tconst value: any = items.find((item: any) => {\n\t\t\t\t\t\treturn item.value === selected;\n\t\t\t\t\t});\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\treturn value.label;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '——';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn '——';\n\t\t\t}}\n\t\t\t{...restProps}\n\t\t>\n\t\t\t{items.map((item: any, i: number) => (\n\t\t\t\t<MaterialUI.MenuItem key={i} value={item.value}>\n\t\t\t\t\t{item.label}\n\t\t\t\t</MaterialUI.MenuItem>\n\t\t\t))}\n\t\t</MaterialUI.Select>\n\t);\n};\nconst StatusItems = [\n\t{ label: '', value: '' },\n\t{ label: 'Active', value: 'Active' },\n\t{ label: 'Approved', value: 'Approved' },\n\t{ label: 'Disapproved', value: 'Disapproved' },\n\t{ label: 'For Approval', value: 'For Approval' },\n\t{ label: 'Signed', value: 'Signed' },\n\t{ label: 'For Revision', value: 'For Revision' },\n\t{ label: 'Submitted', value: 'Submitted' },\n\t{ label: 'Resubmitted', value: 'Resubmitted' },\n];\n\n// const ProposalsPager = ({totalCount}: any) => {\n// \treturn (\n// \t\t<div style={pagerStyles}>\n// \t\t\t<MaterialUI.Typography>\n// \t\t\t\t1 - 10 out of {totalCount} Proposals\n// \t\t\t</MaterialUI.Typography>\n// \t\t\tShow 10\n// \t\t\tPrev\n// \t\t</div>\n// \t)\n// }\n\n/*const DefaultProposalsToolbar = ({ children }: any) => {\n\treturn <MaterialUI.Toolbar disableGutters={true} children={children} />;\n};*/\n\nconst SortingIcon = ({ direction }: any) =>\n\tdirection === 'asc' ? (\n\t\t<FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortUp} />\n\t) : (\n\t\t<FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortDown} />\n\t);\n\nconst ProposalsSortLabel = ({ onSort, children, direction }: any) => {\n\t//console.log('children ',children)\n\treturn (\n\t\t<MaterialUI.TableSortLabel hideSortIcon={true} onClick={onSort}>\n\t\t\t{children}\n\t\t\t{children.props && children.props.children !== 'Action' ? direction ? (\n\t\t\t\t<SortingIcon direction={direction} />\n\t\t\t) : (\n\t\t\t\t<FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSort} />\n\t\t\t) : ''}\n\t\t</MaterialUI.TableSortLabel>\n\t);\n};\n\ninterface ProposalsTableProps {\n\trows: any[];\n\tcolumns: any[];\n\tcolumnExtensions?: any[];\n\tsorting?: any[];\n\tformattedColumns?: any;\n\tdisableSearch?: boolean;\n\tdropdownHeader?: boolean;\n\tdisablePaging?: boolean;\n\tdisableFilter?: boolean;\n\tdisableSort?: boolean;\n\ttoolbarType?: string | null;\n  \ttotalCount: number;\n\tcurrentPage: number;\n\tlimit: number;\n\tcolumnFilteringEnabled?: boolean;\n\tfilterExtensions?: any[];\n\tdefaultFilter?: any[];\n  \tonSearchChange: (value: string) => void;\n  \tonFilterChange: (filters: any) => void;\n  \tonPageChange: (currentPage: any, skip: any) => void;\n  \tonPageSizeChange: (value: number) => void;\n  \tonSortingChange: (sorting: any) => void;\n  \tonRowClick: (row: number) => void;\n}\n\nconst defaultProps: ProposalsTableProps = {\n\trows: [],\n\tcolumns: [],\n\tcolumnExtensions: [],\n  \tfilterExtensions: [],\n  \tsorting: [],\n\tformattedColumns: {},\n\tdropdownHeader: false,\n\tdisableSearch: false,\n\tdisablePaging: false,\n\tdisableFilter: false,\n\tdisableSort: false,\n\ttoolbarType: null,\n  \ttotalCount: 0,\n\tcurrentPage: 0,\n\tlimit: 10,\n\tdefaultFilter: [],\n\tcolumnFilteringEnabled: true,\n\tonSearchChange: (a) => console.log(\"onSearchChange\", a),\n\tonFilterChange: (a) => console.log(\"onFilterChange\", a),\n\tonPageChange: (a, b) => console.log(\"onPageChange\", a, b),\n\tonPageSizeChange: (a) => console.log(\"onPageSizeChange\", a),\n\tonSortingChange: (a) => console.log(\"onSortingChange\", a),\n\tonRowClick: (a) => console.log(\"onRowClick\", a),\n};\n\nexport const ProposalsTable2: React.FC<ProposalsTableProps> = (\n\tprops: ProposalsTableProps,\n): JSX.Element => {\n\tconst {\n\t\trows,\n\t\tcolumns,\n\t\tformattedColumns,\n\t\tdisablePaging,\n\t\tdisableSearch,\n\t\tdisableSort,\n\t\tdisableFilter,\n\t\t//toolbarType,\n\t\tcolumnExtensions,\n\t\tdropdownHeader,\n\t    totalCount,\n\t    currentPage,\n\t    limit,\n\t    onPageChange,\n\t    onPageSizeChange,\n\t    defaultFilter,\n\t    columnFilteringEnabled,\n\t    filterExtensions,\n\t    onFilterChange,\n\t    onSearchChange,\n\t    onSortingChange,\n\t    onRowClick,\n\t    sorting\n\t} = props;\n\tconst [selection, setSelection] = useState<number[]>([]);\n\tconst [pageSizes] = useState([5, 10, 15, 0]);\n  \tconst [headerRowHeight, setHeaderRowHeight] = useState(0);\n  \tconst [freezeHeader, setFreezeHeader] = useState(false);\n\tconst tableHeaderRowRef = useRef(null);\n  \t// const [sorting, setSorting] = useState([]);\n\n\t//let toolbar = DefaultProposalsToolbar;\n\n\tconst dataTypeProviders: any[] = [];\n\n\tfunction handleSelectionChange(newSelection: any[]) {\n        const lastSelected = newSelection.find(\n          (selected: number) => selection.indexOf(selected) === -1,\n        );\n\n        if (lastSelected !== undefined) {\n        \tonRowClick(lastSelected);\n          \tsetSelection([lastSelected]);\n        }\n\t}\n\n\tconst TableComponent = ({ children, ...restProps }) => (\n\t  <Table.Table {...restProps} stickyHeader={freezeHeader}>\n\t  \t{children}\n\t  </Table.Table>\n\t);\n\n\tconst ContainerComponent = ({children, ...restProps}) => (\n\t\t<div {...restProps} style={{overflow: freezeHeader ? 'auto' : 'none', height: freezeHeader ? '70vh': 'auto'}}>\n\t      {children}\n\t\t</div>\n\t);\n\n\tconst TableHeaderCell = ({ style, classes, children, ...restProps }: any) => {\n\t\treturn (\n\t\t\t<MaterialUI.TableCell style={style} classes={classes} {...restProps} ref={tableHeaderRowRef}>\n\t  \t\t\t{children}\n\t\t\t</MaterialUI.TableCell>\n\t\t);\n\t};\n\n\t// const TableFilterCell = ({ style, classes, children, ...restProps }: any) => {\n\t// \treturn (\n\t// \t\t<MaterialUI.TableCell style={style & {top:(headerRowHeight ? headerRowHeight + 'px' : '0')}} classes={classes} {...restProps} ref={tableHeaderRowRef}>\n\t//   \t\t\t{children}\n\t// \t\t</MaterialUI.TableCell>\n\t// \t);\n\t// };\n\n\tconst ProposalsFilterCell = (props: any) => {\n\t  \tconst { column, filter, onFilter, filteringEnabled, classes } = props;\n\t\tconst datePickerClasses = datePickerStyles();\n\t\tif (filteringEnabled) {\n\t\t\tif (column.name === 'status') {\n\t\t\t\tconst items = StatusItems;\n\n\t\t\t\treturn \t(\n\t\t\t\t\t<MaterialUI.TableCell style={{ top: (freezeHeader && headerRowHeight ? headerRowHeight + 'px' : '0')}} classes={classes}>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tonChange={e => onFilter(e.target.value ? { value: e.target.value } : null)}\n\t\t\t\t\t\t\tname={'status'}\n\t\t\t\t\t\t\titems={items}\n\t\t\t\t\t\t\tid={'status'}\n\t\t\t\t\t\t\tvalue={filter ? filter.value : ''}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</MaterialUI.TableCell>\n\t\t\t\t);\n\t\t\t} else if (column.name === 'effectivity_date' \n\t\t\t\t\t\t|| column.name === 'date_created' \n\t\t\t\t\t\t|| column.name === 'date_modified' ) {\n\t\t\t\treturn (\n\t\t\t\t\t<MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px', top: (freezeHeader && headerRowHeight ? headerRowHeight + 'px' : '0')}} classes={classes}>\n\t\t\t\t\t\t<KeyboardDatePicker\n\t\t\t\t\t\t\tvariant=\"dialog\"\n\t\t\t\t\t\t\tformat=\"MMMM DD, YYYY\"\n\t\t\t\t\t\t\tinputVariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={datePickerClasses.keyboardDatePicker}\n\t\t\t\t\t\t\tvalue={filter ? filter.value : ''}\n\t\t\t\t\t\t\tinvalidDateMessage=\"\"\n\t\t\t\t\t\t\tonChange={date => {console.log(date); onFilter(date ? { value: date } : null)}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</MaterialUI.TableCell>\n\t\t\t\t);\n\t\t\t} else if(column.name === 'action') {\n\t\t\t\treturn (\n\t\t\t\t\t<MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px', top: (freezeHeader && headerRowHeight ? headerRowHeight + 'px' : '0') }} classes={classes}>\n\t\t\t\t\t\n\t\t\t\t\t</MaterialUI.TableCell>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px', top: (freezeHeader && headerRowHeight ? headerRowHeight + 'px' : '0') }} classes={classes}>\n\t\t\t\t\t\t<MaterialUI.OutlinedInput\n\t\t\t\t\t\t\tclasses={classes}\n\t\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t\t\tvalue={filter ? filter.value : ''}\n\t\t\t\t\t\t\tlabelWidth={0}\n\t\t\t\t\t\t\tonChange={e => {console.log('filter changed');onFilter(e.target.value ? { value: e.target.value } : null)}}\n\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</MaterialUI.TableCell>\n\t\t\t\t);\n\t\t\t}\n\t\t} \n\t\treturn null;\n\t}\n\n\tconst TextFormatter = ({ value }: any) => {\n\t\tconst textFieldClasses = textFieldStyles();\n\t\treturn <MaterialUI.TextField value={value} classes={textFieldClasses} />;\n\t};\n\n\tconst TextDataTypeProvider = (props: any) => (\n\t\t<DataTypeProvider formatterComponent={TextFormatter} {...props} />\n\t);\n\n\tif (formattedColumns !== undefined) {\n\t\tif (formattedColumns['text'] !== undefined) {\n\t\t\tdataTypeProviders.push(<TextDataTypeProvider for={formattedColumns.text} />);\n\t\t}\n\t}\n\n\tconst setCurrentPageMethod = (page) => {\n\t    let skip = (limit * page);\n\n\t    onPageChange(page, skip);\n\t}\n\n\n\tconst changePageSize = (value) => {\n\t\tif (value === 0) {\n\t\t\tsetFreezeHeader(true);\n\t\t} else {\n\t\t\tsetFreezeHeader(false);\n\t\t}\n\n\t    onPageSizeChange(value);\n\t}\n\n\tuseEffect(() => {\n\t\tif (tableHeaderRowRef && tableHeaderRowRef.current) {\n     \t\t// @ts-ignore: Object is possibly 'null'.\n\t\t\tsetHeaderRowHeight(tableHeaderRowRef.current.clientHeight);\n\t\t}\n\t\t\n\t\t// setHeaderRowHeight(tableHeaderRowRef.current.clientHeight)\n\t})\n\n\treturn (\n\t\t\t<Grid rows={rows} columns={columns}>\n\t\t\t\t{dataTypeProviders}\n\n\t\t\t\t{/* States */}\n\n\t\t\t\t{!disablePaging ? (\n\t\t\t\t\t<PagingState\n\t\t\t\t\t\tcurrentPage={currentPage}\n\t\t\t\t\t\tonCurrentPageChange={setCurrentPageMethod}\n\t\t\t\t\t\tpageSize={limit}\n            \t\t\tonPageSizeChange={changePageSize}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\n\t\t\t\t{!disablePaging ? <CustomPaging totalCount={totalCount} /> : null}\n\n\t\t\t\t{!disableSearch ? <SearchState onValueChange={onSearchChange} /> : null}\n\n\t\t\t\t{!disableSort ? (\n\t\t\t\t\t<SortingState \n\t\t\t\t\t\tdefaultSorting={[]} \n\t\t\t\t\t\tsorting={sorting}\n\t\t\t\t\t\tonSortingChange={onSortingChange}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\n\t\t\t\t<SelectionState\n\t\t\t\t\tselection={selection}\n\t\t\t\t\tonSelectionChange={handleSelectionChange}\n\t\t\t\t/>\n\t\t\t\t<IntegratedSelection />\n\n\t\t\t\t{!disableFilter ? \n\t\t\t\t\t<FilteringState \n\t\t\t\t\t\tdefaultFilters={[]} \t\n\t\t\t            filters={\n\t\t\t              defaultFilter !== undefined ? defaultFilter : []\n\t\t\t            }\n\t\t\t            columnFilteringEnabled={columnFilteringEnabled}\n\t\t\t            columnExtensions={filterExtensions}\n\t\t\t            onFiltersChange={onFilterChange}\n\t\t\t\t\t/> : null}\n\n\t\t\t\t<Table tableComponent={TableComponent} containerComponent={ContainerComponent} columnExtensions={columnExtensions} />\n\n\t\t\t\t<TableSelection\n\t\t\t\t\tselectByRowClick\n\t\t\t\t\tshowSelectionColumn={false}\n\t\t\t\t/>\n\n\t\t\t\t{!dropdownHeader ? (\n\t\t\t\t\t<TableHeaderRow\n\t\t\t\t\t\tshowSortingControls={!disableSort}\n\t\t\t\t\t\tsortLabelComponent={ProposalsSortLabel}\n\t\t\t\t\t\tcellComponent={TableHeaderCell}\n\t\t\t\t\t/> ) : null\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t{!disableFilter ? <TableFilterRow cellComponent={ProposalsFilterCell} /> : null}\n\n\t\t\t\t\n\n\t\t\t\t{!disablePaging ? <PagingPanel pageSizes={pageSizes} /> : null}\n\t\t\t</Grid>\n\t); \n};\n\nProposalsTable2.defaultProps = defaultProps;\n","import React, { useState, useEffect }  from 'react';\n\n//import { bindActionCreators, Dispatch } from 'redux';\n//import { Store } from 'Components/Stores/IStore';\n//import { ClientActions } from './ClientActions';\n//import { GlobalFunction } from 'Components/UI/GlobalFunction';\nimport { LoadingIndicator } from 'Components/UI/';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload, faPlus,faSearch,faCalendar } from '@fortawesome/free-solid-svg-icons';\n//import { ProposalTable } from './Components/ProposalListTable';\nimport { ProposalsTable2 } from './Components/ProposalListTable2/index';\nimport { Grid, Box, Typography, Link, Button } from '@material-ui/core/';\nimport { Redirect } from 'react-router-dom';\n//import { PositionProperty } from 'csstype';\nimport { ReportPopover } from 'Components/UI/ReportPopover';\n//import { GlobalFunction } from 'Components/UI/GlobalFunction';\nimport { \n    //TableRow,\n    //TableCell,\n    TextField,\n    Paper,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { API } from '../API';\n//import { IconButton } from './Components/IconButton';\n//import { InputField } from './Components/InputField';\nimport {\n\tGridHorizontalDivider\n} from 'Components/UI';\nimport moment from 'moment';\nimport { RendererClass } from '../CreateProposal/Components/RendererClass';\n\nimport { RenderPdfModal } from '../CreateBenefitPage/RenderPdfModal';\n//import { Processmaker  } from '../Processmaker';\n// import { Processmaker } from '../Processmaker';\n// import { ConfirmationModal } from './Components/Modal/ConfirmationModal';\n\n// import {\n// \tGrid,\n// \tAvatar,\n// \tTypography,\n// \tList,\n// \tListItem,\n// \tListItemText,\n// \tCard,\n// \tCardContent,\n// \tBadge,\n// } from '@material-ui/core';\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\n\nconst useStyles = makeStyles(theme => ({\n\tmain:{\n\t\tbackgroundColor: '#F5F7FB',\n\t\tpadding: '32px 24px'\n    },\n    searchInputAdornment:{\n        color: '#00000061',\n          marginRight: '8px',\n    },\n\tgridContainer: {\n\t\tpadding: theme.spacing(1),\n\t\t// paddingBottom: '75px'\n\t},\n\tgridContainerNoPadding: {\n\t\tpadding: theme.spacing(1),\n\t},\n\theaderTitle: {\n\t\tfontSize: 32,\n\t\tfontWeight: 700,\n\t},\n\tsectionTitle: {\n\t\tfontSize: 24,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\tsubSectionTitle: {\n\t\tfontSize: 16,\n\t\tfontWeight: 400,\n\t\tcolor: '#272e4c',\n\t},\n\tfieldGroupTitle: {\n\t\tfontSize: 13,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\tlistItemTextRoot: {\n\t\tflex: 'none',\n\t},\n\tlistItemTextPrimarySelected: {\n\t\tfontSize: 14,\n\t\tfontWeight: 700,\n\t\tcolor: 'rgba(39, 46, 76, 1)',\n\t\tcursor: 'pointer',\n\t},\n\tlistItemTextPrimaryNotSelected: {\n\t\tfontSize: 14,\n\t\tfontWeight: 700,\n\t\tcolor: 'rgba(39, 46, 76, 0.3)',\n\t\tcursor: 'pointer',\n\t},\n\tdropzone: {\n\t\twidth: '460px',\n\t\theight: '88px',\n\t\tmarginTop: '10px',\n\t\tmarginBottom: '20px',\n\t\tborder: '2px dashed rgba(30, 32, 113, 0.3)',\n\t\tborderRadius: '5px',\n\t\tbackgroundColor: '#e6e8ee',\n\t\tcolor: '#7b8094',\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tflexDirection: 'column',\n\t},\n\tinputLabel: {\n\t\tcolor: '#272e4c',\n\t},\n\tkeyboardDatePicker: {\n\t\tmarginTop: '10px',\n\t\tmarginBottom: '20px',\n\t\twidth: '212px',\n\t},\n\tcheckbox: {\n\t\t'&.Mui-checked': {\n\t\t\tcolor: '#1e2071',\n\t\t},\n\t},\n\tradio: {\n\t\t'&.Mui-checked': {\n\t\t\tcolor: '#1e2071',\n\t\t},\n\t},\n\tappBar: {\n\t\ttop: 'auto',\n\t\tbottom: 0,\n\t\tborder: '1px solid #707070',\n\t\tbackgroundColor: 'rgba(54, 54, 54, 0.64)',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: 'calc(100% - 72px)',\n\t\t},\n\t},\n\tgrow: {\n\t\tflexGrow: 1,\n\t},\n\tbutton: {\n\t\tmargin: '0 10px',\n\t\tminHeight: '42px',\n\t\tminWidth: '150px',\n\t},\n\tbuttonTitle: {\n\t\tfontWeight: 700,\n\t\tfontSize: 13,\n\t},\n\tbuttonSubTitle: {\n\t\tfontWeight: 400,\n\t\tfontSize: 7,\n    },\n    searchField: {\n        backgroundColor: 'white',\n    },\n}));\n\nlet filtersForApi = {\n  where: {}\n}\nlet order = {}\nlet limit = 10;\nlet totalCount = {};\nlet currentSortAttr = \"\";\nconsole.log(currentSortAttr); \n\nexport const ProposalListPage = () => {\n\tconst [loading, setLoading] = useState(false);\n  const [rows, setRows] = useState<any[]>([]);\n  //const [filters, setFilters] = useState<any[]>([]);\n  const [page, setPage] = useState(0);\n  const [sorting, setSorting] = useState<any[]>([]);\n  const [defaultFilters , setDefaultFilters] = useState<any[]>([]);\n  //const [limit, setLimit] = useState(10);\n  // const [selectedRows, setSelectedRows] = useState<any[]>([]);\n  const [PropListTable,setPropListTable] = useState<any>()\n  const [renderTable,setRenderTable] = useState(true)\n  const [largeSearch , setLargeSearch] = useState('');\n    //const [whereFilter, setWhereFilter] = useState<object>({});\n\tconst [redirect, setRedirect] = useState(false);\n\tconst [redirectType, setRedirectType] = useState('');\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n  const popoverOpen = Boolean(anchorEl);\n  const [largeDateSearch,setLargeDateSearch] = useState('')\n\tconst [exportData, setExportData] = useState('all_rows');\n  const [exportFormat, setExportFormat] = useState('pdf');\n  const [typingTimeout, setTypingTimeout] = useState<any>(0);\n  const [clientIDtoDownload, setClientIDtoDownload] = useState('');\n  const [registeredNametoDownload, setRegisteredNametoDownload] = useState('');\n  const [proposalToDownload , setProposalToDownload] = useState('');\n  const [downloadProposal, setDownloadProposal] = useState(false);\n  const [renderAction, setRenderAction] = useState('')\n  const [pdfViewerOpen,setPDFViewerOpen] = useState(false)\n  const [pdfURL, setPDFUrl] = useState('')\n  const [renderType,setRenderType] = useState('')\n\n    const classes = useStyles();\n    const handlePopoverClose = () => {\n\t\tsetAnchorEl(null);\n  }\n  \n  const handleActionButton = (status:string\n    ,proposalID:string\n    ,clientName:string\n    ,clientID:string\n    ) => {\n    console.log(status,proposalID,clientID);\n    setProposalToDownload(proposalID);\n    setRegisteredNametoDownload(clientName);\n    setClientIDtoDownload(clientID)\n    if(status==='Submitted'){\n      setRenderAction('view')\n      setRenderType('renderProposal')\n      setDownloadProposal(true)\n    } else if(status==='Active'){\n      setRenderAction('view')\n      setRenderType('renderContract')\n      setDownloadProposal(true)\n    } else if(status==='Approved' ||\n    status==='Disapproved' || \n    status==='Resubmitted' || \n    status==='Signed' ){\n      setRenderAction('download')\n      setDownloadProposal(true)\n      setLoading(true)\n    } else if(status==='For Revision'){\n      setRedirectType('revision')\n      setRedirect(true)\n    }\n  }\n    const handleLoadProposalsFromAPI = (limit, skip) => {\n      //let temp=[];\n      setRenderTable(false);\n\t\t  setLoading(true);\n        console.log('load')\n        console.log(JSON.stringify(filtersForApi));\n        console.log(order);\n        let withCount = true;\n        if(skip == 0){\n          withCount = true; \n        }\n        //filtersForApi['limit'] = limit;\n        //filtersForApi['skip'] = skip; \n\t    API.getProposal(filtersForApi,withCount,limit,skip,order).then(response => {\n          console.log('Load From API:',response)\n\t        if(response && response.proposals && response.error === undefined) {\n            if(withCount){\n              if(response.total){\n                totalCount['total'] = response.total;\n              }\n              if(response.status_active){\n                totalCount['active'] = response.status_active;\n              }\n              if(response.status_approved){\n                totalCount['approved'] = response.status_approved;\n              }\n              if(response.status_for_revision){\n                totalCount['for_revision'] = response.status_for_revision;\n              }\n              if(response.status_signed){\n                totalCount['signed'] = response.status_signed;\n              }\n              if(response.total){\n                totalCount['totalrow'] = response.total;\n              }\n            }\n            console.log('check') \n            console.log(response);\n                let tmp:any[]=[]; \n                    response.proposals.map(col =>{\n                        const effdate = col.custom_metadata.coverage_start_date &&\n                        col.custom_metadata.coverage_end_date ?\n                        (new Date(\n                          col.custom_metadata.coverage_start_date)).toLocaleDateString('en-US',\n                          {\n                            year:'numeric',\n                            day:'numeric',\n                            month:'short'\n                          }) + ' - ' + (new Date(\n                            col.custom_metadata.coverage_end_date)).toLocaleDateString('en-US',\n                            {\n                              year:'numeric',\n                              day: 'numeric',\n                              month:'short'\n                            }) : '-'\n                        tmp.push({\n                          account:col.client ? col.client[0].registered_name ? col.client[0].registered_name :'-' : '-',\n                          // account:col.client_registered_name ? col.client_registered_name : '-',\n                          version:col.version ? col.version : '-',\n                          proposal_no:col.proposal_number ? col.proposal_number : '-',\n                          effectivity_date:effdate,\n                          bdobroker:col.client[0].sales_channel && \n                                      col.client[0].sales_channel.contact_person && \n                                        col.client[0].sales_channel.contact_person !== ''  ? \n                                          col.client[0].sales_channel.contact_person : '-',\n                          date_created:col.custom_metadata.date_created ? \n                                        new Date(col.custom_metadata.date_created).toLocaleDateString('en-US',\n                                          {\n                                            year:'numeric',\n                                            day: 'numeric',\n                                            month:'short'\n                                          })\n                                          : '-',\n                          date_modified:col.custom_metadata.date_updated ? \n                                          new Date(col.custom_metadata.date_updated).toLocaleDateString('en-US',\n                                          {\n                                            year:'numeric',\n                                            day: 'numeric',\n                                            month:'short'\n                                          })\n                                            : '-',\n                          status:col.status,\n                          action:col.status==='Submitted' || \n                          col.status==='Active' ?\n                          <Button \n                            //disabled={true} \n                            style={{backgroundColor:'#3AB77D',color:'white',fontSize:'12px',padding:'2px'}}\n                            onClick={()=>{handleActionButton(col.status,col._id,col.client[0].registered_name,col.client_id)}}\n                          >\n                             View\n                          </Button>:\n                          col.status==='Approved' ||\n                          col.status==='Disapproved' || \n                          col.status==='Resubmitted' || \n                          col.status==='Signed'  ?\n                          <Button \n                            //disabled={true} \n                            style={{backgroundColor:'#3AB77D',color:'white',fontSize:'12px',padding:'2px'}}\n                            onClick={()=>{handleActionButton(col.status,col._id,col.client[0].registered_name,col.client_id)}}\n                          >\n                              Download\n                          </Button> : \n                          col.status==='For Revision'?\n                          <Button \n                            //disabled={true} \n                            style={{backgroundColor:'#3AB77D',color:'white',fontSize:'12px',padding:'2px'}}\n                            onClick={()=>{handleActionButton(col.status,col._id,\n                              col.client[0].registered_name,col.client_id)}}\n                          >\n                              Revise\n                          </Button> :\n                          <Button \n                            //disabled={true} \n                            style={{backgroundColor:'#3AB77D',color:'white',fontSize:'12px',padding:'2px'}}\n                            onClick={()=>{handleActionButton(col.status,col._id,col.client[0].registered_name,col.client_id)}}\n                          >\n                              Upload Signed Proposal\n                          </Button>\n                        })\n                    })\n                console.log('tmp: ',tmp);\n                // setSelectedRows(tmp);\n                setRows(tmp);\n                setRenderTable(true);\n                setLoading(false);\n\t        }else{\n                setRows([])\n                setLoading(false);\n                setRenderTable(true)\n\t\t\t\tconsole.log('getbenefitlist api error: ', response);\n\t        }\n      });\n      setRenderTable(true)\n    }\n    const handleGenerateReport = () => {\n\t\tconsole.log(\"handleGenerateReport\");\n\t\tconsole.log(\"exportData\", exportData);\n\t\tconsole.log(\"setExportFormat\", exportFormat);\n\t\t//console.log(\"whereFilter\", whereFilter);\n\t\tsetAnchorEl(null);\n  }\n  \n  const displayPDF = (blob) => {\n    //console.log('blob',blob)\n    const url = URL.createObjectURL(blob)\n    //console.log('url',url)\n    setPDFUrl(url)\n    setPDFViewerOpen(true)\n  }\n\n    /*const rowcustomstyle = {\n      left: 0,\n      zIndex: 125,\n      position: 'relative' as PositionProperty,\n      fontSize:'12px',\n      //minWidth: '125px',\n      //maxWidth: '125px',\n      minWidth: '10px',\n      maxWidth: '300px',\n      paddingRight : '0px',\n      paddingLeft : '10px',\n    };*/\n\n    const proposallistcolumn: any = [\n\t\t{ \n\t\t\tname: 'account', \n\t\t\ttitle: 'Account'\n\t\t},\n\t\t{\n\t\t\tname: 'proposal_no', \n\t\t\ttitle: 'Proposal No.'\n\t\t},\n\t\t{\n\t\t\tname: 'effectivity_date', \n\t\t\ttitle: 'Effectivity Date'\n\t\t},\n\t\t{\n\t\t\tname: 'bdobroker', \n\t\t\ttitle: 'BDO/Broker', \n\t\t},\n\t\t{\n\t\t\tname: 'date_created', \n\t\t\ttitle: 'Date Created'\n    },\n    {\n\t\t\tname: 'date_modified', \n\t\t\ttitle: 'Date Modified'\n    },\n    {\n\t\t\tname: 'version', \n\t\t\ttitle: 'Version',\n    },\n    {\n\t\t\tname: 'status', \n\t\t\ttitle: 'Status',\n    },\n    {\n      name: 'action',\n      title: 'Action',\n    }\n    ];\n    useEffect(() => { \n        //setSelectedRows(sgncntsrows);\n      filtersForApi = {\n        where: {}\n      }\n      handleLoadProposalsFromAPI(10,0);\n    }, []);\n    \n\n    /*const sortProposals = (attrName: string) => { \n      let mask = \"\";\n      if(attrName == 'account'){\n        mask = \"client_registered_name\";\n      }else if(attrName == 'effectivity_date'){\n        mask = \"custom_metadata.coverage_start_date\";\n      } else if(attrName == 'version'){\n        mask = \"custom_metadata.version\";\n      }else if(attrName == 'date_created'){\n        mask = \"custom_metadata.date_created\";\n      }else if(attrName == 'date_modified'){\n        mask = \"custom_metadata.date_updated\";\n      }\n\n      filtersForApi['order'] = {};\n      if(currentSortAttr == mask){\n        filtersForApi['order']=  `${mask} desc`\n      }else{\n        filtersForApi['order']=  `${mask} asc`\n      }\n      handleLoadProposalsFromAPI(10, 0);\n      currentSortAttr = mask;\n      \n    }*/\n    /*const renderCustomTableHeader = (columns: any, fixedColumns: any) => {\n        let dockedColumnsCounter = 0;\n            return (\n              <>\n              {columns.map((column, index) => {\n                const matchedColumn = fixedColumns.filter(col => col === column.name)[0];\n                let nextColumnIsFixed = true;\n                if (matchedColumn && columns[index + 1]) {\n                  nextColumnIsFixed = fixedColumns.filter(col => col ===  columns[index + 1].name)[0] ? true : false;\n                }\n                const style = {\n                  left: matchedColumn ? dockedColumnsCounter * 125 : 0,\n                  zIndex: matchedColumn ? 125 : 0,\n                  width:column.name==='version'? '80px':'150px',\n                  paddingRight : '0px',\n                  paddingLeft : '10px',\n                  borderRight: !nextColumnIsFixed ? '#9EA3AC 2px solid' : undefined,\n                  tabSize:0, \n                };\n                if (matchedColumn) {\n                  dockedColumnsCounter++;\n                }\n                return (\n                  <TableCell style={style}>\n                    <span className='header-2'>{column.title}</span>\n                    <div style={{float: 'right'}}>\n                        <IconButton\n                            icon={faSort}\n                            onClick={() => {\n                                sortProposals(column.name);\n                                setRenderTable(true);\n                                setLoading(false);\n                            }} />\n                    </div>\n                    \n                    <InputField\n                        value={filters[column.name]}\n                        onChange={(value: string) => {\n                            filters[column.name] = value;\n                            let field = column.name;\n                            console.log(column.name);\n                            if(column.name == 'account'){\n                              field = \"client_registered_name\";\n                            }else if(column.name == 'effectivity_date'){\n                              field = \"custom_metadata.coverage_start_date\";\n                              filtersForApi['where'][field] = {like:value, options:'i'};\n                              field = \"custom_metadata.coverage_end_date\";\n                            }else if(column.name == 'version'){\n                              field = \"custom_metadata.version\";\n                            }else if(column.name == 'date_created'){\n                              field = \"custom_metadata.date_created\";\n                            }else if(column.name == 'date_modified'){\n                              field = \"custom_metadata.date_updated\";\n                            }\n                            filtersForApi['where'][field] = {like:value, options:'i'};\n                            if(value === ''){\n                              delete filtersForApi['where'][field];\n                              if(column.name == 'effectivity_date'){\n                                delete filtersForApi['where']['custom_metadata.coverage_start_date'];\n                              }\n                            }\n                            setFilters(filters);\n                            setRenderTable(true); \n                            console.log(\"filter onchange\", JSON.stringify(filters));\n                            console.log(JSON.stringify(filtersForApi));\n                            handleFiltersOnChange();\n                            // this.setState(prevState => ({...prevState, [attrName]: value}));\n                        }} />\n                  </TableCell>\n                );\n              })}\n              </>\n            );\n    }*/\n\n    const handleFiltersOnChange = () => {\n      if (typingTimeout) {\n        clearTimeout(typingTimeout);\n      }\n  \n      setTypingTimeout (setTimeout(function () {\n              setLoading(true);\n              handleLoadProposalsFromAPI(limit, 0);\n            }, 2000)\n      );\n    }\n    /*const renderCustomTableRow = (row: any, index: number, columns: any) => {\n            //console.log(row);\n            //console.log('column')\n            //console.log(columns)\n            //console.log(row.length)\n            const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n            return (\n              <TableRow\n                style={{backgroundColor: backgroundColor}}\n                >\n                {columns.map((column) => {\n                  return (\n                    \n                    <TableCell style={rowcustomstyle} onClick={() => {\n                      console.log('href');\n                    }}>\n                      {row[column.name]}\n                    </TableCell>\n                    \n                  );\n                })}\n              </TableRow>\n            );\n    }*/\n    const columnExtensions = [\n        {\n          columnName: 'account',\n          wordWrapEnabled: true,\n          textAlign:'center',\n        },\n        {\n          columnName: 'proposal_no',\n          wordWrapEnabled: true,\n          textAlign:'center',\n        },\n        {\n          columnName: 'effectivity_date',\n          wordWrapEnabled: true,\n          textAlign:'center',\n        },\n        {\n          columnName: 'bdobroker',\n          wordWrapEnabled: true,\n          textAlign:'center',\n        },\n        {\n          columnName: 'date_created',\n          wordWrapEnabled: true,\n          textAlign:'center',\n        },\n        {\n          columnName: 'date_modified',\n          wordWrapEnabled: true,\n          textAlign:'center',\n        },\n        {\n          columnName: 'version',\n          wordWrapEnabled: true,\n          textAlign:'center',\n        },\n        {\n          columnName: 'status',\n          wordWrapEnabled: true,\n          textAlign:'center',\n        },\n        {\n          columnName: 'action',\n          wordWrapEnabled: true,\n          textAlign:'center',\n        },\n    ];\n\n    const handleRowClick = (row: number) => {\n      console.log(row);\n    }\n  \n    const handleSortChange = (sort: any) => {\n      setSorting(sort);\n      console.log('handle sort:',sort)\n      let mask = \"\";\n      if(sort[0].columnName == 'account'){\n        mask = \"client.registered_name\";\n      }else if(sort[0].columnName == 'proposal_no'){\n        mask = \"proposal_number\";\n      }else if(sort[0].columnName == 'effectivity_date'){\n        mask = \"custom_metadata.coverage_start_date\";\n      } else if(sort[0].columnName == 'version'){\n        mask = \"version\";\n      }else if(sort[0].columnName == 'date_created'){\n        mask = \"custom_metadata.date_created\";\n      }else if(sort[0].columnName == 'date_modified'){\n        mask = \"custom_metadata.date_updated\";\n      }else if(sort[0].columnName == 'status'){\n        mask = \"status\";\n      }else if(sort[0].columnName == 'bdobroker'){\n        mask = \"client.sales_channel.contact_person\";\n      }\n\n      order = {\n        field:mask,\n        direction:(sort[0].direction === 'asc'? 1 : -1)\n      };\n      /*if(currentSortAttr == mask){\n        filtersForApi['order']=  `${mask} desc`\n      }else{\n        filtersForApi['order']=  `${mask} asc`\n      }*/\n      handleLoadProposalsFromAPI(10, 0);\n      currentSortAttr = mask;\n      //setLoading(true);\n    }\n  \n    const handlePageChange = (currentPage: number, skip: number) => {\n      setPage(currentPage);\n      console.log('handle page change')\n      filtersForApi['skip']=skip;\n      handleLoadProposalsFromAPI(limit, skip);\n    }\n  \n    const handlePageSizeChange = (value) => {\n      limit = value;\n  \n      handleLoadProposalsFromAPI(limit, 0);\n    }\n  \n    const handleSearch = (value: string | null) => {\n      console.log(value);\n      setPage(0);\n  \n      if (typingTimeout) {\n        clearTimeout(typingTimeout);\n      }\n  \n      setTypingTimeout (setTimeout(function () {\n              setLoading(true);\n              handleLoadProposalsFromAPI(limit, 0);\n            }, 2000)\n      );\n    }\n  \n    const handleFilterByColumn = (filter: any) => {\n        console.log('Filter By Column: ',filter);\n        setDefaultFilters(filter);\n        setPage(0);\n        if(filter.length>0)\n        {\n          let tmpfilter = {};\n          let value:any;\n          filter.map(fil =>{\n            let field = fil.columnName;\n            if(fil.columnName == 'account'){\n              field = \"client.registered_name\";\n              value = {like: fil.value, options: 'i'};\n            }else if(fil.columnName == 'effectivity_date'){\n              field = \"custom_metadata.coverage_start_date\";\n              //tmpfilter[field] = {like:fil.value, options:'i'};\n              tmpfilter[field]={\n                lte:new Date(fil.value)\n              }\n              field = \"custom_metadata.coverage_end_date\";\n              value = new Date(fil.value)\n            }else if(fil.columnName == 'date_created'){\n              field = 'and'\n              value = [{\n                'custom_metadata.date_created':{\n                  lte:moment(new Date(fil.value)).format(\"YYYY-MM-DD\").toString()+'T23:59:59.999Z'}},\n                {'custom_metadata.date_created':{\n                    gte:moment(new Date(fil.value)).format(\"YYYY-MM-DD\").toString()+'T00:00:00.000Z',\n                  }\n                }]\n            }else if(fil.columnName == 'date_modified'){\n              field = 'and'\n              value = [{\n                'custom_metadata.date_updated':{\n                  lte:moment(new Date(fil.value)).format(\"YYYY-MM-DD\").toString()+'T23:59:59.999Z'}},\n                {'custom_metadata.date_updated':{\n                    gte:moment(new Date(fil.value)).format(\"YYYY-MM-DD\").toString()+'T00:00:00.000Z',\n                  }\n                }]\n            }else if(fil.columnName == 'status'){\n              field = \"status\";\n              value = {like: fil.value, options: 'i'};\n            }else if(fil.columnName == 'bdobroker'){\n              field = \"client.sales_channel.contact_person\";\n              value = {like: fil.value, options: 'i'};\n            }\n            else if(fil.columnName == 'version'){\n              field = \"version\";\n              value = {like: fil.value, options: 'i'};\n            }else if(fil.columnName == 'proposal_no'){\n              field = \"proposal_number\";\n              value = {like: fil.value, options: 'i'};\n            }\n            //tmpfilter[field] = {like:fil.value, options:'i'};\n            if(fil.columnName == 'effectivity_date')\n            {\n              tmpfilter[field] = {\n                gte : value\n              }\n            } else if(fil.columnName === 'date_modified' || fil.columnName === 'date_created'){\n              if(tmpfilter[field])\n              {tmpfilter[field]=tmpfilter[field].concat(value);}\n              else{\n                tmpfilter[field] = value\n              }\n            }\n            else\n            {\n              tmpfilter[field] = value\n            }\n          })\n          filtersForApi['where'] = tmpfilter;\n        }\n        else\n        {\n          filtersForApi['where']={};\n        }\n        //console.log(filtersForApi)\n        //console.log('After Filters: ',filter)\n        //setFilters(filter); \n        setRenderTable(true); \n        //setWhereFilter(filter);\n        if (typingTimeout) {\n          clearTimeout(typingTimeout);\n        }\n    \n        setTypingTimeout (setTimeout(function () {\n                handleLoadProposalsFromAPI(limit, 0);\n              }, 2000)\n        );\n      }\n\n      const handleAssignTable =()=>{\n       return(\n         <div>\n           {/*<ProposalTable\n              className='ticket-list-table'\n              canOverflow\n              rows={rows}\n              stickyHeader={true}\n              renderHeader={() => renderCustomTableHeader(proposallistcolumn, proposallistcolumn)}\n              renderRow={(row: any, index: number) => renderCustomTableRow(row, index, proposallistcolumn)}\n              rowsPerPageOptions={[5, 10, 15]}\n              count={totalCount}\n              onPageChange={handleLoadProposalsFromAPI}\n              onRowsPerPageChange={handleLoadProposalsFromAPI}\n          />*/}\n          <Grid container>\n            <Grid item xs={3} style={{textAlign:'center',backgroundColor:'#F4F4F4',paddingTop:'25px',paddingBottom:'19px'}}>\n              <span style={{color:'#3AB77D',fontSize:'20px'}}>{totalCount['total']}</span> \n                            &nbsp;&nbsp;TOTAL\n            </Grid>\n            <Grid item xs={2} style={{textAlign:'center',backgroundColor:'#F4F4F4',paddingTop:'25px',paddingBottom:'19px'}}>\n              <span style={{color:'#3AB77D',fontSize:'20px'}}>{totalCount['active']}</span> \n                            &nbsp;&nbsp;ACTIVE\n            </Grid>\n            <Grid item xs={2} style={{textAlign:'center',backgroundColor:'#F4F4F4',paddingTop:'25px',paddingBottom:'19px'}}>\n              <span style={{color:'#3AB77D',fontSize:'20px'}}>{totalCount['approved']}</span> \n                            &nbsp;&nbsp;APPROVED\n            </Grid>\n            <Grid item xs={3} style={{textAlign:'center',backgroundColor:'#F4F4F4',paddingTop:'25px',paddingBottom:'19px'}}>\n              <span style={{color:'#3AB77D',fontSize:'20px'}}>{totalCount['for_revision']}</span> \n                            &nbsp;&nbsp;FOR REVISION\n            </Grid>\n            <Grid item xs={2} style={{textAlign:'center',backgroundColor:'#F4F4F4',paddingTop:'25px',paddingBottom:'19px'}}>\n              <span style={{color:'#3AB77D',fontSize:'20px'}}>{totalCount['signed']}</span> \n                            &nbsp;&nbsp;SIGNED\n            </Grid>\n          </Grid>\n          <div style={{minWidth:'1156',overflowX:'auto'}}>\n            <ProposalsTable2 \n              columns={proposallistcolumn}\n              rows={rows}\n              columnExtensions={columnExtensions}\n              currentPage={page}\n              limit={limit}\n              totalCount={totalCount['totalrow']}\n              onPageChange={handlePageChange}\n              onPageSizeChange={handlePageSizeChange}\n              onFilterChange={handleFilterByColumn}\n              onSearchChange={handleSearch}\n              onSortingChange={handleSortChange}\n              sorting={sorting}\n              defaultFilter={defaultFilters}\n              onRowClick={handleRowClick}\n            />\n          </div>\n          \n     </div>\n        \n       )\n      }\n      if(renderTable){\n        setPropListTable(handleAssignTable());\n        setRenderTable(false);\n      }\n\n\tif(redirect === true){\n\t\tif (redirectType === 'proposal') {\n\t\t\treturn <Redirect to={{pathname: '/underwriting/create-proposal/new'}} />\n    }\n    if(redirectType === 'approve'){\n      //return <Redirect to={{pathname: '/underwriting/approve-proposal/'+clientIDtoDownload+'/'+proposalToDownload}} />\n      return <Redirect to={{pathname:'/underwriting/finalize-proposal/' +\n      clientIDtoDownload +\n      '/' +\n      proposalToDownload +\n      '/uploader/' +\n      proposalToDownload}}/>\n    }\n    if(redirectType === 'revision'){\n      //return <Redirect to={{pathname: '/underwriting/approve-proposal/'+clientIDtoDownload+'/'+proposalToDownload}} />\n      return <Redirect to={{pathname:'/underwriting/create-proposal/' + proposalToDownload}}/>\n    }\n\t}\n    const handleRedirectToProposal = () => {\n\t\tsetRedirectType('proposal');\n\t\tsetRedirect(true);\n  }\n  \n  \n\n\treturn (\n\t\t<div className={classes.main}>\n\t\t\t{ loading ?\n\t\t\t\t(<LoadingIndicator/>) : null\n\n\t\t\t}\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tjustify=\"space-between\"\n\t\t\t\talignItems=\"center\"\n\t\t\t\tclassName={classes.gridContainer}\n\t\t\t>\n\t\t\t\t<Grid item xs={8}>\n\t\t\t\t\t<Typography className={classes.headerTitle}>Proposals</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={4} alignItems='flex-end' alignContent='flex-end'>\n                    <Box display=\"flex\" justifyContent=\"flex-end\" alignItems=\"center\" p={1} style={{width: '100%', height: '100%'}}>\n                        \t\n                        <Box p={1} style={{display:'none'}}>\n                                <Link \n                                  style={{ color: '#3AB77D', fontSize: '0.875rem' }} \n                                  onClick={(e: any) => {\n                                    const currentTarget = e.currentTarget;\n                                    setAnchorEl(currentTarget);\n                                  }}\n                            >\n                                <FontAwesomeIcon icon={faDownload} />&nbsp;&nbsp;Generate Report\n                            </Link>\n                        </Box>\n\n                        <Box p={1}>\n                            <Link \n                            \tstyle={{ color: '#3AB77D', fontSize: '0.875rem' }} \n                                onClick={handleRedirectToProposal}\n                            >\n                                <FontAwesomeIcon icon={faPlus} />&nbsp;&nbsp;Create Proposal\n                            </Link>\n\n                       \t</Box>\n\n                        \n                    </Box>\n\t\t\t\t</Grid>\n        <GridHorizontalDivider height=\"5px\"/>\n        <Grid item xs={9} style={{paddingRight:'30px'}}>\n          <TextField\n              id=\"proposal_search\"\n              placeholder=\"Search proposals\"\n              className={classes.searchField}\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              value={largeSearch}\n              onChange={(event:any)=>{\n                  setLargeSearch(event.target.value)\n                  let search_value = event.target.value.trim(); \n                  setRenderTable(true)\n                  if(filtersForApi['where']){\n                    filtersForApi['where']['or'] = [\n                      {\"client.registered_name\": {like: search_value, options: 'i'}},\n                      {status: {like: search_value, options: 'i'}},\n                      {proposal_number: {like: search_value, options: 'i'}},\n                      {\"client.sales_channel.contact_person\": {like: search_value, options: 'i'}},\n                      /*{\"custom_metadata.coverage_start_date\": {like: search_value, options: 'i'}},\n                      {\"custom_metadata.coverage_end_date\": {like: search_value, options: 'i'}},\n                      {\"custom_metadata.date_created\": {like: search_value, options: 'i'}},\n                      {\"custom_metadata.date_updated\": {like: search_value, options: 'i'}},*/\n                      {\"custom_metadata.version\": {like: search_value, options: 'i'}},\n                    ];\n                  }else{\n                    filtersForApi['where'] = {};\n                    filtersForApi['where']['or'] = [\n                      {\"client.registered_name\": {like: search_value, options: 'i'}},\n                      {status: {like: search_value, options: 'i'}},\n                      {proposal_number: {like: search_value, options: 'i'}},\n                      {\"client.sales_channel.contact_person\": {like: search_value, options: 'i'}},\n                      /*{\"custom_metadata.coverage_start_date\": {like: search_value, options: 'i'}},\n                      {\"custom_metadata.coverage_end_date\": {like: search_value, options: 'i'}},\n                      {\"custom_metadata.date_created\": {like: search_value, options: 'i'}},\n                      {\"custom_metadata.date_updated\": {like: search_value, options: 'i'}},*/\n                      {\"custom_metadata.version\": {like: search_value, options: 'i'}},\n                    ];\n                  }\n                  handleFiltersOnChange(); \n                } \n              }\n              inputProps={{ 'aria-label': 'bare' }}\n              InputProps={{\n              startAdornment: (\n                  <FontAwesomeIcon\n                  icon={faSearch}\n                  className={classes.searchInputAdornment}\n                  />\n              ),\n              }}\n          />\n        </Grid>\n        <Grid item xs={3}>\n          <TextField\n              id=\"proposal_search\"\n              placeholder=\"This Month\"\n              className={classes.searchField}\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              value={largeDateSearch}\n              onChange={(event:any)=>{\n                  setLargeDateSearch(event.target.value.trim())\n                  setRenderTable(true)}}\n              inputProps={{ 'aria-label': 'bare' }}\n              InputProps={{\n              endAdornment: (\n                  <FontAwesomeIcon\n                  icon={faCalendar}\n                  className={classes.searchInputAdornment}\n                  />\n              ),\n              }}\n          />\n        </Grid>\n\t\t\t</Grid>\n      <Grid item xs={12} id='TableCont'>\n        <Paper style={{overflowX:'auto',maxWidth:'100%'}}>\n            {PropListTable}\n        </Paper>\n      </Grid>\n      \n            \n\t\t\t{/*<ClientsTable \n\t\t\t\tcolumns={columns}\n\t\t\t\trows={rows}\n\t\t\t\tcolumnExtensions={columnExtensions}\n                currentPage={page}\n                limit={limit}\n                totalCount={totalCount}\n                onPageChange={handlePageChange}\n                onPageSizeChange={handlePageSizeChange}\n                onFilterChange={handleFilterByColumn}\n                onSearchChange={handleSearch}\n                onSortingChange={handleSortChange}\n                sorting={sorting}\n                defaultFilter={defaultFilters}\n                onRowClick={handleRowClick}\n\t\t\t/>*/}\n\t\t\t<ReportPopover\n\t\t\t\topen={popoverOpen}\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\texportData={exportData}\n\t\t\t\texportFormat={exportFormat}\n\t\t\t\tonClose={handlePopoverClose}\n\t\t\t\tonChangeExportData={setExportData}\n\t\t\t\tonChangeExportFormat={setExportFormat}\n\t\t\t\tgenerateReport={handleGenerateReport}\n\t\t\t/>\n      <RendererClass \n        clientID={clientIDtoDownload} \n        clientName={registeredNametoDownload}\n        fileType={'pdf'} \n        download={downloadProposal} \n        setDownload={setDownloadProposal} \n        hideButton \n        label=\"Download Proposal\" \n        renderType={renderType} \n        objId={proposalToDownload}\n        viewOnly={displayPDF}\n        renderAction={renderAction}\n        onError={() => {\n            // alert('error render test');\n            setLoading(false);\n        }}\n        onStartDownload={() => {\n            //setDownloadScreen(true);\n            setLoading(false);\n        }} />\n\n        <RenderPdfModal\n\t\t\t\t\tid='render_pdf_modal'\n\t\t\t\t\tisModalOpen={pdfViewerOpen}\n\t\t\t\t\tpdfUrl={pdfURL}\n\t\t\t\t\tonClose={()=>{setPDFViewerOpen(false)}}\n\t\t\t\t/>\n\t\t</div>\n\t);\n\t\n};\n\n\n/*const mapStateToProps = (state: Store) => state.home;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tMap: bindActionCreators(ClientActions.Map, dispatch),\n});\n\nexport { mapStateToProps, mapDispatchToProps };*/\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dialog, DialogTitle, DialogContent,\n    Grid, IconButton} from '@material-ui/core/';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { green } from '@material-ui/core/colors';\n// Library of PDFJS\n// import * as pdfjsLib from \"pdfjs-dist\";\n// import * as pdfjsViewer from 'pdfjs-dist/web/pdf_viewer';\n\ninterface RenderPdfModalProps {\n    isModalOpen: boolean;\n    id: string;\n    pdfUrl: string;\n    onClose: () => void;\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexWrap:'wrap'\n    },\n    dialog:{\n        align:'center',\n        justify:'center',\n        width:'100%',\n        fontFamily: 'usual',\n    },\n    dialogContent :{\n        padding: '0px',\n        marginTop:'0px',\n        justify:'center',\n        overflow:'scroll',\n        textAlign: 'center'\n    },\n    dialogContentText :{\n        fontSize: '0.875rem',\n    },\n    item: {\n        width: '100%',\n        paddingTop: '0px',\n        minHeight: '730px'\n    },\n    container: {\n        paddingRight:'15px',\n        paddingLeft:'15px',\n        width: '100%',\n        minHeight: '500px'\n    },\n    iframe: {\n        width: '90%',\n        height: '85%',\n        top: 50,\n        left: 50,\n        bottom: 50,\n        right: 50,\n    },\n    dialogTitle: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        paddingLeft: '0px',\n        fontSize: '16px',\n        color: '#272E4C'\n    },\n    dialogAction: {\n        marginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        justifyContent:'center',\n    },\n    boldText:{\n        fontWeight: 'bold'\n    },\n    cancelButton: {\n        width:115,\n        marginRight:25,\n        border: '1px solid #3AB77D',\n        color: '#3AB77D',\n        backgroundColor: \"#FFFFFF\"\n    },\n    submitButton: {\n        width:115,\n        marginLeft:25,\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n    loadingIndicator: {\n        marginTop: theme.spacing(3),\n        width: '100%',\n        color: green[500],\n        justify: 'center'\n    }\n}));\n  \n\nexport const RenderPdfModal: React.FC<RenderPdfModalProps> = (\n\tprops: RenderPdfModalProps,\n): JSX.Element => {\n    const {\n        isModalOpen,\n        id\n    } = props;\n    const classes = useStyles();\n    let viewerUrl = `${process.execPath}/../pdfjs-2.2.228-dist/web/viewer.html?file=${props.pdfUrl}`;\n    // const viewerUrl = `https://mozilla.github.io/pdf.js/web/viewer.html?file=${props.pdfUrl}`;\n\n\tconst handleClose = () => {\n\t\tprops.onClose();\n\t};\n\n    return (\n        <Dialog\n            id={id}\n            open={isModalOpen}\n            aria-labelledby=\"modal-title\"\n            className={classes.dialog}\n            style={{zIndex: 9999}}\n            fullWidth={true}\n            fullScreen={true}\n            maxWidth = {'md'}\n        >\n            <div>\n                <Grid container className={classes.container} justify=\"space-between\" alignItems=\"flex-start\" direction=\"column\">\n                    <Grid item>\n                        <DialogTitle className={classes.dialogTitle} disableTypography={true} id=\"modal-title\" >\n                            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </DialogTitle>\n                    </Grid>\n                    <Grid container justify=\"center\" alignItems=\"stretch\" alignContent=\"stretch\">\n                        <DialogContent className={classes.dialogContent}>\n                            <Grid container justify=\"center\" alignItems=\"stretch\" alignContent=\"stretch\">\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.item}>\n                                    <iframe src={viewerUrl} className={classes.iframe}>\n                                    </iframe>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n                        </DialogContent>\n                    </Grid>\n                </Grid>\n            </div>\n        </Dialog>\n    )\n}\n\nRenderPdfModal.defaultProps = {\n    isModalOpen: false,\n    id: 'render_pdf_modal',\n    pdfUrl: '',\n};\n","var green = {\n  50: '#e8f5e9',\n  100: '#c8e6c9',\n  200: '#a5d6a7',\n  300: '#81c784',\n  400: '#66bb6a',\n  500: '#4caf50',\n  600: '#43a047',\n  700: '#388e3c',\n  800: '#2e7d32',\n  900: '#1b5e20',\n  A100: '#b9f6ca',\n  A200: '#69f0ae',\n  A400: '#00e676',\n  A700: '#00c853'\n};\nexport default green;"],"sourceRoot":""}